
switches.elf:     file format elf32-littlenios2
switches.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x0001158c memsz 0x0001158c flags r-x
    LOAD off    0x000125ac vaddr 0x000315ac paddr 0x0003309c align 2**12
         filesz 0x00001af0 memsz 0x00001af0 flags rw-
    LOAD off    0x00014b8c vaddr 0x00034b8c paddr 0x00034b8c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011048  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000320  0003128c  0003128c  0001228c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af0  000315ac  0003309c  000125ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00034b8c  00034b8c  00014b8c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00034cec  00034cec  0001409c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001409c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001048  00000000  00000000  000140c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00024a04  00000000  00000000  00015108  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009942  00000000  00000000  00039b0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c5c5  00000000  00000000  0004344e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002328  00000000  00000000  0004fa14  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003d2b  00000000  00000000  00051d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00019709  00000000  00000000  00055a67  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  0006f170  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001a48  00000000  00000000  0006f1d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00073fa6  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  00073fa9  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00073fb5  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00073fb6  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00073fb7  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00073fbb  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00073fbf  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  00073fc3  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  00073fce  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  00073fd9  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000009  00000000  00000000  00073fe4  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000051  00000000  00000000  00073fed  2**0
                  CONTENTS, READONLY
 29 .jdi          00005818  00000000  00000000  0007403e  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     00048c62  00000000  00000000  00079856  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
0003128c l    d  .rodata	00000000 .rodata
000315ac l    d  .rwdata	00000000 .rwdata
00034b8c l    d  .bss	00000000 .bss
00034cec l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../switches_bsp//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 switches.c
00000000 l    df *ABS*	00000000 w_pow.c
00000000 l    df *ABS*	00000000 e_pow.c
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_finite.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 s_rint.c
000312a0 l     O .rodata	00000010 TWO52
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
000315ac l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
000313f6 l     O .rodata	00000010 zeroes.4404
00026b70 l     F .text	000000bc __sbprintf
00031406 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00026d80 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000288b0 l     F .text	00000008 __fp_unlock
000288c4 l     F .text	0000019c __sinit.part.1
00028a60 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
000319f0 l     O .rwdata	00000020 lc_ctype_charset
000319d0 l     O .rwdata	00000020 lc_message_charset
00031a10 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00031434 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002b304 l     F .text	000000fc __sprint_r.part.0
00031568 l     O .rodata	00000010 blanks.4348
00031558 l     O .rodata	00000010 zeroes.4349
0002c890 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0002e954 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002ea60 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002ea8c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002eb78 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002ec58 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002ed44 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002ef18 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0003308c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0002f194 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002f2c8 l     F .text	00000034 alt_dev_reg
00031ff8 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002f5bc l     F .text	0000020c altera_avalon_jtag_uart_irq
0002f7c8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0002fe00 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
000301c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00030634 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00030774 l     F .text	0000003c alt_get_errno
000307b0 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00034bc0 g     O .bss	00000004 alt_instruction_exception_handler
0002ae88 g     F .text	00000074 _mprec_log10
0002af74 g     F .text	0000008c __any_on
0002d2e8 g     F .text	00000054 _isatty_r
00031440 g     O .rodata	00000028 __mprec_tinytens
0002ee54 g     F .text	0000007c alt_main
00034bec g     O .bss	00000100 alt_irq
00021d10 g     F .text	00000014 fabs
0002d33c g     F .text	00000060 _lseek_r
0003309c g       *ABS*	00000000 __flash_rwdata_start
000234b4 g     F .text	00000088 .hidden __eqdf2
00034cec g       *ABS*	00000000 __alt_heap_start
00024920 g     F .text	0000003c printf
0002dc14 g     F .text	0000009c _wcrtomb_r
0002b12c g     F .text	0000005c __sseek
00028c00 g     F .text	00000010 __sinit
0002dabc g     F .text	00000140 __swbuf_r
0002920c g     F .text	0000007c _setlocale_r
00028a68 g     F .text	00000068 __sfmoreglue
0002eef4 g     F .text	00000024 __malloc_unlock
0002d39c g     F .text	0000015c memmove
00028be8 g     F .text	00000018 _cleanup
0002a004 g     F .text	000000a8 _Balloc
0002353c g     F .text	000000dc .hidden __gtdf2
00030b6c g     F .text	00000024 altera_nios2_gen2_irq_init
000248e0 g     F .text	00000010 __errno
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
0002cdd0 g     F .text	0000005c _fstat_r
00034ba4 g     O .bss	00000004 errno
0002b0a8 g     F .text	00000008 __seofread
00034bac g     O .bss	00000004 alt_argv
0003b058 g       *ABS*	00000000 _gp
0002f164 g     F .text	00000030 usleep
00031e78 g     O .rwdata	00000180 alt_fd_list
00030b90 g     F .text	00000090 alt_find_dev
00029d94 g     F .text	00000148 memcpy
000288b8 g     F .text	0000000c _cleanup_r
000247a0 g     F .text	000000dc .hidden __floatsidf
000306f8 g     F .text	0000007c alt_io_redirect
00023618 g     F .text	000000f4 .hidden __ltdf2
0003128c g       *ABS*	00000000 __DTOR_END__
00030e5c g     F .text	0000009c alt_exception_cause_generated_bad_addr
00021d40 g     F .text	00000074 __fpclassifyd
0002ade4 g     F .text	000000a4 __ratio
0002c874 g     F .text	0000001c __vfiprintf_internal
0002f9c0 g     F .text	0000021c altera_avalon_jtag_uart_read
000248f0 g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00022264 g     F .text	00000064 .hidden __udivsi3
0002ebb4 g     F .text	000000a4 isatty
00031490 g     O .rodata	000000c8 __mprec_tens
00029288 g     F .text	0000000c __locale_charset
00030dcc g     F .text	00000090 alt_icache_flush
00034ba0 g     O .bss	00000004 __malloc_top_pad
00033064 g     O .rwdata	00000004 __mb_cur_max
000292b8 g     F .text	0000000c _localeconv_r
0002ce2c g     F .text	000004bc __sfvwrite_r
0002a410 g     F .text	0000003c __i2b
0002b000 g     F .text	00000054 _sbrk_r
0002d4f8 g     F .text	00000060 _read_r
00033084 g     O .rwdata	00000004 alt_max_fd
0002cac4 g     F .text	000000f0 _fclose_r
00028880 g     F .text	00000030 fflush
00034b9c g     O .bss	00000004 __malloc_max_sbrked_mem
00022320 g     F .text	000008ac .hidden __adddf3
0002ab8c g     F .text	0000010c __b2d
0002e374 g     F .text	00000538 .hidden __umoddi3
0002ed80 g     F .text	000000d4 lseek
00033058 g     O .rwdata	00000004 __fdlib_version
0003305c g     O .rwdata	00000004 _global_impure_ptr
0002d558 g     F .text	00000564 _realloc_r
00034cec g       *ABS*	00000000 __bss_end
00030544 g     F .text	000000f0 alt_iic_isr_register
00030a64 g     F .text	00000108 alt_tick
0002ddfc g     F .text	00000578 .hidden __udivdi3
0002cd2c g     F .text	00000024 _fputwc_r
0002034c g     F .text	000001d4 hex_ssd
00031468 g     O .rodata	00000028 __mprec_bigtens
0002a1f4 g     F .text	00000104 __s2b
0002e8ac g     F .text	000000a8 .hidden __floatunsidf
0002a8cc g     F .text	00000060 __mcmp
00028c20 g     F .text	00000018 __fp_lock_all
000304f8 g     F .text	0000004c alt_ic_irq_enabled
000309c8 g     F .text	0000009c alt_alarm_stop
00034bb4 g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
00031e50 g     O .rwdata	00000028 alt_dev_null
00021dc8 g     F .text	000001ec rint
00030178 g     F .text	00000048 alt_dcache_flush_all
0002a2f8 g     F .text	00000068 __hi0bits
00024720 g     F .text	00000080 .hidden __fixdfsi
0003309c g       *ABS*	00000000 __ram_rwdata_end
0003307c g     O .rwdata	00000008 alt_dev_list
0002f1d0 g     F .text	000000f8 write
000315ac g       *ABS*	00000000 __ram_rodata_end
0002eac8 g     F .text	000000b0 fstat
00023618 g     F .text	000000f4 .hidden __ledf2
0002a644 g     F .text	00000140 __pow5mult
0002b418 g     F .text	0000145c ___vfiprintf_internal_r
00034b94 g     O .bss	00000004 __nlocale_changed
000222c8 g     F .text	00000058 .hidden __umodsi3
00034cec g       *ABS*	00000000 end
0002f4fc g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0003128c g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002fe78 g     F .text	0000007c alt_avalon_timer_sc_init
0002487c g     F .text	00000064 .hidden __clzsi2
0002fbdc g     F .text	00000224 altera_avalon_jtag_uart_write
00028c10 g     F .text	00000004 __sfp_lock_acquire
00029cb0 g     F .text	000000e4 memchr
0002495c g     F .text	000021f8 ___vfprintf_internal_r
00028d74 g     F .text	00000310 _free_r
00029294 g     F .text	00000010 __locale_mb_cur_max
000310d8 g     F .text	00000180 __call_exitprocs
00034b90 g     O .bss	00000004 __mlocale_changed
00033068 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00034bb8 g     O .bss	00000004 _alt_tick_rate
0002a784 g     F .text	00000148 __lshift
00034bbc g     O .bss	00000004 _alt_nticks
0002ef54 g     F .text	000000fc read
0002f334 g     F .text	00000064 alt_sys_init
00030fc0 g     F .text	00000118 __register_exitproc
0002a44c g     F .text	000001f8 __multiply
000209e4 g     F .text	000010a4 __ieee754_pow
0002f868 g     F .text	00000068 altera_avalon_jtag_uart_close
00020520 g     F .text	000004c4 pow
000315ac g       *ABS*	00000000 __ram_rwdata_start
0003128c g       *ABS*	00000000 __ram_rodata_start
00034bc4 g     O .bss	00000028 __malloc_current_mallinfo
0002ac98 g     F .text	0000014c __d2b
0002f398 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00030d28 g     F .text	000000a4 alt_get_fd
00030020 g     F .text	00000158 alt_busy_sleep
0002c9ac g     F .text	00000054 _close_r
00030f44 g     F .text	0000007c memcmp
0002f458 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00034cec g       *ABS*	00000000 __alt_stack_base
0002f4a8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00026c2c g     F .text	00000154 __swsetup_r
00022bcc g     F .text	000008e8 .hidden __divdf3
00028ad0 g     F .text	00000118 __sfp
0002aefc g     F .text	00000078 __copybits
00031a48 g     O .rwdata	00000408 __malloc_av_
00028c1c g     F .text	00000004 __sinit_lock_release
0002370c g     F .text	00000718 .hidden __muldf3
0002b054 g     F .text	00000054 __sread
00030c20 g     F .text	00000108 alt_find_file
000301fc g     F .text	000000a4 alt_dev_llist_insert
0002eed0 g     F .text	00000024 __malloc_lock
0002f0b4 g     F .text	000000b0 sbrk
00028824 g     F .text	0000005c _fflush_r
0002ca00 g     F .text	000000c4 _calloc_r
00034b8c g       *ABS*	00000000 __bss_start
00029edc g     F .text	00000128 memset
00020290 g     F .text	000000bc main
00034bb0 g     O .bss	00000004 alt_envp
00034b98 g     O .bss	00000004 __malloc_max_total_mem
0002f3f8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0002dbfc g     F .text	00000018 __swbuf
0002b188 g     F .text	00000008 __sclose
00021db4 g     F .text	00000008 matherr
00040000 g       *ABS*	00000000 __alt_heap_limit
0002cbb4 g     F .text	00000014 fclose
00026f80 g     F .text	00001688 _dtoa_r
000294a4 g     F .text	0000080c _malloc_r
0002dd70 g     F .text	00000030 __ascii_wctomb
00033088 g     O .rwdata	00000004 alt_errno
00029084 g     F .text	000000c4 _fwalk
0002216c g     F .text	00000084 .hidden __divsi3
00028c50 g     F .text	00000124 _malloc_trim_r
0003128c g       *ABS*	00000000 __CTOR_END__
00021d24 g     F .text	0000001c finite
0002b190 g     F .text	000000dc strcmp
0003128c g       *ABS*	00000000 __flash_rodata_start
0003128c g       *ABS*	00000000 __DTOR_LIST__
00022150 g     F .text	0000001c copysign
000234b4 g     F .text	00000088 .hidden __nedf2
0002f2fc g     F .text	00000038 alt_irq_init
0002f050 g     F .text	00000064 alt_release_fd
000312b0 g     O .rodata	00000100 .hidden __clz_tab
00034b8c g     O .bss	00000004 _PathLocale
00030ef8 g     F .text	00000014 atexit
0002c94c g     F .text	00000060 _write_r
000292c4 g     F .text	00000018 setlocale
00033060 g     O .rwdata	00000004 _impure_ptr
00034ba8 g     O .bss	00000004 alt_argc
00028608 g     F .text	0000021c __sflush_r
00021fb4 g     F .text	0000019c scalbn
00030300 g     F .text	00000060 _do_dtors
000292b0 g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
0002ab28 g     F .text	00000064 __ulp
00028c38 g     F .text	00000018 __fp_unlock_all
00033074 g     O .rwdata	00000008 alt_fs_list
00021dbc g     F .text	0000000c nan
00020020 g       *ABS*	00000000 __ram_exceptions_start
000292dc g     F .text	0000000c localeconv
00021a88 g     F .text	00000288 __ieee754_sqrt
00030394 g     F .text	00000050 alt_ic_isr_register
0003309c g       *ABS*	00000000 _edata
00034cec g       *ABS*	00000000 _end
0002cbc8 g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
0002f8d0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0003046c g     F .text	0000008c alt_ic_irq_disable
0002b0b0 g     F .text	0000007c __swrite
0003306c g     O .rwdata	00000004 __malloc_trim_threshold
000292a4 g     F .text	0000000c __locale_msgcharset
00030f0c g     F .text	00000038 exit
00029148 g     F .text	000000c4 _fwalk_reent
0002a92c g     F .text	000001fc __mdiff
000221f0 g     F .text	00000074 .hidden __modsi3
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00028c14 g     F .text	00000004 __sfp_lock_release
00031258 g     F .text	00000034 _exit
0002fef4 g     F .text	0000012c alt_alarm_start
000292e8 g     F .text	000001bc __smakebuf_r
0002b26c g     F .text	00000098 strlen
00030874 g     F .text	00000154 open
0002353c g     F .text	000000dc .hidden __gedf2
00033070 g     O .rwdata	00000004 __wctomb
0002b400 g     F .text	00000018 __sprint_r
00030360 g     F .text	00000034 alt_icache_flush_all
00033090 g     O .rwdata	00000004 alt_priority_mask
000303e4 g     F .text	00000088 alt_ic_irq_enable
00026b54 g     F .text	0000001c __vfprintf_internal
0002dda0 g     F .text	0000005c _wctomb_r
00023e24 g     F .text	000008fc .hidden __subdf3
0002a360 g     F .text	000000b0 __lo0bits
00033094 g     O .rwdata	00000008 alt_alarm_list
000302a0 g     F .text	00000060 _do_ctors
0002dcb0 g     F .text	000000c0 wcrtomb
0002e990 g     F .text	000000d0 close
0002ecc0 g     F .text	00000084 alt_load
0002cd50 g     F .text	00000080 fputwc
00028c18 g     F .text	00000004 __sinit_lock_acquire
0002a0d4 g     F .text	00000120 __multadd
0002a0ac g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	1092fb04 	addi	r2,r2,19436
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	1092fb04 	addi	r2,r2,19436
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6da17 	ldw	r2,-25752(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6da17 	ldw	r2,-25752(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   2025c:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20260:	d6ac1614 	ori	gp,gp,45144
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20268:	1092e314 	ori	r2,r2,19340

    movhi r3, %hi(__bss_end)
   2026c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20270:	18d33b14 	ori	r3,r3,19692

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	002ecc00 	call	2ecc0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	002ee540 	call	2ee54 <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <__alt_data_end+0xfffe028c>

00020290 <main>:
#include <math.h>
#include <unistd.h>

int hex_ssd(int num, int bit);

int main() {
   20290:	defffc04 	addi	sp,sp,-16
   20294:	dfc00315 	stw	ra,12(sp)
   20298:	df000215 	stw	fp,8(sp)
   2029c:	dc000115 	stw	r16,4(sp)
   202a0:	df000204 	addi	fp,sp,8
// Hello World functionality
	printf("Hello World!");
   202a4:	010000f4 	movhi	r4,3
   202a8:	2104a304 	addi	r4,r4,4748
   202ac:	00249200 	call	24920 <printf>

// Count functionality
	int count = 0;
   202b0:	e03ffe15 	stw	zero,-8(fp)

	while(1){
		IOWR(COUNT_PIO_BASE, 0,
   202b4:	01400044 	movi	r5,1
   202b8:	e13ffe17 	ldw	r4,-8(fp)
   202bc:	002034c0 	call	2034c <hex_ssd>
   202c0:	1020923a 	slli	r16,r2,8
   202c4:	000b883a 	mov	r5,zero
   202c8:	e13ffe17 	ldw	r4,-8(fp)
   202cc:	002034c0 	call	2034c <hex_ssd>
   202d0:	8087883a 	add	r3,r16,r2
   202d4:	00800134 	movhi	r2,4
   202d8:	10841004 	addi	r2,r2,4160
   202dc:	10c00035 	stwio	r3,0(r2)
				(hex_ssd(count, 1) << 8)+hex_ssd(count,0));

		count++;
   202e0:	e0bffe17 	ldw	r2,-8(fp)
   202e4:	10800044 	addi	r2,r2,1
   202e8:	e0bffe15 	stw	r2,-8(fp)
		if(count >= 256)
   202ec:	e0bffe17 	ldw	r2,-8(fp)
   202f0:	10804010 	cmplti	r2,r2,256
   202f4:	1000011e 	bne	r2,zero,202fc <main+0x6c>
			count = 0;
   202f8:	e03ffe15 	stw	zero,-8(fp)

// Switch functionality
		IOWR(SWOUT_PIO_BASE, 0,
   202fc:	00800134 	movhi	r2,4
   20300:	10840c04 	addi	r2,r2,4144
   20304:	10800037 	ldwio	r2,0(r2)
   20308:	01400044 	movi	r5,1
   2030c:	1009883a 	mov	r4,r2
   20310:	002034c0 	call	2034c <hex_ssd>
   20314:	1020923a 	slli	r16,r2,8
   20318:	00800134 	movhi	r2,4
   2031c:	10840c04 	addi	r2,r2,4144
   20320:	10800037 	ldwio	r2,0(r2)
   20324:	000b883a 	mov	r5,zero
   20328:	1009883a 	mov	r4,r2
   2032c:	002034c0 	call	2034c <hex_ssd>
   20330:	8087883a 	add	r3,r16,r2
   20334:	00800134 	movhi	r2,4
   20338:	10840804 	addi	r2,r2,4128
   2033c:	10c00035 	stwio	r3,0(r2)
				(hex_ssd(IORD(SWIN_PIO_BASE,0), 1) << 8)+
				hex_ssd(IORD(SWIN_PIO_BASE,0), 0));

		usleep(62500);
   20340:	013d0914 	movui	r4,62500
   20344:	002f1640 	call	2f164 <usleep>
	};
   20348:	003fda06 	br	202b4 <__alt_data_end+0xfffe02b4>

0002034c <hex_ssd>:
//   num: Number to be converted
//   bit: Desired bit of hex
//
// Returns:
//   hex: 8-bit number for displaying on an SSD
int hex_ssd(int num, int bit){
   2034c:	defff904 	addi	sp,sp,-28
   20350:	dfc00615 	stw	ra,24(sp)
   20354:	df000515 	stw	fp,20(sp)
   20358:	df000504 	addi	fp,sp,20
   2035c:	e13ffe15 	stw	r4,-8(fp)
   20360:	e17fff15 	stw	r5,-4(fp)

// return variable declaration
	int hex;

// math to select bit
	int div = (int) pow(16,bit);
   20364:	e13fff17 	ldw	r4,-4(fp)
   20368:	00247a00 	call	247a0 <__floatsidf>
   2036c:	1009883a 	mov	r4,r2
   20370:	180b883a 	mov	r5,r3
   20374:	200d883a 	mov	r6,r4
   20378:	280f883a 	mov	r7,r5
   2037c:	0009883a 	mov	r4,zero
   20380:	01500c34 	movhi	r5,16432
   20384:	00205200 	call	20520 <pow>
   20388:	100b883a 	mov	r5,r2
   2038c:	180d883a 	mov	r6,r3
   20390:	2809883a 	mov	r4,r5
   20394:	300b883a 	mov	r5,r6
   20398:	00247200 	call	24720 <__fixdfsi>
   2039c:	e0bffc15 	stw	r2,-16(fp)
	int digit = (num / div) % 16;
   203a0:	e17ffc17 	ldw	r5,-16(fp)
   203a4:	e13ffe17 	ldw	r4,-8(fp)
   203a8:	002216c0 	call	2216c <__divsi3>
   203ac:	1007883a 	mov	r3,r2
   203b0:	00a00034 	movhi	r2,32768
   203b4:	108003c4 	addi	r2,r2,15
   203b8:	1884703a 	and	r2,r3,r2
   203bc:	1000040e 	bge	r2,zero,203d0 <hex_ssd+0x84>
   203c0:	10bfffc4 	addi	r2,r2,-1
   203c4:	00fffc04 	movi	r3,-16
   203c8:	10c4b03a 	or	r2,r2,r3
   203cc:	10800044 	addi	r2,r2,1
   203d0:	e0bffd15 	stw	r2,-12(fp)


// lookup table for hex conversion
	switch(digit){
   203d4:	e0bffd17 	ldw	r2,-12(fp)
   203d8:	10800428 	cmpgeui	r2,r2,16
   203dc:	1000471e 	bne	r2,zero,204fc <hex_ssd+0x1b0>
   203e0:	e0bffd17 	ldw	r2,-12(fp)
   203e4:	100690ba 	slli	r3,r2,2
   203e8:	008000b4 	movhi	r2,2
   203ec:	1080ff04 	addi	r2,r2,1020
   203f0:	1885883a 	add	r2,r3,r2
   203f4:	10800017 	ldw	r2,0(r2)
   203f8:	1000683a 	jmp	r2
   203fc:	0002043c 	xorhi	zero,zero,2064
   20400:	00020448 	cmpgei	zero,zero,2065
   20404:	00020454 	movui	zero,2065
   20408:	00020460 	cmpeqi	zero,zero,2065
   2040c:	0002046c 	andhi	zero,zero,2065
   20410:	00020478 	rdprs	zero,zero,2065
   20414:	00020484 	movi	zero,2066
   20418:	00020490 	cmplti	zero,zero,2066
   2041c:	0002049c 	xori	zero,zero,2066
   20420:	000204a8 	cmpgeui	zero,zero,2066
   20424:	000204b4 	movhi	zero,2066
   20428:	000204c0 	call	204c <__alt_mem_onchip_memory2_0-0x1dfb4>
   2042c:	000204cc 	andi	zero,zero,2067
   20430:	000204d8 	cmpnei	zero,zero,2067
   20434:	000204e4 	muli	zero,zero,2067
   20438:	000204f0 	cmpltui	zero,zero,2067
		case 0:  hex = 0b11000000; break;
   2043c:	00803004 	movi	r2,192
   20440:	e0bffb15 	stw	r2,-20(fp)
   20444:	00003006 	br	20508 <hex_ssd+0x1bc>
		case 1:  hex = 0b11111001; break;
   20448:	00803e44 	movi	r2,249
   2044c:	e0bffb15 	stw	r2,-20(fp)
   20450:	00002d06 	br	20508 <hex_ssd+0x1bc>
		case 2:  hex = 0b10100100; break;
   20454:	00802904 	movi	r2,164
   20458:	e0bffb15 	stw	r2,-20(fp)
   2045c:	00002a06 	br	20508 <hex_ssd+0x1bc>
		case 3:  hex = 0b10110000; break;
   20460:	00802c04 	movi	r2,176
   20464:	e0bffb15 	stw	r2,-20(fp)
   20468:	00002706 	br	20508 <hex_ssd+0x1bc>
		case 4:  hex = 0b10011001; break;
   2046c:	00802644 	movi	r2,153
   20470:	e0bffb15 	stw	r2,-20(fp)
   20474:	00002406 	br	20508 <hex_ssd+0x1bc>
		case 5:  hex = 0b10010010; break;
   20478:	00802484 	movi	r2,146
   2047c:	e0bffb15 	stw	r2,-20(fp)
   20480:	00002106 	br	20508 <hex_ssd+0x1bc>
		case 6:  hex = 0b10000010; break;
   20484:	00802084 	movi	r2,130
   20488:	e0bffb15 	stw	r2,-20(fp)
   2048c:	00001e06 	br	20508 <hex_ssd+0x1bc>
		case 7:  hex = 0b11111000; break;
   20490:	00803e04 	movi	r2,248
   20494:	e0bffb15 	stw	r2,-20(fp)
   20498:	00001b06 	br	20508 <hex_ssd+0x1bc>
		case 8:  hex = 0b10000000; break;
   2049c:	00802004 	movi	r2,128
   204a0:	e0bffb15 	stw	r2,-20(fp)
   204a4:	00001806 	br	20508 <hex_ssd+0x1bc>
		case 9:  hex = 0b10011000; break;
   204a8:	00802604 	movi	r2,152
   204ac:	e0bffb15 	stw	r2,-20(fp)
   204b0:	00001506 	br	20508 <hex_ssd+0x1bc>
		case 10: hex = 0b10001000; break;
   204b4:	00802204 	movi	r2,136
   204b8:	e0bffb15 	stw	r2,-20(fp)
   204bc:	00001206 	br	20508 <hex_ssd+0x1bc>
		case 11: hex = 0b10000011; break;
   204c0:	008020c4 	movi	r2,131
   204c4:	e0bffb15 	stw	r2,-20(fp)
   204c8:	00000f06 	br	20508 <hex_ssd+0x1bc>
		case 12: hex = 0b10100111; break;
   204cc:	008029c4 	movi	r2,167
   204d0:	e0bffb15 	stw	r2,-20(fp)
   204d4:	00000c06 	br	20508 <hex_ssd+0x1bc>
		case 13: hex = 0b10100001; break;
   204d8:	00802844 	movi	r2,161
   204dc:	e0bffb15 	stw	r2,-20(fp)
   204e0:	00000906 	br	20508 <hex_ssd+0x1bc>
		case 14: hex = 0b10000110; break;
   204e4:	00802184 	movi	r2,134
   204e8:	e0bffb15 	stw	r2,-20(fp)
   204ec:	00000606 	br	20508 <hex_ssd+0x1bc>
		case 15: hex = 0b10001110; break;
   204f0:	00802384 	movi	r2,142
   204f4:	e0bffb15 	stw	r2,-20(fp)
   204f8:	00000306 	br	20508 <hex_ssd+0x1bc>
		default: hex = 0b00111111; break;
   204fc:	00800fc4 	movi	r2,63
   20500:	e0bffb15 	stw	r2,-20(fp)
   20504:	0001883a 	nop
	}

	return hex;
   20508:	e0bffb17 	ldw	r2,-20(fp)
}
   2050c:	e037883a 	mov	sp,fp
   20510:	dfc00117 	ldw	ra,4(sp)
   20514:	df000017 	ldw	fp,0(sp)
   20518:	dec00204 	addi	sp,sp,8
   2051c:	f800283a 	ret

00020520 <pow>:
   20520:	deffee04 	addi	sp,sp,-72
   20524:	dc800b15 	stw	r18,44(sp)
   20528:	048000f4 	movhi	r18,3
   2052c:	ddc01015 	stw	r23,64(sp)
   20530:	dd800f15 	stw	r22,60(sp)
   20534:	dd400e15 	stw	r21,56(sp)
   20538:	dd000d15 	stw	r20,52(sp)
   2053c:	dcc00c15 	stw	r19,48(sp)
   20540:	dc400a15 	stw	r17,40(sp)
   20544:	dc000915 	stw	r16,36(sp)
   20548:	dfc01115 	stw	ra,68(sp)
   2054c:	948c1604 	addi	r18,r18,12376
   20550:	202f883a 	mov	r23,r4
   20554:	282d883a 	mov	r22,r5
   20558:	302b883a 	mov	r21,r6
   2055c:	3829883a 	mov	r20,r7
   20560:	00209e40 	call	209e4 <__ieee754_pow>
   20564:	1023883a 	mov	r17,r2
   20568:	90800017 	ldw	r2,0(r18)
   2056c:	04ffffc4 	movi	r19,-1
   20570:	1821883a 	mov	r16,r3
   20574:	14c00426 	beq	r2,r19,20588 <pow+0x68>
   20578:	a809883a 	mov	r4,r21
   2057c:	a00b883a 	mov	r5,r20
   20580:	0021d400 	call	21d40 <__fpclassifyd>
   20584:	10000d1e 	bne	r2,zero,205bc <pow+0x9c>
   20588:	8805883a 	mov	r2,r17
   2058c:	8007883a 	mov	r3,r16
   20590:	dfc01117 	ldw	ra,68(sp)
   20594:	ddc01017 	ldw	r23,64(sp)
   20598:	dd800f17 	ldw	r22,60(sp)
   2059c:	dd400e17 	ldw	r21,56(sp)
   205a0:	dd000d17 	ldw	r20,52(sp)
   205a4:	dcc00c17 	ldw	r19,48(sp)
   205a8:	dc800b17 	ldw	r18,44(sp)
   205ac:	dc400a17 	ldw	r17,40(sp)
   205b0:	dc000917 	ldw	r16,36(sp)
   205b4:	dec01204 	addi	sp,sp,72
   205b8:	f800283a 	ret
   205bc:	b809883a 	mov	r4,r23
   205c0:	b00b883a 	mov	r5,r22
   205c4:	0021d400 	call	21d40 <__fpclassifyd>
   205c8:	000d883a 	mov	r6,zero
   205cc:	000f883a 	mov	r7,zero
   205d0:	1000201e 	bne	r2,zero,20654 <pow+0x134>
   205d4:	a809883a 	mov	r4,r21
   205d8:	a00b883a 	mov	r5,r20
   205dc:	00234b40 	call	234b4 <__eqdf2>
   205e0:	103fe91e 	bne	r2,zero,20588 <__alt_data_end+0xfffe0588>
   205e4:	01000044 	movi	r4,1
   205e8:	d9000015 	stw	r4,0(sp)
   205ec:	90800017 	ldw	r2,0(r18)
   205f0:	010000f4 	movhi	r4,3
   205f4:	00cffc34 	movhi	r3,16368
   205f8:	2104a704 	addi	r4,r4,4764
   205fc:	d9000115 	stw	r4,4(sp)
   20600:	d8000815 	stw	zero,32(sp)
   20604:	ddc00215 	stw	r23,8(sp)
   20608:	dd800315 	stw	r22,12(sp)
   2060c:	dd400415 	stw	r21,16(sp)
   20610:	dd000515 	stw	r20,20(sp)
   20614:	d8000615 	stw	zero,24(sp)
   20618:	d8c00715 	stw	r3,28(sp)
   2061c:	14c02826 	beq	r2,r19,206c0 <pow+0x1a0>
   20620:	01000084 	movi	r4,2
   20624:	11002626 	beq	r2,r4,206c0 <pow+0x1a0>
   20628:	d809883a 	mov	r4,sp
   2062c:	0021db40 	call	21db4 <matherr>
   20630:	10006b26 	beq	r2,zero,207e0 <pow+0x2c0>
   20634:	d8800817 	ldw	r2,32(sp)
   20638:	10000326 	beq	r2,zero,20648 <pow+0x128>
   2063c:	00248e00 	call	248e0 <__errno>
   20640:	d8c00817 	ldw	r3,32(sp)
   20644:	10c00015 	stw	r3,0(r2)
   20648:	d8800617 	ldw	r2,24(sp)
   2064c:	d8c00717 	ldw	r3,28(sp)
   20650:	003fcf06 	br	20590 <__alt_data_end+0xfffe0590>
   20654:	b809883a 	mov	r4,r23
   20658:	b00b883a 	mov	r5,r22
   2065c:	00234b40 	call	234b4 <__eqdf2>
   20660:	1000191e 	bne	r2,zero,206c8 <pow+0x1a8>
   20664:	000d883a 	mov	r6,zero
   20668:	000f883a 	mov	r7,zero
   2066c:	a809883a 	mov	r4,r21
   20670:	a00b883a 	mov	r5,r20
   20674:	00234b40 	call	234b4 <__eqdf2>
   20678:	10003a1e 	bne	r2,zero,20764 <pow+0x244>
   2067c:	00c00044 	movi	r3,1
   20680:	d8c00015 	stw	r3,0(sp)
   20684:	90800017 	ldw	r2,0(r18)
   20688:	00c000f4 	movhi	r3,3
   2068c:	18c4a704 	addi	r3,r3,4764
   20690:	d8c00115 	stw	r3,4(sp)
   20694:	d8000815 	stw	zero,32(sp)
   20698:	ddc00215 	stw	r23,8(sp)
   2069c:	dd800315 	stw	r22,12(sp)
   206a0:	dd400415 	stw	r21,16(sp)
   206a4:	dd000515 	stw	r20,20(sp)
   206a8:	d8000615 	stw	zero,24(sp)
   206ac:	d8000715 	stw	zero,28(sp)
   206b0:	103fdd26 	beq	r2,zero,20628 <__alt_data_end+0xfffe0628>
   206b4:	0005883a 	mov	r2,zero
   206b8:	00cffc34 	movhi	r3,16368
   206bc:	003fb406 	br	20590 <__alt_data_end+0xfffe0590>
   206c0:	0005883a 	mov	r2,zero
   206c4:	003fb206 	br	20590 <__alt_data_end+0xfffe0590>
   206c8:	8809883a 	mov	r4,r17
   206cc:	800b883a 	mov	r5,r16
   206d0:	0021d240 	call	21d24 <finite>
   206d4:	10004626 	beq	r2,zero,207f0 <pow+0x2d0>
   206d8:	000d883a 	mov	r6,zero
   206dc:	000f883a 	mov	r7,zero
   206e0:	8809883a 	mov	r4,r17
   206e4:	800b883a 	mov	r5,r16
   206e8:	00234b40 	call	234b4 <__eqdf2>
   206ec:	103fa61e 	bne	r2,zero,20588 <__alt_data_end+0xfffe0588>
   206f0:	b809883a 	mov	r4,r23
   206f4:	b00b883a 	mov	r5,r22
   206f8:	0021d240 	call	21d24 <finite>
   206fc:	103fa226 	beq	r2,zero,20588 <__alt_data_end+0xfffe0588>
   20700:	a809883a 	mov	r4,r21
   20704:	a00b883a 	mov	r5,r20
   20708:	0021d240 	call	21d24 <finite>
   2070c:	103f9e26 	beq	r2,zero,20588 <__alt_data_end+0xfffe0588>
   20710:	00800104 	movi	r2,4
   20714:	d8800015 	stw	r2,0(sp)
   20718:	90c00017 	ldw	r3,0(r18)
   2071c:	008000f4 	movhi	r2,3
   20720:	1084a704 	addi	r2,r2,4764
   20724:	d8800115 	stw	r2,4(sp)
   20728:	d8000815 	stw	zero,32(sp)
   2072c:	ddc00215 	stw	r23,8(sp)
   20730:	dd800315 	stw	r22,12(sp)
   20734:	dd400415 	stw	r21,16(sp)
   20738:	dd000515 	stw	r20,20(sp)
   2073c:	d8000615 	stw	zero,24(sp)
   20740:	d8000715 	stw	zero,28(sp)
   20744:	00800084 	movi	r2,2
   20748:	18804726 	beq	r3,r2,20868 <pow+0x348>
   2074c:	d809883a 	mov	r4,sp
   20750:	0021db40 	call	21db4 <matherr>
   20754:	10004426 	beq	r2,zero,20868 <pow+0x348>
   20758:	d8800817 	ldw	r2,32(sp)
   2075c:	103fba26 	beq	r2,zero,20648 <__alt_data_end+0xfffe0648>
   20760:	003fb606 	br	2063c <__alt_data_end+0xfffe063c>
   20764:	a809883a 	mov	r4,r21
   20768:	a00b883a 	mov	r5,r20
   2076c:	0021d240 	call	21d24 <finite>
   20770:	103f8526 	beq	r2,zero,20588 <__alt_data_end+0xfffe0588>
   20774:	000d883a 	mov	r6,zero
   20778:	000f883a 	mov	r7,zero
   2077c:	a809883a 	mov	r4,r21
   20780:	a00b883a 	mov	r5,r20
   20784:	00236180 	call	23618 <__ledf2>
   20788:	103f7f0e 	bge	r2,zero,20588 <__alt_data_end+0xfffe0588>
   2078c:	00c00044 	movi	r3,1
   20790:	d8c00015 	stw	r3,0(sp)
   20794:	90800017 	ldw	r2,0(r18)
   20798:	00c000f4 	movhi	r3,3
   2079c:	18c4a704 	addi	r3,r3,4764
   207a0:	d8c00115 	stw	r3,4(sp)
   207a4:	d8000815 	stw	zero,32(sp)
   207a8:	ddc00215 	stw	r23,8(sp)
   207ac:	dd800315 	stw	r22,12(sp)
   207b0:	dd400415 	stw	r21,16(sp)
   207b4:	dd000515 	stw	r20,20(sp)
   207b8:	d8000615 	stw	zero,24(sp)
   207bc:	10002526 	beq	r2,zero,20854 <pow+0x334>
   207c0:	00fffc34 	movhi	r3,65520
   207c4:	d8c00715 	stw	r3,28(sp)
   207c8:	00c00084 	movi	r3,2
   207cc:	10c0221e 	bne	r2,r3,20858 <pow+0x338>
   207d0:	00248e00 	call	248e0 <__errno>
   207d4:	00c00844 	movi	r3,33
   207d8:	10c00015 	stw	r3,0(r2)
   207dc:	003fde06 	br	20758 <__alt_data_end+0xfffe0758>
   207e0:	00248e00 	call	248e0 <__errno>
   207e4:	00c00844 	movi	r3,33
   207e8:	10c00015 	stw	r3,0(r2)
   207ec:	003f9106 	br	20634 <__alt_data_end+0xfffe0634>
   207f0:	b809883a 	mov	r4,r23
   207f4:	b00b883a 	mov	r5,r22
   207f8:	0021d240 	call	21d24 <finite>
   207fc:	103fb626 	beq	r2,zero,206d8 <__alt_data_end+0xfffe06d8>
   20800:	a809883a 	mov	r4,r21
   20804:	a00b883a 	mov	r5,r20
   20808:	0021d240 	call	21d24 <finite>
   2080c:	103fb226 	beq	r2,zero,206d8 <__alt_data_end+0xfffe06d8>
   20810:	8809883a 	mov	r4,r17
   20814:	800b883a 	mov	r5,r16
   20818:	0021d400 	call	21d40 <__fpclassifyd>
   2081c:	1000161e 	bne	r2,zero,20878 <pow+0x358>
   20820:	00800044 	movi	r2,1
   20824:	d8800015 	stw	r2,0(sp)
   20828:	94000017 	ldw	r16,0(r18)
   2082c:	008000f4 	movhi	r2,3
   20830:	1084a704 	addi	r2,r2,4764
   20834:	d8800115 	stw	r2,4(sp)
   20838:	d8000815 	stw	zero,32(sp)
   2083c:	ddc00215 	stw	r23,8(sp)
   20840:	dd800315 	stw	r22,12(sp)
   20844:	dd400415 	stw	r21,16(sp)
   20848:	dd000515 	stw	r20,20(sp)
   2084c:	8000281e 	bne	r16,zero,208f0 <pow+0x3d0>
   20850:	d8000615 	stw	zero,24(sp)
   20854:	d8000715 	stw	zero,28(sp)
   20858:	d809883a 	mov	r4,sp
   2085c:	0021db40 	call	21db4 <matherr>
   20860:	103fbd1e 	bne	r2,zero,20758 <__alt_data_end+0xfffe0758>
   20864:	003fda06 	br	207d0 <__alt_data_end+0xfffe07d0>
   20868:	00248e00 	call	248e0 <__errno>
   2086c:	00c00884 	movi	r3,34
   20870:	10c00015 	stw	r3,0(r2)
   20874:	003fb806 	br	20758 <__alt_data_end+0xfffe0758>
   20878:	00c000c4 	movi	r3,3
   2087c:	d8c00015 	stw	r3,0(sp)
   20880:	90800017 	ldw	r2,0(r18)
   20884:	00c000f4 	movhi	r3,3
   20888:	18c4a704 	addi	r3,r3,4764
   2088c:	d8c00115 	stw	r3,4(sp)
   20890:	d8000815 	stw	zero,32(sp)
   20894:	ddc00215 	stw	r23,8(sp)
   20898:	dd800315 	stw	r22,12(sp)
   2089c:	dd400415 	stw	r21,16(sp)
   208a0:	dd000515 	stw	r20,20(sp)
   208a4:	000d883a 	mov	r6,zero
   208a8:	000f883a 	mov	r7,zero
   208ac:	b809883a 	mov	r4,r23
   208b0:	b00b883a 	mov	r5,r22
   208b4:	1000181e 	bne	r2,zero,20918 <pow+0x3f8>
   208b8:	00b80034 	movhi	r2,57344
   208bc:	d8800615 	stw	r2,24(sp)
   208c0:	0091fc34 	movhi	r2,18416
   208c4:	10bfffc4 	addi	r2,r2,-1
   208c8:	d8800715 	stw	r2,28(sp)
   208cc:	00236180 	call	23618 <__ledf2>
   208d0:	10001a16 	blt	r2,zero,2093c <pow+0x41c>
   208d4:	d809883a 	mov	r4,sp
   208d8:	0021db40 	call	21db4 <matherr>
   208dc:	103f551e 	bne	r2,zero,20634 <__alt_data_end+0xfffe0634>
   208e0:	00248e00 	call	248e0 <__errno>
   208e4:	00c00884 	movi	r3,34
   208e8:	10c00015 	stw	r3,0(r2)
   208ec:	003f5106 	br	20634 <__alt_data_end+0xfffe0634>
   208f0:	000d883a 	mov	r6,zero
   208f4:	000f883a 	mov	r7,zero
   208f8:	0009883a 	mov	r4,zero
   208fc:	000b883a 	mov	r5,zero
   20900:	0022bcc0 	call	22bcc <__divdf3>
   20904:	d8800615 	stw	r2,24(sp)
   20908:	d8c00715 	stw	r3,28(sp)
   2090c:	00800084 	movi	r2,2
   20910:	80bfaf26 	beq	r16,r2,207d0 <__alt_data_end+0xfffe07d0>
   20914:	003fd006 	br	20858 <__alt_data_end+0xfffe0858>
   20918:	009ffc34 	movhi	r2,32752
   2091c:	d8000615 	stw	zero,24(sp)
   20920:	d8800715 	stw	r2,28(sp)
   20924:	00236180 	call	23618 <__ledf2>
   20928:	10001a16 	blt	r2,zero,20994 <pow+0x474>
   2092c:	90c00017 	ldw	r3,0(r18)
   20930:	00800084 	movi	r2,2
   20934:	18bfe71e 	bne	r3,r2,208d4 <__alt_data_end+0xfffe08d4>
   20938:	003fe906 	br	208e0 <__alt_data_end+0xfffe08e0>
   2093c:	000d883a 	mov	r6,zero
   20940:	01cff834 	movhi	r7,16352
   20944:	a809883a 	mov	r4,r21
   20948:	a00b883a 	mov	r5,r20
   2094c:	002370c0 	call	2370c <__muldf3>
   20950:	1009883a 	mov	r4,r2
   20954:	180b883a 	mov	r5,r3
   20958:	1023883a 	mov	r17,r2
   2095c:	1821883a 	mov	r16,r3
   20960:	0021dc80 	call	21dc8 <rint>
   20964:	100d883a 	mov	r6,r2
   20968:	180f883a 	mov	r7,r3
   2096c:	8809883a 	mov	r4,r17
   20970:	800b883a 	mov	r5,r16
   20974:	00234b40 	call	234b4 <__eqdf2>
   20978:	103fec26 	beq	r2,zero,2092c <__alt_data_end+0xfffe092c>
   2097c:	00b80034 	movhi	r2,57344
   20980:	d8800615 	stw	r2,24(sp)
   20984:	00b1fc34 	movhi	r2,51184
   20988:	10bfffc4 	addi	r2,r2,-1
   2098c:	d8800715 	stw	r2,28(sp)
   20990:	003fe606 	br	2092c <__alt_data_end+0xfffe092c>
   20994:	000d883a 	mov	r6,zero
   20998:	01cff834 	movhi	r7,16352
   2099c:	a809883a 	mov	r4,r21
   209a0:	a00b883a 	mov	r5,r20
   209a4:	002370c0 	call	2370c <__muldf3>
   209a8:	1009883a 	mov	r4,r2
   209ac:	180b883a 	mov	r5,r3
   209b0:	1023883a 	mov	r17,r2
   209b4:	1821883a 	mov	r16,r3
   209b8:	0021dc80 	call	21dc8 <rint>
   209bc:	100d883a 	mov	r6,r2
   209c0:	180f883a 	mov	r7,r3
   209c4:	8809883a 	mov	r4,r17
   209c8:	800b883a 	mov	r5,r16
   209cc:	00234b40 	call	234b4 <__eqdf2>
   209d0:	103fd626 	beq	r2,zero,2092c <__alt_data_end+0xfffe092c>
   209d4:	00bffc34 	movhi	r2,65520
   209d8:	d8000615 	stw	zero,24(sp)
   209dc:	d8800715 	stw	r2,28(sp)
   209e0:	003fd206 	br	2092c <__alt_data_end+0xfffe092c>

000209e4 <__ieee754_pow>:
   209e4:	00a00034 	movhi	r2,32768
   209e8:	deffea04 	addi	sp,sp,-88
   209ec:	10bfffc4 	addi	r2,r2,-1
   209f0:	dc800e15 	stw	r18,56(sp)
   209f4:	38a4703a 	and	r18,r7,r2
   209f8:	dfc01515 	stw	ra,84(sp)
   209fc:	df001415 	stw	fp,80(sp)
   20a00:	ddc01315 	stw	r23,76(sp)
   20a04:	dd801215 	stw	r22,72(sp)
   20a08:	dd401115 	stw	r21,68(sp)
   20a0c:	dd001015 	stw	r20,64(sp)
   20a10:	dcc00f15 	stw	r19,60(sp)
   20a14:	dc400d15 	stw	r17,52(sp)
   20a18:	dc000c15 	stw	r16,48(sp)
   20a1c:	9186b03a 	or	r3,r18,r6
   20a20:	18002a26 	beq	r3,zero,20acc <__ieee754_pow+0xe8>
   20a24:	28a2703a 	and	r17,r5,r2
   20a28:	009ffc34 	movhi	r2,32752
   20a2c:	14402316 	blt	r2,r17,20abc <__ieee754_pow+0xd8>
   20a30:	88802126 	beq	r17,r2,20ab8 <__ieee754_pow+0xd4>
   20a34:	14802116 	blt	r2,r18,20abc <__ieee754_pow+0xd8>
   20a38:	009ffc34 	movhi	r2,32752
   20a3c:	90807326 	beq	r18,r2,20c0c <__ieee754_pow+0x228>
   20a40:	2827883a 	mov	r19,r5
   20a44:	2021883a 	mov	r16,r4
   20a48:	302d883a 	mov	r22,r6
   20a4c:	3839883a 	mov	fp,r7
   20a50:	28007016 	blt	r5,zero,20c14 <__ieee754_pow+0x230>
   20a54:	002b883a 	mov	r21,zero
   20a58:	b0003a1e 	bne	r22,zero,20b44 <__ieee754_pow+0x160>
   20a5c:	009ffc34 	movhi	r2,32752
   20a60:	90807f26 	beq	r18,r2,20c60 <__ieee754_pow+0x27c>
   20a64:	008ffc34 	movhi	r2,16368
   20a68:	90805426 	beq	r18,r2,20bbc <__ieee754_pow+0x1d8>
   20a6c:	00900034 	movhi	r2,16384
   20a70:	e0833b26 	beq	fp,r2,21760 <__ieee754_pow+0xd7c>
   20a74:	008ff834 	movhi	r2,16352
   20a78:	e080321e 	bne	fp,r2,20b44 <__ieee754_pow+0x160>
   20a7c:	98003116 	blt	r19,zero,20b44 <__ieee754_pow+0x160>
   20a80:	8009883a 	mov	r4,r16
   20a84:	980b883a 	mov	r5,r19
   20a88:	dfc01517 	ldw	ra,84(sp)
   20a8c:	df001417 	ldw	fp,80(sp)
   20a90:	ddc01317 	ldw	r23,76(sp)
   20a94:	dd801217 	ldw	r22,72(sp)
   20a98:	dd401117 	ldw	r21,68(sp)
   20a9c:	dd001017 	ldw	r20,64(sp)
   20aa0:	dcc00f17 	ldw	r19,60(sp)
   20aa4:	dc800e17 	ldw	r18,56(sp)
   20aa8:	dc400d17 	ldw	r17,52(sp)
   20aac:	dc000c17 	ldw	r16,48(sp)
   20ab0:	dec01604 	addi	sp,sp,88
   20ab4:	0021a881 	jmpi	21a88 <__ieee754_sqrt>
   20ab8:	20001226 	beq	r4,zero,20b04 <__ieee754_pow+0x120>
   20abc:	00b00434 	movhi	r2,49168
   20ac0:	8885883a 	add	r2,r17,r2
   20ac4:	1108b03a 	or	r4,r2,r4
   20ac8:	20000f1e 	bne	r4,zero,20b08 <__ieee754_pow+0x124>
   20acc:	0005883a 	mov	r2,zero
   20ad0:	00cffc34 	movhi	r3,16368
   20ad4:	dfc01517 	ldw	ra,84(sp)
   20ad8:	df001417 	ldw	fp,80(sp)
   20adc:	ddc01317 	ldw	r23,76(sp)
   20ae0:	dd801217 	ldw	r22,72(sp)
   20ae4:	dd401117 	ldw	r21,68(sp)
   20ae8:	dd001017 	ldw	r20,64(sp)
   20aec:	dcc00f17 	ldw	r19,60(sp)
   20af0:	dc800e17 	ldw	r18,56(sp)
   20af4:	dc400d17 	ldw	r17,52(sp)
   20af8:	dc000c17 	ldw	r16,48(sp)
   20afc:	dec01604 	addi	sp,sp,88
   20b00:	f800283a 	ret
   20b04:	8cbfcc0e 	bge	r17,r18,20a38 <__alt_data_end+0xfffe0a38>
   20b08:	010000f4 	movhi	r4,3
   20b0c:	2104f504 	addi	r4,r4,5076
   20b10:	dfc01517 	ldw	ra,84(sp)
   20b14:	df001417 	ldw	fp,80(sp)
   20b18:	ddc01317 	ldw	r23,76(sp)
   20b1c:	dd801217 	ldw	r22,72(sp)
   20b20:	dd401117 	ldw	r21,68(sp)
   20b24:	dd001017 	ldw	r20,64(sp)
   20b28:	dcc00f17 	ldw	r19,60(sp)
   20b2c:	dc800e17 	ldw	r18,56(sp)
   20b30:	dc400d17 	ldw	r17,52(sp)
   20b34:	dc000c17 	ldw	r16,48(sp)
   20b38:	dec01604 	addi	sp,sp,88
   20b3c:	0021dbc1 	jmpi	21dbc <nan>
   20b40:	002b883a 	mov	r21,zero
   20b44:	8009883a 	mov	r4,r16
   20b48:	980b883a 	mov	r5,r19
   20b4c:	0021d100 	call	21d10 <fabs>
   20b50:	102f883a 	mov	r23,r2
   20b54:	80000f26 	beq	r16,zero,20b94 <__ieee754_pow+0x1b0>
   20b58:	9816d7fa 	srli	r11,r19,31
   20b5c:	5affffc4 	addi	r11,r11,-1
   20b60:	aac4b03a 	or	r2,r21,r11
   20b64:	10004b26 	beq	r2,zero,20c94 <__ieee754_pow+0x2b0>
   20b68:	00907834 	movhi	r2,16864
   20b6c:	1480540e 	bge	r2,r18,20cc0 <__ieee754_pow+0x2dc>
   20b70:	0090fc34 	movhi	r2,17392
   20b74:	14832d0e 	bge	r2,r18,2182c <__ieee754_pow+0xe48>
   20b78:	008ffc34 	movhi	r2,16368
   20b7c:	10bfffc4 	addi	r2,r2,-1
   20b80:	14401916 	blt	r2,r17,20be8 <__ieee754_pow+0x204>
   20b84:	e0001916 	blt	fp,zero,20bec <__ieee754_pow+0x208>
   20b88:	0005883a 	mov	r2,zero
   20b8c:	0007883a 	mov	r3,zero
   20b90:	003fd006 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   20b94:	88000526 	beq	r17,zero,20bac <__ieee754_pow+0x1c8>
   20b98:	00900034 	movhi	r2,16384
   20b9c:	10bfffc4 	addi	r2,r2,-1
   20ba0:	9884703a 	and	r2,r19,r2
   20ba4:	010ffc34 	movhi	r4,16368
   20ba8:	113feb1e 	bne	r2,r4,20b58 <__alt_data_end+0xfffe0b58>
   20bac:	e0000716 	blt	fp,zero,20bcc <__ieee754_pow+0x1e8>
   20bb0:	9802e216 	blt	r19,zero,2173c <__ieee754_pow+0xd58>
   20bb4:	b805883a 	mov	r2,r23
   20bb8:	003fc606 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   20bbc:	e0037516 	blt	fp,zero,21994 <__ieee754_pow+0xfb0>
   20bc0:	8005883a 	mov	r2,r16
   20bc4:	9807883a 	mov	r3,r19
   20bc8:	003fc206 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   20bcc:	b80d883a 	mov	r6,r23
   20bd0:	180f883a 	mov	r7,r3
   20bd4:	0009883a 	mov	r4,zero
   20bd8:	014ffc34 	movhi	r5,16368
   20bdc:	0022bcc0 	call	22bcc <__divdf3>
   20be0:	102f883a 	mov	r23,r2
   20be4:	003ff206 	br	20bb0 <__alt_data_end+0xfffe0bb0>
   20be8:	073fe70e 	bge	zero,fp,20b88 <__alt_data_end+0xfffe0b88>
   20bec:	01a20034 	movhi	r6,34816
   20bf0:	01df8e34 	movhi	r7,32312
   20bf4:	319d6704 	addi	r6,r6,30108
   20bf8:	39f90f04 	addi	r7,r7,-7108
   20bfc:	3009883a 	mov	r4,r6
   20c00:	380b883a 	mov	r5,r7
   20c04:	002370c0 	call	2370c <__muldf3>
   20c08:	003fb206 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   20c0c:	303f8c26 	beq	r6,zero,20a40 <__alt_data_end+0xfffe0a40>
   20c10:	003faa06 	br	20abc <__alt_data_end+0xfffe0abc>
   20c14:	0090d034 	movhi	r2,17216
   20c18:	10bfffc4 	addi	r2,r2,-1
   20c1c:	14801b16 	blt	r2,r18,20c8c <__ieee754_pow+0x2a8>
   20c20:	008ffc34 	movhi	r2,16368
   20c24:	10bfffc4 	addi	r2,r2,-1
   20c28:	14bf8a0e 	bge	r2,r18,20a54 <__alt_data_end+0xfffe0a54>
   20c2c:	9005d53a 	srai	r2,r18,20
   20c30:	00c00504 	movi	r3,20
   20c34:	10bf0044 	addi	r2,r2,-1023
   20c38:	18836b0e 	bge	r3,r2,219e8 <__ieee754_pow+0x1004>
   20c3c:	00c00d04 	movi	r3,52
   20c40:	1885c83a 	sub	r2,r3,r2
   20c44:	3086d83a 	srl	r3,r6,r2
   20c48:	1884983a 	sll	r2,r3,r2
   20c4c:	30bf811e 	bne	r6,r2,20a54 <__alt_data_end+0xfffe0a54>
   20c50:	18c0004c 	andi	r3,r3,1
   20c54:	02800084 	movi	r10,2
   20c58:	50ebc83a 	sub	r21,r10,r3
   20c5c:	003f7e06 	br	20a58 <__alt_data_end+0xfffe0a58>
   20c60:	01300434 	movhi	r4,49168
   20c64:	8909883a 	add	r4,r17,r4
   20c68:	2408b03a 	or	r4,r4,r16
   20c6c:	203f9726 	beq	r4,zero,20acc <__alt_data_end+0xfffe0acc>
   20c70:	008ffc34 	movhi	r2,16368
   20c74:	10bfffc4 	addi	r2,r2,-1
   20c78:	1442e60e 	bge	r2,r17,21814 <__ieee754_pow+0xe30>
   20c7c:	e03fc216 	blt	fp,zero,20b88 <__alt_data_end+0xfffe0b88>
   20c80:	0005883a 	mov	r2,zero
   20c84:	e007883a 	mov	r3,fp
   20c88:	003f9206 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   20c8c:	05400084 	movi	r21,2
   20c90:	003f7106 	br	20a58 <__alt_data_end+0xfffe0a58>
   20c94:	800d883a 	mov	r6,r16
   20c98:	980f883a 	mov	r7,r19
   20c9c:	3009883a 	mov	r4,r6
   20ca0:	380b883a 	mov	r5,r7
   20ca4:	0023e240 	call	23e24 <__subdf3>
   20ca8:	100d883a 	mov	r6,r2
   20cac:	180f883a 	mov	r7,r3
   20cb0:	1009883a 	mov	r4,r2
   20cb4:	180b883a 	mov	r5,r3
   20cb8:	0022bcc0 	call	22bcc <__divdf3>
   20cbc:	003f8506 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   20cc0:	00800434 	movhi	r2,16
   20cc4:	10bfffc4 	addi	r2,r2,-1
   20cc8:	1442d616 	blt	r2,r17,21824 <__ieee754_pow+0xe40>
   20ccc:	b809883a 	mov	r4,r23
   20cd0:	000d883a 	mov	r6,zero
   20cd4:	01d0d034 	movhi	r7,17216
   20cd8:	180b883a 	mov	r5,r3
   20cdc:	dac00b15 	stw	r11,44(sp)
   20ce0:	002370c0 	call	2370c <__muldf3>
   20ce4:	dac00b17 	ldw	r11,44(sp)
   20ce8:	102f883a 	mov	r23,r2
   20cec:	1823883a 	mov	r17,r3
   20cf0:	033ff2c4 	movi	r12,-53
   20cf4:	8807d53a 	srai	r3,r17,20
   20cf8:	00800434 	movhi	r2,16
   20cfc:	10bfffc4 	addi	r2,r2,-1
   20d00:	18ff0044 	addi	r3,r3,-1023
   20d04:	1b19883a 	add	r12,r3,r12
   20d08:	00c00134 	movhi	r3,4
   20d0c:	8884703a 	and	r2,r17,r2
   20d10:	18e62384 	addi	r3,r3,-26482
   20d14:	150ffc34 	orhi	r20,r2,16368
   20d18:	1880060e 	bge	r3,r2,20d34 <__ieee754_pow+0x350>
   20d1c:	00c00334 	movhi	r3,12
   20d20:	18ed9e44 	addi	r3,r3,-18823
   20d24:	18833f0e 	bge	r3,r2,21a24 <__ieee754_pow+0x1040>
   20d28:	00bffc34 	movhi	r2,65520
   20d2c:	63000044 	addi	r12,r12,1
   20d30:	a0a9883a 	add	r20,r20,r2
   20d34:	0027883a 	mov	r19,zero
   20d38:	d8000215 	stw	zero,8(sp)
   20d3c:	0013883a 	mov	r9,zero
   20d40:	0011883a 	mov	r8,zero
   20d44:	0015883a 	mov	r10,zero
   20d48:	048ffc34 	movhi	r18,16368
   20d4c:	900f883a 	mov	r7,r18
   20d50:	b809883a 	mov	r4,r23
   20d54:	a00b883a 	mov	r5,r20
   20d58:	000d883a 	mov	r6,zero
   20d5c:	da000a15 	stw	r8,40(sp)
   20d60:	da400815 	stw	r9,32(sp)
   20d64:	dac00b15 	stw	r11,44(sp)
   20d68:	db000915 	stw	r12,36(sp)
   20d6c:	da800515 	stw	r10,20(sp)
   20d70:	0023e240 	call	23e24 <__subdf3>
   20d74:	b809883a 	mov	r4,r23
   20d78:	a00b883a 	mov	r5,r20
   20d7c:	900f883a 	mov	r7,r18
   20d80:	000d883a 	mov	r6,zero
   20d84:	d8800015 	stw	r2,0(sp)
   20d88:	d8c00115 	stw	r3,4(sp)
   20d8c:	00223200 	call	22320 <__adddf3>
   20d90:	100d883a 	mov	r6,r2
   20d94:	180f883a 	mov	r7,r3
   20d98:	0009883a 	mov	r4,zero
   20d9c:	014ffc34 	movhi	r5,16368
   20da0:	0022bcc0 	call	22bcc <__divdf3>
   20da4:	d9000017 	ldw	r4,0(sp)
   20da8:	d9400117 	ldw	r5,4(sp)
   20dac:	100d883a 	mov	r6,r2
   20db0:	180f883a 	mov	r7,r3
   20db4:	d8c00715 	stw	r3,28(sp)
   20db8:	d8800615 	stw	r2,24(sp)
   20dbc:	002370c0 	call	2370c <__muldf3>
   20dc0:	1023883a 	mov	r17,r2
   20dc4:	a005d07a 	srai	r2,r20,1
   20dc8:	da800517 	ldw	r10,20(sp)
   20dcc:	1821883a 	mov	r16,r3
   20dd0:	10c80034 	orhi	r3,r2,8192
   20dd4:	00800234 	movhi	r2,8
   20dd8:	1885883a 	add	r2,r3,r2
   20ddc:	1295883a 	add	r10,r2,r10
   20de0:	500f883a 	mov	r7,r10
   20de4:	800b883a 	mov	r5,r16
   20de8:	000d883a 	mov	r6,zero
   20dec:	0009883a 	mov	r4,zero
   20df0:	da800515 	stw	r10,20(sp)
   20df4:	002370c0 	call	2370c <__muldf3>
   20df8:	d9000017 	ldw	r4,0(sp)
   20dfc:	d9400117 	ldw	r5,4(sp)
   20e00:	100d883a 	mov	r6,r2
   20e04:	180f883a 	mov	r7,r3
   20e08:	0023e240 	call	23e24 <__subdf3>
   20e0c:	da800517 	ldw	r10,20(sp)
   20e10:	900f883a 	mov	r7,r18
   20e14:	000d883a 	mov	r6,zero
   20e18:	500b883a 	mov	r5,r10
   20e1c:	0009883a 	mov	r4,zero
   20e20:	d8800015 	stw	r2,0(sp)
   20e24:	d8c00515 	stw	r3,20(sp)
   20e28:	0023e240 	call	23e24 <__subdf3>
   20e2c:	b809883a 	mov	r4,r23
   20e30:	a00b883a 	mov	r5,r20
   20e34:	100d883a 	mov	r6,r2
   20e38:	180f883a 	mov	r7,r3
   20e3c:	0023e240 	call	23e24 <__subdf3>
   20e40:	800f883a 	mov	r7,r16
   20e44:	000d883a 	mov	r6,zero
   20e48:	1009883a 	mov	r4,r2
   20e4c:	180b883a 	mov	r5,r3
   20e50:	002370c0 	call	2370c <__muldf3>
   20e54:	db400517 	ldw	r13,20(sp)
   20e58:	d9000017 	ldw	r4,0(sp)
   20e5c:	100d883a 	mov	r6,r2
   20e60:	680b883a 	mov	r5,r13
   20e64:	180f883a 	mov	r7,r3
   20e68:	0023e240 	call	23e24 <__subdf3>
   20e6c:	dbc00617 	ldw	r15,24(sp)
   20e70:	db800717 	ldw	r14,28(sp)
   20e74:	1009883a 	mov	r4,r2
   20e78:	780d883a 	mov	r6,r15
   20e7c:	700f883a 	mov	r7,r14
   20e80:	180b883a 	mov	r5,r3
   20e84:	002370c0 	call	2370c <__muldf3>
   20e88:	880d883a 	mov	r6,r17
   20e8c:	800f883a 	mov	r7,r16
   20e90:	8809883a 	mov	r4,r17
   20e94:	800b883a 	mov	r5,r16
   20e98:	d8800015 	stw	r2,0(sp)
   20e9c:	d8c00115 	stw	r3,4(sp)
   20ea0:	002370c0 	call	2370c <__muldf3>
   20ea4:	01929174 	movhi	r6,19013
   20ea8:	01cff2b4 	movhi	r7,16330
   20eac:	3193bbc4 	addi	r6,r6,20207
   20eb0:	39df8a04 	addi	r7,r7,32296
   20eb4:	1009883a 	mov	r4,r2
   20eb8:	180b883a 	mov	r5,r3
   20ebc:	102f883a 	mov	r23,r2
   20ec0:	1829883a 	mov	r20,r3
   20ec4:	002370c0 	call	2370c <__muldf3>
   20ec8:	01a4f2b4 	movhi	r6,37834
   20ecc:	01cff3b4 	movhi	r7,16334
   20ed0:	31b6d944 	addi	r6,r6,-9371
   20ed4:	39e19284 	addi	r7,r7,-31158
   20ed8:	1009883a 	mov	r4,r2
   20edc:	180b883a 	mov	r5,r3
   20ee0:	00223200 	call	22320 <__adddf3>
   20ee4:	b80d883a 	mov	r6,r23
   20ee8:	a00f883a 	mov	r7,r20
   20eec:	1009883a 	mov	r4,r2
   20ef0:	180b883a 	mov	r5,r3
   20ef4:	002370c0 	call	2370c <__muldf3>
   20ef8:	01aa4774 	movhi	r6,43293
   20efc:	01cff474 	movhi	r7,16337
   20f00:	31904044 	addi	r6,r6,16641
   20f04:	39dd1804 	addi	r7,r7,29792
   20f08:	1009883a 	mov	r4,r2
   20f0c:	180b883a 	mov	r5,r3
   20f10:	00223200 	call	22320 <__adddf3>
   20f14:	b80d883a 	mov	r6,r23
   20f18:	a00f883a 	mov	r7,r20
   20f1c:	1009883a 	mov	r4,r2
   20f20:	180b883a 	mov	r5,r3
   20f24:	002370c0 	call	2370c <__muldf3>
   20f28:	019463f4 	movhi	r6,20879
   20f2c:	01cff574 	movhi	r7,16341
   20f30:	31899344 	addi	r6,r6,9805
   20f34:	39d55544 	addi	r7,r7,21845
   20f38:	1009883a 	mov	r4,r2
   20f3c:	180b883a 	mov	r5,r3
   20f40:	00223200 	call	22320 <__adddf3>
   20f44:	b80d883a 	mov	r6,r23
   20f48:	a00f883a 	mov	r7,r20
   20f4c:	1009883a 	mov	r4,r2
   20f50:	180b883a 	mov	r5,r3
   20f54:	002370c0 	call	2370c <__muldf3>
   20f58:	01b6dc34 	movhi	r6,56176
   20f5c:	01cff6f4 	movhi	r7,16347
   20f60:	31aaffc4 	addi	r6,r6,-21505
   20f64:	39db6d84 	addi	r7,r7,28086
   20f68:	1009883a 	mov	r4,r2
   20f6c:	180b883a 	mov	r5,r3
   20f70:	00223200 	call	22320 <__adddf3>
   20f74:	b80d883a 	mov	r6,r23
   20f78:	a00f883a 	mov	r7,r20
   20f7c:	1009883a 	mov	r4,r2
   20f80:	180b883a 	mov	r5,r3
   20f84:	002370c0 	call	2370c <__muldf3>
   20f88:	018cccf4 	movhi	r6,13107
   20f8c:	01cff8f4 	movhi	r7,16355
   20f90:	318cc0c4 	addi	r6,r6,13059
   20f94:	39ccccc4 	addi	r7,r7,13107
   20f98:	1009883a 	mov	r4,r2
   20f9c:	180b883a 	mov	r5,r3
   20fa0:	00223200 	call	22320 <__adddf3>
   20fa4:	b80d883a 	mov	r6,r23
   20fa8:	a00f883a 	mov	r7,r20
   20fac:	b809883a 	mov	r4,r23
   20fb0:	a00b883a 	mov	r5,r20
   20fb4:	1825883a 	mov	r18,r3
   20fb8:	d8800515 	stw	r2,20(sp)
   20fbc:	002370c0 	call	2370c <__muldf3>
   20fc0:	db400517 	ldw	r13,20(sp)
   20fc4:	900b883a 	mov	r5,r18
   20fc8:	100d883a 	mov	r6,r2
   20fcc:	6809883a 	mov	r4,r13
   20fd0:	180f883a 	mov	r7,r3
   20fd4:	002370c0 	call	2370c <__muldf3>
   20fd8:	800f883a 	mov	r7,r16
   20fdc:	8809883a 	mov	r4,r17
   20fe0:	800b883a 	mov	r5,r16
   20fe4:	000d883a 	mov	r6,zero
   20fe8:	102f883a 	mov	r23,r2
   20fec:	1829883a 	mov	r20,r3
   20ff0:	00223200 	call	22320 <__adddf3>
   20ff4:	d9800017 	ldw	r6,0(sp)
   20ff8:	d9c00117 	ldw	r7,4(sp)
   20ffc:	1009883a 	mov	r4,r2
   21000:	180b883a 	mov	r5,r3
   21004:	002370c0 	call	2370c <__muldf3>
   21008:	b80d883a 	mov	r6,r23
   2100c:	a00f883a 	mov	r7,r20
   21010:	1009883a 	mov	r4,r2
   21014:	180b883a 	mov	r5,r3
   21018:	00223200 	call	22320 <__adddf3>
   2101c:	800f883a 	mov	r7,r16
   21020:	800b883a 	mov	r5,r16
   21024:	000d883a 	mov	r6,zero
   21028:	0009883a 	mov	r4,zero
   2102c:	1025883a 	mov	r18,r2
   21030:	182f883a 	mov	r23,r3
   21034:	002370c0 	call	2370c <__muldf3>
   21038:	000d883a 	mov	r6,zero
   2103c:	01d00234 	movhi	r7,16392
   21040:	1009883a 	mov	r4,r2
   21044:	180b883a 	mov	r5,r3
   21048:	d8c00715 	stw	r3,28(sp)
   2104c:	d8800615 	stw	r2,24(sp)
   21050:	00223200 	call	22320 <__adddf3>
   21054:	900d883a 	mov	r6,r18
   21058:	b80f883a 	mov	r7,r23
   2105c:	1009883a 	mov	r4,r2
   21060:	180b883a 	mov	r5,r3
   21064:	00223200 	call	22320 <__adddf3>
   21068:	800b883a 	mov	r5,r16
   2106c:	000d883a 	mov	r6,zero
   21070:	180f883a 	mov	r7,r3
   21074:	0009883a 	mov	r4,zero
   21078:	1829883a 	mov	r20,r3
   2107c:	002370c0 	call	2370c <__muldf3>
   21080:	a00b883a 	mov	r5,r20
   21084:	000d883a 	mov	r6,zero
   21088:	01d00234 	movhi	r7,16392
   2108c:	0009883a 	mov	r4,zero
   21090:	d8800315 	stw	r2,12(sp)
   21094:	d8c00415 	stw	r3,16(sp)
   21098:	0023e240 	call	23e24 <__subdf3>
   2109c:	dbc00617 	ldw	r15,24(sp)
   210a0:	db800717 	ldw	r14,28(sp)
   210a4:	1009883a 	mov	r4,r2
   210a8:	780d883a 	mov	r6,r15
   210ac:	700f883a 	mov	r7,r14
   210b0:	180b883a 	mov	r5,r3
   210b4:	0023e240 	call	23e24 <__subdf3>
   210b8:	9009883a 	mov	r4,r18
   210bc:	b80b883a 	mov	r5,r23
   210c0:	100d883a 	mov	r6,r2
   210c4:	180f883a 	mov	r7,r3
   210c8:	0023e240 	call	23e24 <__subdf3>
   210cc:	880d883a 	mov	r6,r17
   210d0:	800f883a 	mov	r7,r16
   210d4:	1009883a 	mov	r4,r2
   210d8:	180b883a 	mov	r5,r3
   210dc:	002370c0 	call	2370c <__muldf3>
   210e0:	d9000017 	ldw	r4,0(sp)
   210e4:	d9400117 	ldw	r5,4(sp)
   210e8:	a00f883a 	mov	r7,r20
   210ec:	000d883a 	mov	r6,zero
   210f0:	1023883a 	mov	r17,r2
   210f4:	1821883a 	mov	r16,r3
   210f8:	002370c0 	call	2370c <__muldf3>
   210fc:	8809883a 	mov	r4,r17
   21100:	800b883a 	mov	r5,r16
   21104:	100d883a 	mov	r6,r2
   21108:	180f883a 	mov	r7,r3
   2110c:	00223200 	call	22320 <__adddf3>
   21110:	d9000317 	ldw	r4,12(sp)
   21114:	d9400417 	ldw	r5,16(sp)
   21118:	100d883a 	mov	r6,r2
   2111c:	180f883a 	mov	r7,r3
   21120:	102f883a 	mov	r23,r2
   21124:	1823883a 	mov	r17,r3
   21128:	00223200 	call	22320 <__adddf3>
   2112c:	01cffbf4 	movhi	r7,16367
   21130:	39f1c244 	addi	r7,r7,-14583
   21134:	0009883a 	mov	r4,zero
   21138:	180b883a 	mov	r5,r3
   2113c:	01b80034 	movhi	r6,57344
   21140:	1821883a 	mov	r16,r3
   21144:	002370c0 	call	2370c <__muldf3>
   21148:	d9800317 	ldw	r6,12(sp)
   2114c:	d9c00417 	ldw	r7,16(sp)
   21150:	800b883a 	mov	r5,r16
   21154:	0009883a 	mov	r4,zero
   21158:	1825883a 	mov	r18,r3
   2115c:	d8800015 	stw	r2,0(sp)
   21160:	0023e240 	call	23e24 <__subdf3>
   21164:	b809883a 	mov	r4,r23
   21168:	880b883a 	mov	r5,r17
   2116c:	100d883a 	mov	r6,r2
   21170:	180f883a 	mov	r7,r3
   21174:	0023e240 	call	23e24 <__subdf3>
   21178:	01b70eb4 	movhi	r6,56378
   2117c:	01cffbf4 	movhi	r7,16367
   21180:	3180ff44 	addi	r6,r6,1021
   21184:	39f1c244 	addi	r7,r7,-14583
   21188:	1009883a 	mov	r4,r2
   2118c:	180b883a 	mov	r5,r3
   21190:	002370c0 	call	2370c <__muldf3>
   21194:	018516f4 	movhi	r6,5211
   21198:	01ef8fb4 	movhi	r7,48702
   2119c:	800b883a 	mov	r5,r16
   211a0:	31807d44 	addi	r6,r6,501
   211a4:	39cbf804 	addi	r7,r7,12256
   211a8:	0009883a 	mov	r4,zero
   211ac:	1029883a 	mov	r20,r2
   211b0:	1823883a 	mov	r17,r3
   211b4:	002370c0 	call	2370c <__muldf3>
   211b8:	a009883a 	mov	r4,r20
   211bc:	880b883a 	mov	r5,r17
   211c0:	100d883a 	mov	r6,r2
   211c4:	180f883a 	mov	r7,r3
   211c8:	00223200 	call	22320 <__adddf3>
   211cc:	da400817 	ldw	r9,32(sp)
   211d0:	da000a17 	ldw	r8,40(sp)
   211d4:	180b883a 	mov	r5,r3
   211d8:	480d883a 	mov	r6,r9
   211dc:	400f883a 	mov	r7,r8
   211e0:	1009883a 	mov	r4,r2
   211e4:	00223200 	call	22320 <__adddf3>
   211e8:	db000917 	ldw	r12,36(sp)
   211ec:	1029883a 	mov	r20,r2
   211f0:	1823883a 	mov	r17,r3
   211f4:	6009883a 	mov	r4,r12
   211f8:	00247a00 	call	247a0 <__floatsidf>
   211fc:	d9000017 	ldw	r4,0(sp)
   21200:	a00d883a 	mov	r6,r20
   21204:	880f883a 	mov	r7,r17
   21208:	900b883a 	mov	r5,r18
   2120c:	182f883a 	mov	r23,r3
   21210:	d8800115 	stw	r2,4(sp)
   21214:	00223200 	call	22320 <__adddf3>
   21218:	d9c00217 	ldw	r7,8(sp)
   2121c:	980d883a 	mov	r6,r19
   21220:	1009883a 	mov	r4,r2
   21224:	180b883a 	mov	r5,r3
   21228:	00223200 	call	22320 <__adddf3>
   2122c:	d9800117 	ldw	r6,4(sp)
   21230:	b80f883a 	mov	r7,r23
   21234:	1009883a 	mov	r4,r2
   21238:	180b883a 	mov	r5,r3
   2123c:	00223200 	call	22320 <__adddf3>
   21240:	d9800117 	ldw	r6,4(sp)
   21244:	b80f883a 	mov	r7,r23
   21248:	0009883a 	mov	r4,zero
   2124c:	180b883a 	mov	r5,r3
   21250:	1821883a 	mov	r16,r3
   21254:	0023e240 	call	23e24 <__subdf3>
   21258:	d9c00217 	ldw	r7,8(sp)
   2125c:	980d883a 	mov	r6,r19
   21260:	1009883a 	mov	r4,r2
   21264:	180b883a 	mov	r5,r3
   21268:	0023e240 	call	23e24 <__subdf3>
   2126c:	d9800017 	ldw	r6,0(sp)
   21270:	900f883a 	mov	r7,r18
   21274:	1009883a 	mov	r4,r2
   21278:	180b883a 	mov	r5,r3
   2127c:	0023e240 	call	23e24 <__subdf3>
   21280:	880b883a 	mov	r5,r17
   21284:	100d883a 	mov	r6,r2
   21288:	180f883a 	mov	r7,r3
   2128c:	a009883a 	mov	r4,r20
   21290:	0023e240 	call	23e24 <__subdf3>
   21294:	dac00b17 	ldw	r11,44(sp)
   21298:	aabfffc4 	addi	r10,r21,-1
   2129c:	1025883a 	mov	r18,r2
   212a0:	52d6b03a 	or	r11,r10,r11
   212a4:	1823883a 	mov	r17,r3
   212a8:	58015826 	beq	r11,zero,2180c <__ieee754_pow+0xe28>
   212ac:	04cffc34 	movhi	r19,16368
   212b0:	b009883a 	mov	r4,r22
   212b4:	000d883a 	mov	r6,zero
   212b8:	e00f883a 	mov	r7,fp
   212bc:	e00b883a 	mov	r5,fp
   212c0:	0023e240 	call	23e24 <__subdf3>
   212c4:	800f883a 	mov	r7,r16
   212c8:	000d883a 	mov	r6,zero
   212cc:	1009883a 	mov	r4,r2
   212d0:	180b883a 	mov	r5,r3
   212d4:	002370c0 	call	2370c <__muldf3>
   212d8:	b00d883a 	mov	r6,r22
   212dc:	9009883a 	mov	r4,r18
   212e0:	880b883a 	mov	r5,r17
   212e4:	e00f883a 	mov	r7,fp
   212e8:	1829883a 	mov	r20,r3
   212ec:	102b883a 	mov	r21,r2
   212f0:	002370c0 	call	2370c <__muldf3>
   212f4:	a00b883a 	mov	r5,r20
   212f8:	100d883a 	mov	r6,r2
   212fc:	180f883a 	mov	r7,r3
   21300:	a809883a 	mov	r4,r21
   21304:	00223200 	call	22320 <__adddf3>
   21308:	800b883a 	mov	r5,r16
   2130c:	000d883a 	mov	r6,zero
   21310:	e00f883a 	mov	r7,fp
   21314:	0009883a 	mov	r4,zero
   21318:	102d883a 	mov	r22,r2
   2131c:	1829883a 	mov	r20,r3
   21320:	002370c0 	call	2370c <__muldf3>
   21324:	100d883a 	mov	r6,r2
   21328:	180f883a 	mov	r7,r3
   2132c:	b009883a 	mov	r4,r22
   21330:	a00b883a 	mov	r5,r20
   21334:	1025883a 	mov	r18,r2
   21338:	1823883a 	mov	r17,r3
   2133c:	00223200 	call	22320 <__adddf3>
   21340:	102f883a 	mov	r23,r2
   21344:	00902434 	movhi	r2,16528
   21348:	10bfffc4 	addi	r2,r2,-1
   2134c:	1821883a 	mov	r16,r3
   21350:	9013883a 	mov	r9,r18
   21354:	8811883a 	mov	r8,r17
   21358:	10c1070e 	bge	r2,r3,21778 <__ieee754_pow+0xd94>
   2135c:	00afdc34 	movhi	r2,49008
   21360:	1885883a 	add	r2,r3,r2
   21364:	15c4b03a 	or	r2,r2,r23
   21368:	1001901e 	bne	r2,zero,219ac <__ieee754_pow+0xfc8>
   2136c:	01994b34 	movhi	r6,25900
   21370:	01cf25f4 	movhi	r7,15511
   21374:	31a0bf84 	addi	r6,r6,-32002
   21378:	39c551c4 	addi	r7,r7,5447
   2137c:	b009883a 	mov	r4,r22
   21380:	a00b883a 	mov	r5,r20
   21384:	00223200 	call	22320 <__adddf3>
   21388:	900d883a 	mov	r6,r18
   2138c:	880f883a 	mov	r7,r17
   21390:	b809883a 	mov	r4,r23
   21394:	800b883a 	mov	r5,r16
   21398:	1039883a 	mov	fp,r2
   2139c:	182b883a 	mov	r21,r3
   213a0:	0023e240 	call	23e24 <__subdf3>
   213a4:	100d883a 	mov	r6,r2
   213a8:	180f883a 	mov	r7,r3
   213ac:	e009883a 	mov	r4,fp
   213b0:	a80b883a 	mov	r5,r21
   213b4:	002353c0 	call	2353c <__gedf2>
   213b8:	00817c16 	blt	zero,r2,219ac <__ieee754_pow+0xfc8>
   213bc:	802b883a 	mov	r21,r16
   213c0:	a805d53a 	srai	r2,r21,20
   213c4:	00c00434 	movhi	r3,16
   213c8:	01000434 	movhi	r4,16
   213cc:	10bf0084 	addi	r2,r2,-1022
   213d0:	1885d83a 	sra	r2,r3,r2
   213d4:	213fffc4 	addi	r4,r4,-1
   213d8:	1405883a 	add	r2,r2,r16
   213dc:	1006907a 	slli	r3,r2,1
   213e0:	112a703a 	and	r21,r2,r4
   213e4:	ad400434 	orhi	r21,r21,16
   213e8:	1806d57a 	srli	r3,r3,21
   213ec:	18ff0044 	addi	r3,r3,-1023
   213f0:	20cfd83a 	sra	r7,r4,r3
   213f4:	01000504 	movi	r4,20
   213f8:	20c7c83a 	sub	r3,r4,r3
   213fc:	a8c7d83a 	sra	r3,r21,r3
   21400:	01ce303a 	nor	r7,zero,r7
   21404:	388e703a 	and	r7,r7,r2
   21408:	d8c00015 	stw	r3,0(sp)
   2140c:	80019016 	blt	r16,zero,21a50 <__ieee754_pow+0x106c>
   21410:	000d883a 	mov	r6,zero
   21414:	9009883a 	mov	r4,r18
   21418:	880b883a 	mov	r5,r17
   2141c:	0023e240 	call	23e24 <__subdf3>
   21420:	100d883a 	mov	r6,r2
   21424:	180f883a 	mov	r7,r3
   21428:	b009883a 	mov	r4,r22
   2142c:	a00b883a 	mov	r5,r20
   21430:	d8c00a15 	stw	r3,40(sp)
   21434:	d8800815 	stw	r2,32(sp)
   21438:	00223200 	call	22320 <__adddf3>
   2143c:	d8800017 	ldw	r2,0(sp)
   21440:	da000a17 	ldw	r8,40(sp)
   21444:	da400817 	ldw	r9,32(sp)
   21448:	1004953a 	slli	r2,r2,20
   2144c:	1821883a 	mov	r16,r3
   21450:	d8800215 	stw	r2,8(sp)
   21454:	01cff9b4 	movhi	r7,16358
   21458:	800b883a 	mov	r5,r16
   2145c:	39cb90c4 	addi	r7,r7,11843
   21460:	0009883a 	mov	r4,zero
   21464:	000d883a 	mov	r6,zero
   21468:	da000a15 	stw	r8,40(sp)
   2146c:	da400815 	stw	r9,32(sp)
   21470:	002370c0 	call	2370c <__muldf3>
   21474:	da400817 	ldw	r9,32(sp)
   21478:	da000a17 	ldw	r8,40(sp)
   2147c:	800b883a 	mov	r5,r16
   21480:	480d883a 	mov	r6,r9
   21484:	400f883a 	mov	r7,r8
   21488:	0009883a 	mov	r4,zero
   2148c:	1039883a 	mov	fp,r2
   21490:	182f883a 	mov	r23,r3
   21494:	0023e240 	call	23e24 <__subdf3>
   21498:	b009883a 	mov	r4,r22
   2149c:	a00b883a 	mov	r5,r20
   214a0:	100d883a 	mov	r6,r2
   214a4:	180f883a 	mov	r7,r3
   214a8:	0023e240 	call	23e24 <__subdf3>
   214ac:	01bfbeb4 	movhi	r6,65274
   214b0:	01cff9b4 	movhi	r7,16358
   214b4:	318e7bc4 	addi	r6,r6,14831
   214b8:	39cb9084 	addi	r7,r7,11842
   214bc:	1009883a 	mov	r4,r2
   214c0:	180b883a 	mov	r5,r3
   214c4:	002370c0 	call	2370c <__muldf3>
   214c8:	01832a34 	movhi	r6,3240
   214cc:	01ef8834 	movhi	r7,48672
   214d0:	800b883a 	mov	r5,r16
   214d4:	319b0e44 	addi	r6,r6,27705
   214d8:	39d71844 	addi	r7,r7,23649
   214dc:	0009883a 	mov	r4,zero
   214e0:	1029883a 	mov	r20,r2
   214e4:	1823883a 	mov	r17,r3
   214e8:	002370c0 	call	2370c <__muldf3>
   214ec:	a009883a 	mov	r4,r20
   214f0:	880b883a 	mov	r5,r17
   214f4:	100d883a 	mov	r6,r2
   214f8:	180f883a 	mov	r7,r3
   214fc:	00223200 	call	22320 <__adddf3>
   21500:	e009883a 	mov	r4,fp
   21504:	b80b883a 	mov	r5,r23
   21508:	100d883a 	mov	r6,r2
   2150c:	180f883a 	mov	r7,r3
   21510:	102d883a 	mov	r22,r2
   21514:	1829883a 	mov	r20,r3
   21518:	00223200 	call	22320 <__adddf3>
   2151c:	e00d883a 	mov	r6,fp
   21520:	b80f883a 	mov	r7,r23
   21524:	1009883a 	mov	r4,r2
   21528:	180b883a 	mov	r5,r3
   2152c:	1023883a 	mov	r17,r2
   21530:	1821883a 	mov	r16,r3
   21534:	0023e240 	call	23e24 <__subdf3>
   21538:	b009883a 	mov	r4,r22
   2153c:	a00b883a 	mov	r5,r20
   21540:	100d883a 	mov	r6,r2
   21544:	180f883a 	mov	r7,r3
   21548:	0023e240 	call	23e24 <__subdf3>
   2154c:	880d883a 	mov	r6,r17
   21550:	800f883a 	mov	r7,r16
   21554:	8809883a 	mov	r4,r17
   21558:	800b883a 	mov	r5,r16
   2155c:	1039883a 	mov	fp,r2
   21560:	182f883a 	mov	r23,r3
   21564:	002370c0 	call	2370c <__muldf3>
   21568:	019caff4 	movhi	r6,29375
   2156c:	01cf99b4 	movhi	r7,15974
   21570:	31a93404 	addi	r6,r6,-23344
   21574:	39cdda44 	addi	r7,r7,14185
   21578:	1009883a 	mov	r4,r2
   2157c:	180b883a 	mov	r5,r3
   21580:	102d883a 	mov	r22,r2
   21584:	1829883a 	mov	r20,r3
   21588:	002370c0 	call	2370c <__muldf3>
   2158c:	01b174b4 	movhi	r6,50642
   21590:	01cfaf34 	movhi	r7,16060
   21594:	319afc44 	addi	r6,r6,27633
   21598:	39ef5044 	addi	r7,r7,-17087
   2159c:	1009883a 	mov	r4,r2
   215a0:	180b883a 	mov	r5,r3
   215a4:	0023e240 	call	23e24 <__subdf3>
   215a8:	b00d883a 	mov	r6,r22
   215ac:	a00f883a 	mov	r7,r20
   215b0:	1009883a 	mov	r4,r2
   215b4:	180b883a 	mov	r5,r3
   215b8:	002370c0 	call	2370c <__muldf3>
   215bc:	01abc9b4 	movhi	r6,44838
   215c0:	01cfc474 	movhi	r7,16145
   215c4:	31b78b04 	addi	r6,r6,-8660
   215c8:	39d59a84 	addi	r7,r7,22122
   215cc:	1009883a 	mov	r4,r2
   215d0:	180b883a 	mov	r5,r3
   215d4:	00223200 	call	22320 <__adddf3>
   215d8:	b00d883a 	mov	r6,r22
   215dc:	a00f883a 	mov	r7,r20
   215e0:	1009883a 	mov	r4,r2
   215e4:	180b883a 	mov	r5,r3
   215e8:	002370c0 	call	2370c <__muldf3>
   215ec:	0185aff4 	movhi	r6,5823
   215f0:	01cfd9f4 	movhi	r7,16231
   215f4:	31af64c4 	addi	r6,r6,-17005
   215f8:	39f05b04 	addi	r7,r7,-16020
   215fc:	1009883a 	mov	r4,r2
   21600:	180b883a 	mov	r5,r3
   21604:	0023e240 	call	23e24 <__subdf3>
   21608:	b00d883a 	mov	r6,r22
   2160c:	a00f883a 	mov	r7,r20
   21610:	1009883a 	mov	r4,r2
   21614:	180b883a 	mov	r5,r3
   21618:	002370c0 	call	2370c <__muldf3>
   2161c:	01955574 	movhi	r6,21845
   21620:	01cff174 	movhi	r7,16325
   21624:	31954f84 	addi	r6,r6,21822
   21628:	39d55544 	addi	r7,r7,21845
   2162c:	1009883a 	mov	r4,r2
   21630:	180b883a 	mov	r5,r3
   21634:	00223200 	call	22320 <__adddf3>
   21638:	b00d883a 	mov	r6,r22
   2163c:	a00f883a 	mov	r7,r20
   21640:	1009883a 	mov	r4,r2
   21644:	180b883a 	mov	r5,r3
   21648:	002370c0 	call	2370c <__muldf3>
   2164c:	100d883a 	mov	r6,r2
   21650:	180f883a 	mov	r7,r3
   21654:	8809883a 	mov	r4,r17
   21658:	800b883a 	mov	r5,r16
   2165c:	0023e240 	call	23e24 <__subdf3>
   21660:	100d883a 	mov	r6,r2
   21664:	180f883a 	mov	r7,r3
   21668:	8809883a 	mov	r4,r17
   2166c:	800b883a 	mov	r5,r16
   21670:	102d883a 	mov	r22,r2
   21674:	1829883a 	mov	r20,r3
   21678:	002370c0 	call	2370c <__muldf3>
   2167c:	b009883a 	mov	r4,r22
   21680:	a00b883a 	mov	r5,r20
   21684:	000d883a 	mov	r6,zero
   21688:	01d00034 	movhi	r7,16384
   2168c:	1025883a 	mov	r18,r2
   21690:	182b883a 	mov	r21,r3
   21694:	0023e240 	call	23e24 <__subdf3>
   21698:	100d883a 	mov	r6,r2
   2169c:	180f883a 	mov	r7,r3
   216a0:	9009883a 	mov	r4,r18
   216a4:	a80b883a 	mov	r5,r21
   216a8:	0022bcc0 	call	22bcc <__divdf3>
   216ac:	e00d883a 	mov	r6,fp
   216b0:	b80f883a 	mov	r7,r23
   216b4:	8809883a 	mov	r4,r17
   216b8:	800b883a 	mov	r5,r16
   216bc:	102d883a 	mov	r22,r2
   216c0:	1829883a 	mov	r20,r3
   216c4:	002370c0 	call	2370c <__muldf3>
   216c8:	e00d883a 	mov	r6,fp
   216cc:	b80f883a 	mov	r7,r23
   216d0:	1009883a 	mov	r4,r2
   216d4:	180b883a 	mov	r5,r3
   216d8:	00223200 	call	22320 <__adddf3>
   216dc:	100d883a 	mov	r6,r2
   216e0:	180f883a 	mov	r7,r3
   216e4:	b009883a 	mov	r4,r22
   216e8:	a00b883a 	mov	r5,r20
   216ec:	0023e240 	call	23e24 <__subdf3>
   216f0:	880d883a 	mov	r6,r17
   216f4:	800f883a 	mov	r7,r16
   216f8:	1009883a 	mov	r4,r2
   216fc:	180b883a 	mov	r5,r3
   21700:	0023e240 	call	23e24 <__subdf3>
   21704:	0009883a 	mov	r4,zero
   21708:	014ffc34 	movhi	r5,16368
   2170c:	100d883a 	mov	r6,r2
   21710:	180f883a 	mov	r7,r3
   21714:	0023e240 	call	23e24 <__subdf3>
   21718:	d9000217 	ldw	r4,8(sp)
   2171c:	190b883a 	add	r5,r3,r4
   21720:	2809d53a 	srai	r4,r5,20
   21724:	0100cd0e 	bge	zero,r4,21a5c <__ieee754_pow+0x1078>
   21728:	1009883a 	mov	r4,r2
   2172c:	000d883a 	mov	r6,zero
   21730:	980f883a 	mov	r7,r19
   21734:	002370c0 	call	2370c <__muldf3>
   21738:	003ce606 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   2173c:	00b00434 	movhi	r2,49168
   21740:	8885883a 	add	r2,r17,r2
   21744:	1544b03a 	or	r2,r2,r21
   21748:	1000b326 	beq	r2,zero,21a18 <__ieee754_pow+0x1034>
   2174c:	00800044 	movi	r2,1
   21750:	a8bd181e 	bne	r21,r2,20bb4 <__alt_data_end+0xfffe0bb4>
   21754:	18e0003c 	xorhi	r3,r3,32768
   21758:	b805883a 	mov	r2,r23
   2175c:	003cdd06 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   21760:	800d883a 	mov	r6,r16
   21764:	980f883a 	mov	r7,r19
   21768:	8009883a 	mov	r4,r16
   2176c:	980b883a 	mov	r5,r19
   21770:	002370c0 	call	2370c <__muldf3>
   21774:	003cd706 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   21778:	05600034 	movhi	r21,32768
   2177c:	ad7fffc4 	addi	r21,r21,-1
   21780:	00902474 	movhi	r2,16529
   21784:	1d6a703a 	and	r21,r3,r21
   21788:	10b2ffc4 	addi	r2,r2,-13313
   2178c:	15409d0e 	bge	r2,r21,21a04 <__ieee754_pow+0x1020>
   21790:	008fdbf4 	movhi	r2,16239
   21794:	108d0004 	addi	r2,r2,13312
   21798:	1885883a 	add	r2,r3,r2
   2179c:	15c4b03a 	or	r2,r2,r23
   217a0:	10000b1e 	bne	r2,zero,217d0 <__ieee754_pow+0xdec>
   217a4:	900d883a 	mov	r6,r18
   217a8:	880f883a 	mov	r7,r17
   217ac:	b809883a 	mov	r4,r23
   217b0:	180b883a 	mov	r5,r3
   217b4:	0023e240 	call	23e24 <__subdf3>
   217b8:	100d883a 	mov	r6,r2
   217bc:	180f883a 	mov	r7,r3
   217c0:	b009883a 	mov	r4,r22
   217c4:	a00b883a 	mov	r5,r20
   217c8:	00236180 	call	23618 <__ledf2>
   217cc:	00befc16 	blt	zero,r2,213c0 <__alt_data_end+0xfffe13c0>
   217d0:	01b0be74 	movhi	r6,49913
   217d4:	01c06974 	movhi	r7,421
   217d8:	980b883a 	mov	r5,r19
   217dc:	31bcd644 	addi	r6,r6,-3239
   217e0:	39db87c4 	addi	r7,r7,28191
   217e4:	0009883a 	mov	r4,zero
   217e8:	002370c0 	call	2370c <__muldf3>
   217ec:	01b0be74 	movhi	r6,49913
   217f0:	01c06974 	movhi	r7,421
   217f4:	31bcd644 	addi	r6,r6,-3239
   217f8:	39db87c4 	addi	r7,r7,28191
   217fc:	1009883a 	mov	r4,r2
   21800:	180b883a 	mov	r5,r3
   21804:	002370c0 	call	2370c <__muldf3>
   21808:	003cb206 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   2180c:	04effc34 	movhi	r19,49136
   21810:	003ea706 	br	212b0 <__alt_data_end+0xfffe12b0>
   21814:	e03cdc0e 	bge	fp,zero,20b88 <__alt_data_end+0xfffe0b88>
   21818:	0005883a 	mov	r2,zero
   2181c:	e0e0003c 	xorhi	r3,fp,32768
   21820:	003cac06 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   21824:	0019883a 	mov	r12,zero
   21828:	003d3206 	br	20cf4 <__alt_data_end+0xfffe0cf4>
   2182c:	008ffc34 	movhi	r2,16368
   21830:	10bfff84 	addi	r2,r2,-2
   21834:	147cd30e 	bge	r2,r17,20b84 <__alt_data_end+0xfffe0b84>
   21838:	01cffc34 	movhi	r7,16368
   2183c:	3c7cea16 	blt	r7,r17,20be8 <__alt_data_end+0xfffe0be8>
   21840:	b809883a 	mov	r4,r23
   21844:	000d883a 	mov	r6,zero
   21848:	180b883a 	mov	r5,r3
   2184c:	dac00b15 	stw	r11,44(sp)
   21850:	0023e240 	call	23e24 <__subdf3>
   21854:	01cffdf4 	movhi	r7,16375
   21858:	39c551c4 	addi	r7,r7,5447
   2185c:	01980034 	movhi	r6,24576
   21860:	1009883a 	mov	r4,r2
   21864:	180b883a 	mov	r5,r3
   21868:	1023883a 	mov	r17,r2
   2186c:	1821883a 	mov	r16,r3
   21870:	002370c0 	call	2370c <__muldf3>
   21874:	01be17b4 	movhi	r6,63582
   21878:	01cf9574 	movhi	r7,15957
   2187c:	8809883a 	mov	r4,r17
   21880:	800b883a 	mov	r5,r16
   21884:	31b7d104 	addi	r6,r6,-8380
   21888:	39eb82c4 	addi	r7,r7,-20981
   2188c:	1027883a 	mov	r19,r2
   21890:	1825883a 	mov	r18,r3
   21894:	002370c0 	call	2370c <__muldf3>
   21898:	8809883a 	mov	r4,r17
   2189c:	800b883a 	mov	r5,r16
   218a0:	000d883a 	mov	r6,zero
   218a4:	01cff434 	movhi	r7,16336
   218a8:	1829883a 	mov	r20,r3
   218ac:	d8800a15 	stw	r2,40(sp)
   218b0:	002370c0 	call	2370c <__muldf3>
   218b4:	01155574 	movhi	r4,21845
   218b8:	014ff574 	movhi	r5,16341
   218bc:	100d883a 	mov	r6,r2
   218c0:	180f883a 	mov	r7,r3
   218c4:	21155544 	addi	r4,r4,21845
   218c8:	29555544 	addi	r5,r5,21845
   218cc:	0023e240 	call	23e24 <__subdf3>
   218d0:	880d883a 	mov	r6,r17
   218d4:	800f883a 	mov	r7,r16
   218d8:	1009883a 	mov	r4,r2
   218dc:	180b883a 	mov	r5,r3
   218e0:	002370c0 	call	2370c <__muldf3>
   218e4:	100d883a 	mov	r6,r2
   218e8:	180f883a 	mov	r7,r3
   218ec:	0009883a 	mov	r4,zero
   218f0:	014ff834 	movhi	r5,16352
   218f4:	0023e240 	call	23e24 <__subdf3>
   218f8:	880d883a 	mov	r6,r17
   218fc:	800f883a 	mov	r7,r16
   21900:	8809883a 	mov	r4,r17
   21904:	800b883a 	mov	r5,r16
   21908:	102f883a 	mov	r23,r2
   2190c:	d8c00815 	stw	r3,32(sp)
   21910:	002370c0 	call	2370c <__muldf3>
   21914:	da400817 	ldw	r9,32(sp)
   21918:	100d883a 	mov	r6,r2
   2191c:	180f883a 	mov	r7,r3
   21920:	480b883a 	mov	r5,r9
   21924:	b809883a 	mov	r4,r23
   21928:	002370c0 	call	2370c <__muldf3>
   2192c:	01994b34 	movhi	r6,25900
   21930:	01cffdf4 	movhi	r7,16375
   21934:	31a0bf84 	addi	r6,r6,-32002
   21938:	39c551c4 	addi	r7,r7,5447
   2193c:	1009883a 	mov	r4,r2
   21940:	180b883a 	mov	r5,r3
   21944:	002370c0 	call	2370c <__muldf3>
   21948:	da000a17 	ldw	r8,40(sp)
   2194c:	a00b883a 	mov	r5,r20
   21950:	100d883a 	mov	r6,r2
   21954:	4009883a 	mov	r4,r8
   21958:	180f883a 	mov	r7,r3
   2195c:	0023e240 	call	23e24 <__subdf3>
   21960:	100d883a 	mov	r6,r2
   21964:	180f883a 	mov	r7,r3
   21968:	9809883a 	mov	r4,r19
   2196c:	900b883a 	mov	r5,r18
   21970:	1029883a 	mov	r20,r2
   21974:	1823883a 	mov	r17,r3
   21978:	00223200 	call	22320 <__adddf3>
   2197c:	1821883a 	mov	r16,r3
   21980:	980d883a 	mov	r6,r19
   21984:	900f883a 	mov	r7,r18
   21988:	0009883a 	mov	r4,zero
   2198c:	180b883a 	mov	r5,r3
   21990:	003e3a06 	br	2127c <__alt_data_end+0xfffe127c>
   21994:	800d883a 	mov	r6,r16
   21998:	980f883a 	mov	r7,r19
   2199c:	0009883a 	mov	r4,zero
   219a0:	900b883a 	mov	r5,r18
   219a4:	0022bcc0 	call	22bcc <__divdf3>
   219a8:	003c4a06 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   219ac:	01a20034 	movhi	r6,34816
   219b0:	01df8e34 	movhi	r7,32312
   219b4:	980b883a 	mov	r5,r19
   219b8:	319d6704 	addi	r6,r6,30108
   219bc:	39f90f04 	addi	r7,r7,-7108
   219c0:	0009883a 	mov	r4,zero
   219c4:	002370c0 	call	2370c <__muldf3>
   219c8:	01a20034 	movhi	r6,34816
   219cc:	01df8e34 	movhi	r7,32312
   219d0:	319d6704 	addi	r6,r6,30108
   219d4:	39f90f04 	addi	r7,r7,-7108
   219d8:	1009883a 	mov	r4,r2
   219dc:	180b883a 	mov	r5,r3
   219e0:	002370c0 	call	2370c <__muldf3>
   219e4:	003c3b06 	br	20ad4 <__alt_data_end+0xfffe0ad4>
   219e8:	303c551e 	bne	r6,zero,20b40 <__alt_data_end+0xfffe0b40>
   219ec:	1885c83a 	sub	r2,r3,r2
   219f0:	9087d83a 	sra	r3,r18,r2
   219f4:	1884983a 	sll	r2,r3,r2
   219f8:	90801f26 	beq	r18,r2,21a78 <__ieee754_pow+0x1094>
   219fc:	002b883a 	mov	r21,zero
   21a00:	003c1806 	br	20a64 <__alt_data_end+0xfffe0a64>
   21a04:	008ff834 	movhi	r2,16352
   21a08:	157e6d16 	blt	r2,r21,213c0 <__alt_data_end+0xfffe13c0>
   21a0c:	d8000215 	stw	zero,8(sp)
   21a10:	d8000015 	stw	zero,0(sp)
   21a14:	003e8f06 	br	21454 <__alt_data_end+0xfffe1454>
   21a18:	b80d883a 	mov	r6,r23
   21a1c:	180f883a 	mov	r7,r3
   21a20:	003c9e06 	br	20c9c <__alt_data_end+0xfffe0c9c>
   21a24:	008ff8f4 	movhi	r2,16355
   21a28:	10ae00c4 	addi	r2,r2,-18429
   21a2c:	0250f434 	movhi	r9,17360
   21a30:	020f9374 	movhi	r8,15949
   21a34:	d8800215 	stw	r2,8(sp)
   21a38:	4a740184 	addi	r9,r9,-12282
   21a3c:	423f7ac4 	addi	r8,r8,-533
   21a40:	04d00034 	movhi	r19,16384
   21a44:	02800134 	movhi	r10,4
   21a48:	048ffe34 	movhi	r18,16376
   21a4c:	003cbf06 	br	20d4c <__alt_data_end+0xfffe0d4c>
   21a50:	00c9c83a 	sub	r4,zero,r3
   21a54:	d9000015 	stw	r4,0(sp)
   21a58:	003e6d06 	br	21410 <__alt_data_end+0xfffe1410>
   21a5c:	d9800017 	ldw	r6,0(sp)
   21a60:	1009883a 	mov	r4,r2
   21a64:	180b883a 	mov	r5,r3
   21a68:	0021fb40 	call	21fb4 <scalbn>
   21a6c:	1009883a 	mov	r4,r2
   21a70:	180b883a 	mov	r5,r3
   21a74:	003f2d06 	br	2172c <__alt_data_end+0xfffe172c>
   21a78:	18c0004c 	andi	r3,r3,1
   21a7c:	02800084 	movi	r10,2
   21a80:	50ebc83a 	sub	r21,r10,r3
   21a84:	003bf706 	br	20a64 <__alt_data_end+0xfffe0a64>

00021a88 <__ieee754_sqrt>:
   21a88:	defffd04 	addi	sp,sp,-12
   21a8c:	dc400115 	stw	r17,4(sp)
   21a90:	dc000015 	stw	r16,0(sp)
   21a94:	dfc00215 	stw	ra,8(sp)
   21a98:	28dffc2c 	andhi	r3,r5,32752
   21a9c:	009ffc34 	movhi	r2,32752
   21aa0:	2821883a 	mov	r16,r5
   21aa4:	2023883a 	mov	r17,r4
   21aa8:	200d883a 	mov	r6,r4
   21aac:	18807b26 	beq	r3,r2,21c9c <__ieee754_sqrt+0x214>
   21ab0:	01405f0e 	bge	zero,r5,21c30 <__ieee754_sqrt+0x1a8>
   21ab4:	2815d53a 	srai	r10,r5,20
   21ab8:	50006a26 	beq	r10,zero,21c64 <__ieee754_sqrt+0x1dc>
   21abc:	00c00434 	movhi	r3,16
   21ac0:	52bf0044 	addi	r10,r10,-1023
   21ac4:	18ffffc4 	addi	r3,r3,-1
   21ac8:	80c6703a 	and	r3,r16,r3
   21acc:	5080004c 	andi	r2,r10,1
   21ad0:	18c00434 	orhi	r3,r3,16
   21ad4:	1000511e 	bne	r2,zero,21c1c <__ieee754_sqrt+0x194>
   21ad8:	3004d7fa 	srli	r2,r6,31
   21adc:	5015d07a 	srai	r10,r10,1
   21ae0:	18c7883a 	add	r3,r3,r3
   21ae4:	10c5883a 	add	r2,r2,r3
   21ae8:	01400584 	movi	r5,22
   21aec:	3187883a 	add	r3,r6,r6
   21af0:	0013883a 	mov	r9,zero
   21af4:	000f883a 	mov	r7,zero
   21af8:	01000834 	movhi	r4,32
   21afc:	390d883a 	add	r6,r7,r4
   21b00:	1810d7fa 	srli	r8,r3,31
   21b04:	297fffc4 	addi	r5,r5,-1
   21b08:	11800316 	blt	r2,r6,21b18 <__ieee754_sqrt+0x90>
   21b0c:	1185c83a 	sub	r2,r2,r6
   21b10:	310f883a 	add	r7,r6,r4
   21b14:	4913883a 	add	r9,r9,r4
   21b18:	1085883a 	add	r2,r2,r2
   21b1c:	4085883a 	add	r2,r8,r2
   21b20:	18c7883a 	add	r3,r3,r3
   21b24:	2008d07a 	srli	r4,r4,1
   21b28:	283ff41e 	bne	r5,zero,21afc <__alt_data_end+0xfffe1afc>
   21b2c:	01200034 	movhi	r4,32768
   21b30:	01800804 	movi	r6,32
   21b34:	0011883a 	mov	r8,zero
   21b38:	0019883a 	mov	r12,zero
   21b3c:	201b883a 	mov	r13,r4
   21b40:	00000806 	br	21b64 <__ieee754_sqrt+0xdc>
   21b44:	38801726 	beq	r7,r2,21ba4 <__ieee754_sqrt+0x11c>
   21b48:	180ad7fa 	srli	r5,r3,31
   21b4c:	1085883a 	add	r2,r2,r2
   21b50:	31bfffc4 	addi	r6,r6,-1
   21b54:	2885883a 	add	r2,r5,r2
   21b58:	18c7883a 	add	r3,r3,r3
   21b5c:	2008d07a 	srli	r4,r4,1
   21b60:	30001726 	beq	r6,zero,21bc0 <__ieee754_sqrt+0x138>
   21b64:	230b883a 	add	r5,r4,r12
   21b68:	38bff60e 	bge	r7,r2,21b44 <__alt_data_end+0xfffe1b44>
   21b6c:	2ae0002c 	andhi	r11,r5,32768
   21b70:	2919883a 	add	r12,r5,r4
   21b74:	5b400826 	beq	r11,r13,21b98 <__ieee754_sqrt+0x110>
   21b78:	3817883a 	mov	r11,r7
   21b7c:	11c5c83a 	sub	r2,r2,r7
   21b80:	1940012e 	bgeu	r3,r5,21b88 <__ieee754_sqrt+0x100>
   21b84:	10bfffc4 	addi	r2,r2,-1
   21b88:	1947c83a 	sub	r3,r3,r5
   21b8c:	4111883a 	add	r8,r8,r4
   21b90:	580f883a 	mov	r7,r11
   21b94:	003fec06 	br	21b48 <__alt_data_end+0xfffe1b48>
   21b98:	603ff716 	blt	r12,zero,21b78 <__alt_data_end+0xfffe1b78>
   21b9c:	3ac00044 	addi	r11,r7,1
   21ba0:	003ff606 	br	21b7c <__alt_data_end+0xfffe1b7c>
   21ba4:	19401936 	bltu	r3,r5,21c0c <__ieee754_sqrt+0x184>
   21ba8:	2ae0002c 	andhi	r11,r5,32768
   21bac:	2919883a 	add	r12,r5,r4
   21bb0:	5b404526 	beq	r11,r13,21cc8 <__ieee754_sqrt+0x240>
   21bb4:	1017883a 	mov	r11,r2
   21bb8:	0005883a 	mov	r2,zero
   21bbc:	003ff206 	br	21b88 <__alt_data_end+0xfffe1b88>
   21bc0:	10c4b03a 	or	r2,r2,r3
   21bc4:	10000426 	beq	r2,zero,21bd8 <__ieee754_sqrt+0x150>
   21bc8:	00bfffc4 	movi	r2,-1
   21bcc:	40804026 	beq	r8,r2,21cd0 <__ieee754_sqrt+0x248>
   21bd0:	4080004c 	andi	r2,r8,1
   21bd4:	4091883a 	add	r8,r8,r2
   21bd8:	4004d07a 	srli	r2,r8,1
   21bdc:	4807d07a 	srai	r3,r9,1
   21be0:	010ff834 	movhi	r4,16352
   21be4:	4a40004c 	andi	r9,r9,1
   21be8:	1909883a 	add	r4,r3,r4
   21bec:	4800091e 	bne	r9,zero,21c14 <__ieee754_sqrt+0x18c>
   21bf0:	5006953a 	slli	r3,r10,20
   21bf4:	1907883a 	add	r3,r3,r4
   21bf8:	dfc00217 	ldw	ra,8(sp)
   21bfc:	dc400117 	ldw	r17,4(sp)
   21c00:	dc000017 	ldw	r16,0(sp)
   21c04:	dec00304 	addi	sp,sp,12
   21c08:	f800283a 	ret
   21c0c:	3805883a 	mov	r2,r7
   21c10:	003fcd06 	br	21b48 <__alt_data_end+0xfffe1b48>
   21c14:	10a00034 	orhi	r2,r2,32768
   21c18:	003ff506 	br	21bf0 <__alt_data_end+0xfffe1bf0>
   21c1c:	3004d7fa 	srli	r2,r6,31
   21c20:	18c7883a 	add	r3,r3,r3
   21c24:	318d883a 	add	r6,r6,r6
   21c28:	10c7883a 	add	r3,r2,r3
   21c2c:	003faa06 	br	21ad8 <__alt_data_end+0xfffe1ad8>
   21c30:	00a00034 	movhi	r2,32768
   21c34:	10bfffc4 	addi	r2,r2,-1
   21c38:	2884703a 	and	r2,r5,r2
   21c3c:	1104b03a 	or	r2,r2,r4
   21c40:	10001e26 	beq	r2,zero,21cbc <__ieee754_sqrt+0x234>
   21c44:	2800291e 	bne	r5,zero,21cec <__ieee754_sqrt+0x264>
   21c48:	0015883a 	mov	r10,zero
   21c4c:	3020d2fa 	srli	r16,r6,11
   21c50:	52bffac4 	addi	r10,r10,-21
   21c54:	300c957a 	slli	r6,r6,21
   21c58:	803ffc26 	beq	r16,zero,21c4c <__alt_data_end+0xfffe1c4c>
   21c5c:	8080042c 	andhi	r2,r16,16
   21c60:	10001e1e 	bne	r2,zero,21cdc <__ieee754_sqrt+0x254>
   21c64:	0005883a 	mov	r2,zero
   21c68:	00000106 	br	21c70 <__ieee754_sqrt+0x1e8>
   21c6c:	1805883a 	mov	r2,r3
   21c70:	8421883a 	add	r16,r16,r16
   21c74:	8100042c 	andhi	r4,r16,16
   21c78:	10c00044 	addi	r3,r2,1
   21c7c:	203ffb26 	beq	r4,zero,21c6c <__alt_data_end+0xfffe1c6c>
   21c80:	01000804 	movi	r4,32
   21c84:	20c9c83a 	sub	r4,r4,r3
   21c88:	3108d83a 	srl	r4,r6,r4
   21c8c:	5095c83a 	sub	r10,r10,r2
   21c90:	30cc983a 	sll	r6,r6,r3
   21c94:	2420b03a 	or	r16,r4,r16
   21c98:	003f8806 	br	21abc <__alt_data_end+0xfffe1abc>
   21c9c:	280f883a 	mov	r7,r5
   21ca0:	002370c0 	call	2370c <__muldf3>
   21ca4:	880d883a 	mov	r6,r17
   21ca8:	800f883a 	mov	r7,r16
   21cac:	1009883a 	mov	r4,r2
   21cb0:	180b883a 	mov	r5,r3
   21cb4:	00223200 	call	22320 <__adddf3>
   21cb8:	003fcf06 	br	21bf8 <__alt_data_end+0xfffe1bf8>
   21cbc:	2005883a 	mov	r2,r4
   21cc0:	2807883a 	mov	r3,r5
   21cc4:	003fcc06 	br	21bf8 <__alt_data_end+0xfffe1bf8>
   21cc8:	603fba16 	blt	r12,zero,21bb4 <__alt_data_end+0xfffe1bb4>
   21ccc:	003fb306 	br	21b9c <__alt_data_end+0xfffe1b9c>
   21cd0:	4a400044 	addi	r9,r9,1
   21cd4:	0005883a 	mov	r2,zero
   21cd8:	003fc006 	br	21bdc <__alt_data_end+0xfffe1bdc>
   21cdc:	01000804 	movi	r4,32
   21ce0:	00bfffc4 	movi	r2,-1
   21ce4:	0007883a 	mov	r3,zero
   21ce8:	003fe706 	br	21c88 <__alt_data_end+0xfffe1c88>
   21cec:	200d883a 	mov	r6,r4
   21cf0:	280f883a 	mov	r7,r5
   21cf4:	0023e240 	call	23e24 <__subdf3>
   21cf8:	100d883a 	mov	r6,r2
   21cfc:	180f883a 	mov	r7,r3
   21d00:	1009883a 	mov	r4,r2
   21d04:	180b883a 	mov	r5,r3
   21d08:	0022bcc0 	call	22bcc <__divdf3>
   21d0c:	003fba06 	br	21bf8 <__alt_data_end+0xfffe1bf8>

00021d10 <fabs>:
   21d10:	00e00034 	movhi	r3,32768
   21d14:	18ffffc4 	addi	r3,r3,-1
   21d18:	2005883a 	mov	r2,r4
   21d1c:	28c6703a 	and	r3,r5,r3
   21d20:	f800283a 	ret

00021d24 <finite>:
   21d24:	00a00034 	movhi	r2,32768
   21d28:	10bfffc4 	addi	r2,r2,-1
   21d2c:	288a703a 	and	r5,r5,r2
   21d30:	00e00434 	movhi	r3,32784
   21d34:	28c5883a 	add	r2,r5,r3
   21d38:	1004d7fa 	srli	r2,r2,31
   21d3c:	f800283a 	ret

00021d40 <__fpclassifyd>:
   21d40:	00a00034 	movhi	r2,32768
   21d44:	10bfffc4 	addi	r2,r2,-1
   21d48:	2884703a 	and	r2,r5,r2
   21d4c:	10000726 	beq	r2,zero,21d6c <__fpclassifyd+0x2c>
   21d50:	00fffc34 	movhi	r3,65520
   21d54:	019ff834 	movhi	r6,32736
   21d58:	28c7883a 	add	r3,r5,r3
   21d5c:	31bfffc4 	addi	r6,r6,-1
   21d60:	30c00536 	bltu	r6,r3,21d78 <__fpclassifyd+0x38>
   21d64:	00800104 	movi	r2,4
   21d68:	f800283a 	ret
   21d6c:	2000021e 	bne	r4,zero,21d78 <__fpclassifyd+0x38>
   21d70:	00800084 	movi	r2,2
   21d74:	f800283a 	ret
   21d78:	00dffc34 	movhi	r3,32752
   21d7c:	019ff834 	movhi	r6,32736
   21d80:	28cb883a 	add	r5,r5,r3
   21d84:	31bfffc4 	addi	r6,r6,-1
   21d88:	317ff62e 	bgeu	r6,r5,21d64 <__alt_data_end+0xfffe1d64>
   21d8c:	01400434 	movhi	r5,16
   21d90:	297fffc4 	addi	r5,r5,-1
   21d94:	28800236 	bltu	r5,r2,21da0 <__fpclassifyd+0x60>
   21d98:	008000c4 	movi	r2,3
   21d9c:	f800283a 	ret
   21da0:	10c00226 	beq	r2,r3,21dac <__fpclassifyd+0x6c>
   21da4:	0005883a 	mov	r2,zero
   21da8:	f800283a 	ret
   21dac:	2005003a 	cmpeq	r2,r4,zero
   21db0:	f800283a 	ret

00021db4 <matherr>:
   21db4:	0005883a 	mov	r2,zero
   21db8:	f800283a 	ret

00021dbc <nan>:
   21dbc:	0005883a 	mov	r2,zero
   21dc0:	00dffe34 	movhi	r3,32760
   21dc4:	f800283a 	ret

00021dc8 <rint>:
   21dc8:	2813d53a 	srai	r9,r5,20
   21dcc:	defff904 	addi	sp,sp,-28
   21dd0:	dc000215 	stw	r16,8(sp)
   21dd4:	4a41ffcc 	andi	r9,r9,2047
   21dd8:	dfc00615 	stw	ra,24(sp)
   21ddc:	dcc00515 	stw	r19,20(sp)
   21de0:	dc800415 	stw	r18,16(sp)
   21de4:	dc400315 	stw	r17,12(sp)
   21de8:	01c004c4 	movi	r7,19
   21dec:	49bf0044 	addi	r6,r9,-1023
   21df0:	2811883a 	mov	r8,r5
   21df4:	2005883a 	mov	r2,r4
   21df8:	2807883a 	mov	r3,r5
   21dfc:	2015883a 	mov	r10,r4
   21e00:	2820d7fa 	srli	r16,r5,31
   21e04:	39801316 	blt	r7,r6,21e54 <rint+0x8c>
   21e08:	30003d16 	blt	r6,zero,21f00 <rint+0x138>
   21e0c:	01000434 	movhi	r4,16
   21e10:	213fffc4 	addi	r4,r4,-1
   21e14:	2189d83a 	sra	r4,r4,r6
   21e18:	290a703a 	and	r5,r5,r4
   21e1c:	288ab03a 	or	r5,r5,r2
   21e20:	28001026 	beq	r5,zero,21e64 <rint+0x9c>
   21e24:	2008d07a 	srli	r4,r4,1
   21e28:	4104703a 	and	r2,r8,r4
   21e2c:	1294b03a 	or	r10,r2,r10
   21e30:	50005626 	beq	r10,zero,21f8c <rint+0x1c4>
   21e34:	31c05d26 	beq	r6,r7,21fac <rint+0x1e4>
   21e38:	0015883a 	mov	r10,zero
   21e3c:	00c00134 	movhi	r3,4
   21e40:	1987d83a 	sra	r3,r3,r6
   21e44:	0108303a 	nor	r4,zero,r4
   21e48:	2210703a 	and	r8,r4,r8
   21e4c:	40c6b03a 	or	r3,r8,r3
   21e50:	00001806 	br	21eb4 <rint+0xec>
   21e54:	01c00cc4 	movi	r7,51
   21e58:	3980090e 	bge	r7,r6,21e80 <rint+0xb8>
   21e5c:	01c10004 	movi	r7,1024
   21e60:	31c04e26 	beq	r6,r7,21f9c <rint+0x1d4>
   21e64:	dfc00617 	ldw	ra,24(sp)
   21e68:	dcc00517 	ldw	r19,20(sp)
   21e6c:	dc800417 	ldw	r18,16(sp)
   21e70:	dc400317 	ldw	r17,12(sp)
   21e74:	dc000217 	ldw	r16,8(sp)
   21e78:	dec00704 	addi	sp,sp,28
   21e7c:	f800283a 	ret
   21e80:	4a7efb44 	addi	r9,r9,-1043
   21e84:	013fffc4 	movi	r4,-1
   21e88:	2248d83a 	srl	r4,r4,r9
   21e8c:	110a703a 	and	r5,r2,r4
   21e90:	28004026 	beq	r5,zero,21f94 <rint+0x1cc>
   21e94:	2008d07a 	srli	r4,r4,1
   21e98:	1104703a 	and	r2,r2,r4
   21e9c:	10000526 	beq	r2,zero,21eb4 <rint+0xec>
   21ea0:	00900034 	movhi	r2,16384
   21ea4:	1253d83a 	sra	r9,r2,r9
   21ea8:	0108303a 	nor	r4,zero,r4
   21eac:	2294703a 	and	r10,r4,r10
   21eb0:	4a94b03a 	or	r10,r9,r10
   21eb4:	802090fa 	slli	r16,r16,3
   21eb8:	180b883a 	mov	r5,r3
   21ebc:	00c000f4 	movhi	r3,3
   21ec0:	18c4a804 	addi	r3,r3,4768
   21ec4:	1c21883a 	add	r16,r3,r16
   21ec8:	84400017 	ldw	r17,0(r16)
   21ecc:	84000117 	ldw	r16,4(r16)
   21ed0:	5009883a 	mov	r4,r10
   21ed4:	880d883a 	mov	r6,r17
   21ed8:	800f883a 	mov	r7,r16
   21edc:	00223200 	call	22320 <__adddf3>
   21ee0:	d8800015 	stw	r2,0(sp)
   21ee4:	d8c00115 	stw	r3,4(sp)
   21ee8:	d9000017 	ldw	r4,0(sp)
   21eec:	d9400117 	ldw	r5,4(sp)
   21ef0:	880d883a 	mov	r6,r17
   21ef4:	800f883a 	mov	r7,r16
   21ef8:	0023e240 	call	23e24 <__subdf3>
   21efc:	003fd906 	br	21e64 <__alt_data_end+0xfffe1e64>
   21f00:	04600034 	movhi	r17,32768
   21f04:	8c7fffc4 	addi	r17,r17,-1
   21f08:	2c46703a 	and	r3,r5,r17
   21f0c:	1906b03a 	or	r3,r3,r4
   21f10:	18002026 	beq	r3,zero,21f94 <rint+0x1cc>
   21f14:	01800434 	movhi	r6,16
   21f18:	31bfffc4 	addi	r6,r6,-1
   21f1c:	298c703a 	and	r6,r5,r6
   21f20:	3104b03a 	or	r2,r6,r4
   21f24:	008bc83a 	sub	r5,zero,r2
   21f28:	800690fa 	slli	r3,r16,3
   21f2c:	2884b03a 	or	r2,r5,r2
   21f30:	014000f4 	movhi	r5,3
   21f34:	2944a804 	addi	r5,r5,4768
   21f38:	28c7883a 	add	r3,r5,r3
   21f3c:	1004d33a 	srli	r2,r2,12
   21f40:	1cc00017 	ldw	r19,0(r3)
   21f44:	1c800117 	ldw	r18,4(r3)
   21f48:	417fffac 	andhi	r5,r8,65534
   21f4c:	1080022c 	andhi	r2,r2,8
   21f50:	980d883a 	mov	r6,r19
   21f54:	900f883a 	mov	r7,r18
   21f58:	114ab03a 	or	r5,r2,r5
   21f5c:	00223200 	call	22320 <__adddf3>
   21f60:	d8800015 	stw	r2,0(sp)
   21f64:	d8c00115 	stw	r3,4(sp)
   21f68:	d9000017 	ldw	r4,0(sp)
   21f6c:	d9400117 	ldw	r5,4(sp)
   21f70:	980d883a 	mov	r6,r19
   21f74:	900f883a 	mov	r7,r18
   21f78:	0023e240 	call	23e24 <__subdf3>
   21f7c:	800897fa 	slli	r4,r16,31
   21f80:	1c46703a 	and	r3,r3,r17
   21f84:	1906b03a 	or	r3,r3,r4
   21f88:	003fb606 	br	21e64 <__alt_data_end+0xfffe1e64>
   21f8c:	0015883a 	mov	r10,zero
   21f90:	003fc806 	br	21eb4 <__alt_data_end+0xfffe1eb4>
   21f94:	4007883a 	mov	r3,r8
   21f98:	003fb206 	br	21e64 <__alt_data_end+0xfffe1e64>
   21f9c:	200d883a 	mov	r6,r4
   21fa0:	280f883a 	mov	r7,r5
   21fa4:	00223200 	call	22320 <__adddf3>
   21fa8:	003fae06 	br	21e64 <__alt_data_end+0xfffe1e64>
   21fac:	02a00034 	movhi	r10,32768
   21fb0:	003fa206 	br	21e3c <__alt_data_end+0xfffe1e3c>

00021fb4 <scalbn>:
   21fb4:	2a1ffc2c 	andhi	r8,r5,32752
   21fb8:	4011d53a 	srai	r8,r8,20
   21fbc:	defffe04 	addi	sp,sp,-8
   21fc0:	dc000015 	stw	r16,0(sp)
   21fc4:	dfc00115 	stw	ra,4(sp)
   21fc8:	280f883a 	mov	r7,r5
   21fcc:	2015883a 	mov	r10,r4
   21fd0:	3021883a 	mov	r16,r6
   21fd4:	40001e1e 	bne	r8,zero,22050 <scalbn+0x9c>
   21fd8:	00a00034 	movhi	r2,32768
   21fdc:	10bfffc4 	addi	r2,r2,-1
   21fe0:	2884703a 	and	r2,r5,r2
   21fe4:	1104b03a 	or	r2,r2,r4
   21fe8:	10002226 	beq	r2,zero,22074 <scalbn+0xc0>
   21fec:	01d0d434 	movhi	r7,17232
   21ff0:	000d883a 	mov	r6,zero
   21ff4:	002370c0 	call	2370c <__muldf3>
   21ff8:	013ffff4 	movhi	r4,65535
   21ffc:	210f2c04 	addi	r4,r4,15536
   22000:	1015883a 	mov	r10,r2
   22004:	180f883a 	mov	r7,r3
   22008:	81002a16 	blt	r16,r4,220b4 <scalbn+0x100>
   2200c:	191ffc2c 	andhi	r4,r3,32752
   22010:	2009d53a 	srai	r4,r4,20
   22014:	223ff284 	addi	r8,r4,-54
   22018:	8211883a 	add	r8,r16,r8
   2201c:	0081ff84 	movi	r2,2046
   22020:	12002f16 	blt	r2,r8,220e0 <scalbn+0x12c>
   22024:	0200190e 	bge	zero,r8,2208c <scalbn+0xd8>
   22028:	4010953a 	slli	r8,r8,20
   2202c:	01600434 	movhi	r5,32784
   22030:	297fffc4 	addi	r5,r5,-1
   22034:	194e703a 	and	r7,r3,r5
   22038:	5005883a 	mov	r2,r10
   2203c:	3a06b03a 	or	r3,r7,r8
   22040:	dfc00117 	ldw	ra,4(sp)
   22044:	dc000017 	ldw	r16,0(sp)
   22048:	dec00204 	addi	sp,sp,8
   2204c:	f800283a 	ret
   22050:	0081ffc4 	movi	r2,2047
   22054:	2807883a 	mov	r3,r5
   22058:	40bfef1e 	bne	r8,r2,22018 <__alt_data_end+0xfffe2018>
   2205c:	200d883a 	mov	r6,r4
   22060:	00223200 	call	22320 <__adddf3>
   22064:	dfc00117 	ldw	ra,4(sp)
   22068:	dc000017 	ldw	r16,0(sp)
   2206c:	dec00204 	addi	sp,sp,8
   22070:	f800283a 	ret
   22074:	2005883a 	mov	r2,r4
   22078:	2807883a 	mov	r3,r5
   2207c:	dfc00117 	ldw	ra,4(sp)
   22080:	dc000017 	ldw	r16,0(sp)
   22084:	dec00204 	addi	sp,sp,8
   22088:	f800283a 	ret
   2208c:	00bff2c4 	movi	r2,-53
   22090:	4080240e 	bge	r8,r2,22124 <scalbn+0x170>
   22094:	00b0d414 	movui	r2,50000
   22098:	14001116 	blt	r2,r16,220e0 <scalbn+0x12c>
   2209c:	0130be74 	movhi	r4,49913
   220a0:	01406974 	movhi	r5,421
   220a4:	213cd644 	addi	r4,r4,-3239
   220a8:	295b87c4 	addi	r5,r5,28191
   220ac:	500d883a 	mov	r6,r10
   220b0:	00221500 	call	22150 <copysign>
   220b4:	01b0be74 	movhi	r6,49913
   220b8:	01c06974 	movhi	r7,421
   220bc:	31bcd644 	addi	r6,r6,-3239
   220c0:	39db87c4 	addi	r7,r7,28191
   220c4:	1009883a 	mov	r4,r2
   220c8:	180b883a 	mov	r5,r3
   220cc:	002370c0 	call	2370c <__muldf3>
   220d0:	dfc00117 	ldw	ra,4(sp)
   220d4:	dc000017 	ldw	r16,0(sp)
   220d8:	dec00204 	addi	sp,sp,8
   220dc:	f800283a 	ret
   220e0:	01220034 	movhi	r4,34816
   220e4:	015f8e34 	movhi	r5,32312
   220e8:	500d883a 	mov	r6,r10
   220ec:	211d6704 	addi	r4,r4,30108
   220f0:	29790f04 	addi	r5,r5,-7108
   220f4:	00221500 	call	22150 <copysign>
   220f8:	01a20034 	movhi	r6,34816
   220fc:	01df8e34 	movhi	r7,32312
   22100:	319d6704 	addi	r6,r6,30108
   22104:	39f90f04 	addi	r7,r7,-7108
   22108:	1009883a 	mov	r4,r2
   2210c:	180b883a 	mov	r5,r3
   22110:	002370c0 	call	2370c <__muldf3>
   22114:	dfc00117 	ldw	ra,4(sp)
   22118:	dc000017 	ldw	r16,0(sp)
   2211c:	dec00204 	addi	sp,sp,8
   22120:	f800283a 	ret
   22124:	42000d84 	addi	r8,r8,54
   22128:	4012953a 	slli	r9,r8,20
   2212c:	01e00434 	movhi	r7,32784
   22130:	39ffffc4 	addi	r7,r7,-1
   22134:	19ca703a 	and	r5,r3,r7
   22138:	000d883a 	mov	r6,zero
   2213c:	01cf2434 	movhi	r7,15504
   22140:	5009883a 	mov	r4,r10
   22144:	494ab03a 	or	r5,r9,r5
   22148:	002370c0 	call	2370c <__muldf3>
   2214c:	003fbc06 	br	22040 <__alt_data_end+0xfffe2040>

00022150 <copysign>:
   22150:	2005883a 	mov	r2,r4
   22154:	01200034 	movhi	r4,32768
   22158:	213fffc4 	addi	r4,r4,-1
   2215c:	38e0002c 	andhi	r3,r7,32768
   22160:	290a703a 	and	r5,r5,r4
   22164:	28c6b03a 	or	r3,r5,r3
   22168:	f800283a 	ret

0002216c <__divsi3>:
   2216c:	20001b16 	blt	r4,zero,221dc <__divsi3+0x70>
   22170:	000f883a 	mov	r7,zero
   22174:	28001616 	blt	r5,zero,221d0 <__divsi3+0x64>
   22178:	200d883a 	mov	r6,r4
   2217c:	29001a2e 	bgeu	r5,r4,221e8 <__divsi3+0x7c>
   22180:	00800804 	movi	r2,32
   22184:	00c00044 	movi	r3,1
   22188:	00000106 	br	22190 <__divsi3+0x24>
   2218c:	10000d26 	beq	r2,zero,221c4 <__divsi3+0x58>
   22190:	294b883a 	add	r5,r5,r5
   22194:	10bfffc4 	addi	r2,r2,-1
   22198:	18c7883a 	add	r3,r3,r3
   2219c:	293ffb36 	bltu	r5,r4,2218c <__alt_data_end+0xfffe218c>
   221a0:	0005883a 	mov	r2,zero
   221a4:	18000726 	beq	r3,zero,221c4 <__divsi3+0x58>
   221a8:	0005883a 	mov	r2,zero
   221ac:	31400236 	bltu	r6,r5,221b8 <__divsi3+0x4c>
   221b0:	314dc83a 	sub	r6,r6,r5
   221b4:	10c4b03a 	or	r2,r2,r3
   221b8:	1806d07a 	srli	r3,r3,1
   221bc:	280ad07a 	srli	r5,r5,1
   221c0:	183ffa1e 	bne	r3,zero,221ac <__alt_data_end+0xfffe21ac>
   221c4:	38000126 	beq	r7,zero,221cc <__divsi3+0x60>
   221c8:	0085c83a 	sub	r2,zero,r2
   221cc:	f800283a 	ret
   221d0:	014bc83a 	sub	r5,zero,r5
   221d4:	39c0005c 	xori	r7,r7,1
   221d8:	003fe706 	br	22178 <__alt_data_end+0xfffe2178>
   221dc:	0109c83a 	sub	r4,zero,r4
   221e0:	01c00044 	movi	r7,1
   221e4:	003fe306 	br	22174 <__alt_data_end+0xfffe2174>
   221e8:	00c00044 	movi	r3,1
   221ec:	003fee06 	br	221a8 <__alt_data_end+0xfffe21a8>

000221f0 <__modsi3>:
   221f0:	20001716 	blt	r4,zero,22250 <__modsi3+0x60>
   221f4:	000f883a 	mov	r7,zero
   221f8:	2005883a 	mov	r2,r4
   221fc:	28001216 	blt	r5,zero,22248 <__modsi3+0x58>
   22200:	2900162e 	bgeu	r5,r4,2225c <__modsi3+0x6c>
   22204:	01800804 	movi	r6,32
   22208:	00c00044 	movi	r3,1
   2220c:	00000106 	br	22214 <__modsi3+0x24>
   22210:	30000a26 	beq	r6,zero,2223c <__modsi3+0x4c>
   22214:	294b883a 	add	r5,r5,r5
   22218:	31bfffc4 	addi	r6,r6,-1
   2221c:	18c7883a 	add	r3,r3,r3
   22220:	293ffb36 	bltu	r5,r4,22210 <__alt_data_end+0xfffe2210>
   22224:	18000526 	beq	r3,zero,2223c <__modsi3+0x4c>
   22228:	1806d07a 	srli	r3,r3,1
   2222c:	11400136 	bltu	r2,r5,22234 <__modsi3+0x44>
   22230:	1145c83a 	sub	r2,r2,r5
   22234:	280ad07a 	srli	r5,r5,1
   22238:	183ffb1e 	bne	r3,zero,22228 <__alt_data_end+0xfffe2228>
   2223c:	38000126 	beq	r7,zero,22244 <__modsi3+0x54>
   22240:	0085c83a 	sub	r2,zero,r2
   22244:	f800283a 	ret
   22248:	014bc83a 	sub	r5,zero,r5
   2224c:	003fec06 	br	22200 <__alt_data_end+0xfffe2200>
   22250:	0109c83a 	sub	r4,zero,r4
   22254:	01c00044 	movi	r7,1
   22258:	003fe706 	br	221f8 <__alt_data_end+0xfffe21f8>
   2225c:	00c00044 	movi	r3,1
   22260:	003ff106 	br	22228 <__alt_data_end+0xfffe2228>

00022264 <__udivsi3>:
   22264:	200d883a 	mov	r6,r4
   22268:	2900152e 	bgeu	r5,r4,222c0 <__udivsi3+0x5c>
   2226c:	28001416 	blt	r5,zero,222c0 <__udivsi3+0x5c>
   22270:	00800804 	movi	r2,32
   22274:	00c00044 	movi	r3,1
   22278:	00000206 	br	22284 <__udivsi3+0x20>
   2227c:	10000e26 	beq	r2,zero,222b8 <__udivsi3+0x54>
   22280:	28000516 	blt	r5,zero,22298 <__udivsi3+0x34>
   22284:	294b883a 	add	r5,r5,r5
   22288:	10bfffc4 	addi	r2,r2,-1
   2228c:	18c7883a 	add	r3,r3,r3
   22290:	293ffa36 	bltu	r5,r4,2227c <__alt_data_end+0xfffe227c>
   22294:	18000826 	beq	r3,zero,222b8 <__udivsi3+0x54>
   22298:	0005883a 	mov	r2,zero
   2229c:	31400236 	bltu	r6,r5,222a8 <__udivsi3+0x44>
   222a0:	314dc83a 	sub	r6,r6,r5
   222a4:	10c4b03a 	or	r2,r2,r3
   222a8:	1806d07a 	srli	r3,r3,1
   222ac:	280ad07a 	srli	r5,r5,1
   222b0:	183ffa1e 	bne	r3,zero,2229c <__alt_data_end+0xfffe229c>
   222b4:	f800283a 	ret
   222b8:	0005883a 	mov	r2,zero
   222bc:	f800283a 	ret
   222c0:	00c00044 	movi	r3,1
   222c4:	003ff406 	br	22298 <__alt_data_end+0xfffe2298>

000222c8 <__umodsi3>:
   222c8:	2005883a 	mov	r2,r4
   222cc:	2900122e 	bgeu	r5,r4,22318 <__umodsi3+0x50>
   222d0:	28001116 	blt	r5,zero,22318 <__umodsi3+0x50>
   222d4:	01800804 	movi	r6,32
   222d8:	00c00044 	movi	r3,1
   222dc:	00000206 	br	222e8 <__umodsi3+0x20>
   222e0:	30000c26 	beq	r6,zero,22314 <__umodsi3+0x4c>
   222e4:	28000516 	blt	r5,zero,222fc <__umodsi3+0x34>
   222e8:	294b883a 	add	r5,r5,r5
   222ec:	31bfffc4 	addi	r6,r6,-1
   222f0:	18c7883a 	add	r3,r3,r3
   222f4:	293ffa36 	bltu	r5,r4,222e0 <__alt_data_end+0xfffe22e0>
   222f8:	18000626 	beq	r3,zero,22314 <__umodsi3+0x4c>
   222fc:	1806d07a 	srli	r3,r3,1
   22300:	11400136 	bltu	r2,r5,22308 <__umodsi3+0x40>
   22304:	1145c83a 	sub	r2,r2,r5
   22308:	280ad07a 	srli	r5,r5,1
   2230c:	183ffb1e 	bne	r3,zero,222fc <__alt_data_end+0xfffe22fc>
   22310:	f800283a 	ret
   22314:	f800283a 	ret
   22318:	00c00044 	movi	r3,1
   2231c:	003ff706 	br	222fc <__alt_data_end+0xfffe22fc>

00022320 <__adddf3>:
   22320:	02c00434 	movhi	r11,16
   22324:	5affffc4 	addi	r11,r11,-1
   22328:	2806d7fa 	srli	r3,r5,31
   2232c:	2ad4703a 	and	r10,r5,r11
   22330:	3ad2703a 	and	r9,r7,r11
   22334:	3804d53a 	srli	r2,r7,20
   22338:	3018d77a 	srli	r12,r6,29
   2233c:	280ad53a 	srli	r5,r5,20
   22340:	501490fa 	slli	r10,r10,3
   22344:	2010d77a 	srli	r8,r4,29
   22348:	481290fa 	slli	r9,r9,3
   2234c:	380ed7fa 	srli	r7,r7,31
   22350:	defffb04 	addi	sp,sp,-20
   22354:	dc800215 	stw	r18,8(sp)
   22358:	dc400115 	stw	r17,4(sp)
   2235c:	dc000015 	stw	r16,0(sp)
   22360:	dfc00415 	stw	ra,16(sp)
   22364:	dcc00315 	stw	r19,12(sp)
   22368:	1c803fcc 	andi	r18,r3,255
   2236c:	2c01ffcc 	andi	r16,r5,2047
   22370:	5210b03a 	or	r8,r10,r8
   22374:	202290fa 	slli	r17,r4,3
   22378:	1081ffcc 	andi	r2,r2,2047
   2237c:	4b12b03a 	or	r9,r9,r12
   22380:	300c90fa 	slli	r6,r6,3
   22384:	91c07526 	beq	r18,r7,2255c <__adddf3+0x23c>
   22388:	8087c83a 	sub	r3,r16,r2
   2238c:	00c0ab0e 	bge	zero,r3,2263c <__adddf3+0x31c>
   22390:	10002a1e 	bne	r2,zero,2243c <__adddf3+0x11c>
   22394:	4984b03a 	or	r2,r9,r6
   22398:	1000961e 	bne	r2,zero,225f4 <__adddf3+0x2d4>
   2239c:	888001cc 	andi	r2,r17,7
   223a0:	10000726 	beq	r2,zero,223c0 <__adddf3+0xa0>
   223a4:	888003cc 	andi	r2,r17,15
   223a8:	00c00104 	movi	r3,4
   223ac:	10c00426 	beq	r2,r3,223c0 <__adddf3+0xa0>
   223b0:	88c7883a 	add	r3,r17,r3
   223b4:	1c63803a 	cmpltu	r17,r3,r17
   223b8:	4451883a 	add	r8,r8,r17
   223bc:	1823883a 	mov	r17,r3
   223c0:	4080202c 	andhi	r2,r8,128
   223c4:	10005926 	beq	r2,zero,2252c <__adddf3+0x20c>
   223c8:	84000044 	addi	r16,r16,1
   223cc:	0081ffc4 	movi	r2,2047
   223d0:	8080ba26 	beq	r16,r2,226bc <__adddf3+0x39c>
   223d4:	00bfe034 	movhi	r2,65408
   223d8:	10bfffc4 	addi	r2,r2,-1
   223dc:	4090703a 	and	r8,r8,r2
   223e0:	4004977a 	slli	r2,r8,29
   223e4:	4010927a 	slli	r8,r8,9
   223e8:	8822d0fa 	srli	r17,r17,3
   223ec:	8401ffcc 	andi	r16,r16,2047
   223f0:	4010d33a 	srli	r8,r8,12
   223f4:	9007883a 	mov	r3,r18
   223f8:	1444b03a 	or	r2,r2,r17
   223fc:	8401ffcc 	andi	r16,r16,2047
   22400:	8020953a 	slli	r16,r16,20
   22404:	18c03fcc 	andi	r3,r3,255
   22408:	01000434 	movhi	r4,16
   2240c:	213fffc4 	addi	r4,r4,-1
   22410:	180697fa 	slli	r3,r3,31
   22414:	4110703a 	and	r8,r8,r4
   22418:	4410b03a 	or	r8,r8,r16
   2241c:	40c6b03a 	or	r3,r8,r3
   22420:	dfc00417 	ldw	ra,16(sp)
   22424:	dcc00317 	ldw	r19,12(sp)
   22428:	dc800217 	ldw	r18,8(sp)
   2242c:	dc400117 	ldw	r17,4(sp)
   22430:	dc000017 	ldw	r16,0(sp)
   22434:	dec00504 	addi	sp,sp,20
   22438:	f800283a 	ret
   2243c:	0081ffc4 	movi	r2,2047
   22440:	80bfd626 	beq	r16,r2,2239c <__alt_data_end+0xfffe239c>
   22444:	4a402034 	orhi	r9,r9,128
   22448:	00800e04 	movi	r2,56
   2244c:	10c09f16 	blt	r2,r3,226cc <__adddf3+0x3ac>
   22450:	008007c4 	movi	r2,31
   22454:	10c0c216 	blt	r2,r3,22760 <__adddf3+0x440>
   22458:	00800804 	movi	r2,32
   2245c:	10c5c83a 	sub	r2,r2,r3
   22460:	488a983a 	sll	r5,r9,r2
   22464:	30c8d83a 	srl	r4,r6,r3
   22468:	3084983a 	sll	r2,r6,r2
   2246c:	48c6d83a 	srl	r3,r9,r3
   22470:	290cb03a 	or	r6,r5,r4
   22474:	1004c03a 	cmpne	r2,r2,zero
   22478:	308cb03a 	or	r6,r6,r2
   2247c:	898dc83a 	sub	r6,r17,r6
   22480:	89a3803a 	cmpltu	r17,r17,r6
   22484:	40d1c83a 	sub	r8,r8,r3
   22488:	4451c83a 	sub	r8,r8,r17
   2248c:	3023883a 	mov	r17,r6
   22490:	4080202c 	andhi	r2,r8,128
   22494:	10002326 	beq	r2,zero,22524 <__adddf3+0x204>
   22498:	04c02034 	movhi	r19,128
   2249c:	9cffffc4 	addi	r19,r19,-1
   224a0:	44e6703a 	and	r19,r8,r19
   224a4:	98007626 	beq	r19,zero,22680 <__adddf3+0x360>
   224a8:	9809883a 	mov	r4,r19
   224ac:	002487c0 	call	2487c <__clzsi2>
   224b0:	10fffe04 	addi	r3,r2,-8
   224b4:	010007c4 	movi	r4,31
   224b8:	20c07716 	blt	r4,r3,22698 <__adddf3+0x378>
   224bc:	00800804 	movi	r2,32
   224c0:	10c5c83a 	sub	r2,r2,r3
   224c4:	8884d83a 	srl	r2,r17,r2
   224c8:	98d0983a 	sll	r8,r19,r3
   224cc:	88e2983a 	sll	r17,r17,r3
   224d0:	1204b03a 	or	r2,r2,r8
   224d4:	1c007416 	blt	r3,r16,226a8 <__adddf3+0x388>
   224d8:	1c21c83a 	sub	r16,r3,r16
   224dc:	82000044 	addi	r8,r16,1
   224e0:	00c007c4 	movi	r3,31
   224e4:	1a009116 	blt	r3,r8,2272c <__adddf3+0x40c>
   224e8:	00c00804 	movi	r3,32
   224ec:	1a07c83a 	sub	r3,r3,r8
   224f0:	8a08d83a 	srl	r4,r17,r8
   224f4:	88e2983a 	sll	r17,r17,r3
   224f8:	10c6983a 	sll	r3,r2,r3
   224fc:	1210d83a 	srl	r8,r2,r8
   22500:	8804c03a 	cmpne	r2,r17,zero
   22504:	1906b03a 	or	r3,r3,r4
   22508:	18a2b03a 	or	r17,r3,r2
   2250c:	0021883a 	mov	r16,zero
   22510:	003fa206 	br	2239c <__alt_data_end+0xfffe239c>
   22514:	1890b03a 	or	r8,r3,r2
   22518:	40017d26 	beq	r8,zero,22b10 <__adddf3+0x7f0>
   2251c:	1011883a 	mov	r8,r2
   22520:	1823883a 	mov	r17,r3
   22524:	888001cc 	andi	r2,r17,7
   22528:	103f9e1e 	bne	r2,zero,223a4 <__alt_data_end+0xfffe23a4>
   2252c:	4004977a 	slli	r2,r8,29
   22530:	8822d0fa 	srli	r17,r17,3
   22534:	4010d0fa 	srli	r8,r8,3
   22538:	9007883a 	mov	r3,r18
   2253c:	1444b03a 	or	r2,r2,r17
   22540:	0101ffc4 	movi	r4,2047
   22544:	81002426 	beq	r16,r4,225d8 <__adddf3+0x2b8>
   22548:	8120703a 	and	r16,r16,r4
   2254c:	01000434 	movhi	r4,16
   22550:	213fffc4 	addi	r4,r4,-1
   22554:	4110703a 	and	r8,r8,r4
   22558:	003fa806 	br	223fc <__alt_data_end+0xfffe23fc>
   2255c:	8089c83a 	sub	r4,r16,r2
   22560:	01005e0e 	bge	zero,r4,226dc <__adddf3+0x3bc>
   22564:	10002b26 	beq	r2,zero,22614 <__adddf3+0x2f4>
   22568:	0081ffc4 	movi	r2,2047
   2256c:	80bf8b26 	beq	r16,r2,2239c <__alt_data_end+0xfffe239c>
   22570:	4a402034 	orhi	r9,r9,128
   22574:	00800e04 	movi	r2,56
   22578:	1100a40e 	bge	r2,r4,2280c <__adddf3+0x4ec>
   2257c:	498cb03a 	or	r6,r9,r6
   22580:	300ac03a 	cmpne	r5,r6,zero
   22584:	0013883a 	mov	r9,zero
   22588:	2c4b883a 	add	r5,r5,r17
   2258c:	2c63803a 	cmpltu	r17,r5,r17
   22590:	4a11883a 	add	r8,r9,r8
   22594:	8a11883a 	add	r8,r17,r8
   22598:	2823883a 	mov	r17,r5
   2259c:	4080202c 	andhi	r2,r8,128
   225a0:	103fe026 	beq	r2,zero,22524 <__alt_data_end+0xfffe2524>
   225a4:	84000044 	addi	r16,r16,1
   225a8:	0081ffc4 	movi	r2,2047
   225ac:	8080d226 	beq	r16,r2,228f8 <__adddf3+0x5d8>
   225b0:	00bfe034 	movhi	r2,65408
   225b4:	10bfffc4 	addi	r2,r2,-1
   225b8:	4090703a 	and	r8,r8,r2
   225bc:	880ad07a 	srli	r5,r17,1
   225c0:	400897fa 	slli	r4,r8,31
   225c4:	88c0004c 	andi	r3,r17,1
   225c8:	28e2b03a 	or	r17,r5,r3
   225cc:	4010d07a 	srli	r8,r8,1
   225d0:	2462b03a 	or	r17,r4,r17
   225d4:	003f7106 	br	2239c <__alt_data_end+0xfffe239c>
   225d8:	4088b03a 	or	r4,r8,r2
   225dc:	20014526 	beq	r4,zero,22af4 <__adddf3+0x7d4>
   225e0:	01000434 	movhi	r4,16
   225e4:	42000234 	orhi	r8,r8,8
   225e8:	213fffc4 	addi	r4,r4,-1
   225ec:	4110703a 	and	r8,r8,r4
   225f0:	003f8206 	br	223fc <__alt_data_end+0xfffe23fc>
   225f4:	18ffffc4 	addi	r3,r3,-1
   225f8:	1800491e 	bne	r3,zero,22720 <__adddf3+0x400>
   225fc:	898bc83a 	sub	r5,r17,r6
   22600:	8963803a 	cmpltu	r17,r17,r5
   22604:	4251c83a 	sub	r8,r8,r9
   22608:	4451c83a 	sub	r8,r8,r17
   2260c:	2823883a 	mov	r17,r5
   22610:	003f9f06 	br	22490 <__alt_data_end+0xfffe2490>
   22614:	4984b03a 	or	r2,r9,r6
   22618:	103f6026 	beq	r2,zero,2239c <__alt_data_end+0xfffe239c>
   2261c:	213fffc4 	addi	r4,r4,-1
   22620:	2000931e 	bne	r4,zero,22870 <__adddf3+0x550>
   22624:	898d883a 	add	r6,r17,r6
   22628:	3463803a 	cmpltu	r17,r6,r17
   2262c:	4251883a 	add	r8,r8,r9
   22630:	8a11883a 	add	r8,r17,r8
   22634:	3023883a 	mov	r17,r6
   22638:	003fd806 	br	2259c <__alt_data_end+0xfffe259c>
   2263c:	1800541e 	bne	r3,zero,22790 <__adddf3+0x470>
   22640:	80800044 	addi	r2,r16,1
   22644:	1081ffcc 	andi	r2,r2,2047
   22648:	00c00044 	movi	r3,1
   2264c:	1880a00e 	bge	r3,r2,228d0 <__adddf3+0x5b0>
   22650:	8989c83a 	sub	r4,r17,r6
   22654:	8905803a 	cmpltu	r2,r17,r4
   22658:	4267c83a 	sub	r19,r8,r9
   2265c:	98a7c83a 	sub	r19,r19,r2
   22660:	9880202c 	andhi	r2,r19,128
   22664:	10006326 	beq	r2,zero,227f4 <__adddf3+0x4d4>
   22668:	3463c83a 	sub	r17,r6,r17
   2266c:	4a07c83a 	sub	r3,r9,r8
   22670:	344d803a 	cmpltu	r6,r6,r17
   22674:	19a7c83a 	sub	r19,r3,r6
   22678:	3825883a 	mov	r18,r7
   2267c:	983f8a1e 	bne	r19,zero,224a8 <__alt_data_end+0xfffe24a8>
   22680:	8809883a 	mov	r4,r17
   22684:	002487c0 	call	2487c <__clzsi2>
   22688:	10800804 	addi	r2,r2,32
   2268c:	10fffe04 	addi	r3,r2,-8
   22690:	010007c4 	movi	r4,31
   22694:	20ff890e 	bge	r4,r3,224bc <__alt_data_end+0xfffe24bc>
   22698:	10bff604 	addi	r2,r2,-40
   2269c:	8884983a 	sll	r2,r17,r2
   226a0:	0023883a 	mov	r17,zero
   226a4:	1c3f8c0e 	bge	r3,r16,224d8 <__alt_data_end+0xfffe24d8>
   226a8:	023fe034 	movhi	r8,65408
   226ac:	423fffc4 	addi	r8,r8,-1
   226b0:	80e1c83a 	sub	r16,r16,r3
   226b4:	1210703a 	and	r8,r2,r8
   226b8:	003f3806 	br	2239c <__alt_data_end+0xfffe239c>
   226bc:	9007883a 	mov	r3,r18
   226c0:	0011883a 	mov	r8,zero
   226c4:	0005883a 	mov	r2,zero
   226c8:	003f4c06 	br	223fc <__alt_data_end+0xfffe23fc>
   226cc:	498cb03a 	or	r6,r9,r6
   226d0:	300cc03a 	cmpne	r6,r6,zero
   226d4:	0007883a 	mov	r3,zero
   226d8:	003f6806 	br	2247c <__alt_data_end+0xfffe247c>
   226dc:	20009c1e 	bne	r4,zero,22950 <__adddf3+0x630>
   226e0:	80800044 	addi	r2,r16,1
   226e4:	1141ffcc 	andi	r5,r2,2047
   226e8:	01000044 	movi	r4,1
   226ec:	2140670e 	bge	r4,r5,2288c <__adddf3+0x56c>
   226f0:	0101ffc4 	movi	r4,2047
   226f4:	11007f26 	beq	r2,r4,228f4 <__adddf3+0x5d4>
   226f8:	898d883a 	add	r6,r17,r6
   226fc:	4247883a 	add	r3,r8,r9
   22700:	3451803a 	cmpltu	r8,r6,r17
   22704:	40d1883a 	add	r8,r8,r3
   22708:	402297fa 	slli	r17,r8,31
   2270c:	300cd07a 	srli	r6,r6,1
   22710:	4010d07a 	srli	r8,r8,1
   22714:	1021883a 	mov	r16,r2
   22718:	89a2b03a 	or	r17,r17,r6
   2271c:	003f1f06 	br	2239c <__alt_data_end+0xfffe239c>
   22720:	0081ffc4 	movi	r2,2047
   22724:	80bf481e 	bne	r16,r2,22448 <__alt_data_end+0xfffe2448>
   22728:	003f1c06 	br	2239c <__alt_data_end+0xfffe239c>
   2272c:	843ff844 	addi	r16,r16,-31
   22730:	01000804 	movi	r4,32
   22734:	1406d83a 	srl	r3,r2,r16
   22738:	41005026 	beq	r8,r4,2287c <__adddf3+0x55c>
   2273c:	01001004 	movi	r4,64
   22740:	2211c83a 	sub	r8,r4,r8
   22744:	1204983a 	sll	r2,r2,r8
   22748:	88a2b03a 	or	r17,r17,r2
   2274c:	8822c03a 	cmpne	r17,r17,zero
   22750:	1c62b03a 	or	r17,r3,r17
   22754:	0011883a 	mov	r8,zero
   22758:	0021883a 	mov	r16,zero
   2275c:	003f7106 	br	22524 <__alt_data_end+0xfffe2524>
   22760:	193ff804 	addi	r4,r3,-32
   22764:	00800804 	movi	r2,32
   22768:	4908d83a 	srl	r4,r9,r4
   2276c:	18804526 	beq	r3,r2,22884 <__adddf3+0x564>
   22770:	00801004 	movi	r2,64
   22774:	10c5c83a 	sub	r2,r2,r3
   22778:	4886983a 	sll	r3,r9,r2
   2277c:	198cb03a 	or	r6,r3,r6
   22780:	300cc03a 	cmpne	r6,r6,zero
   22784:	218cb03a 	or	r6,r4,r6
   22788:	0007883a 	mov	r3,zero
   2278c:	003f3b06 	br	2247c <__alt_data_end+0xfffe247c>
   22790:	80002a26 	beq	r16,zero,2283c <__adddf3+0x51c>
   22794:	0101ffc4 	movi	r4,2047
   22798:	11006826 	beq	r2,r4,2293c <__adddf3+0x61c>
   2279c:	00c7c83a 	sub	r3,zero,r3
   227a0:	42002034 	orhi	r8,r8,128
   227a4:	01000e04 	movi	r4,56
   227a8:	20c07c16 	blt	r4,r3,2299c <__adddf3+0x67c>
   227ac:	010007c4 	movi	r4,31
   227b0:	20c0da16 	blt	r4,r3,22b1c <__adddf3+0x7fc>
   227b4:	01000804 	movi	r4,32
   227b8:	20c9c83a 	sub	r4,r4,r3
   227bc:	4114983a 	sll	r10,r8,r4
   227c0:	88cad83a 	srl	r5,r17,r3
   227c4:	8908983a 	sll	r4,r17,r4
   227c8:	40c6d83a 	srl	r3,r8,r3
   227cc:	5162b03a 	or	r17,r10,r5
   227d0:	2008c03a 	cmpne	r4,r4,zero
   227d4:	8922b03a 	or	r17,r17,r4
   227d8:	3463c83a 	sub	r17,r6,r17
   227dc:	48c7c83a 	sub	r3,r9,r3
   227e0:	344d803a 	cmpltu	r6,r6,r17
   227e4:	1991c83a 	sub	r8,r3,r6
   227e8:	1021883a 	mov	r16,r2
   227ec:	3825883a 	mov	r18,r7
   227f0:	003f2706 	br	22490 <__alt_data_end+0xfffe2490>
   227f4:	24d0b03a 	or	r8,r4,r19
   227f8:	40001b1e 	bne	r8,zero,22868 <__adddf3+0x548>
   227fc:	0005883a 	mov	r2,zero
   22800:	0007883a 	mov	r3,zero
   22804:	0021883a 	mov	r16,zero
   22808:	003f4d06 	br	22540 <__alt_data_end+0xfffe2540>
   2280c:	008007c4 	movi	r2,31
   22810:	11003c16 	blt	r2,r4,22904 <__adddf3+0x5e4>
   22814:	00800804 	movi	r2,32
   22818:	1105c83a 	sub	r2,r2,r4
   2281c:	488e983a 	sll	r7,r9,r2
   22820:	310ad83a 	srl	r5,r6,r4
   22824:	3084983a 	sll	r2,r6,r2
   22828:	4912d83a 	srl	r9,r9,r4
   2282c:	394ab03a 	or	r5,r7,r5
   22830:	1004c03a 	cmpne	r2,r2,zero
   22834:	288ab03a 	or	r5,r5,r2
   22838:	003f5306 	br	22588 <__alt_data_end+0xfffe2588>
   2283c:	4448b03a 	or	r4,r8,r17
   22840:	20003e26 	beq	r4,zero,2293c <__adddf3+0x61c>
   22844:	00c6303a 	nor	r3,zero,r3
   22848:	18003a1e 	bne	r3,zero,22934 <__adddf3+0x614>
   2284c:	3463c83a 	sub	r17,r6,r17
   22850:	4a07c83a 	sub	r3,r9,r8
   22854:	344d803a 	cmpltu	r6,r6,r17
   22858:	1991c83a 	sub	r8,r3,r6
   2285c:	1021883a 	mov	r16,r2
   22860:	3825883a 	mov	r18,r7
   22864:	003f0a06 	br	22490 <__alt_data_end+0xfffe2490>
   22868:	2023883a 	mov	r17,r4
   2286c:	003f0d06 	br	224a4 <__alt_data_end+0xfffe24a4>
   22870:	0081ffc4 	movi	r2,2047
   22874:	80bf3f1e 	bne	r16,r2,22574 <__alt_data_end+0xfffe2574>
   22878:	003ec806 	br	2239c <__alt_data_end+0xfffe239c>
   2287c:	0005883a 	mov	r2,zero
   22880:	003fb106 	br	22748 <__alt_data_end+0xfffe2748>
   22884:	0007883a 	mov	r3,zero
   22888:	003fbc06 	br	2277c <__alt_data_end+0xfffe277c>
   2288c:	4444b03a 	or	r2,r8,r17
   22890:	8000871e 	bne	r16,zero,22ab0 <__adddf3+0x790>
   22894:	1000ba26 	beq	r2,zero,22b80 <__adddf3+0x860>
   22898:	4984b03a 	or	r2,r9,r6
   2289c:	103ebf26 	beq	r2,zero,2239c <__alt_data_end+0xfffe239c>
   228a0:	8985883a 	add	r2,r17,r6
   228a4:	4247883a 	add	r3,r8,r9
   228a8:	1451803a 	cmpltu	r8,r2,r17
   228ac:	40d1883a 	add	r8,r8,r3
   228b0:	40c0202c 	andhi	r3,r8,128
   228b4:	1023883a 	mov	r17,r2
   228b8:	183f1a26 	beq	r3,zero,22524 <__alt_data_end+0xfffe2524>
   228bc:	00bfe034 	movhi	r2,65408
   228c0:	10bfffc4 	addi	r2,r2,-1
   228c4:	2021883a 	mov	r16,r4
   228c8:	4090703a 	and	r8,r8,r2
   228cc:	003eb306 	br	2239c <__alt_data_end+0xfffe239c>
   228d0:	4444b03a 	or	r2,r8,r17
   228d4:	8000291e 	bne	r16,zero,2297c <__adddf3+0x65c>
   228d8:	10004b1e 	bne	r2,zero,22a08 <__adddf3+0x6e8>
   228dc:	4990b03a 	or	r8,r9,r6
   228e0:	40008b26 	beq	r8,zero,22b10 <__adddf3+0x7f0>
   228e4:	4811883a 	mov	r8,r9
   228e8:	3023883a 	mov	r17,r6
   228ec:	3825883a 	mov	r18,r7
   228f0:	003eaa06 	br	2239c <__alt_data_end+0xfffe239c>
   228f4:	1021883a 	mov	r16,r2
   228f8:	0011883a 	mov	r8,zero
   228fc:	0005883a 	mov	r2,zero
   22900:	003f0f06 	br	22540 <__alt_data_end+0xfffe2540>
   22904:	217ff804 	addi	r5,r4,-32
   22908:	00800804 	movi	r2,32
   2290c:	494ad83a 	srl	r5,r9,r5
   22910:	20807d26 	beq	r4,r2,22b08 <__adddf3+0x7e8>
   22914:	00801004 	movi	r2,64
   22918:	1109c83a 	sub	r4,r2,r4
   2291c:	4912983a 	sll	r9,r9,r4
   22920:	498cb03a 	or	r6,r9,r6
   22924:	300cc03a 	cmpne	r6,r6,zero
   22928:	298ab03a 	or	r5,r5,r6
   2292c:	0013883a 	mov	r9,zero
   22930:	003f1506 	br	22588 <__alt_data_end+0xfffe2588>
   22934:	0101ffc4 	movi	r4,2047
   22938:	113f9a1e 	bne	r2,r4,227a4 <__alt_data_end+0xfffe27a4>
   2293c:	4811883a 	mov	r8,r9
   22940:	3023883a 	mov	r17,r6
   22944:	1021883a 	mov	r16,r2
   22948:	3825883a 	mov	r18,r7
   2294c:	003e9306 	br	2239c <__alt_data_end+0xfffe239c>
   22950:	8000161e 	bne	r16,zero,229ac <__adddf3+0x68c>
   22954:	444ab03a 	or	r5,r8,r17
   22958:	28005126 	beq	r5,zero,22aa0 <__adddf3+0x780>
   2295c:	0108303a 	nor	r4,zero,r4
   22960:	20004d1e 	bne	r4,zero,22a98 <__adddf3+0x778>
   22964:	89a3883a 	add	r17,r17,r6
   22968:	4253883a 	add	r9,r8,r9
   2296c:	898d803a 	cmpltu	r6,r17,r6
   22970:	3251883a 	add	r8,r6,r9
   22974:	1021883a 	mov	r16,r2
   22978:	003f0806 	br	2259c <__alt_data_end+0xfffe259c>
   2297c:	1000301e 	bne	r2,zero,22a40 <__adddf3+0x720>
   22980:	4984b03a 	or	r2,r9,r6
   22984:	10007126 	beq	r2,zero,22b4c <__adddf3+0x82c>
   22988:	4811883a 	mov	r8,r9
   2298c:	3023883a 	mov	r17,r6
   22990:	3825883a 	mov	r18,r7
   22994:	0401ffc4 	movi	r16,2047
   22998:	003e8006 	br	2239c <__alt_data_end+0xfffe239c>
   2299c:	4462b03a 	or	r17,r8,r17
   229a0:	8822c03a 	cmpne	r17,r17,zero
   229a4:	0007883a 	mov	r3,zero
   229a8:	003f8b06 	br	227d8 <__alt_data_end+0xfffe27d8>
   229ac:	0141ffc4 	movi	r5,2047
   229b0:	11403b26 	beq	r2,r5,22aa0 <__adddf3+0x780>
   229b4:	0109c83a 	sub	r4,zero,r4
   229b8:	42002034 	orhi	r8,r8,128
   229bc:	01400e04 	movi	r5,56
   229c0:	29006716 	blt	r5,r4,22b60 <__adddf3+0x840>
   229c4:	014007c4 	movi	r5,31
   229c8:	29007016 	blt	r5,r4,22b8c <__adddf3+0x86c>
   229cc:	01400804 	movi	r5,32
   229d0:	290bc83a 	sub	r5,r5,r4
   229d4:	4154983a 	sll	r10,r8,r5
   229d8:	890ed83a 	srl	r7,r17,r4
   229dc:	894a983a 	sll	r5,r17,r5
   229e0:	4108d83a 	srl	r4,r8,r4
   229e4:	51e2b03a 	or	r17,r10,r7
   229e8:	280ac03a 	cmpne	r5,r5,zero
   229ec:	8962b03a 	or	r17,r17,r5
   229f0:	89a3883a 	add	r17,r17,r6
   229f4:	2253883a 	add	r9,r4,r9
   229f8:	898d803a 	cmpltu	r6,r17,r6
   229fc:	3251883a 	add	r8,r6,r9
   22a00:	1021883a 	mov	r16,r2
   22a04:	003ee506 	br	2259c <__alt_data_end+0xfffe259c>
   22a08:	4984b03a 	or	r2,r9,r6
   22a0c:	103e6326 	beq	r2,zero,2239c <__alt_data_end+0xfffe239c>
   22a10:	8987c83a 	sub	r3,r17,r6
   22a14:	88c9803a 	cmpltu	r4,r17,r3
   22a18:	4245c83a 	sub	r2,r8,r9
   22a1c:	1105c83a 	sub	r2,r2,r4
   22a20:	1100202c 	andhi	r4,r2,128
   22a24:	203ebb26 	beq	r4,zero,22514 <__alt_data_end+0xfffe2514>
   22a28:	3463c83a 	sub	r17,r6,r17
   22a2c:	4a07c83a 	sub	r3,r9,r8
   22a30:	344d803a 	cmpltu	r6,r6,r17
   22a34:	1991c83a 	sub	r8,r3,r6
   22a38:	3825883a 	mov	r18,r7
   22a3c:	003e5706 	br	2239c <__alt_data_end+0xfffe239c>
   22a40:	4984b03a 	or	r2,r9,r6
   22a44:	10002e26 	beq	r2,zero,22b00 <__adddf3+0x7e0>
   22a48:	4004d0fa 	srli	r2,r8,3
   22a4c:	8822d0fa 	srli	r17,r17,3
   22a50:	4010977a 	slli	r8,r8,29
   22a54:	10c0022c 	andhi	r3,r2,8
   22a58:	4462b03a 	or	r17,r8,r17
   22a5c:	18000826 	beq	r3,zero,22a80 <__adddf3+0x760>
   22a60:	4808d0fa 	srli	r4,r9,3
   22a64:	20c0022c 	andhi	r3,r4,8
   22a68:	1800051e 	bne	r3,zero,22a80 <__adddf3+0x760>
   22a6c:	300cd0fa 	srli	r6,r6,3
   22a70:	4806977a 	slli	r3,r9,29
   22a74:	2005883a 	mov	r2,r4
   22a78:	3825883a 	mov	r18,r7
   22a7c:	19a2b03a 	or	r17,r3,r6
   22a80:	8810d77a 	srli	r8,r17,29
   22a84:	100490fa 	slli	r2,r2,3
   22a88:	882290fa 	slli	r17,r17,3
   22a8c:	0401ffc4 	movi	r16,2047
   22a90:	4090b03a 	or	r8,r8,r2
   22a94:	003e4106 	br	2239c <__alt_data_end+0xfffe239c>
   22a98:	0141ffc4 	movi	r5,2047
   22a9c:	117fc71e 	bne	r2,r5,229bc <__alt_data_end+0xfffe29bc>
   22aa0:	4811883a 	mov	r8,r9
   22aa4:	3023883a 	mov	r17,r6
   22aa8:	1021883a 	mov	r16,r2
   22aac:	003e3b06 	br	2239c <__alt_data_end+0xfffe239c>
   22ab0:	10002f26 	beq	r2,zero,22b70 <__adddf3+0x850>
   22ab4:	4984b03a 	or	r2,r9,r6
   22ab8:	10001126 	beq	r2,zero,22b00 <__adddf3+0x7e0>
   22abc:	4004d0fa 	srli	r2,r8,3
   22ac0:	8822d0fa 	srli	r17,r17,3
   22ac4:	4010977a 	slli	r8,r8,29
   22ac8:	10c0022c 	andhi	r3,r2,8
   22acc:	4462b03a 	or	r17,r8,r17
   22ad0:	183feb26 	beq	r3,zero,22a80 <__alt_data_end+0xfffe2a80>
   22ad4:	4808d0fa 	srli	r4,r9,3
   22ad8:	20c0022c 	andhi	r3,r4,8
   22adc:	183fe81e 	bne	r3,zero,22a80 <__alt_data_end+0xfffe2a80>
   22ae0:	300cd0fa 	srli	r6,r6,3
   22ae4:	4806977a 	slli	r3,r9,29
   22ae8:	2005883a 	mov	r2,r4
   22aec:	19a2b03a 	or	r17,r3,r6
   22af0:	003fe306 	br	22a80 <__alt_data_end+0xfffe2a80>
   22af4:	0011883a 	mov	r8,zero
   22af8:	0005883a 	mov	r2,zero
   22afc:	003e3f06 	br	223fc <__alt_data_end+0xfffe23fc>
   22b00:	0401ffc4 	movi	r16,2047
   22b04:	003e2506 	br	2239c <__alt_data_end+0xfffe239c>
   22b08:	0013883a 	mov	r9,zero
   22b0c:	003f8406 	br	22920 <__alt_data_end+0xfffe2920>
   22b10:	0005883a 	mov	r2,zero
   22b14:	0007883a 	mov	r3,zero
   22b18:	003e8906 	br	22540 <__alt_data_end+0xfffe2540>
   22b1c:	197ff804 	addi	r5,r3,-32
   22b20:	01000804 	movi	r4,32
   22b24:	414ad83a 	srl	r5,r8,r5
   22b28:	19002426 	beq	r3,r4,22bbc <__adddf3+0x89c>
   22b2c:	01001004 	movi	r4,64
   22b30:	20c7c83a 	sub	r3,r4,r3
   22b34:	40c6983a 	sll	r3,r8,r3
   22b38:	1c46b03a 	or	r3,r3,r17
   22b3c:	1806c03a 	cmpne	r3,r3,zero
   22b40:	28e2b03a 	or	r17,r5,r3
   22b44:	0007883a 	mov	r3,zero
   22b48:	003f2306 	br	227d8 <__alt_data_end+0xfffe27d8>
   22b4c:	0007883a 	mov	r3,zero
   22b50:	5811883a 	mov	r8,r11
   22b54:	00bfffc4 	movi	r2,-1
   22b58:	0401ffc4 	movi	r16,2047
   22b5c:	003e7806 	br	22540 <__alt_data_end+0xfffe2540>
   22b60:	4462b03a 	or	r17,r8,r17
   22b64:	8822c03a 	cmpne	r17,r17,zero
   22b68:	0009883a 	mov	r4,zero
   22b6c:	003fa006 	br	229f0 <__alt_data_end+0xfffe29f0>
   22b70:	4811883a 	mov	r8,r9
   22b74:	3023883a 	mov	r17,r6
   22b78:	0401ffc4 	movi	r16,2047
   22b7c:	003e0706 	br	2239c <__alt_data_end+0xfffe239c>
   22b80:	4811883a 	mov	r8,r9
   22b84:	3023883a 	mov	r17,r6
   22b88:	003e0406 	br	2239c <__alt_data_end+0xfffe239c>
   22b8c:	21fff804 	addi	r7,r4,-32
   22b90:	01400804 	movi	r5,32
   22b94:	41ced83a 	srl	r7,r8,r7
   22b98:	21400a26 	beq	r4,r5,22bc4 <__adddf3+0x8a4>
   22b9c:	01401004 	movi	r5,64
   22ba0:	2909c83a 	sub	r4,r5,r4
   22ba4:	4108983a 	sll	r4,r8,r4
   22ba8:	2448b03a 	or	r4,r4,r17
   22bac:	2008c03a 	cmpne	r4,r4,zero
   22bb0:	3922b03a 	or	r17,r7,r4
   22bb4:	0009883a 	mov	r4,zero
   22bb8:	003f8d06 	br	229f0 <__alt_data_end+0xfffe29f0>
   22bbc:	0007883a 	mov	r3,zero
   22bc0:	003fdd06 	br	22b38 <__alt_data_end+0xfffe2b38>
   22bc4:	0009883a 	mov	r4,zero
   22bc8:	003ff706 	br	22ba8 <__alt_data_end+0xfffe2ba8>

00022bcc <__divdf3>:
   22bcc:	defff204 	addi	sp,sp,-56
   22bd0:	dd400915 	stw	r21,36(sp)
   22bd4:	282ad53a 	srli	r21,r5,20
   22bd8:	dd000815 	stw	r20,32(sp)
   22bdc:	2828d7fa 	srli	r20,r5,31
   22be0:	dc000415 	stw	r16,16(sp)
   22be4:	04000434 	movhi	r16,16
   22be8:	df000c15 	stw	fp,48(sp)
   22bec:	843fffc4 	addi	r16,r16,-1
   22bf0:	dfc00d15 	stw	ra,52(sp)
   22bf4:	ddc00b15 	stw	r23,44(sp)
   22bf8:	dd800a15 	stw	r22,40(sp)
   22bfc:	dcc00715 	stw	r19,28(sp)
   22c00:	dc800615 	stw	r18,24(sp)
   22c04:	dc400515 	stw	r17,20(sp)
   22c08:	ad41ffcc 	andi	r21,r21,2047
   22c0c:	2c20703a 	and	r16,r5,r16
   22c10:	a7003fcc 	andi	fp,r20,255
   22c14:	a8006126 	beq	r21,zero,22d9c <__divdf3+0x1d0>
   22c18:	0081ffc4 	movi	r2,2047
   22c1c:	2025883a 	mov	r18,r4
   22c20:	a8803726 	beq	r21,r2,22d00 <__divdf3+0x134>
   22c24:	80800434 	orhi	r2,r16,16
   22c28:	100490fa 	slli	r2,r2,3
   22c2c:	2020d77a 	srli	r16,r4,29
   22c30:	202490fa 	slli	r18,r4,3
   22c34:	ad7f0044 	addi	r21,r21,-1023
   22c38:	80a0b03a 	or	r16,r16,r2
   22c3c:	0027883a 	mov	r19,zero
   22c40:	0013883a 	mov	r9,zero
   22c44:	3804d53a 	srli	r2,r7,20
   22c48:	382cd7fa 	srli	r22,r7,31
   22c4c:	04400434 	movhi	r17,16
   22c50:	8c7fffc4 	addi	r17,r17,-1
   22c54:	1081ffcc 	andi	r2,r2,2047
   22c58:	3011883a 	mov	r8,r6
   22c5c:	3c62703a 	and	r17,r7,r17
   22c60:	b5c03fcc 	andi	r23,r22,255
   22c64:	10006c26 	beq	r2,zero,22e18 <__divdf3+0x24c>
   22c68:	00c1ffc4 	movi	r3,2047
   22c6c:	10c06426 	beq	r2,r3,22e00 <__divdf3+0x234>
   22c70:	88c00434 	orhi	r3,r17,16
   22c74:	180690fa 	slli	r3,r3,3
   22c78:	3022d77a 	srli	r17,r6,29
   22c7c:	301090fa 	slli	r8,r6,3
   22c80:	10bf0044 	addi	r2,r2,-1023
   22c84:	88e2b03a 	or	r17,r17,r3
   22c88:	000f883a 	mov	r7,zero
   22c8c:	a58cf03a 	xor	r6,r20,r22
   22c90:	3cc8b03a 	or	r4,r7,r19
   22c94:	a8abc83a 	sub	r21,r21,r2
   22c98:	008003c4 	movi	r2,15
   22c9c:	3007883a 	mov	r3,r6
   22ca0:	34c03fcc 	andi	r19,r6,255
   22ca4:	11009036 	bltu	r2,r4,22ee8 <__divdf3+0x31c>
   22ca8:	200890ba 	slli	r4,r4,2
   22cac:	008000b4 	movhi	r2,2
   22cb0:	108b3004 	addi	r2,r2,11456
   22cb4:	2089883a 	add	r4,r4,r2
   22cb8:	20800017 	ldw	r2,0(r4)
   22cbc:	1000683a 	jmp	r2
   22cc0:	00022ee8 	cmpgeui	zero,zero,2235
   22cc4:	00022d38 	rdprs	zero,zero,2228
   22cc8:	00022ed8 	cmpnei	zero,zero,2235
   22ccc:	00022d2c 	andhi	zero,zero,2228
   22cd0:	00022ed8 	cmpnei	zero,zero,2235
   22cd4:	00022eac 	andhi	zero,zero,2234
   22cd8:	00022ed8 	cmpnei	zero,zero,2235
   22cdc:	00022d2c 	andhi	zero,zero,2228
   22ce0:	00022d38 	rdprs	zero,zero,2228
   22ce4:	00022d38 	rdprs	zero,zero,2228
   22ce8:	00022eac 	andhi	zero,zero,2234
   22cec:	00022d2c 	andhi	zero,zero,2228
   22cf0:	00022d1c 	xori	zero,zero,2228
   22cf4:	00022d1c 	xori	zero,zero,2228
   22cf8:	00022d1c 	xori	zero,zero,2228
   22cfc:	000231cc 	andi	zero,zero,2247
   22d00:	2404b03a 	or	r2,r4,r16
   22d04:	1000661e 	bne	r2,zero,22ea0 <__divdf3+0x2d4>
   22d08:	04c00204 	movi	r19,8
   22d0c:	0021883a 	mov	r16,zero
   22d10:	0025883a 	mov	r18,zero
   22d14:	02400084 	movi	r9,2
   22d18:	003fca06 	br	22c44 <__alt_data_end+0xfffe2c44>
   22d1c:	8023883a 	mov	r17,r16
   22d20:	9011883a 	mov	r8,r18
   22d24:	e02f883a 	mov	r23,fp
   22d28:	480f883a 	mov	r7,r9
   22d2c:	00800084 	movi	r2,2
   22d30:	3881311e 	bne	r7,r2,231f8 <__divdf3+0x62c>
   22d34:	b827883a 	mov	r19,r23
   22d38:	98c0004c 	andi	r3,r19,1
   22d3c:	0081ffc4 	movi	r2,2047
   22d40:	000b883a 	mov	r5,zero
   22d44:	0025883a 	mov	r18,zero
   22d48:	1004953a 	slli	r2,r2,20
   22d4c:	18c03fcc 	andi	r3,r3,255
   22d50:	04400434 	movhi	r17,16
   22d54:	8c7fffc4 	addi	r17,r17,-1
   22d58:	180697fa 	slli	r3,r3,31
   22d5c:	2c4a703a 	and	r5,r5,r17
   22d60:	288ab03a 	or	r5,r5,r2
   22d64:	28c6b03a 	or	r3,r5,r3
   22d68:	9005883a 	mov	r2,r18
   22d6c:	dfc00d17 	ldw	ra,52(sp)
   22d70:	df000c17 	ldw	fp,48(sp)
   22d74:	ddc00b17 	ldw	r23,44(sp)
   22d78:	dd800a17 	ldw	r22,40(sp)
   22d7c:	dd400917 	ldw	r21,36(sp)
   22d80:	dd000817 	ldw	r20,32(sp)
   22d84:	dcc00717 	ldw	r19,28(sp)
   22d88:	dc800617 	ldw	r18,24(sp)
   22d8c:	dc400517 	ldw	r17,20(sp)
   22d90:	dc000417 	ldw	r16,16(sp)
   22d94:	dec00e04 	addi	sp,sp,56
   22d98:	f800283a 	ret
   22d9c:	2404b03a 	or	r2,r4,r16
   22da0:	2027883a 	mov	r19,r4
   22da4:	10003926 	beq	r2,zero,22e8c <__divdf3+0x2c0>
   22da8:	80012e26 	beq	r16,zero,23264 <__divdf3+0x698>
   22dac:	8009883a 	mov	r4,r16
   22db0:	d9800315 	stw	r6,12(sp)
   22db4:	d9c00215 	stw	r7,8(sp)
   22db8:	002487c0 	call	2487c <__clzsi2>
   22dbc:	d9800317 	ldw	r6,12(sp)
   22dc0:	d9c00217 	ldw	r7,8(sp)
   22dc4:	113ffd44 	addi	r4,r2,-11
   22dc8:	00c00704 	movi	r3,28
   22dcc:	19012116 	blt	r3,r4,23254 <__divdf3+0x688>
   22dd0:	00c00744 	movi	r3,29
   22dd4:	147ffe04 	addi	r17,r2,-8
   22dd8:	1907c83a 	sub	r3,r3,r4
   22ddc:	8460983a 	sll	r16,r16,r17
   22de0:	98c6d83a 	srl	r3,r19,r3
   22de4:	9c64983a 	sll	r18,r19,r17
   22de8:	1c20b03a 	or	r16,r3,r16
   22dec:	1080fcc4 	addi	r2,r2,1011
   22df0:	00abc83a 	sub	r21,zero,r2
   22df4:	0027883a 	mov	r19,zero
   22df8:	0013883a 	mov	r9,zero
   22dfc:	003f9106 	br	22c44 <__alt_data_end+0xfffe2c44>
   22e00:	3446b03a 	or	r3,r6,r17
   22e04:	18001f1e 	bne	r3,zero,22e84 <__divdf3+0x2b8>
   22e08:	0023883a 	mov	r17,zero
   22e0c:	0011883a 	mov	r8,zero
   22e10:	01c00084 	movi	r7,2
   22e14:	003f9d06 	br	22c8c <__alt_data_end+0xfffe2c8c>
   22e18:	3446b03a 	or	r3,r6,r17
   22e1c:	18001526 	beq	r3,zero,22e74 <__divdf3+0x2a8>
   22e20:	88011b26 	beq	r17,zero,23290 <__divdf3+0x6c4>
   22e24:	8809883a 	mov	r4,r17
   22e28:	d9800315 	stw	r6,12(sp)
   22e2c:	da400115 	stw	r9,4(sp)
   22e30:	002487c0 	call	2487c <__clzsi2>
   22e34:	d9800317 	ldw	r6,12(sp)
   22e38:	da400117 	ldw	r9,4(sp)
   22e3c:	113ffd44 	addi	r4,r2,-11
   22e40:	00c00704 	movi	r3,28
   22e44:	19010e16 	blt	r3,r4,23280 <__divdf3+0x6b4>
   22e48:	00c00744 	movi	r3,29
   22e4c:	123ffe04 	addi	r8,r2,-8
   22e50:	1907c83a 	sub	r3,r3,r4
   22e54:	8a22983a 	sll	r17,r17,r8
   22e58:	30c6d83a 	srl	r3,r6,r3
   22e5c:	3210983a 	sll	r8,r6,r8
   22e60:	1c62b03a 	or	r17,r3,r17
   22e64:	1080fcc4 	addi	r2,r2,1011
   22e68:	0085c83a 	sub	r2,zero,r2
   22e6c:	000f883a 	mov	r7,zero
   22e70:	003f8606 	br	22c8c <__alt_data_end+0xfffe2c8c>
   22e74:	0023883a 	mov	r17,zero
   22e78:	0011883a 	mov	r8,zero
   22e7c:	01c00044 	movi	r7,1
   22e80:	003f8206 	br	22c8c <__alt_data_end+0xfffe2c8c>
   22e84:	01c000c4 	movi	r7,3
   22e88:	003f8006 	br	22c8c <__alt_data_end+0xfffe2c8c>
   22e8c:	04c00104 	movi	r19,4
   22e90:	0021883a 	mov	r16,zero
   22e94:	0025883a 	mov	r18,zero
   22e98:	02400044 	movi	r9,1
   22e9c:	003f6906 	br	22c44 <__alt_data_end+0xfffe2c44>
   22ea0:	04c00304 	movi	r19,12
   22ea4:	024000c4 	movi	r9,3
   22ea8:	003f6606 	br	22c44 <__alt_data_end+0xfffe2c44>
   22eac:	01400434 	movhi	r5,16
   22eb0:	0007883a 	mov	r3,zero
   22eb4:	297fffc4 	addi	r5,r5,-1
   22eb8:	04bfffc4 	movi	r18,-1
   22ebc:	0081ffc4 	movi	r2,2047
   22ec0:	003fa106 	br	22d48 <__alt_data_end+0xfffe2d48>
   22ec4:	00c00044 	movi	r3,1
   22ec8:	1887c83a 	sub	r3,r3,r2
   22ecc:	01000e04 	movi	r4,56
   22ed0:	20c1210e 	bge	r4,r3,23358 <__divdf3+0x78c>
   22ed4:	98c0004c 	andi	r3,r19,1
   22ed8:	0005883a 	mov	r2,zero
   22edc:	000b883a 	mov	r5,zero
   22ee0:	0025883a 	mov	r18,zero
   22ee4:	003f9806 	br	22d48 <__alt_data_end+0xfffe2d48>
   22ee8:	8c00fd36 	bltu	r17,r16,232e0 <__divdf3+0x714>
   22eec:	8440fb26 	beq	r16,r17,232dc <__divdf3+0x710>
   22ef0:	8007883a 	mov	r3,r16
   22ef4:	ad7fffc4 	addi	r21,r21,-1
   22ef8:	0021883a 	mov	r16,zero
   22efc:	4004d63a 	srli	r2,r8,24
   22f00:	8822923a 	slli	r17,r17,8
   22f04:	1809883a 	mov	r4,r3
   22f08:	402c923a 	slli	r22,r8,8
   22f0c:	88b8b03a 	or	fp,r17,r2
   22f10:	e028d43a 	srli	r20,fp,16
   22f14:	d8c00015 	stw	r3,0(sp)
   22f18:	e5ffffcc 	andi	r23,fp,65535
   22f1c:	a00b883a 	mov	r5,r20
   22f20:	00222640 	call	22264 <__udivsi3>
   22f24:	d8c00017 	ldw	r3,0(sp)
   22f28:	a00b883a 	mov	r5,r20
   22f2c:	d8800315 	stw	r2,12(sp)
   22f30:	1809883a 	mov	r4,r3
   22f34:	00222c80 	call	222c8 <__umodsi3>
   22f38:	d9800317 	ldw	r6,12(sp)
   22f3c:	1006943a 	slli	r3,r2,16
   22f40:	9004d43a 	srli	r2,r18,16
   22f44:	b9a3383a 	mul	r17,r23,r6
   22f48:	10c4b03a 	or	r2,r2,r3
   22f4c:	1440062e 	bgeu	r2,r17,22f68 <__divdf3+0x39c>
   22f50:	1705883a 	add	r2,r2,fp
   22f54:	30ffffc4 	addi	r3,r6,-1
   22f58:	1700ee36 	bltu	r2,fp,23314 <__divdf3+0x748>
   22f5c:	1440ed2e 	bgeu	r2,r17,23314 <__divdf3+0x748>
   22f60:	31bfff84 	addi	r6,r6,-2
   22f64:	1705883a 	add	r2,r2,fp
   22f68:	1463c83a 	sub	r17,r2,r17
   22f6c:	a00b883a 	mov	r5,r20
   22f70:	8809883a 	mov	r4,r17
   22f74:	d9800315 	stw	r6,12(sp)
   22f78:	00222640 	call	22264 <__udivsi3>
   22f7c:	a00b883a 	mov	r5,r20
   22f80:	8809883a 	mov	r4,r17
   22f84:	d8800215 	stw	r2,8(sp)
   22f88:	00222c80 	call	222c8 <__umodsi3>
   22f8c:	d9c00217 	ldw	r7,8(sp)
   22f90:	1004943a 	slli	r2,r2,16
   22f94:	94bfffcc 	andi	r18,r18,65535
   22f98:	b9d1383a 	mul	r8,r23,r7
   22f9c:	90a4b03a 	or	r18,r18,r2
   22fa0:	d9800317 	ldw	r6,12(sp)
   22fa4:	9200062e 	bgeu	r18,r8,22fc0 <__divdf3+0x3f4>
   22fa8:	9725883a 	add	r18,r18,fp
   22fac:	38bfffc4 	addi	r2,r7,-1
   22fb0:	9700d636 	bltu	r18,fp,2330c <__divdf3+0x740>
   22fb4:	9200d52e 	bgeu	r18,r8,2330c <__divdf3+0x740>
   22fb8:	39ffff84 	addi	r7,r7,-2
   22fbc:	9725883a 	add	r18,r18,fp
   22fc0:	3004943a 	slli	r2,r6,16
   22fc4:	b012d43a 	srli	r9,r22,16
   22fc8:	b1bfffcc 	andi	r6,r22,65535
   22fcc:	11e2b03a 	or	r17,r2,r7
   22fd0:	8806d43a 	srli	r3,r17,16
   22fd4:	893fffcc 	andi	r4,r17,65535
   22fd8:	218b383a 	mul	r5,r4,r6
   22fdc:	30c5383a 	mul	r2,r6,r3
   22fe0:	2249383a 	mul	r4,r4,r9
   22fe4:	280ed43a 	srli	r7,r5,16
   22fe8:	9225c83a 	sub	r18,r18,r8
   22fec:	2089883a 	add	r4,r4,r2
   22ff0:	3909883a 	add	r4,r7,r4
   22ff4:	1a47383a 	mul	r3,r3,r9
   22ff8:	2080022e 	bgeu	r4,r2,23004 <__divdf3+0x438>
   22ffc:	00800074 	movhi	r2,1
   23000:	1887883a 	add	r3,r3,r2
   23004:	2004d43a 	srli	r2,r4,16
   23008:	2008943a 	slli	r4,r4,16
   2300c:	297fffcc 	andi	r5,r5,65535
   23010:	10c7883a 	add	r3,r2,r3
   23014:	2149883a 	add	r4,r4,r5
   23018:	90c0a536 	bltu	r18,r3,232b0 <__divdf3+0x6e4>
   2301c:	90c0bf26 	beq	r18,r3,2331c <__divdf3+0x750>
   23020:	90c7c83a 	sub	r3,r18,r3
   23024:	810fc83a 	sub	r7,r16,r4
   23028:	81e5803a 	cmpltu	r18,r16,r7
   2302c:	1ca5c83a 	sub	r18,r3,r18
   23030:	e480c126 	beq	fp,r18,23338 <__divdf3+0x76c>
   23034:	a00b883a 	mov	r5,r20
   23038:	9009883a 	mov	r4,r18
   2303c:	d9800315 	stw	r6,12(sp)
   23040:	d9c00215 	stw	r7,8(sp)
   23044:	da400115 	stw	r9,4(sp)
   23048:	00222640 	call	22264 <__udivsi3>
   2304c:	a00b883a 	mov	r5,r20
   23050:	9009883a 	mov	r4,r18
   23054:	d8800015 	stw	r2,0(sp)
   23058:	00222c80 	call	222c8 <__umodsi3>
   2305c:	d9c00217 	ldw	r7,8(sp)
   23060:	da000017 	ldw	r8,0(sp)
   23064:	1006943a 	slli	r3,r2,16
   23068:	3804d43a 	srli	r2,r7,16
   2306c:	ba21383a 	mul	r16,r23,r8
   23070:	d9800317 	ldw	r6,12(sp)
   23074:	10c4b03a 	or	r2,r2,r3
   23078:	da400117 	ldw	r9,4(sp)
   2307c:	1400062e 	bgeu	r2,r16,23098 <__divdf3+0x4cc>
   23080:	1705883a 	add	r2,r2,fp
   23084:	40ffffc4 	addi	r3,r8,-1
   23088:	1700ad36 	bltu	r2,fp,23340 <__divdf3+0x774>
   2308c:	1400ac2e 	bgeu	r2,r16,23340 <__divdf3+0x774>
   23090:	423fff84 	addi	r8,r8,-2
   23094:	1705883a 	add	r2,r2,fp
   23098:	1421c83a 	sub	r16,r2,r16
   2309c:	a00b883a 	mov	r5,r20
   230a0:	8009883a 	mov	r4,r16
   230a4:	d9800315 	stw	r6,12(sp)
   230a8:	d9c00215 	stw	r7,8(sp)
   230ac:	da000015 	stw	r8,0(sp)
   230b0:	da400115 	stw	r9,4(sp)
   230b4:	00222640 	call	22264 <__udivsi3>
   230b8:	8009883a 	mov	r4,r16
   230bc:	a00b883a 	mov	r5,r20
   230c0:	1025883a 	mov	r18,r2
   230c4:	00222c80 	call	222c8 <__umodsi3>
   230c8:	d9c00217 	ldw	r7,8(sp)
   230cc:	1004943a 	slli	r2,r2,16
   230d0:	bcaf383a 	mul	r23,r23,r18
   230d4:	393fffcc 	andi	r4,r7,65535
   230d8:	2088b03a 	or	r4,r4,r2
   230dc:	d9800317 	ldw	r6,12(sp)
   230e0:	da000017 	ldw	r8,0(sp)
   230e4:	da400117 	ldw	r9,4(sp)
   230e8:	25c0062e 	bgeu	r4,r23,23104 <__divdf3+0x538>
   230ec:	2709883a 	add	r4,r4,fp
   230f0:	90bfffc4 	addi	r2,r18,-1
   230f4:	27009436 	bltu	r4,fp,23348 <__divdf3+0x77c>
   230f8:	25c0932e 	bgeu	r4,r23,23348 <__divdf3+0x77c>
   230fc:	94bfff84 	addi	r18,r18,-2
   23100:	2709883a 	add	r4,r4,fp
   23104:	4004943a 	slli	r2,r8,16
   23108:	25efc83a 	sub	r23,r4,r23
   2310c:	1490b03a 	or	r8,r2,r18
   23110:	4008d43a 	srli	r4,r8,16
   23114:	40ffffcc 	andi	r3,r8,65535
   23118:	30c5383a 	mul	r2,r6,r3
   2311c:	1a47383a 	mul	r3,r3,r9
   23120:	310d383a 	mul	r6,r6,r4
   23124:	100ad43a 	srli	r5,r2,16
   23128:	4913383a 	mul	r9,r9,r4
   2312c:	1987883a 	add	r3,r3,r6
   23130:	28c7883a 	add	r3,r5,r3
   23134:	1980022e 	bgeu	r3,r6,23140 <__divdf3+0x574>
   23138:	01000074 	movhi	r4,1
   2313c:	4913883a 	add	r9,r9,r4
   23140:	1808d43a 	srli	r4,r3,16
   23144:	1806943a 	slli	r3,r3,16
   23148:	10bfffcc 	andi	r2,r2,65535
   2314c:	2253883a 	add	r9,r4,r9
   23150:	1887883a 	add	r3,r3,r2
   23154:	ba403836 	bltu	r23,r9,23238 <__divdf3+0x66c>
   23158:	ba403626 	beq	r23,r9,23234 <__divdf3+0x668>
   2315c:	42000054 	ori	r8,r8,1
   23160:	a880ffc4 	addi	r2,r21,1023
   23164:	00bf570e 	bge	zero,r2,22ec4 <__alt_data_end+0xfffe2ec4>
   23168:	40c001cc 	andi	r3,r8,7
   2316c:	18000726 	beq	r3,zero,2318c <__divdf3+0x5c0>
   23170:	40c003cc 	andi	r3,r8,15
   23174:	01000104 	movi	r4,4
   23178:	19000426 	beq	r3,r4,2318c <__divdf3+0x5c0>
   2317c:	4107883a 	add	r3,r8,r4
   23180:	1a11803a 	cmpltu	r8,r3,r8
   23184:	8a23883a 	add	r17,r17,r8
   23188:	1811883a 	mov	r8,r3
   2318c:	88c0402c 	andhi	r3,r17,256
   23190:	18000426 	beq	r3,zero,231a4 <__divdf3+0x5d8>
   23194:	00ffc034 	movhi	r3,65280
   23198:	18ffffc4 	addi	r3,r3,-1
   2319c:	a8810004 	addi	r2,r21,1024
   231a0:	88e2703a 	and	r17,r17,r3
   231a4:	00c1ff84 	movi	r3,2046
   231a8:	18bee316 	blt	r3,r2,22d38 <__alt_data_end+0xfffe2d38>
   231ac:	8824977a 	slli	r18,r17,29
   231b0:	4010d0fa 	srli	r8,r8,3
   231b4:	8822927a 	slli	r17,r17,9
   231b8:	1081ffcc 	andi	r2,r2,2047
   231bc:	9224b03a 	or	r18,r18,r8
   231c0:	880ad33a 	srli	r5,r17,12
   231c4:	98c0004c 	andi	r3,r19,1
   231c8:	003edf06 	br	22d48 <__alt_data_end+0xfffe2d48>
   231cc:	8080022c 	andhi	r2,r16,8
   231d0:	10001226 	beq	r2,zero,2321c <__divdf3+0x650>
   231d4:	8880022c 	andhi	r2,r17,8
   231d8:	1000101e 	bne	r2,zero,2321c <__divdf3+0x650>
   231dc:	00800434 	movhi	r2,16
   231e0:	89400234 	orhi	r5,r17,8
   231e4:	10bfffc4 	addi	r2,r2,-1
   231e8:	b007883a 	mov	r3,r22
   231ec:	288a703a 	and	r5,r5,r2
   231f0:	4025883a 	mov	r18,r8
   231f4:	003f3106 	br	22ebc <__alt_data_end+0xfffe2ebc>
   231f8:	008000c4 	movi	r2,3
   231fc:	3880a626 	beq	r7,r2,23498 <__divdf3+0x8cc>
   23200:	00800044 	movi	r2,1
   23204:	3880521e 	bne	r7,r2,23350 <__divdf3+0x784>
   23208:	b807883a 	mov	r3,r23
   2320c:	0005883a 	mov	r2,zero
   23210:	000b883a 	mov	r5,zero
   23214:	0025883a 	mov	r18,zero
   23218:	003ecb06 	br	22d48 <__alt_data_end+0xfffe2d48>
   2321c:	00800434 	movhi	r2,16
   23220:	81400234 	orhi	r5,r16,8
   23224:	10bfffc4 	addi	r2,r2,-1
   23228:	a007883a 	mov	r3,r20
   2322c:	288a703a 	and	r5,r5,r2
   23230:	003f2206 	br	22ebc <__alt_data_end+0xfffe2ebc>
   23234:	183fca26 	beq	r3,zero,23160 <__alt_data_end+0xfffe3160>
   23238:	e5ef883a 	add	r23,fp,r23
   2323c:	40bfffc4 	addi	r2,r8,-1
   23240:	bf00392e 	bgeu	r23,fp,23328 <__divdf3+0x75c>
   23244:	1011883a 	mov	r8,r2
   23248:	ba7fc41e 	bne	r23,r9,2315c <__alt_data_end+0xfffe315c>
   2324c:	b0ffc31e 	bne	r22,r3,2315c <__alt_data_end+0xfffe315c>
   23250:	003fc306 	br	23160 <__alt_data_end+0xfffe3160>
   23254:	143ff604 	addi	r16,r2,-40
   23258:	9c20983a 	sll	r16,r19,r16
   2325c:	0025883a 	mov	r18,zero
   23260:	003ee206 	br	22dec <__alt_data_end+0xfffe2dec>
   23264:	d9800315 	stw	r6,12(sp)
   23268:	d9c00215 	stw	r7,8(sp)
   2326c:	002487c0 	call	2487c <__clzsi2>
   23270:	10800804 	addi	r2,r2,32
   23274:	d9c00217 	ldw	r7,8(sp)
   23278:	d9800317 	ldw	r6,12(sp)
   2327c:	003ed106 	br	22dc4 <__alt_data_end+0xfffe2dc4>
   23280:	147ff604 	addi	r17,r2,-40
   23284:	3462983a 	sll	r17,r6,r17
   23288:	0011883a 	mov	r8,zero
   2328c:	003ef506 	br	22e64 <__alt_data_end+0xfffe2e64>
   23290:	3009883a 	mov	r4,r6
   23294:	d9800315 	stw	r6,12(sp)
   23298:	da400115 	stw	r9,4(sp)
   2329c:	002487c0 	call	2487c <__clzsi2>
   232a0:	10800804 	addi	r2,r2,32
   232a4:	da400117 	ldw	r9,4(sp)
   232a8:	d9800317 	ldw	r6,12(sp)
   232ac:	003ee306 	br	22e3c <__alt_data_end+0xfffe2e3c>
   232b0:	85a1883a 	add	r16,r16,r22
   232b4:	8585803a 	cmpltu	r2,r16,r22
   232b8:	1705883a 	add	r2,r2,fp
   232bc:	14a5883a 	add	r18,r2,r18
   232c0:	88bfffc4 	addi	r2,r17,-1
   232c4:	e4800c2e 	bgeu	fp,r18,232f8 <__divdf3+0x72c>
   232c8:	90c03e36 	bltu	r18,r3,233c4 <__divdf3+0x7f8>
   232cc:	1c806926 	beq	r3,r18,23474 <__divdf3+0x8a8>
   232d0:	90c7c83a 	sub	r3,r18,r3
   232d4:	1023883a 	mov	r17,r2
   232d8:	003f5206 	br	23024 <__alt_data_end+0xfffe3024>
   232dc:	923f0436 	bltu	r18,r8,22ef0 <__alt_data_end+0xfffe2ef0>
   232e0:	800897fa 	slli	r4,r16,31
   232e4:	9004d07a 	srli	r2,r18,1
   232e8:	8006d07a 	srli	r3,r16,1
   232ec:	902097fa 	slli	r16,r18,31
   232f0:	20a4b03a 	or	r18,r4,r2
   232f4:	003f0106 	br	22efc <__alt_data_end+0xfffe2efc>
   232f8:	e4bff51e 	bne	fp,r18,232d0 <__alt_data_end+0xfffe32d0>
   232fc:	85bff22e 	bgeu	r16,r22,232c8 <__alt_data_end+0xfffe32c8>
   23300:	e0c7c83a 	sub	r3,fp,r3
   23304:	1023883a 	mov	r17,r2
   23308:	003f4606 	br	23024 <__alt_data_end+0xfffe3024>
   2330c:	100f883a 	mov	r7,r2
   23310:	003f2b06 	br	22fc0 <__alt_data_end+0xfffe2fc0>
   23314:	180d883a 	mov	r6,r3
   23318:	003f1306 	br	22f68 <__alt_data_end+0xfffe2f68>
   2331c:	813fe436 	bltu	r16,r4,232b0 <__alt_data_end+0xfffe32b0>
   23320:	0007883a 	mov	r3,zero
   23324:	003f3f06 	br	23024 <__alt_data_end+0xfffe3024>
   23328:	ba402c36 	bltu	r23,r9,233dc <__divdf3+0x810>
   2332c:	4dc05426 	beq	r9,r23,23480 <__divdf3+0x8b4>
   23330:	1011883a 	mov	r8,r2
   23334:	003f8906 	br	2315c <__alt_data_end+0xfffe315c>
   23338:	023fffc4 	movi	r8,-1
   2333c:	003f8806 	br	23160 <__alt_data_end+0xfffe3160>
   23340:	1811883a 	mov	r8,r3
   23344:	003f5406 	br	23098 <__alt_data_end+0xfffe3098>
   23348:	1025883a 	mov	r18,r2
   2334c:	003f6d06 	br	23104 <__alt_data_end+0xfffe3104>
   23350:	b827883a 	mov	r19,r23
   23354:	003f8206 	br	23160 <__alt_data_end+0xfffe3160>
   23358:	010007c4 	movi	r4,31
   2335c:	20c02616 	blt	r4,r3,233f8 <__divdf3+0x82c>
   23360:	00800804 	movi	r2,32
   23364:	10c5c83a 	sub	r2,r2,r3
   23368:	888a983a 	sll	r5,r17,r2
   2336c:	40c8d83a 	srl	r4,r8,r3
   23370:	4084983a 	sll	r2,r8,r2
   23374:	88e2d83a 	srl	r17,r17,r3
   23378:	2906b03a 	or	r3,r5,r4
   2337c:	1004c03a 	cmpne	r2,r2,zero
   23380:	1886b03a 	or	r3,r3,r2
   23384:	188001cc 	andi	r2,r3,7
   23388:	10000726 	beq	r2,zero,233a8 <__divdf3+0x7dc>
   2338c:	188003cc 	andi	r2,r3,15
   23390:	01000104 	movi	r4,4
   23394:	11000426 	beq	r2,r4,233a8 <__divdf3+0x7dc>
   23398:	1805883a 	mov	r2,r3
   2339c:	10c00104 	addi	r3,r2,4
   233a0:	1885803a 	cmpltu	r2,r3,r2
   233a4:	88a3883a 	add	r17,r17,r2
   233a8:	8880202c 	andhi	r2,r17,128
   233ac:	10002726 	beq	r2,zero,2344c <__divdf3+0x880>
   233b0:	98c0004c 	andi	r3,r19,1
   233b4:	00800044 	movi	r2,1
   233b8:	000b883a 	mov	r5,zero
   233bc:	0025883a 	mov	r18,zero
   233c0:	003e6106 	br	22d48 <__alt_data_end+0xfffe2d48>
   233c4:	85a1883a 	add	r16,r16,r22
   233c8:	8585803a 	cmpltu	r2,r16,r22
   233cc:	1705883a 	add	r2,r2,fp
   233d0:	14a5883a 	add	r18,r2,r18
   233d4:	8c7fff84 	addi	r17,r17,-2
   233d8:	003f1106 	br	23020 <__alt_data_end+0xfffe3020>
   233dc:	b589883a 	add	r4,r22,r22
   233e0:	25ad803a 	cmpltu	r22,r4,r22
   233e4:	b739883a 	add	fp,r22,fp
   233e8:	40bfff84 	addi	r2,r8,-2
   233ec:	bf2f883a 	add	r23,r23,fp
   233f0:	202d883a 	mov	r22,r4
   233f4:	003f9306 	br	23244 <__alt_data_end+0xfffe3244>
   233f8:	013ff844 	movi	r4,-31
   233fc:	2085c83a 	sub	r2,r4,r2
   23400:	8888d83a 	srl	r4,r17,r2
   23404:	00800804 	movi	r2,32
   23408:	18802126 	beq	r3,r2,23490 <__divdf3+0x8c4>
   2340c:	00801004 	movi	r2,64
   23410:	10c5c83a 	sub	r2,r2,r3
   23414:	8884983a 	sll	r2,r17,r2
   23418:	1204b03a 	or	r2,r2,r8
   2341c:	1004c03a 	cmpne	r2,r2,zero
   23420:	2084b03a 	or	r2,r4,r2
   23424:	144001cc 	andi	r17,r2,7
   23428:	88000d1e 	bne	r17,zero,23460 <__divdf3+0x894>
   2342c:	000b883a 	mov	r5,zero
   23430:	1024d0fa 	srli	r18,r2,3
   23434:	98c0004c 	andi	r3,r19,1
   23438:	0005883a 	mov	r2,zero
   2343c:	9464b03a 	or	r18,r18,r17
   23440:	003e4106 	br	22d48 <__alt_data_end+0xfffe2d48>
   23444:	1007883a 	mov	r3,r2
   23448:	0023883a 	mov	r17,zero
   2344c:	880a927a 	slli	r5,r17,9
   23450:	1805883a 	mov	r2,r3
   23454:	8822977a 	slli	r17,r17,29
   23458:	280ad33a 	srli	r5,r5,12
   2345c:	003ff406 	br	23430 <__alt_data_end+0xfffe3430>
   23460:	10c003cc 	andi	r3,r2,15
   23464:	01000104 	movi	r4,4
   23468:	193ff626 	beq	r3,r4,23444 <__alt_data_end+0xfffe3444>
   2346c:	0023883a 	mov	r17,zero
   23470:	003fca06 	br	2339c <__alt_data_end+0xfffe339c>
   23474:	813fd336 	bltu	r16,r4,233c4 <__alt_data_end+0xfffe33c4>
   23478:	1023883a 	mov	r17,r2
   2347c:	003fa806 	br	23320 <__alt_data_end+0xfffe3320>
   23480:	b0ffd636 	bltu	r22,r3,233dc <__alt_data_end+0xfffe33dc>
   23484:	1011883a 	mov	r8,r2
   23488:	b0ff341e 	bne	r22,r3,2315c <__alt_data_end+0xfffe315c>
   2348c:	003f3406 	br	23160 <__alt_data_end+0xfffe3160>
   23490:	0005883a 	mov	r2,zero
   23494:	003fe006 	br	23418 <__alt_data_end+0xfffe3418>
   23498:	00800434 	movhi	r2,16
   2349c:	89400234 	orhi	r5,r17,8
   234a0:	10bfffc4 	addi	r2,r2,-1
   234a4:	b807883a 	mov	r3,r23
   234a8:	288a703a 	and	r5,r5,r2
   234ac:	4025883a 	mov	r18,r8
   234b0:	003e8206 	br	22ebc <__alt_data_end+0xfffe2ebc>

000234b4 <__eqdf2>:
   234b4:	2804d53a 	srli	r2,r5,20
   234b8:	3806d53a 	srli	r3,r7,20
   234bc:	02000434 	movhi	r8,16
   234c0:	423fffc4 	addi	r8,r8,-1
   234c4:	1081ffcc 	andi	r2,r2,2047
   234c8:	0281ffc4 	movi	r10,2047
   234cc:	2a12703a 	and	r9,r5,r8
   234d0:	18c1ffcc 	andi	r3,r3,2047
   234d4:	3a10703a 	and	r8,r7,r8
   234d8:	280ad7fa 	srli	r5,r5,31
   234dc:	380ed7fa 	srli	r7,r7,31
   234e0:	12801026 	beq	r2,r10,23524 <__eqdf2+0x70>
   234e4:	0281ffc4 	movi	r10,2047
   234e8:	1a800a26 	beq	r3,r10,23514 <__eqdf2+0x60>
   234ec:	10c00226 	beq	r2,r3,234f8 <__eqdf2+0x44>
   234f0:	00800044 	movi	r2,1
   234f4:	f800283a 	ret
   234f8:	4a3ffd1e 	bne	r9,r8,234f0 <__alt_data_end+0xfffe34f0>
   234fc:	21bffc1e 	bne	r4,r6,234f0 <__alt_data_end+0xfffe34f0>
   23500:	29c00c26 	beq	r5,r7,23534 <__eqdf2+0x80>
   23504:	103ffa1e 	bne	r2,zero,234f0 <__alt_data_end+0xfffe34f0>
   23508:	2244b03a 	or	r2,r4,r9
   2350c:	1004c03a 	cmpne	r2,r2,zero
   23510:	f800283a 	ret
   23514:	3214b03a 	or	r10,r6,r8
   23518:	503ff426 	beq	r10,zero,234ec <__alt_data_end+0xfffe34ec>
   2351c:	00800044 	movi	r2,1
   23520:	f800283a 	ret
   23524:	2254b03a 	or	r10,r4,r9
   23528:	503fee26 	beq	r10,zero,234e4 <__alt_data_end+0xfffe34e4>
   2352c:	00800044 	movi	r2,1
   23530:	f800283a 	ret
   23534:	0005883a 	mov	r2,zero
   23538:	f800283a 	ret

0002353c <__gedf2>:
   2353c:	2804d53a 	srli	r2,r5,20
   23540:	3806d53a 	srli	r3,r7,20
   23544:	02000434 	movhi	r8,16
   23548:	423fffc4 	addi	r8,r8,-1
   2354c:	1081ffcc 	andi	r2,r2,2047
   23550:	0241ffc4 	movi	r9,2047
   23554:	2a14703a 	and	r10,r5,r8
   23558:	18c1ffcc 	andi	r3,r3,2047
   2355c:	3a10703a 	and	r8,r7,r8
   23560:	280ad7fa 	srli	r5,r5,31
   23564:	380ed7fa 	srli	r7,r7,31
   23568:	12401d26 	beq	r2,r9,235e0 <__gedf2+0xa4>
   2356c:	0241ffc4 	movi	r9,2047
   23570:	1a401226 	beq	r3,r9,235bc <__gedf2+0x80>
   23574:	1000081e 	bne	r2,zero,23598 <__gedf2+0x5c>
   23578:	2296b03a 	or	r11,r4,r10
   2357c:	5813003a 	cmpeq	r9,r11,zero
   23580:	1800091e 	bne	r3,zero,235a8 <__gedf2+0x6c>
   23584:	3218b03a 	or	r12,r6,r8
   23588:	6000071e 	bne	r12,zero,235a8 <__gedf2+0x6c>
   2358c:	0005883a 	mov	r2,zero
   23590:	5800101e 	bne	r11,zero,235d4 <__gedf2+0x98>
   23594:	f800283a 	ret
   23598:	18000c1e 	bne	r3,zero,235cc <__gedf2+0x90>
   2359c:	3212b03a 	or	r9,r6,r8
   235a0:	48000c26 	beq	r9,zero,235d4 <__gedf2+0x98>
   235a4:	0013883a 	mov	r9,zero
   235a8:	39c03fcc 	andi	r7,r7,255
   235ac:	48000826 	beq	r9,zero,235d0 <__gedf2+0x94>
   235b0:	38000926 	beq	r7,zero,235d8 <__gedf2+0x9c>
   235b4:	00800044 	movi	r2,1
   235b8:	f800283a 	ret
   235bc:	3212b03a 	or	r9,r6,r8
   235c0:	483fec26 	beq	r9,zero,23574 <__alt_data_end+0xfffe3574>
   235c4:	00bfff84 	movi	r2,-2
   235c8:	f800283a 	ret
   235cc:	39c03fcc 	andi	r7,r7,255
   235d0:	29c00626 	beq	r5,r7,235ec <__gedf2+0xb0>
   235d4:	283ff726 	beq	r5,zero,235b4 <__alt_data_end+0xfffe35b4>
   235d8:	00bfffc4 	movi	r2,-1
   235dc:	f800283a 	ret
   235e0:	2292b03a 	or	r9,r4,r10
   235e4:	483fe126 	beq	r9,zero,2356c <__alt_data_end+0xfffe356c>
   235e8:	003ff606 	br	235c4 <__alt_data_end+0xfffe35c4>
   235ec:	18bff916 	blt	r3,r2,235d4 <__alt_data_end+0xfffe35d4>
   235f0:	10c00316 	blt	r2,r3,23600 <__gedf2+0xc4>
   235f4:	42bff736 	bltu	r8,r10,235d4 <__alt_data_end+0xfffe35d4>
   235f8:	52000326 	beq	r10,r8,23608 <__gedf2+0xcc>
   235fc:	5200042e 	bgeu	r10,r8,23610 <__gedf2+0xd4>
   23600:	283fec1e 	bne	r5,zero,235b4 <__alt_data_end+0xfffe35b4>
   23604:	003ff406 	br	235d8 <__alt_data_end+0xfffe35d8>
   23608:	313ff236 	bltu	r6,r4,235d4 <__alt_data_end+0xfffe35d4>
   2360c:	21bffc36 	bltu	r4,r6,23600 <__alt_data_end+0xfffe3600>
   23610:	0005883a 	mov	r2,zero
   23614:	f800283a 	ret

00023618 <__ledf2>:
   23618:	2804d53a 	srli	r2,r5,20
   2361c:	3810d53a 	srli	r8,r7,20
   23620:	00c00434 	movhi	r3,16
   23624:	18ffffc4 	addi	r3,r3,-1
   23628:	1081ffcc 	andi	r2,r2,2047
   2362c:	0241ffc4 	movi	r9,2047
   23630:	28d4703a 	and	r10,r5,r3
   23634:	4201ffcc 	andi	r8,r8,2047
   23638:	38c6703a 	and	r3,r7,r3
   2363c:	280ad7fa 	srli	r5,r5,31
   23640:	380ed7fa 	srli	r7,r7,31
   23644:	12401f26 	beq	r2,r9,236c4 <__ledf2+0xac>
   23648:	0241ffc4 	movi	r9,2047
   2364c:	42401426 	beq	r8,r9,236a0 <__ledf2+0x88>
   23650:	1000091e 	bne	r2,zero,23678 <__ledf2+0x60>
   23654:	2296b03a 	or	r11,r4,r10
   23658:	5813003a 	cmpeq	r9,r11,zero
   2365c:	29403fcc 	andi	r5,r5,255
   23660:	40000a1e 	bne	r8,zero,2368c <__ledf2+0x74>
   23664:	30d8b03a 	or	r12,r6,r3
   23668:	6000081e 	bne	r12,zero,2368c <__ledf2+0x74>
   2366c:	0005883a 	mov	r2,zero
   23670:	5800111e 	bne	r11,zero,236b8 <__ledf2+0xa0>
   23674:	f800283a 	ret
   23678:	29403fcc 	andi	r5,r5,255
   2367c:	40000c1e 	bne	r8,zero,236b0 <__ledf2+0x98>
   23680:	30d2b03a 	or	r9,r6,r3
   23684:	48000c26 	beq	r9,zero,236b8 <__ledf2+0xa0>
   23688:	0013883a 	mov	r9,zero
   2368c:	39c03fcc 	andi	r7,r7,255
   23690:	48000826 	beq	r9,zero,236b4 <__ledf2+0x9c>
   23694:	38001126 	beq	r7,zero,236dc <__ledf2+0xc4>
   23698:	00800044 	movi	r2,1
   2369c:	f800283a 	ret
   236a0:	30d2b03a 	or	r9,r6,r3
   236a4:	483fea26 	beq	r9,zero,23650 <__alt_data_end+0xfffe3650>
   236a8:	00800084 	movi	r2,2
   236ac:	f800283a 	ret
   236b0:	39c03fcc 	andi	r7,r7,255
   236b4:	39400726 	beq	r7,r5,236d4 <__ledf2+0xbc>
   236b8:	2800081e 	bne	r5,zero,236dc <__ledf2+0xc4>
   236bc:	00800044 	movi	r2,1
   236c0:	f800283a 	ret
   236c4:	2292b03a 	or	r9,r4,r10
   236c8:	483fdf26 	beq	r9,zero,23648 <__alt_data_end+0xfffe3648>
   236cc:	00800084 	movi	r2,2
   236d0:	f800283a 	ret
   236d4:	4080030e 	bge	r8,r2,236e4 <__ledf2+0xcc>
   236d8:	383fef26 	beq	r7,zero,23698 <__alt_data_end+0xfffe3698>
   236dc:	00bfffc4 	movi	r2,-1
   236e0:	f800283a 	ret
   236e4:	123feb16 	blt	r2,r8,23694 <__alt_data_end+0xfffe3694>
   236e8:	1abff336 	bltu	r3,r10,236b8 <__alt_data_end+0xfffe36b8>
   236ec:	50c00326 	beq	r10,r3,236fc <__ledf2+0xe4>
   236f0:	50c0042e 	bgeu	r10,r3,23704 <__ledf2+0xec>
   236f4:	283fe81e 	bne	r5,zero,23698 <__alt_data_end+0xfffe3698>
   236f8:	003ff806 	br	236dc <__alt_data_end+0xfffe36dc>
   236fc:	313fee36 	bltu	r6,r4,236b8 <__alt_data_end+0xfffe36b8>
   23700:	21bffc36 	bltu	r4,r6,236f4 <__alt_data_end+0xfffe36f4>
   23704:	0005883a 	mov	r2,zero
   23708:	f800283a 	ret

0002370c <__muldf3>:
   2370c:	defff304 	addi	sp,sp,-52
   23710:	2804d53a 	srli	r2,r5,20
   23714:	dd800915 	stw	r22,36(sp)
   23718:	282cd7fa 	srli	r22,r5,31
   2371c:	dc000315 	stw	r16,12(sp)
   23720:	04000434 	movhi	r16,16
   23724:	dd400815 	stw	r21,32(sp)
   23728:	dc800515 	stw	r18,20(sp)
   2372c:	843fffc4 	addi	r16,r16,-1
   23730:	dfc00c15 	stw	ra,48(sp)
   23734:	df000b15 	stw	fp,44(sp)
   23738:	ddc00a15 	stw	r23,40(sp)
   2373c:	dd000715 	stw	r20,28(sp)
   23740:	dcc00615 	stw	r19,24(sp)
   23744:	dc400415 	stw	r17,16(sp)
   23748:	1481ffcc 	andi	r18,r2,2047
   2374c:	2c20703a 	and	r16,r5,r16
   23750:	b02b883a 	mov	r21,r22
   23754:	b2403fcc 	andi	r9,r22,255
   23758:	90006026 	beq	r18,zero,238dc <__muldf3+0x1d0>
   2375c:	0081ffc4 	movi	r2,2047
   23760:	2029883a 	mov	r20,r4
   23764:	90803626 	beq	r18,r2,23840 <__muldf3+0x134>
   23768:	80800434 	orhi	r2,r16,16
   2376c:	100490fa 	slli	r2,r2,3
   23770:	2020d77a 	srli	r16,r4,29
   23774:	202890fa 	slli	r20,r4,3
   23778:	94bf0044 	addi	r18,r18,-1023
   2377c:	80a0b03a 	or	r16,r16,r2
   23780:	0027883a 	mov	r19,zero
   23784:	0039883a 	mov	fp,zero
   23788:	3804d53a 	srli	r2,r7,20
   2378c:	382ed7fa 	srli	r23,r7,31
   23790:	04400434 	movhi	r17,16
   23794:	8c7fffc4 	addi	r17,r17,-1
   23798:	1081ffcc 	andi	r2,r2,2047
   2379c:	3011883a 	mov	r8,r6
   237a0:	3c62703a 	and	r17,r7,r17
   237a4:	ba803fcc 	andi	r10,r23,255
   237a8:	10006d26 	beq	r2,zero,23960 <__muldf3+0x254>
   237ac:	00c1ffc4 	movi	r3,2047
   237b0:	10c06526 	beq	r2,r3,23948 <__muldf3+0x23c>
   237b4:	88c00434 	orhi	r3,r17,16
   237b8:	180690fa 	slli	r3,r3,3
   237bc:	3022d77a 	srli	r17,r6,29
   237c0:	301090fa 	slli	r8,r6,3
   237c4:	10bf0044 	addi	r2,r2,-1023
   237c8:	88e2b03a 	or	r17,r17,r3
   237cc:	000b883a 	mov	r5,zero
   237d0:	9085883a 	add	r2,r18,r2
   237d4:	2cc8b03a 	or	r4,r5,r19
   237d8:	00c003c4 	movi	r3,15
   237dc:	bdacf03a 	xor	r22,r23,r22
   237e0:	12c00044 	addi	r11,r2,1
   237e4:	19009936 	bltu	r3,r4,23a4c <__muldf3+0x340>
   237e8:	200890ba 	slli	r4,r4,2
   237ec:	00c000b4 	movhi	r3,2
   237f0:	18ce0004 	addi	r3,r3,14336
   237f4:	20c9883a 	add	r4,r4,r3
   237f8:	20c00017 	ldw	r3,0(r4)
   237fc:	1800683a 	jmp	r3
   23800:	00023a4c 	andi	zero,zero,2281
   23804:	00023860 	cmpeqi	zero,zero,2273
   23808:	00023860 	cmpeqi	zero,zero,2273
   2380c:	0002385c 	xori	zero,zero,2273
   23810:	00023a28 	cmpgeui	zero,zero,2280
   23814:	00023a28 	cmpgeui	zero,zero,2280
   23818:	00023a10 	cmplti	zero,zero,2280
   2381c:	0002385c 	xori	zero,zero,2273
   23820:	00023a28 	cmpgeui	zero,zero,2280
   23824:	00023a10 	cmplti	zero,zero,2280
   23828:	00023a28 	cmpgeui	zero,zero,2280
   2382c:	0002385c 	xori	zero,zero,2273
   23830:	00023a38 	rdprs	zero,zero,2280
   23834:	00023a38 	rdprs	zero,zero,2280
   23838:	00023a38 	rdprs	zero,zero,2280
   2383c:	00023c54 	movui	zero,2289
   23840:	2404b03a 	or	r2,r4,r16
   23844:	10006f1e 	bne	r2,zero,23a04 <__muldf3+0x2f8>
   23848:	04c00204 	movi	r19,8
   2384c:	0021883a 	mov	r16,zero
   23850:	0029883a 	mov	r20,zero
   23854:	07000084 	movi	fp,2
   23858:	003fcb06 	br	23788 <__alt_data_end+0xfffe3788>
   2385c:	502d883a 	mov	r22,r10
   23860:	00800084 	movi	r2,2
   23864:	28805726 	beq	r5,r2,239c4 <__muldf3+0x2b8>
   23868:	008000c4 	movi	r2,3
   2386c:	28816626 	beq	r5,r2,23e08 <__muldf3+0x6fc>
   23870:	00800044 	movi	r2,1
   23874:	2881411e 	bne	r5,r2,23d7c <__muldf3+0x670>
   23878:	b02b883a 	mov	r21,r22
   2387c:	0005883a 	mov	r2,zero
   23880:	000b883a 	mov	r5,zero
   23884:	0029883a 	mov	r20,zero
   23888:	1004953a 	slli	r2,r2,20
   2388c:	a8c03fcc 	andi	r3,r21,255
   23890:	04400434 	movhi	r17,16
   23894:	8c7fffc4 	addi	r17,r17,-1
   23898:	180697fa 	slli	r3,r3,31
   2389c:	2c4a703a 	and	r5,r5,r17
   238a0:	288ab03a 	or	r5,r5,r2
   238a4:	28c6b03a 	or	r3,r5,r3
   238a8:	a005883a 	mov	r2,r20
   238ac:	dfc00c17 	ldw	ra,48(sp)
   238b0:	df000b17 	ldw	fp,44(sp)
   238b4:	ddc00a17 	ldw	r23,40(sp)
   238b8:	dd800917 	ldw	r22,36(sp)
   238bc:	dd400817 	ldw	r21,32(sp)
   238c0:	dd000717 	ldw	r20,28(sp)
   238c4:	dcc00617 	ldw	r19,24(sp)
   238c8:	dc800517 	ldw	r18,20(sp)
   238cc:	dc400417 	ldw	r17,16(sp)
   238d0:	dc000317 	ldw	r16,12(sp)
   238d4:	dec00d04 	addi	sp,sp,52
   238d8:	f800283a 	ret
   238dc:	2404b03a 	or	r2,r4,r16
   238e0:	2027883a 	mov	r19,r4
   238e4:	10004226 	beq	r2,zero,239f0 <__muldf3+0x2e4>
   238e8:	8000fc26 	beq	r16,zero,23cdc <__muldf3+0x5d0>
   238ec:	8009883a 	mov	r4,r16
   238f0:	d9800215 	stw	r6,8(sp)
   238f4:	d9c00015 	stw	r7,0(sp)
   238f8:	da400115 	stw	r9,4(sp)
   238fc:	002487c0 	call	2487c <__clzsi2>
   23900:	d9800217 	ldw	r6,8(sp)
   23904:	d9c00017 	ldw	r7,0(sp)
   23908:	da400117 	ldw	r9,4(sp)
   2390c:	113ffd44 	addi	r4,r2,-11
   23910:	00c00704 	movi	r3,28
   23914:	1900ed16 	blt	r3,r4,23ccc <__muldf3+0x5c0>
   23918:	00c00744 	movi	r3,29
   2391c:	147ffe04 	addi	r17,r2,-8
   23920:	1907c83a 	sub	r3,r3,r4
   23924:	8460983a 	sll	r16,r16,r17
   23928:	98c6d83a 	srl	r3,r19,r3
   2392c:	9c68983a 	sll	r20,r19,r17
   23930:	1c20b03a 	or	r16,r3,r16
   23934:	1080fcc4 	addi	r2,r2,1011
   23938:	00a5c83a 	sub	r18,zero,r2
   2393c:	0027883a 	mov	r19,zero
   23940:	0039883a 	mov	fp,zero
   23944:	003f9006 	br	23788 <__alt_data_end+0xfffe3788>
   23948:	3446b03a 	or	r3,r6,r17
   2394c:	1800261e 	bne	r3,zero,239e8 <__muldf3+0x2dc>
   23950:	0023883a 	mov	r17,zero
   23954:	0011883a 	mov	r8,zero
   23958:	01400084 	movi	r5,2
   2395c:	003f9c06 	br	237d0 <__alt_data_end+0xfffe37d0>
   23960:	3446b03a 	or	r3,r6,r17
   23964:	18001c26 	beq	r3,zero,239d8 <__muldf3+0x2cc>
   23968:	8800ce26 	beq	r17,zero,23ca4 <__muldf3+0x598>
   2396c:	8809883a 	mov	r4,r17
   23970:	d9800215 	stw	r6,8(sp)
   23974:	da400115 	stw	r9,4(sp)
   23978:	da800015 	stw	r10,0(sp)
   2397c:	002487c0 	call	2487c <__clzsi2>
   23980:	d9800217 	ldw	r6,8(sp)
   23984:	da400117 	ldw	r9,4(sp)
   23988:	da800017 	ldw	r10,0(sp)
   2398c:	113ffd44 	addi	r4,r2,-11
   23990:	00c00704 	movi	r3,28
   23994:	1900bf16 	blt	r3,r4,23c94 <__muldf3+0x588>
   23998:	00c00744 	movi	r3,29
   2399c:	123ffe04 	addi	r8,r2,-8
   239a0:	1907c83a 	sub	r3,r3,r4
   239a4:	8a22983a 	sll	r17,r17,r8
   239a8:	30c6d83a 	srl	r3,r6,r3
   239ac:	3210983a 	sll	r8,r6,r8
   239b0:	1c62b03a 	or	r17,r3,r17
   239b4:	1080fcc4 	addi	r2,r2,1011
   239b8:	0085c83a 	sub	r2,zero,r2
   239bc:	000b883a 	mov	r5,zero
   239c0:	003f8306 	br	237d0 <__alt_data_end+0xfffe37d0>
   239c4:	b02b883a 	mov	r21,r22
   239c8:	0081ffc4 	movi	r2,2047
   239cc:	000b883a 	mov	r5,zero
   239d0:	0029883a 	mov	r20,zero
   239d4:	003fac06 	br	23888 <__alt_data_end+0xfffe3888>
   239d8:	0023883a 	mov	r17,zero
   239dc:	0011883a 	mov	r8,zero
   239e0:	01400044 	movi	r5,1
   239e4:	003f7a06 	br	237d0 <__alt_data_end+0xfffe37d0>
   239e8:	014000c4 	movi	r5,3
   239ec:	003f7806 	br	237d0 <__alt_data_end+0xfffe37d0>
   239f0:	04c00104 	movi	r19,4
   239f4:	0021883a 	mov	r16,zero
   239f8:	0029883a 	mov	r20,zero
   239fc:	07000044 	movi	fp,1
   23a00:	003f6106 	br	23788 <__alt_data_end+0xfffe3788>
   23a04:	04c00304 	movi	r19,12
   23a08:	070000c4 	movi	fp,3
   23a0c:	003f5e06 	br	23788 <__alt_data_end+0xfffe3788>
   23a10:	01400434 	movhi	r5,16
   23a14:	002b883a 	mov	r21,zero
   23a18:	297fffc4 	addi	r5,r5,-1
   23a1c:	053fffc4 	movi	r20,-1
   23a20:	0081ffc4 	movi	r2,2047
   23a24:	003f9806 	br	23888 <__alt_data_end+0xfffe3888>
   23a28:	8023883a 	mov	r17,r16
   23a2c:	a011883a 	mov	r8,r20
   23a30:	e00b883a 	mov	r5,fp
   23a34:	003f8a06 	br	23860 <__alt_data_end+0xfffe3860>
   23a38:	8023883a 	mov	r17,r16
   23a3c:	a011883a 	mov	r8,r20
   23a40:	482d883a 	mov	r22,r9
   23a44:	e00b883a 	mov	r5,fp
   23a48:	003f8506 	br	23860 <__alt_data_end+0xfffe3860>
   23a4c:	a00ad43a 	srli	r5,r20,16
   23a50:	401ad43a 	srli	r13,r8,16
   23a54:	a53fffcc 	andi	r20,r20,65535
   23a58:	423fffcc 	andi	r8,r8,65535
   23a5c:	4519383a 	mul	r12,r8,r20
   23a60:	4147383a 	mul	r3,r8,r5
   23a64:	6d09383a 	mul	r4,r13,r20
   23a68:	600cd43a 	srli	r6,r12,16
   23a6c:	2b5d383a 	mul	r14,r5,r13
   23a70:	20c9883a 	add	r4,r4,r3
   23a74:	310d883a 	add	r6,r6,r4
   23a78:	30c0022e 	bgeu	r6,r3,23a84 <__muldf3+0x378>
   23a7c:	00c00074 	movhi	r3,1
   23a80:	70dd883a 	add	r14,r14,r3
   23a84:	8826d43a 	srli	r19,r17,16
   23a88:	8bffffcc 	andi	r15,r17,65535
   23a8c:	7d23383a 	mul	r17,r15,r20
   23a90:	7949383a 	mul	r4,r15,r5
   23a94:	9d29383a 	mul	r20,r19,r20
   23a98:	8814d43a 	srli	r10,r17,16
   23a9c:	3012943a 	slli	r9,r6,16
   23aa0:	a129883a 	add	r20,r20,r4
   23aa4:	633fffcc 	andi	r12,r12,65535
   23aa8:	5515883a 	add	r10,r10,r20
   23aac:	3006d43a 	srli	r3,r6,16
   23ab0:	4b13883a 	add	r9,r9,r12
   23ab4:	2ccb383a 	mul	r5,r5,r19
   23ab8:	5100022e 	bgeu	r10,r4,23ac4 <__muldf3+0x3b8>
   23abc:	01000074 	movhi	r4,1
   23ac0:	290b883a 	add	r5,r5,r4
   23ac4:	802ad43a 	srli	r21,r16,16
   23ac8:	843fffcc 	andi	r16,r16,65535
   23acc:	440d383a 	mul	r6,r8,r16
   23ad0:	4565383a 	mul	r18,r8,r21
   23ad4:	8349383a 	mul	r4,r16,r13
   23ad8:	500e943a 	slli	r7,r10,16
   23adc:	3010d43a 	srli	r8,r6,16
   23ae0:	5028d43a 	srli	r20,r10,16
   23ae4:	2489883a 	add	r4,r4,r18
   23ae8:	8abfffcc 	andi	r10,r17,65535
   23aec:	3a95883a 	add	r10,r7,r10
   23af0:	4119883a 	add	r12,r8,r4
   23af4:	a169883a 	add	r20,r20,r5
   23af8:	1a87883a 	add	r3,r3,r10
   23afc:	6d5b383a 	mul	r13,r13,r21
   23b00:	6480022e 	bgeu	r12,r18,23b0c <__muldf3+0x400>
   23b04:	01000074 	movhi	r4,1
   23b08:	691b883a 	add	r13,r13,r4
   23b0c:	7c25383a 	mul	r18,r15,r16
   23b10:	7d4b383a 	mul	r5,r15,r21
   23b14:	84cf383a 	mul	r7,r16,r19
   23b18:	901ed43a 	srli	r15,r18,16
   23b1c:	6008d43a 	srli	r4,r12,16
   23b20:	6010943a 	slli	r8,r12,16
   23b24:	394f883a 	add	r7,r7,r5
   23b28:	333fffcc 	andi	r12,r6,65535
   23b2c:	79df883a 	add	r15,r15,r7
   23b30:	235b883a 	add	r13,r4,r13
   23b34:	9d63383a 	mul	r17,r19,r21
   23b38:	4309883a 	add	r4,r8,r12
   23b3c:	7940022e 	bgeu	r15,r5,23b48 <__muldf3+0x43c>
   23b40:	01400074 	movhi	r5,1
   23b44:	8963883a 	add	r17,r17,r5
   23b48:	780a943a 	slli	r5,r15,16
   23b4c:	91bfffcc 	andi	r6,r18,65535
   23b50:	70c7883a 	add	r3,r14,r3
   23b54:	298d883a 	add	r6,r5,r6
   23b58:	1a8f803a 	cmpltu	r7,r3,r10
   23b5c:	350b883a 	add	r5,r6,r20
   23b60:	20c7883a 	add	r3,r4,r3
   23b64:	3955883a 	add	r10,r7,r5
   23b68:	1909803a 	cmpltu	r4,r3,r4
   23b6c:	6a91883a 	add	r8,r13,r10
   23b70:	780cd43a 	srli	r6,r15,16
   23b74:	2219883a 	add	r12,r4,r8
   23b78:	2d0b803a 	cmpltu	r5,r5,r20
   23b7c:	51cf803a 	cmpltu	r7,r10,r7
   23b80:	29ceb03a 	or	r7,r5,r7
   23b84:	4351803a 	cmpltu	r8,r8,r13
   23b88:	610b803a 	cmpltu	r5,r12,r4
   23b8c:	4148b03a 	or	r4,r8,r5
   23b90:	398f883a 	add	r7,r7,r6
   23b94:	3909883a 	add	r4,r7,r4
   23b98:	1810927a 	slli	r8,r3,9
   23b9c:	2449883a 	add	r4,r4,r17
   23ba0:	2008927a 	slli	r4,r4,9
   23ba4:	6022d5fa 	srli	r17,r12,23
   23ba8:	1806d5fa 	srli	r3,r3,23
   23bac:	4252b03a 	or	r9,r8,r9
   23bb0:	600a927a 	slli	r5,r12,9
   23bb4:	4810c03a 	cmpne	r8,r9,zero
   23bb8:	2462b03a 	or	r17,r4,r17
   23bbc:	40c6b03a 	or	r3,r8,r3
   23bc0:	8900402c 	andhi	r4,r17,256
   23bc4:	1950b03a 	or	r8,r3,r5
   23bc8:	20000726 	beq	r4,zero,23be8 <__muldf3+0x4dc>
   23bcc:	4006d07a 	srli	r3,r8,1
   23bd0:	880497fa 	slli	r2,r17,31
   23bd4:	4200004c 	andi	r8,r8,1
   23bd8:	8822d07a 	srli	r17,r17,1
   23bdc:	1a10b03a 	or	r8,r3,r8
   23be0:	1210b03a 	or	r8,r2,r8
   23be4:	5805883a 	mov	r2,r11
   23be8:	1140ffc4 	addi	r5,r2,1023
   23bec:	0140440e 	bge	zero,r5,23d00 <__muldf3+0x5f4>
   23bf0:	40c001cc 	andi	r3,r8,7
   23bf4:	18000726 	beq	r3,zero,23c14 <__muldf3+0x508>
   23bf8:	40c003cc 	andi	r3,r8,15
   23bfc:	01000104 	movi	r4,4
   23c00:	19000426 	beq	r3,r4,23c14 <__muldf3+0x508>
   23c04:	4107883a 	add	r3,r8,r4
   23c08:	1a11803a 	cmpltu	r8,r3,r8
   23c0c:	8a23883a 	add	r17,r17,r8
   23c10:	1811883a 	mov	r8,r3
   23c14:	88c0402c 	andhi	r3,r17,256
   23c18:	18000426 	beq	r3,zero,23c2c <__muldf3+0x520>
   23c1c:	11410004 	addi	r5,r2,1024
   23c20:	00bfc034 	movhi	r2,65280
   23c24:	10bfffc4 	addi	r2,r2,-1
   23c28:	88a2703a 	and	r17,r17,r2
   23c2c:	0081ff84 	movi	r2,2046
   23c30:	117f6416 	blt	r2,r5,239c4 <__alt_data_end+0xfffe39c4>
   23c34:	8828977a 	slli	r20,r17,29
   23c38:	4010d0fa 	srli	r8,r8,3
   23c3c:	8822927a 	slli	r17,r17,9
   23c40:	2881ffcc 	andi	r2,r5,2047
   23c44:	a228b03a 	or	r20,r20,r8
   23c48:	880ad33a 	srli	r5,r17,12
   23c4c:	b02b883a 	mov	r21,r22
   23c50:	003f0d06 	br	23888 <__alt_data_end+0xfffe3888>
   23c54:	8080022c 	andhi	r2,r16,8
   23c58:	10000926 	beq	r2,zero,23c80 <__muldf3+0x574>
   23c5c:	8880022c 	andhi	r2,r17,8
   23c60:	1000071e 	bne	r2,zero,23c80 <__muldf3+0x574>
   23c64:	00800434 	movhi	r2,16
   23c68:	89400234 	orhi	r5,r17,8
   23c6c:	10bfffc4 	addi	r2,r2,-1
   23c70:	b82b883a 	mov	r21,r23
   23c74:	288a703a 	and	r5,r5,r2
   23c78:	4029883a 	mov	r20,r8
   23c7c:	003f6806 	br	23a20 <__alt_data_end+0xfffe3a20>
   23c80:	00800434 	movhi	r2,16
   23c84:	81400234 	orhi	r5,r16,8
   23c88:	10bfffc4 	addi	r2,r2,-1
   23c8c:	288a703a 	and	r5,r5,r2
   23c90:	003f6306 	br	23a20 <__alt_data_end+0xfffe3a20>
   23c94:	147ff604 	addi	r17,r2,-40
   23c98:	3462983a 	sll	r17,r6,r17
   23c9c:	0011883a 	mov	r8,zero
   23ca0:	003f4406 	br	239b4 <__alt_data_end+0xfffe39b4>
   23ca4:	3009883a 	mov	r4,r6
   23ca8:	d9800215 	stw	r6,8(sp)
   23cac:	da400115 	stw	r9,4(sp)
   23cb0:	da800015 	stw	r10,0(sp)
   23cb4:	002487c0 	call	2487c <__clzsi2>
   23cb8:	10800804 	addi	r2,r2,32
   23cbc:	da800017 	ldw	r10,0(sp)
   23cc0:	da400117 	ldw	r9,4(sp)
   23cc4:	d9800217 	ldw	r6,8(sp)
   23cc8:	003f3006 	br	2398c <__alt_data_end+0xfffe398c>
   23ccc:	143ff604 	addi	r16,r2,-40
   23cd0:	9c20983a 	sll	r16,r19,r16
   23cd4:	0029883a 	mov	r20,zero
   23cd8:	003f1606 	br	23934 <__alt_data_end+0xfffe3934>
   23cdc:	d9800215 	stw	r6,8(sp)
   23ce0:	d9c00015 	stw	r7,0(sp)
   23ce4:	da400115 	stw	r9,4(sp)
   23ce8:	002487c0 	call	2487c <__clzsi2>
   23cec:	10800804 	addi	r2,r2,32
   23cf0:	da400117 	ldw	r9,4(sp)
   23cf4:	d9c00017 	ldw	r7,0(sp)
   23cf8:	d9800217 	ldw	r6,8(sp)
   23cfc:	003f0306 	br	2390c <__alt_data_end+0xfffe390c>
   23d00:	00c00044 	movi	r3,1
   23d04:	1947c83a 	sub	r3,r3,r5
   23d08:	00800e04 	movi	r2,56
   23d0c:	10feda16 	blt	r2,r3,23878 <__alt_data_end+0xfffe3878>
   23d10:	008007c4 	movi	r2,31
   23d14:	10c01b16 	blt	r2,r3,23d84 <__muldf3+0x678>
   23d18:	00800804 	movi	r2,32
   23d1c:	10c5c83a 	sub	r2,r2,r3
   23d20:	888a983a 	sll	r5,r17,r2
   23d24:	40c8d83a 	srl	r4,r8,r3
   23d28:	4084983a 	sll	r2,r8,r2
   23d2c:	88e2d83a 	srl	r17,r17,r3
   23d30:	2906b03a 	or	r3,r5,r4
   23d34:	1004c03a 	cmpne	r2,r2,zero
   23d38:	1886b03a 	or	r3,r3,r2
   23d3c:	188001cc 	andi	r2,r3,7
   23d40:	10000726 	beq	r2,zero,23d60 <__muldf3+0x654>
   23d44:	188003cc 	andi	r2,r3,15
   23d48:	01000104 	movi	r4,4
   23d4c:	11000426 	beq	r2,r4,23d60 <__muldf3+0x654>
   23d50:	1805883a 	mov	r2,r3
   23d54:	10c00104 	addi	r3,r2,4
   23d58:	1885803a 	cmpltu	r2,r3,r2
   23d5c:	88a3883a 	add	r17,r17,r2
   23d60:	8880202c 	andhi	r2,r17,128
   23d64:	10001c26 	beq	r2,zero,23dd8 <__muldf3+0x6cc>
   23d68:	b02b883a 	mov	r21,r22
   23d6c:	00800044 	movi	r2,1
   23d70:	000b883a 	mov	r5,zero
   23d74:	0029883a 	mov	r20,zero
   23d78:	003ec306 	br	23888 <__alt_data_end+0xfffe3888>
   23d7c:	5805883a 	mov	r2,r11
   23d80:	003f9906 	br	23be8 <__alt_data_end+0xfffe3be8>
   23d84:	00bff844 	movi	r2,-31
   23d88:	1145c83a 	sub	r2,r2,r5
   23d8c:	8888d83a 	srl	r4,r17,r2
   23d90:	00800804 	movi	r2,32
   23d94:	18801a26 	beq	r3,r2,23e00 <__muldf3+0x6f4>
   23d98:	00801004 	movi	r2,64
   23d9c:	10c5c83a 	sub	r2,r2,r3
   23da0:	8884983a 	sll	r2,r17,r2
   23da4:	1204b03a 	or	r2,r2,r8
   23da8:	1004c03a 	cmpne	r2,r2,zero
   23dac:	2084b03a 	or	r2,r4,r2
   23db0:	144001cc 	andi	r17,r2,7
   23db4:	88000d1e 	bne	r17,zero,23dec <__muldf3+0x6e0>
   23db8:	000b883a 	mov	r5,zero
   23dbc:	1028d0fa 	srli	r20,r2,3
   23dc0:	b02b883a 	mov	r21,r22
   23dc4:	0005883a 	mov	r2,zero
   23dc8:	a468b03a 	or	r20,r20,r17
   23dcc:	003eae06 	br	23888 <__alt_data_end+0xfffe3888>
   23dd0:	1007883a 	mov	r3,r2
   23dd4:	0023883a 	mov	r17,zero
   23dd8:	880a927a 	slli	r5,r17,9
   23ddc:	1805883a 	mov	r2,r3
   23de0:	8822977a 	slli	r17,r17,29
   23de4:	280ad33a 	srli	r5,r5,12
   23de8:	003ff406 	br	23dbc <__alt_data_end+0xfffe3dbc>
   23dec:	10c003cc 	andi	r3,r2,15
   23df0:	01000104 	movi	r4,4
   23df4:	193ff626 	beq	r3,r4,23dd0 <__alt_data_end+0xfffe3dd0>
   23df8:	0023883a 	mov	r17,zero
   23dfc:	003fd506 	br	23d54 <__alt_data_end+0xfffe3d54>
   23e00:	0005883a 	mov	r2,zero
   23e04:	003fe706 	br	23da4 <__alt_data_end+0xfffe3da4>
   23e08:	00800434 	movhi	r2,16
   23e0c:	89400234 	orhi	r5,r17,8
   23e10:	10bfffc4 	addi	r2,r2,-1
   23e14:	b02b883a 	mov	r21,r22
   23e18:	288a703a 	and	r5,r5,r2
   23e1c:	4029883a 	mov	r20,r8
   23e20:	003eff06 	br	23a20 <__alt_data_end+0xfffe3a20>

00023e24 <__subdf3>:
   23e24:	02000434 	movhi	r8,16
   23e28:	423fffc4 	addi	r8,r8,-1
   23e2c:	defffb04 	addi	sp,sp,-20
   23e30:	2a14703a 	and	r10,r5,r8
   23e34:	3812d53a 	srli	r9,r7,20
   23e38:	3a10703a 	and	r8,r7,r8
   23e3c:	2006d77a 	srli	r3,r4,29
   23e40:	3004d77a 	srli	r2,r6,29
   23e44:	dc000015 	stw	r16,0(sp)
   23e48:	501490fa 	slli	r10,r10,3
   23e4c:	2820d53a 	srli	r16,r5,20
   23e50:	401090fa 	slli	r8,r8,3
   23e54:	dc800215 	stw	r18,8(sp)
   23e58:	dc400115 	stw	r17,4(sp)
   23e5c:	dfc00415 	stw	ra,16(sp)
   23e60:	202290fa 	slli	r17,r4,3
   23e64:	dcc00315 	stw	r19,12(sp)
   23e68:	4a41ffcc 	andi	r9,r9,2047
   23e6c:	0101ffc4 	movi	r4,2047
   23e70:	2824d7fa 	srli	r18,r5,31
   23e74:	8401ffcc 	andi	r16,r16,2047
   23e78:	50c6b03a 	or	r3,r10,r3
   23e7c:	380ed7fa 	srli	r7,r7,31
   23e80:	408ab03a 	or	r5,r8,r2
   23e84:	300c90fa 	slli	r6,r6,3
   23e88:	49009626 	beq	r9,r4,240e4 <__subdf3+0x2c0>
   23e8c:	39c0005c 	xori	r7,r7,1
   23e90:	8245c83a 	sub	r2,r16,r9
   23e94:	3c807426 	beq	r7,r18,24068 <__subdf3+0x244>
   23e98:	0080af0e 	bge	zero,r2,24158 <__subdf3+0x334>
   23e9c:	48002a1e 	bne	r9,zero,23f48 <__subdf3+0x124>
   23ea0:	2988b03a 	or	r4,r5,r6
   23ea4:	20009a1e 	bne	r4,zero,24110 <__subdf3+0x2ec>
   23ea8:	888001cc 	andi	r2,r17,7
   23eac:	10000726 	beq	r2,zero,23ecc <__subdf3+0xa8>
   23eb0:	888003cc 	andi	r2,r17,15
   23eb4:	01000104 	movi	r4,4
   23eb8:	11000426 	beq	r2,r4,23ecc <__subdf3+0xa8>
   23ebc:	890b883a 	add	r5,r17,r4
   23ec0:	2c63803a 	cmpltu	r17,r5,r17
   23ec4:	1c47883a 	add	r3,r3,r17
   23ec8:	2823883a 	mov	r17,r5
   23ecc:	1880202c 	andhi	r2,r3,128
   23ed0:	10005926 	beq	r2,zero,24038 <__subdf3+0x214>
   23ed4:	84000044 	addi	r16,r16,1
   23ed8:	0081ffc4 	movi	r2,2047
   23edc:	8080be26 	beq	r16,r2,241d8 <__subdf3+0x3b4>
   23ee0:	017fe034 	movhi	r5,65408
   23ee4:	297fffc4 	addi	r5,r5,-1
   23ee8:	1946703a 	and	r3,r3,r5
   23eec:	1804977a 	slli	r2,r3,29
   23ef0:	1806927a 	slli	r3,r3,9
   23ef4:	8822d0fa 	srli	r17,r17,3
   23ef8:	8401ffcc 	andi	r16,r16,2047
   23efc:	180ad33a 	srli	r5,r3,12
   23f00:	9100004c 	andi	r4,r18,1
   23f04:	1444b03a 	or	r2,r2,r17
   23f08:	80c1ffcc 	andi	r3,r16,2047
   23f0c:	1820953a 	slli	r16,r3,20
   23f10:	20c03fcc 	andi	r3,r4,255
   23f14:	180897fa 	slli	r4,r3,31
   23f18:	00c00434 	movhi	r3,16
   23f1c:	18ffffc4 	addi	r3,r3,-1
   23f20:	28c6703a 	and	r3,r5,r3
   23f24:	1c06b03a 	or	r3,r3,r16
   23f28:	1906b03a 	or	r3,r3,r4
   23f2c:	dfc00417 	ldw	ra,16(sp)
   23f30:	dcc00317 	ldw	r19,12(sp)
   23f34:	dc800217 	ldw	r18,8(sp)
   23f38:	dc400117 	ldw	r17,4(sp)
   23f3c:	dc000017 	ldw	r16,0(sp)
   23f40:	dec00504 	addi	sp,sp,20
   23f44:	f800283a 	ret
   23f48:	0101ffc4 	movi	r4,2047
   23f4c:	813fd626 	beq	r16,r4,23ea8 <__alt_data_end+0xfffe3ea8>
   23f50:	29402034 	orhi	r5,r5,128
   23f54:	01000e04 	movi	r4,56
   23f58:	2080a316 	blt	r4,r2,241e8 <__subdf3+0x3c4>
   23f5c:	010007c4 	movi	r4,31
   23f60:	2080c616 	blt	r4,r2,2427c <__subdf3+0x458>
   23f64:	01000804 	movi	r4,32
   23f68:	2089c83a 	sub	r4,r4,r2
   23f6c:	2910983a 	sll	r8,r5,r4
   23f70:	308ed83a 	srl	r7,r6,r2
   23f74:	3108983a 	sll	r4,r6,r4
   23f78:	2884d83a 	srl	r2,r5,r2
   23f7c:	41ccb03a 	or	r6,r8,r7
   23f80:	2008c03a 	cmpne	r4,r4,zero
   23f84:	310cb03a 	or	r6,r6,r4
   23f88:	898dc83a 	sub	r6,r17,r6
   23f8c:	89a3803a 	cmpltu	r17,r17,r6
   23f90:	1887c83a 	sub	r3,r3,r2
   23f94:	1c47c83a 	sub	r3,r3,r17
   23f98:	3023883a 	mov	r17,r6
   23f9c:	1880202c 	andhi	r2,r3,128
   23fa0:	10002326 	beq	r2,zero,24030 <__subdf3+0x20c>
   23fa4:	04c02034 	movhi	r19,128
   23fa8:	9cffffc4 	addi	r19,r19,-1
   23fac:	1ce6703a 	and	r19,r3,r19
   23fb0:	98007a26 	beq	r19,zero,2419c <__subdf3+0x378>
   23fb4:	9809883a 	mov	r4,r19
   23fb8:	002487c0 	call	2487c <__clzsi2>
   23fbc:	113ffe04 	addi	r4,r2,-8
   23fc0:	00c007c4 	movi	r3,31
   23fc4:	19007b16 	blt	r3,r4,241b4 <__subdf3+0x390>
   23fc8:	00800804 	movi	r2,32
   23fcc:	1105c83a 	sub	r2,r2,r4
   23fd0:	8884d83a 	srl	r2,r17,r2
   23fd4:	9906983a 	sll	r3,r19,r4
   23fd8:	8922983a 	sll	r17,r17,r4
   23fdc:	10c4b03a 	or	r2,r2,r3
   23fe0:	24007816 	blt	r4,r16,241c4 <__subdf3+0x3a0>
   23fe4:	2421c83a 	sub	r16,r4,r16
   23fe8:	80c00044 	addi	r3,r16,1
   23fec:	010007c4 	movi	r4,31
   23ff0:	20c09516 	blt	r4,r3,24248 <__subdf3+0x424>
   23ff4:	01400804 	movi	r5,32
   23ff8:	28cbc83a 	sub	r5,r5,r3
   23ffc:	88c8d83a 	srl	r4,r17,r3
   24000:	8962983a 	sll	r17,r17,r5
   24004:	114a983a 	sll	r5,r2,r5
   24008:	10c6d83a 	srl	r3,r2,r3
   2400c:	8804c03a 	cmpne	r2,r17,zero
   24010:	290ab03a 	or	r5,r5,r4
   24014:	28a2b03a 	or	r17,r5,r2
   24018:	0021883a 	mov	r16,zero
   2401c:	003fa206 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   24020:	2090b03a 	or	r8,r4,r2
   24024:	40018e26 	beq	r8,zero,24660 <__subdf3+0x83c>
   24028:	1007883a 	mov	r3,r2
   2402c:	2023883a 	mov	r17,r4
   24030:	888001cc 	andi	r2,r17,7
   24034:	103f9e1e 	bne	r2,zero,23eb0 <__alt_data_end+0xfffe3eb0>
   24038:	1804977a 	slli	r2,r3,29
   2403c:	8822d0fa 	srli	r17,r17,3
   24040:	1810d0fa 	srli	r8,r3,3
   24044:	9100004c 	andi	r4,r18,1
   24048:	1444b03a 	or	r2,r2,r17
   2404c:	00c1ffc4 	movi	r3,2047
   24050:	80c02826 	beq	r16,r3,240f4 <__subdf3+0x2d0>
   24054:	01400434 	movhi	r5,16
   24058:	297fffc4 	addi	r5,r5,-1
   2405c:	80e0703a 	and	r16,r16,r3
   24060:	414a703a 	and	r5,r8,r5
   24064:	003fa806 	br	23f08 <__alt_data_end+0xfffe3f08>
   24068:	0080630e 	bge	zero,r2,241f8 <__subdf3+0x3d4>
   2406c:	48003026 	beq	r9,zero,24130 <__subdf3+0x30c>
   24070:	0101ffc4 	movi	r4,2047
   24074:	813f8c26 	beq	r16,r4,23ea8 <__alt_data_end+0xfffe3ea8>
   24078:	29402034 	orhi	r5,r5,128
   2407c:	01000e04 	movi	r4,56
   24080:	2080a90e 	bge	r4,r2,24328 <__subdf3+0x504>
   24084:	298cb03a 	or	r6,r5,r6
   24088:	3012c03a 	cmpne	r9,r6,zero
   2408c:	0005883a 	mov	r2,zero
   24090:	4c53883a 	add	r9,r9,r17
   24094:	4c63803a 	cmpltu	r17,r9,r17
   24098:	10c7883a 	add	r3,r2,r3
   2409c:	88c7883a 	add	r3,r17,r3
   240a0:	4823883a 	mov	r17,r9
   240a4:	1880202c 	andhi	r2,r3,128
   240a8:	1000d026 	beq	r2,zero,243ec <__subdf3+0x5c8>
   240ac:	84000044 	addi	r16,r16,1
   240b0:	0081ffc4 	movi	r2,2047
   240b4:	8080fe26 	beq	r16,r2,244b0 <__subdf3+0x68c>
   240b8:	00bfe034 	movhi	r2,65408
   240bc:	10bfffc4 	addi	r2,r2,-1
   240c0:	1886703a 	and	r3,r3,r2
   240c4:	880ad07a 	srli	r5,r17,1
   240c8:	180497fa 	slli	r2,r3,31
   240cc:	8900004c 	andi	r4,r17,1
   240d0:	2922b03a 	or	r17,r5,r4
   240d4:	1806d07a 	srli	r3,r3,1
   240d8:	1462b03a 	or	r17,r2,r17
   240dc:	3825883a 	mov	r18,r7
   240e0:	003f7106 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   240e4:	2984b03a 	or	r2,r5,r6
   240e8:	103f6826 	beq	r2,zero,23e8c <__alt_data_end+0xfffe3e8c>
   240ec:	39c03fcc 	andi	r7,r7,255
   240f0:	003f6706 	br	23e90 <__alt_data_end+0xfffe3e90>
   240f4:	4086b03a 	or	r3,r8,r2
   240f8:	18015226 	beq	r3,zero,24644 <__subdf3+0x820>
   240fc:	00c00434 	movhi	r3,16
   24100:	41400234 	orhi	r5,r8,8
   24104:	18ffffc4 	addi	r3,r3,-1
   24108:	28ca703a 	and	r5,r5,r3
   2410c:	003f7e06 	br	23f08 <__alt_data_end+0xfffe3f08>
   24110:	10bfffc4 	addi	r2,r2,-1
   24114:	1000491e 	bne	r2,zero,2423c <__subdf3+0x418>
   24118:	898fc83a 	sub	r7,r17,r6
   2411c:	89e3803a 	cmpltu	r17,r17,r7
   24120:	1947c83a 	sub	r3,r3,r5
   24124:	1c47c83a 	sub	r3,r3,r17
   24128:	3823883a 	mov	r17,r7
   2412c:	003f9b06 	br	23f9c <__alt_data_end+0xfffe3f9c>
   24130:	2988b03a 	or	r4,r5,r6
   24134:	203f5c26 	beq	r4,zero,23ea8 <__alt_data_end+0xfffe3ea8>
   24138:	10bfffc4 	addi	r2,r2,-1
   2413c:	1000931e 	bne	r2,zero,2438c <__subdf3+0x568>
   24140:	898d883a 	add	r6,r17,r6
   24144:	3463803a 	cmpltu	r17,r6,r17
   24148:	1947883a 	add	r3,r3,r5
   2414c:	88c7883a 	add	r3,r17,r3
   24150:	3023883a 	mov	r17,r6
   24154:	003fd306 	br	240a4 <__alt_data_end+0xfffe40a4>
   24158:	1000541e 	bne	r2,zero,242ac <__subdf3+0x488>
   2415c:	80800044 	addi	r2,r16,1
   24160:	1081ffcc 	andi	r2,r2,2047
   24164:	01000044 	movi	r4,1
   24168:	2080a20e 	bge	r4,r2,243f4 <__subdf3+0x5d0>
   2416c:	8989c83a 	sub	r4,r17,r6
   24170:	8905803a 	cmpltu	r2,r17,r4
   24174:	1967c83a 	sub	r19,r3,r5
   24178:	98a7c83a 	sub	r19,r19,r2
   2417c:	9880202c 	andhi	r2,r19,128
   24180:	10006326 	beq	r2,zero,24310 <__subdf3+0x4ec>
   24184:	3463c83a 	sub	r17,r6,r17
   24188:	28c7c83a 	sub	r3,r5,r3
   2418c:	344d803a 	cmpltu	r6,r6,r17
   24190:	19a7c83a 	sub	r19,r3,r6
   24194:	3825883a 	mov	r18,r7
   24198:	983f861e 	bne	r19,zero,23fb4 <__alt_data_end+0xfffe3fb4>
   2419c:	8809883a 	mov	r4,r17
   241a0:	002487c0 	call	2487c <__clzsi2>
   241a4:	10800804 	addi	r2,r2,32
   241a8:	113ffe04 	addi	r4,r2,-8
   241ac:	00c007c4 	movi	r3,31
   241b0:	193f850e 	bge	r3,r4,23fc8 <__alt_data_end+0xfffe3fc8>
   241b4:	10bff604 	addi	r2,r2,-40
   241b8:	8884983a 	sll	r2,r17,r2
   241bc:	0023883a 	mov	r17,zero
   241c0:	243f880e 	bge	r4,r16,23fe4 <__alt_data_end+0xfffe3fe4>
   241c4:	00ffe034 	movhi	r3,65408
   241c8:	18ffffc4 	addi	r3,r3,-1
   241cc:	8121c83a 	sub	r16,r16,r4
   241d0:	10c6703a 	and	r3,r2,r3
   241d4:	003f3406 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   241d8:	9100004c 	andi	r4,r18,1
   241dc:	000b883a 	mov	r5,zero
   241e0:	0005883a 	mov	r2,zero
   241e4:	003f4806 	br	23f08 <__alt_data_end+0xfffe3f08>
   241e8:	298cb03a 	or	r6,r5,r6
   241ec:	300cc03a 	cmpne	r6,r6,zero
   241f0:	0005883a 	mov	r2,zero
   241f4:	003f6406 	br	23f88 <__alt_data_end+0xfffe3f88>
   241f8:	10009a1e 	bne	r2,zero,24464 <__subdf3+0x640>
   241fc:	82400044 	addi	r9,r16,1
   24200:	4881ffcc 	andi	r2,r9,2047
   24204:	02800044 	movi	r10,1
   24208:	5080670e 	bge	r10,r2,243a8 <__subdf3+0x584>
   2420c:	0081ffc4 	movi	r2,2047
   24210:	4880af26 	beq	r9,r2,244d0 <__subdf3+0x6ac>
   24214:	898d883a 	add	r6,r17,r6
   24218:	1945883a 	add	r2,r3,r5
   2421c:	3447803a 	cmpltu	r3,r6,r17
   24220:	1887883a 	add	r3,r3,r2
   24224:	182297fa 	slli	r17,r3,31
   24228:	300cd07a 	srli	r6,r6,1
   2422c:	1806d07a 	srli	r3,r3,1
   24230:	4821883a 	mov	r16,r9
   24234:	89a2b03a 	or	r17,r17,r6
   24238:	003f1b06 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   2423c:	0101ffc4 	movi	r4,2047
   24240:	813f441e 	bne	r16,r4,23f54 <__alt_data_end+0xfffe3f54>
   24244:	003f1806 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   24248:	843ff844 	addi	r16,r16,-31
   2424c:	01400804 	movi	r5,32
   24250:	1408d83a 	srl	r4,r2,r16
   24254:	19405026 	beq	r3,r5,24398 <__subdf3+0x574>
   24258:	01401004 	movi	r5,64
   2425c:	28c7c83a 	sub	r3,r5,r3
   24260:	10c4983a 	sll	r2,r2,r3
   24264:	88a2b03a 	or	r17,r17,r2
   24268:	8822c03a 	cmpne	r17,r17,zero
   2426c:	2462b03a 	or	r17,r4,r17
   24270:	0007883a 	mov	r3,zero
   24274:	0021883a 	mov	r16,zero
   24278:	003f6d06 	br	24030 <__alt_data_end+0xfffe4030>
   2427c:	11fff804 	addi	r7,r2,-32
   24280:	01000804 	movi	r4,32
   24284:	29ced83a 	srl	r7,r5,r7
   24288:	11004526 	beq	r2,r4,243a0 <__subdf3+0x57c>
   2428c:	01001004 	movi	r4,64
   24290:	2089c83a 	sub	r4,r4,r2
   24294:	2904983a 	sll	r2,r5,r4
   24298:	118cb03a 	or	r6,r2,r6
   2429c:	300cc03a 	cmpne	r6,r6,zero
   242a0:	398cb03a 	or	r6,r7,r6
   242a4:	0005883a 	mov	r2,zero
   242a8:	003f3706 	br	23f88 <__alt_data_end+0xfffe3f88>
   242ac:	80002a26 	beq	r16,zero,24358 <__subdf3+0x534>
   242b0:	0101ffc4 	movi	r4,2047
   242b4:	49006626 	beq	r9,r4,24450 <__subdf3+0x62c>
   242b8:	0085c83a 	sub	r2,zero,r2
   242bc:	18c02034 	orhi	r3,r3,128
   242c0:	01000e04 	movi	r4,56
   242c4:	20807e16 	blt	r4,r2,244c0 <__subdf3+0x69c>
   242c8:	010007c4 	movi	r4,31
   242cc:	2080e716 	blt	r4,r2,2466c <__subdf3+0x848>
   242d0:	01000804 	movi	r4,32
   242d4:	2089c83a 	sub	r4,r4,r2
   242d8:	1914983a 	sll	r10,r3,r4
   242dc:	8890d83a 	srl	r8,r17,r2
   242e0:	8908983a 	sll	r4,r17,r4
   242e4:	1884d83a 	srl	r2,r3,r2
   242e8:	5222b03a 	or	r17,r10,r8
   242ec:	2006c03a 	cmpne	r3,r4,zero
   242f0:	88e2b03a 	or	r17,r17,r3
   242f4:	3463c83a 	sub	r17,r6,r17
   242f8:	2885c83a 	sub	r2,r5,r2
   242fc:	344d803a 	cmpltu	r6,r6,r17
   24300:	1187c83a 	sub	r3,r2,r6
   24304:	4821883a 	mov	r16,r9
   24308:	3825883a 	mov	r18,r7
   2430c:	003f2306 	br	23f9c <__alt_data_end+0xfffe3f9c>
   24310:	24d0b03a 	or	r8,r4,r19
   24314:	40001b1e 	bne	r8,zero,24384 <__subdf3+0x560>
   24318:	0005883a 	mov	r2,zero
   2431c:	0009883a 	mov	r4,zero
   24320:	0021883a 	mov	r16,zero
   24324:	003f4906 	br	2404c <__alt_data_end+0xfffe404c>
   24328:	010007c4 	movi	r4,31
   2432c:	20803a16 	blt	r4,r2,24418 <__subdf3+0x5f4>
   24330:	01000804 	movi	r4,32
   24334:	2089c83a 	sub	r4,r4,r2
   24338:	2912983a 	sll	r9,r5,r4
   2433c:	3090d83a 	srl	r8,r6,r2
   24340:	3108983a 	sll	r4,r6,r4
   24344:	2884d83a 	srl	r2,r5,r2
   24348:	4a12b03a 	or	r9,r9,r8
   2434c:	2008c03a 	cmpne	r4,r4,zero
   24350:	4912b03a 	or	r9,r9,r4
   24354:	003f4e06 	br	24090 <__alt_data_end+0xfffe4090>
   24358:	1c48b03a 	or	r4,r3,r17
   2435c:	20003c26 	beq	r4,zero,24450 <__subdf3+0x62c>
   24360:	0084303a 	nor	r2,zero,r2
   24364:	1000381e 	bne	r2,zero,24448 <__subdf3+0x624>
   24368:	3463c83a 	sub	r17,r6,r17
   2436c:	28c5c83a 	sub	r2,r5,r3
   24370:	344d803a 	cmpltu	r6,r6,r17
   24374:	1187c83a 	sub	r3,r2,r6
   24378:	4821883a 	mov	r16,r9
   2437c:	3825883a 	mov	r18,r7
   24380:	003f0606 	br	23f9c <__alt_data_end+0xfffe3f9c>
   24384:	2023883a 	mov	r17,r4
   24388:	003f0906 	br	23fb0 <__alt_data_end+0xfffe3fb0>
   2438c:	0101ffc4 	movi	r4,2047
   24390:	813f3a1e 	bne	r16,r4,2407c <__alt_data_end+0xfffe407c>
   24394:	003ec406 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   24398:	0005883a 	mov	r2,zero
   2439c:	003fb106 	br	24264 <__alt_data_end+0xfffe4264>
   243a0:	0005883a 	mov	r2,zero
   243a4:	003fbc06 	br	24298 <__alt_data_end+0xfffe4298>
   243a8:	1c44b03a 	or	r2,r3,r17
   243ac:	80008e1e 	bne	r16,zero,245e8 <__subdf3+0x7c4>
   243b0:	1000c826 	beq	r2,zero,246d4 <__subdf3+0x8b0>
   243b4:	2984b03a 	or	r2,r5,r6
   243b8:	103ebb26 	beq	r2,zero,23ea8 <__alt_data_end+0xfffe3ea8>
   243bc:	8989883a 	add	r4,r17,r6
   243c0:	1945883a 	add	r2,r3,r5
   243c4:	2447803a 	cmpltu	r3,r4,r17
   243c8:	1887883a 	add	r3,r3,r2
   243cc:	1880202c 	andhi	r2,r3,128
   243d0:	2023883a 	mov	r17,r4
   243d4:	103f1626 	beq	r2,zero,24030 <__alt_data_end+0xfffe4030>
   243d8:	00bfe034 	movhi	r2,65408
   243dc:	10bfffc4 	addi	r2,r2,-1
   243e0:	5021883a 	mov	r16,r10
   243e4:	1886703a 	and	r3,r3,r2
   243e8:	003eaf06 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   243ec:	3825883a 	mov	r18,r7
   243f0:	003f0f06 	br	24030 <__alt_data_end+0xfffe4030>
   243f4:	1c44b03a 	or	r2,r3,r17
   243f8:	8000251e 	bne	r16,zero,24490 <__subdf3+0x66c>
   243fc:	1000661e 	bne	r2,zero,24598 <__subdf3+0x774>
   24400:	2990b03a 	or	r8,r5,r6
   24404:	40009626 	beq	r8,zero,24660 <__subdf3+0x83c>
   24408:	2807883a 	mov	r3,r5
   2440c:	3023883a 	mov	r17,r6
   24410:	3825883a 	mov	r18,r7
   24414:	003ea406 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   24418:	127ff804 	addi	r9,r2,-32
   2441c:	01000804 	movi	r4,32
   24420:	2a52d83a 	srl	r9,r5,r9
   24424:	11008c26 	beq	r2,r4,24658 <__subdf3+0x834>
   24428:	01001004 	movi	r4,64
   2442c:	2085c83a 	sub	r2,r4,r2
   24430:	2884983a 	sll	r2,r5,r2
   24434:	118cb03a 	or	r6,r2,r6
   24438:	300cc03a 	cmpne	r6,r6,zero
   2443c:	4992b03a 	or	r9,r9,r6
   24440:	0005883a 	mov	r2,zero
   24444:	003f1206 	br	24090 <__alt_data_end+0xfffe4090>
   24448:	0101ffc4 	movi	r4,2047
   2444c:	493f9c1e 	bne	r9,r4,242c0 <__alt_data_end+0xfffe42c0>
   24450:	2807883a 	mov	r3,r5
   24454:	3023883a 	mov	r17,r6
   24458:	4821883a 	mov	r16,r9
   2445c:	3825883a 	mov	r18,r7
   24460:	003e9106 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   24464:	80001f1e 	bne	r16,zero,244e4 <__subdf3+0x6c0>
   24468:	1c48b03a 	or	r4,r3,r17
   2446c:	20005a26 	beq	r4,zero,245d8 <__subdf3+0x7b4>
   24470:	0084303a 	nor	r2,zero,r2
   24474:	1000561e 	bne	r2,zero,245d0 <__subdf3+0x7ac>
   24478:	89a3883a 	add	r17,r17,r6
   2447c:	1945883a 	add	r2,r3,r5
   24480:	898d803a 	cmpltu	r6,r17,r6
   24484:	3087883a 	add	r3,r6,r2
   24488:	4821883a 	mov	r16,r9
   2448c:	003f0506 	br	240a4 <__alt_data_end+0xfffe40a4>
   24490:	10002b1e 	bne	r2,zero,24540 <__subdf3+0x71c>
   24494:	2984b03a 	or	r2,r5,r6
   24498:	10008026 	beq	r2,zero,2469c <__subdf3+0x878>
   2449c:	2807883a 	mov	r3,r5
   244a0:	3023883a 	mov	r17,r6
   244a4:	3825883a 	mov	r18,r7
   244a8:	0401ffc4 	movi	r16,2047
   244ac:	003e7e06 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   244b0:	3809883a 	mov	r4,r7
   244b4:	0011883a 	mov	r8,zero
   244b8:	0005883a 	mov	r2,zero
   244bc:	003ee306 	br	2404c <__alt_data_end+0xfffe404c>
   244c0:	1c62b03a 	or	r17,r3,r17
   244c4:	8822c03a 	cmpne	r17,r17,zero
   244c8:	0005883a 	mov	r2,zero
   244cc:	003f8906 	br	242f4 <__alt_data_end+0xfffe42f4>
   244d0:	3809883a 	mov	r4,r7
   244d4:	4821883a 	mov	r16,r9
   244d8:	0011883a 	mov	r8,zero
   244dc:	0005883a 	mov	r2,zero
   244e0:	003eda06 	br	2404c <__alt_data_end+0xfffe404c>
   244e4:	0101ffc4 	movi	r4,2047
   244e8:	49003b26 	beq	r9,r4,245d8 <__subdf3+0x7b4>
   244ec:	0085c83a 	sub	r2,zero,r2
   244f0:	18c02034 	orhi	r3,r3,128
   244f4:	01000e04 	movi	r4,56
   244f8:	20806e16 	blt	r4,r2,246b4 <__subdf3+0x890>
   244fc:	010007c4 	movi	r4,31
   24500:	20807716 	blt	r4,r2,246e0 <__subdf3+0x8bc>
   24504:	01000804 	movi	r4,32
   24508:	2089c83a 	sub	r4,r4,r2
   2450c:	1914983a 	sll	r10,r3,r4
   24510:	8890d83a 	srl	r8,r17,r2
   24514:	8908983a 	sll	r4,r17,r4
   24518:	1884d83a 	srl	r2,r3,r2
   2451c:	5222b03a 	or	r17,r10,r8
   24520:	2006c03a 	cmpne	r3,r4,zero
   24524:	88e2b03a 	or	r17,r17,r3
   24528:	89a3883a 	add	r17,r17,r6
   2452c:	1145883a 	add	r2,r2,r5
   24530:	898d803a 	cmpltu	r6,r17,r6
   24534:	3087883a 	add	r3,r6,r2
   24538:	4821883a 	mov	r16,r9
   2453c:	003ed906 	br	240a4 <__alt_data_end+0xfffe40a4>
   24540:	2984b03a 	or	r2,r5,r6
   24544:	10004226 	beq	r2,zero,24650 <__subdf3+0x82c>
   24548:	1808d0fa 	srli	r4,r3,3
   2454c:	8822d0fa 	srli	r17,r17,3
   24550:	1806977a 	slli	r3,r3,29
   24554:	2080022c 	andhi	r2,r4,8
   24558:	1c62b03a 	or	r17,r3,r17
   2455c:	10000826 	beq	r2,zero,24580 <__subdf3+0x75c>
   24560:	2812d0fa 	srli	r9,r5,3
   24564:	4880022c 	andhi	r2,r9,8
   24568:	1000051e 	bne	r2,zero,24580 <__subdf3+0x75c>
   2456c:	300cd0fa 	srli	r6,r6,3
   24570:	2804977a 	slli	r2,r5,29
   24574:	4809883a 	mov	r4,r9
   24578:	3825883a 	mov	r18,r7
   2457c:	11a2b03a 	or	r17,r2,r6
   24580:	8806d77a 	srli	r3,r17,29
   24584:	200890fa 	slli	r4,r4,3
   24588:	882290fa 	slli	r17,r17,3
   2458c:	0401ffc4 	movi	r16,2047
   24590:	1906b03a 	or	r3,r3,r4
   24594:	003e4406 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   24598:	2984b03a 	or	r2,r5,r6
   2459c:	103e4226 	beq	r2,zero,23ea8 <__alt_data_end+0xfffe3ea8>
   245a0:	8989c83a 	sub	r4,r17,r6
   245a4:	8911803a 	cmpltu	r8,r17,r4
   245a8:	1945c83a 	sub	r2,r3,r5
   245ac:	1205c83a 	sub	r2,r2,r8
   245b0:	1200202c 	andhi	r8,r2,128
   245b4:	403e9a26 	beq	r8,zero,24020 <__alt_data_end+0xfffe4020>
   245b8:	3463c83a 	sub	r17,r6,r17
   245bc:	28c5c83a 	sub	r2,r5,r3
   245c0:	344d803a 	cmpltu	r6,r6,r17
   245c4:	1187c83a 	sub	r3,r2,r6
   245c8:	3825883a 	mov	r18,r7
   245cc:	003e3606 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   245d0:	0101ffc4 	movi	r4,2047
   245d4:	493fc71e 	bne	r9,r4,244f4 <__alt_data_end+0xfffe44f4>
   245d8:	2807883a 	mov	r3,r5
   245dc:	3023883a 	mov	r17,r6
   245e0:	4821883a 	mov	r16,r9
   245e4:	003e3006 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   245e8:	10003626 	beq	r2,zero,246c4 <__subdf3+0x8a0>
   245ec:	2984b03a 	or	r2,r5,r6
   245f0:	10001726 	beq	r2,zero,24650 <__subdf3+0x82c>
   245f4:	1808d0fa 	srli	r4,r3,3
   245f8:	8822d0fa 	srli	r17,r17,3
   245fc:	1806977a 	slli	r3,r3,29
   24600:	2080022c 	andhi	r2,r4,8
   24604:	1c62b03a 	or	r17,r3,r17
   24608:	10000726 	beq	r2,zero,24628 <__subdf3+0x804>
   2460c:	2812d0fa 	srli	r9,r5,3
   24610:	4880022c 	andhi	r2,r9,8
   24614:	1000041e 	bne	r2,zero,24628 <__subdf3+0x804>
   24618:	300cd0fa 	srli	r6,r6,3
   2461c:	2804977a 	slli	r2,r5,29
   24620:	4809883a 	mov	r4,r9
   24624:	11a2b03a 	or	r17,r2,r6
   24628:	8806d77a 	srli	r3,r17,29
   2462c:	200890fa 	slli	r4,r4,3
   24630:	882290fa 	slli	r17,r17,3
   24634:	3825883a 	mov	r18,r7
   24638:	1906b03a 	or	r3,r3,r4
   2463c:	0401ffc4 	movi	r16,2047
   24640:	003e1906 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   24644:	000b883a 	mov	r5,zero
   24648:	0005883a 	mov	r2,zero
   2464c:	003e2e06 	br	23f08 <__alt_data_end+0xfffe3f08>
   24650:	0401ffc4 	movi	r16,2047
   24654:	003e1406 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   24658:	0005883a 	mov	r2,zero
   2465c:	003f7506 	br	24434 <__alt_data_end+0xfffe4434>
   24660:	0005883a 	mov	r2,zero
   24664:	0009883a 	mov	r4,zero
   24668:	003e7806 	br	2404c <__alt_data_end+0xfffe404c>
   2466c:	123ff804 	addi	r8,r2,-32
   24670:	01000804 	movi	r4,32
   24674:	1a10d83a 	srl	r8,r3,r8
   24678:	11002526 	beq	r2,r4,24710 <__subdf3+0x8ec>
   2467c:	01001004 	movi	r4,64
   24680:	2085c83a 	sub	r2,r4,r2
   24684:	1884983a 	sll	r2,r3,r2
   24688:	1444b03a 	or	r2,r2,r17
   2468c:	1004c03a 	cmpne	r2,r2,zero
   24690:	40a2b03a 	or	r17,r8,r2
   24694:	0005883a 	mov	r2,zero
   24698:	003f1606 	br	242f4 <__alt_data_end+0xfffe42f4>
   2469c:	02000434 	movhi	r8,16
   246a0:	0009883a 	mov	r4,zero
   246a4:	423fffc4 	addi	r8,r8,-1
   246a8:	00bfffc4 	movi	r2,-1
   246ac:	0401ffc4 	movi	r16,2047
   246b0:	003e6606 	br	2404c <__alt_data_end+0xfffe404c>
   246b4:	1c62b03a 	or	r17,r3,r17
   246b8:	8822c03a 	cmpne	r17,r17,zero
   246bc:	0005883a 	mov	r2,zero
   246c0:	003f9906 	br	24528 <__alt_data_end+0xfffe4528>
   246c4:	2807883a 	mov	r3,r5
   246c8:	3023883a 	mov	r17,r6
   246cc:	0401ffc4 	movi	r16,2047
   246d0:	003df506 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   246d4:	2807883a 	mov	r3,r5
   246d8:	3023883a 	mov	r17,r6
   246dc:	003df206 	br	23ea8 <__alt_data_end+0xfffe3ea8>
   246e0:	123ff804 	addi	r8,r2,-32
   246e4:	01000804 	movi	r4,32
   246e8:	1a10d83a 	srl	r8,r3,r8
   246ec:	11000a26 	beq	r2,r4,24718 <__subdf3+0x8f4>
   246f0:	01001004 	movi	r4,64
   246f4:	2085c83a 	sub	r2,r4,r2
   246f8:	1884983a 	sll	r2,r3,r2
   246fc:	1444b03a 	or	r2,r2,r17
   24700:	1004c03a 	cmpne	r2,r2,zero
   24704:	40a2b03a 	or	r17,r8,r2
   24708:	0005883a 	mov	r2,zero
   2470c:	003f8606 	br	24528 <__alt_data_end+0xfffe4528>
   24710:	0005883a 	mov	r2,zero
   24714:	003fdc06 	br	24688 <__alt_data_end+0xfffe4688>
   24718:	0005883a 	mov	r2,zero
   2471c:	003ff706 	br	246fc <__alt_data_end+0xfffe46fc>

00024720 <__fixdfsi>:
   24720:	280cd53a 	srli	r6,r5,20
   24724:	00c00434 	movhi	r3,16
   24728:	18ffffc4 	addi	r3,r3,-1
   2472c:	3181ffcc 	andi	r6,r6,2047
   24730:	01c0ff84 	movi	r7,1022
   24734:	28c6703a 	and	r3,r5,r3
   24738:	280ad7fa 	srli	r5,r5,31
   2473c:	3980120e 	bge	r7,r6,24788 <__fixdfsi+0x68>
   24740:	00810744 	movi	r2,1053
   24744:	11800c16 	blt	r2,r6,24778 <__fixdfsi+0x58>
   24748:	00810cc4 	movi	r2,1075
   2474c:	1185c83a 	sub	r2,r2,r6
   24750:	01c007c4 	movi	r7,31
   24754:	18c00434 	orhi	r3,r3,16
   24758:	38800d16 	blt	r7,r2,24790 <__fixdfsi+0x70>
   2475c:	31befb44 	addi	r6,r6,-1043
   24760:	2084d83a 	srl	r2,r4,r2
   24764:	1986983a 	sll	r3,r3,r6
   24768:	1884b03a 	or	r2,r3,r2
   2476c:	28000726 	beq	r5,zero,2478c <__fixdfsi+0x6c>
   24770:	0085c83a 	sub	r2,zero,r2
   24774:	f800283a 	ret
   24778:	00a00034 	movhi	r2,32768
   2477c:	10bfffc4 	addi	r2,r2,-1
   24780:	2885883a 	add	r2,r5,r2
   24784:	f800283a 	ret
   24788:	0005883a 	mov	r2,zero
   2478c:	f800283a 	ret
   24790:	008104c4 	movi	r2,1043
   24794:	1185c83a 	sub	r2,r2,r6
   24798:	1884d83a 	srl	r2,r3,r2
   2479c:	003ff306 	br	2476c <__alt_data_end+0xfffe476c>

000247a0 <__floatsidf>:
   247a0:	defffd04 	addi	sp,sp,-12
   247a4:	dfc00215 	stw	ra,8(sp)
   247a8:	dc400115 	stw	r17,4(sp)
   247ac:	dc000015 	stw	r16,0(sp)
   247b0:	20002b26 	beq	r4,zero,24860 <__floatsidf+0xc0>
   247b4:	2023883a 	mov	r17,r4
   247b8:	2020d7fa 	srli	r16,r4,31
   247bc:	20002d16 	blt	r4,zero,24874 <__floatsidf+0xd4>
   247c0:	8809883a 	mov	r4,r17
   247c4:	002487c0 	call	2487c <__clzsi2>
   247c8:	01410784 	movi	r5,1054
   247cc:	288bc83a 	sub	r5,r5,r2
   247d0:	01010cc4 	movi	r4,1075
   247d4:	2149c83a 	sub	r4,r4,r5
   247d8:	00c007c4 	movi	r3,31
   247dc:	1900160e 	bge	r3,r4,24838 <__floatsidf+0x98>
   247e0:	00c104c4 	movi	r3,1043
   247e4:	1947c83a 	sub	r3,r3,r5
   247e8:	88c6983a 	sll	r3,r17,r3
   247ec:	00800434 	movhi	r2,16
   247f0:	10bfffc4 	addi	r2,r2,-1
   247f4:	1886703a 	and	r3,r3,r2
   247f8:	2941ffcc 	andi	r5,r5,2047
   247fc:	800d883a 	mov	r6,r16
   24800:	0005883a 	mov	r2,zero
   24804:	280a953a 	slli	r5,r5,20
   24808:	31803fcc 	andi	r6,r6,255
   2480c:	01000434 	movhi	r4,16
   24810:	300c97fa 	slli	r6,r6,31
   24814:	213fffc4 	addi	r4,r4,-1
   24818:	1906703a 	and	r3,r3,r4
   2481c:	1946b03a 	or	r3,r3,r5
   24820:	1986b03a 	or	r3,r3,r6
   24824:	dfc00217 	ldw	ra,8(sp)
   24828:	dc400117 	ldw	r17,4(sp)
   2482c:	dc000017 	ldw	r16,0(sp)
   24830:	dec00304 	addi	sp,sp,12
   24834:	f800283a 	ret
   24838:	00c002c4 	movi	r3,11
   2483c:	1887c83a 	sub	r3,r3,r2
   24840:	88c6d83a 	srl	r3,r17,r3
   24844:	8904983a 	sll	r2,r17,r4
   24848:	01000434 	movhi	r4,16
   2484c:	213fffc4 	addi	r4,r4,-1
   24850:	2941ffcc 	andi	r5,r5,2047
   24854:	1906703a 	and	r3,r3,r4
   24858:	800d883a 	mov	r6,r16
   2485c:	003fe906 	br	24804 <__alt_data_end+0xfffe4804>
   24860:	000d883a 	mov	r6,zero
   24864:	000b883a 	mov	r5,zero
   24868:	0007883a 	mov	r3,zero
   2486c:	0005883a 	mov	r2,zero
   24870:	003fe406 	br	24804 <__alt_data_end+0xfffe4804>
   24874:	0123c83a 	sub	r17,zero,r4
   24878:	003fd106 	br	247c0 <__alt_data_end+0xfffe47c0>

0002487c <__clzsi2>:
   2487c:	00bfffd4 	movui	r2,65535
   24880:	11000536 	bltu	r2,r4,24898 <__clzsi2+0x1c>
   24884:	00803fc4 	movi	r2,255
   24888:	11000f36 	bltu	r2,r4,248c8 <__clzsi2+0x4c>
   2488c:	00800804 	movi	r2,32
   24890:	0007883a 	mov	r3,zero
   24894:	00000506 	br	248ac <__clzsi2+0x30>
   24898:	00804034 	movhi	r2,256
   2489c:	10bfffc4 	addi	r2,r2,-1
   248a0:	11000c2e 	bgeu	r2,r4,248d4 <__clzsi2+0x58>
   248a4:	00800204 	movi	r2,8
   248a8:	00c00604 	movi	r3,24
   248ac:	20c8d83a 	srl	r4,r4,r3
   248b0:	00c000f4 	movhi	r3,3
   248b4:	18c4ac04 	addi	r3,r3,4784
   248b8:	1909883a 	add	r4,r3,r4
   248bc:	20c00003 	ldbu	r3,0(r4)
   248c0:	10c5c83a 	sub	r2,r2,r3
   248c4:	f800283a 	ret
   248c8:	00800604 	movi	r2,24
   248cc:	00c00204 	movi	r3,8
   248d0:	003ff606 	br	248ac <__alt_data_end+0xfffe48ac>
   248d4:	00800404 	movi	r2,16
   248d8:	1007883a 	mov	r3,r2
   248dc:	003ff306 	br	248ac <__alt_data_end+0xfffe48ac>

000248e0 <__errno>:
   248e0:	008000f4 	movhi	r2,3
   248e4:	108c1804 	addi	r2,r2,12384
   248e8:	10800017 	ldw	r2,0(r2)
   248ec:	f800283a 	ret

000248f0 <_printf_r>:
   248f0:	defffd04 	addi	sp,sp,-12
   248f4:	2805883a 	mov	r2,r5
   248f8:	dfc00015 	stw	ra,0(sp)
   248fc:	d9800115 	stw	r6,4(sp)
   24900:	d9c00215 	stw	r7,8(sp)
   24904:	21400217 	ldw	r5,8(r4)
   24908:	d9c00104 	addi	r7,sp,4
   2490c:	100d883a 	mov	r6,r2
   24910:	002495c0 	call	2495c <___vfprintf_internal_r>
   24914:	dfc00017 	ldw	ra,0(sp)
   24918:	dec00304 	addi	sp,sp,12
   2491c:	f800283a 	ret

00024920 <printf>:
   24920:	defffc04 	addi	sp,sp,-16
   24924:	dfc00015 	stw	ra,0(sp)
   24928:	d9400115 	stw	r5,4(sp)
   2492c:	d9800215 	stw	r6,8(sp)
   24930:	d9c00315 	stw	r7,12(sp)
   24934:	008000f4 	movhi	r2,3
   24938:	108c1804 	addi	r2,r2,12384
   2493c:	10800017 	ldw	r2,0(r2)
   24940:	200b883a 	mov	r5,r4
   24944:	d9800104 	addi	r6,sp,4
   24948:	11000217 	ldw	r4,8(r2)
   2494c:	0026b540 	call	26b54 <__vfprintf_internal>
   24950:	dfc00017 	ldw	ra,0(sp)
   24954:	dec00404 	addi	sp,sp,16
   24958:	f800283a 	ret

0002495c <___vfprintf_internal_r>:
   2495c:	deffb804 	addi	sp,sp,-288
   24960:	dfc04715 	stw	ra,284(sp)
   24964:	ddc04515 	stw	r23,276(sp)
   24968:	dd404315 	stw	r21,268(sp)
   2496c:	d9002c15 	stw	r4,176(sp)
   24970:	282f883a 	mov	r23,r5
   24974:	302b883a 	mov	r21,r6
   24978:	d9c02d15 	stw	r7,180(sp)
   2497c:	df004615 	stw	fp,280(sp)
   24980:	dd804415 	stw	r22,272(sp)
   24984:	dd004215 	stw	r20,264(sp)
   24988:	dcc04115 	stw	r19,260(sp)
   2498c:	dc804015 	stw	r18,256(sp)
   24990:	dc403f15 	stw	r17,252(sp)
   24994:	dc003e15 	stw	r16,248(sp)
   24998:	00292b80 	call	292b8 <_localeconv_r>
   2499c:	10800017 	ldw	r2,0(r2)
   249a0:	1009883a 	mov	r4,r2
   249a4:	d8803415 	stw	r2,208(sp)
   249a8:	002b26c0 	call	2b26c <strlen>
   249ac:	d8803715 	stw	r2,220(sp)
   249b0:	d8802c17 	ldw	r2,176(sp)
   249b4:	10000226 	beq	r2,zero,249c0 <___vfprintf_internal_r+0x64>
   249b8:	10800e17 	ldw	r2,56(r2)
   249bc:	1000f926 	beq	r2,zero,24da4 <___vfprintf_internal_r+0x448>
   249c0:	b880030b 	ldhu	r2,12(r23)
   249c4:	10c8000c 	andi	r3,r2,8192
   249c8:	1800061e 	bne	r3,zero,249e4 <___vfprintf_internal_r+0x88>
   249cc:	b9001917 	ldw	r4,100(r23)
   249d0:	00f7ffc4 	movi	r3,-8193
   249d4:	10880014 	ori	r2,r2,8192
   249d8:	20c6703a 	and	r3,r4,r3
   249dc:	b880030d 	sth	r2,12(r23)
   249e0:	b8c01915 	stw	r3,100(r23)
   249e4:	10c0020c 	andi	r3,r2,8
   249e8:	1800c126 	beq	r3,zero,24cf0 <___vfprintf_internal_r+0x394>
   249ec:	b8c00417 	ldw	r3,16(r23)
   249f0:	1800bf26 	beq	r3,zero,24cf0 <___vfprintf_internal_r+0x394>
   249f4:	1080068c 	andi	r2,r2,26
   249f8:	00c00284 	movi	r3,10
   249fc:	10c0c426 	beq	r2,r3,24d10 <___vfprintf_internal_r+0x3b4>
   24a00:	d8c00404 	addi	r3,sp,16
   24a04:	050000f4 	movhi	r20,3
   24a08:	d9001e04 	addi	r4,sp,120
   24a0c:	a504fd84 	addi	r20,r20,5110
   24a10:	d8c01e15 	stw	r3,120(sp)
   24a14:	d8002015 	stw	zero,128(sp)
   24a18:	d8001f15 	stw	zero,124(sp)
   24a1c:	d8003315 	stw	zero,204(sp)
   24a20:	d8003615 	stw	zero,216(sp)
   24a24:	d8003815 	stw	zero,224(sp)
   24a28:	1811883a 	mov	r8,r3
   24a2c:	d8003915 	stw	zero,228(sp)
   24a30:	d8003a15 	stw	zero,232(sp)
   24a34:	d8002f15 	stw	zero,188(sp)
   24a38:	d9002815 	stw	r4,160(sp)
   24a3c:	a8800007 	ldb	r2,0(r21)
   24a40:	10027b26 	beq	r2,zero,25430 <___vfprintf_internal_r+0xad4>
   24a44:	00c00944 	movi	r3,37
   24a48:	a821883a 	mov	r16,r21
   24a4c:	10c0021e 	bne	r2,r3,24a58 <___vfprintf_internal_r+0xfc>
   24a50:	00001406 	br	24aa4 <___vfprintf_internal_r+0x148>
   24a54:	10c00326 	beq	r2,r3,24a64 <___vfprintf_internal_r+0x108>
   24a58:	84000044 	addi	r16,r16,1
   24a5c:	80800007 	ldb	r2,0(r16)
   24a60:	103ffc1e 	bne	r2,zero,24a54 <__alt_data_end+0xfffe4a54>
   24a64:	8563c83a 	sub	r17,r16,r21
   24a68:	88000e26 	beq	r17,zero,24aa4 <___vfprintf_internal_r+0x148>
   24a6c:	d8c02017 	ldw	r3,128(sp)
   24a70:	d8801f17 	ldw	r2,124(sp)
   24a74:	45400015 	stw	r21,0(r8)
   24a78:	1c47883a 	add	r3,r3,r17
   24a7c:	10800044 	addi	r2,r2,1
   24a80:	d8c02015 	stw	r3,128(sp)
   24a84:	44400115 	stw	r17,4(r8)
   24a88:	d8801f15 	stw	r2,124(sp)
   24a8c:	00c001c4 	movi	r3,7
   24a90:	1880a716 	blt	r3,r2,24d30 <___vfprintf_internal_r+0x3d4>
   24a94:	42000204 	addi	r8,r8,8
   24a98:	d9402f17 	ldw	r5,188(sp)
   24a9c:	2c4b883a 	add	r5,r5,r17
   24aa0:	d9402f15 	stw	r5,188(sp)
   24aa4:	80800007 	ldb	r2,0(r16)
   24aa8:	1000a826 	beq	r2,zero,24d4c <___vfprintf_internal_r+0x3f0>
   24aac:	84400047 	ldb	r17,1(r16)
   24ab0:	00bfffc4 	movi	r2,-1
   24ab4:	85400044 	addi	r21,r16,1
   24ab8:	d8002785 	stb	zero,158(sp)
   24abc:	0007883a 	mov	r3,zero
   24ac0:	000f883a 	mov	r7,zero
   24ac4:	d8802915 	stw	r2,164(sp)
   24ac8:	d8003115 	stw	zero,196(sp)
   24acc:	0025883a 	mov	r18,zero
   24ad0:	01401604 	movi	r5,88
   24ad4:	01800244 	movi	r6,9
   24ad8:	02800a84 	movi	r10,42
   24adc:	02401b04 	movi	r9,108
   24ae0:	ad400044 	addi	r21,r21,1
   24ae4:	88bff804 	addi	r2,r17,-32
   24ae8:	28830436 	bltu	r5,r2,256fc <___vfprintf_internal_r+0xda0>
   24aec:	100490ba 	slli	r2,r2,2
   24af0:	010000b4 	movhi	r4,2
   24af4:	2112c104 	addi	r4,r4,19204
   24af8:	1105883a 	add	r2,r2,r4
   24afc:	10800017 	ldw	r2,0(r2)
   24b00:	1000683a 	jmp	r2
   24b04:	0002561c 	xori	zero,zero,2392
   24b08:	000256fc 	xorhi	zero,zero,2395
   24b0c:	000256fc 	xorhi	zero,zero,2395
   24b10:	0002563c 	xorhi	zero,zero,2392
   24b14:	000256fc 	xorhi	zero,zero,2395
   24b18:	000256fc 	xorhi	zero,zero,2395
   24b1c:	000256fc 	xorhi	zero,zero,2395
   24b20:	000256fc 	xorhi	zero,zero,2395
   24b24:	000256fc 	xorhi	zero,zero,2395
   24b28:	000256fc 	xorhi	zero,zero,2395
   24b2c:	00024db0 	cmpltui	zero,zero,2358
   24b30:	00025558 	cmpnei	zero,zero,2389
   24b34:	000256fc 	xorhi	zero,zero,2395
   24b38:	00024c78 	rdprs	zero,zero,2353
   24b3c:	00024dd8 	cmpnei	zero,zero,2359
   24b40:	000256fc 	xorhi	zero,zero,2395
   24b44:	00024e18 	cmpnei	zero,zero,2360
   24b48:	00024e24 	muli	zero,zero,2360
   24b4c:	00024e24 	muli	zero,zero,2360
   24b50:	00024e24 	muli	zero,zero,2360
   24b54:	00024e24 	muli	zero,zero,2360
   24b58:	00024e24 	muli	zero,zero,2360
   24b5c:	00024e24 	muli	zero,zero,2360
   24b60:	00024e24 	muli	zero,zero,2360
   24b64:	00024e24 	muli	zero,zero,2360
   24b68:	00024e24 	muli	zero,zero,2360
   24b6c:	000256fc 	xorhi	zero,zero,2395
   24b70:	000256fc 	xorhi	zero,zero,2395
   24b74:	000256fc 	xorhi	zero,zero,2395
   24b78:	000256fc 	xorhi	zero,zero,2395
   24b7c:	000256fc 	xorhi	zero,zero,2395
   24b80:	000256fc 	xorhi	zero,zero,2395
   24b84:	000256fc 	xorhi	zero,zero,2395
   24b88:	000256fc 	xorhi	zero,zero,2395
   24b8c:	000256fc 	xorhi	zero,zero,2395
   24b90:	000256fc 	xorhi	zero,zero,2395
   24b94:	00024e58 	cmpnei	zero,zero,2361
   24b98:	00024f14 	movui	zero,2364
   24b9c:	000256fc 	xorhi	zero,zero,2395
   24ba0:	00024f14 	movui	zero,2364
   24ba4:	000256fc 	xorhi	zero,zero,2395
   24ba8:	000256fc 	xorhi	zero,zero,2395
   24bac:	000256fc 	xorhi	zero,zero,2395
   24bb0:	000256fc 	xorhi	zero,zero,2395
   24bb4:	00024fb4 	movhi	zero,2366
   24bb8:	000256fc 	xorhi	zero,zero,2395
   24bbc:	000256fc 	xorhi	zero,zero,2395
   24bc0:	00024fc0 	call	24fc <__alt_mem_onchip_memory2_0-0x1db04>
   24bc4:	000256fc 	xorhi	zero,zero,2395
   24bc8:	000256fc 	xorhi	zero,zero,2395
   24bcc:	000256fc 	xorhi	zero,zero,2395
   24bd0:	000256fc 	xorhi	zero,zero,2395
   24bd4:	000256fc 	xorhi	zero,zero,2395
   24bd8:	00025438 	rdprs	zero,zero,2384
   24bdc:	000256fc 	xorhi	zero,zero,2395
   24be0:	000256fc 	xorhi	zero,zero,2395
   24be4:	00025498 	cmpnei	zero,zero,2386
   24be8:	000256fc 	xorhi	zero,zero,2395
   24bec:	000256fc 	xorhi	zero,zero,2395
   24bf0:	000256fc 	xorhi	zero,zero,2395
   24bf4:	000256fc 	xorhi	zero,zero,2395
   24bf8:	000256fc 	xorhi	zero,zero,2395
   24bfc:	000256fc 	xorhi	zero,zero,2395
   24c00:	000256fc 	xorhi	zero,zero,2395
   24c04:	000256fc 	xorhi	zero,zero,2395
   24c08:	000256fc 	xorhi	zero,zero,2395
   24c0c:	000256fc 	xorhi	zero,zero,2395
   24c10:	000256a8 	cmpgeui	zero,zero,2394
   24c14:	00025648 	cmpgei	zero,zero,2393
   24c18:	00024f14 	movui	zero,2364
   24c1c:	00024f14 	movui	zero,2364
   24c20:	00024f14 	movui	zero,2364
   24c24:	00025658 	cmpnei	zero,zero,2393
   24c28:	00025648 	cmpgei	zero,zero,2393
   24c2c:	000256fc 	xorhi	zero,zero,2395
   24c30:	000256fc 	xorhi	zero,zero,2395
   24c34:	00025664 	muli	zero,zero,2393
   24c38:	000256fc 	xorhi	zero,zero,2395
   24c3c:	00025674 	movhi	zero,2393
   24c40:	00025548 	cmpgei	zero,zero,2389
   24c44:	00024c84 	movi	zero,2354
   24c48:	00025568 	cmpgeui	zero,zero,2389
   24c4c:	000256fc 	xorhi	zero,zero,2395
   24c50:	00025574 	movhi	zero,2389
   24c54:	000256fc 	xorhi	zero,zero,2395
   24c58:	000255d0 	cmplti	zero,zero,2391
   24c5c:	000256fc 	xorhi	zero,zero,2395
   24c60:	000256fc 	xorhi	zero,zero,2395
   24c64:	000255e0 	cmpeqi	zero,zero,2391
   24c68:	d9003117 	ldw	r4,196(sp)
   24c6c:	d8802d15 	stw	r2,180(sp)
   24c70:	0109c83a 	sub	r4,zero,r4
   24c74:	d9003115 	stw	r4,196(sp)
   24c78:	94800114 	ori	r18,r18,4
   24c7c:	ac400007 	ldb	r17,0(r21)
   24c80:	003f9706 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   24c84:	00800c04 	movi	r2,48
   24c88:	d9002d17 	ldw	r4,180(sp)
   24c8c:	d9402917 	ldw	r5,164(sp)
   24c90:	d8802705 	stb	r2,156(sp)
   24c94:	00801e04 	movi	r2,120
   24c98:	d8802745 	stb	r2,157(sp)
   24c9c:	d8002785 	stb	zero,158(sp)
   24ca0:	20c00104 	addi	r3,r4,4
   24ca4:	24c00017 	ldw	r19,0(r4)
   24ca8:	002d883a 	mov	r22,zero
   24cac:	90800094 	ori	r2,r18,2
   24cb0:	28029a16 	blt	r5,zero,2571c <___vfprintf_internal_r+0xdc0>
   24cb4:	00bfdfc4 	movi	r2,-129
   24cb8:	90a4703a 	and	r18,r18,r2
   24cbc:	d8c02d15 	stw	r3,180(sp)
   24cc0:	94800094 	ori	r18,r18,2
   24cc4:	9802871e 	bne	r19,zero,256e4 <___vfprintf_internal_r+0xd88>
   24cc8:	008000f4 	movhi	r2,3
   24ccc:	1084f604 	addi	r2,r2,5080
   24cd0:	d8803915 	stw	r2,228(sp)
   24cd4:	04401e04 	movi	r17,120
   24cd8:	d8802917 	ldw	r2,164(sp)
   24cdc:	0039883a 	mov	fp,zero
   24ce0:	1001e926 	beq	r2,zero,25488 <___vfprintf_internal_r+0xb2c>
   24ce4:	0027883a 	mov	r19,zero
   24ce8:	002d883a 	mov	r22,zero
   24cec:	00020506 	br	25504 <___vfprintf_internal_r+0xba8>
   24cf0:	d9002c17 	ldw	r4,176(sp)
   24cf4:	b80b883a 	mov	r5,r23
   24cf8:	0026c2c0 	call	26c2c <__swsetup_r>
   24cfc:	1005ac1e 	bne	r2,zero,263b0 <___vfprintf_internal_r+0x1a54>
   24d00:	b880030b 	ldhu	r2,12(r23)
   24d04:	00c00284 	movi	r3,10
   24d08:	1080068c 	andi	r2,r2,26
   24d0c:	10ff3c1e 	bne	r2,r3,24a00 <__alt_data_end+0xfffe4a00>
   24d10:	b880038f 	ldh	r2,14(r23)
   24d14:	103f3a16 	blt	r2,zero,24a00 <__alt_data_end+0xfffe4a00>
   24d18:	d9c02d17 	ldw	r7,180(sp)
   24d1c:	d9002c17 	ldw	r4,176(sp)
   24d20:	a80d883a 	mov	r6,r21
   24d24:	b80b883a 	mov	r5,r23
   24d28:	0026b700 	call	26b70 <__sbprintf>
   24d2c:	00001106 	br	24d74 <___vfprintf_internal_r+0x418>
   24d30:	d9002c17 	ldw	r4,176(sp)
   24d34:	d9801e04 	addi	r6,sp,120
   24d38:	b80b883a 	mov	r5,r23
   24d3c:	002b4000 	call	2b400 <__sprint_r>
   24d40:	1000081e 	bne	r2,zero,24d64 <___vfprintf_internal_r+0x408>
   24d44:	da000404 	addi	r8,sp,16
   24d48:	003f5306 	br	24a98 <__alt_data_end+0xfffe4a98>
   24d4c:	d8802017 	ldw	r2,128(sp)
   24d50:	10000426 	beq	r2,zero,24d64 <___vfprintf_internal_r+0x408>
   24d54:	d9002c17 	ldw	r4,176(sp)
   24d58:	d9801e04 	addi	r6,sp,120
   24d5c:	b80b883a 	mov	r5,r23
   24d60:	002b4000 	call	2b400 <__sprint_r>
   24d64:	b880030b 	ldhu	r2,12(r23)
   24d68:	1080100c 	andi	r2,r2,64
   24d6c:	1005901e 	bne	r2,zero,263b0 <___vfprintf_internal_r+0x1a54>
   24d70:	d8802f17 	ldw	r2,188(sp)
   24d74:	dfc04717 	ldw	ra,284(sp)
   24d78:	df004617 	ldw	fp,280(sp)
   24d7c:	ddc04517 	ldw	r23,276(sp)
   24d80:	dd804417 	ldw	r22,272(sp)
   24d84:	dd404317 	ldw	r21,268(sp)
   24d88:	dd004217 	ldw	r20,264(sp)
   24d8c:	dcc04117 	ldw	r19,260(sp)
   24d90:	dc804017 	ldw	r18,256(sp)
   24d94:	dc403f17 	ldw	r17,252(sp)
   24d98:	dc003e17 	ldw	r16,248(sp)
   24d9c:	dec04804 	addi	sp,sp,288
   24da0:	f800283a 	ret
   24da4:	d9002c17 	ldw	r4,176(sp)
   24da8:	0028c000 	call	28c00 <__sinit>
   24dac:	003f0406 	br	249c0 <__alt_data_end+0xfffe49c0>
   24db0:	d8802d17 	ldw	r2,180(sp)
   24db4:	d9002d17 	ldw	r4,180(sp)
   24db8:	10800017 	ldw	r2,0(r2)
   24dbc:	d8803115 	stw	r2,196(sp)
   24dc0:	20800104 	addi	r2,r4,4
   24dc4:	d9003117 	ldw	r4,196(sp)
   24dc8:	203fa716 	blt	r4,zero,24c68 <__alt_data_end+0xfffe4c68>
   24dcc:	d8802d15 	stw	r2,180(sp)
   24dd0:	ac400007 	ldb	r17,0(r21)
   24dd4:	003f4206 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   24dd8:	ac400007 	ldb	r17,0(r21)
   24ddc:	aac00044 	addi	r11,r21,1
   24de0:	8a872826 	beq	r17,r10,26a84 <___vfprintf_internal_r+0x2128>
   24de4:	88bff404 	addi	r2,r17,-48
   24de8:	0009883a 	mov	r4,zero
   24dec:	30867d36 	bltu	r6,r2,267e4 <___vfprintf_internal_r+0x1e88>
   24df0:	5c400007 	ldb	r17,0(r11)
   24df4:	210002a4 	muli	r4,r4,10
   24df8:	5d400044 	addi	r21,r11,1
   24dfc:	a817883a 	mov	r11,r21
   24e00:	2089883a 	add	r4,r4,r2
   24e04:	88bff404 	addi	r2,r17,-48
   24e08:	30bff92e 	bgeu	r6,r2,24df0 <__alt_data_end+0xfffe4df0>
   24e0c:	2005c916 	blt	r4,zero,26534 <___vfprintf_internal_r+0x1bd8>
   24e10:	d9002915 	stw	r4,164(sp)
   24e14:	003f3306 	br	24ae4 <__alt_data_end+0xfffe4ae4>
   24e18:	94802014 	ori	r18,r18,128
   24e1c:	ac400007 	ldb	r17,0(r21)
   24e20:	003f2f06 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   24e24:	a809883a 	mov	r4,r21
   24e28:	d8003115 	stw	zero,196(sp)
   24e2c:	88bff404 	addi	r2,r17,-48
   24e30:	0017883a 	mov	r11,zero
   24e34:	24400007 	ldb	r17,0(r4)
   24e38:	5ac002a4 	muli	r11,r11,10
   24e3c:	ad400044 	addi	r21,r21,1
   24e40:	a809883a 	mov	r4,r21
   24e44:	12d7883a 	add	r11,r2,r11
   24e48:	88bff404 	addi	r2,r17,-48
   24e4c:	30bff92e 	bgeu	r6,r2,24e34 <__alt_data_end+0xfffe4e34>
   24e50:	dac03115 	stw	r11,196(sp)
   24e54:	003f2306 	br	24ae4 <__alt_data_end+0xfffe4ae4>
   24e58:	18c03fcc 	andi	r3,r3,255
   24e5c:	18072b1e 	bne	r3,zero,26b0c <___vfprintf_internal_r+0x21b0>
   24e60:	94800414 	ori	r18,r18,16
   24e64:	9080080c 	andi	r2,r18,32
   24e68:	10037b26 	beq	r2,zero,25c58 <___vfprintf_internal_r+0x12fc>
   24e6c:	d9402d17 	ldw	r5,180(sp)
   24e70:	28800117 	ldw	r2,4(r5)
   24e74:	2cc00017 	ldw	r19,0(r5)
   24e78:	29400204 	addi	r5,r5,8
   24e7c:	d9402d15 	stw	r5,180(sp)
   24e80:	102d883a 	mov	r22,r2
   24e84:	10044b16 	blt	r2,zero,25fb4 <___vfprintf_internal_r+0x1658>
   24e88:	d9402917 	ldw	r5,164(sp)
   24e8c:	df002783 	ldbu	fp,158(sp)
   24e90:	2803bc16 	blt	r5,zero,25d84 <___vfprintf_internal_r+0x1428>
   24e94:	00ffdfc4 	movi	r3,-129
   24e98:	9d84b03a 	or	r2,r19,r22
   24e9c:	90e4703a 	and	r18,r18,r3
   24ea0:	10017726 	beq	r2,zero,25480 <___vfprintf_internal_r+0xb24>
   24ea4:	b0038326 	beq	r22,zero,25cb4 <___vfprintf_internal_r+0x1358>
   24ea8:	dc402a15 	stw	r17,168(sp)
   24eac:	dc001e04 	addi	r16,sp,120
   24eb0:	b023883a 	mov	r17,r22
   24eb4:	402d883a 	mov	r22,r8
   24eb8:	9809883a 	mov	r4,r19
   24ebc:	880b883a 	mov	r5,r17
   24ec0:	01800284 	movi	r6,10
   24ec4:	000f883a 	mov	r7,zero
   24ec8:	002e3740 	call	2e374 <__umoddi3>
   24ecc:	10800c04 	addi	r2,r2,48
   24ed0:	843fffc4 	addi	r16,r16,-1
   24ed4:	9809883a 	mov	r4,r19
   24ed8:	880b883a 	mov	r5,r17
   24edc:	80800005 	stb	r2,0(r16)
   24ee0:	01800284 	movi	r6,10
   24ee4:	000f883a 	mov	r7,zero
   24ee8:	002ddfc0 	call	2ddfc <__udivdi3>
   24eec:	1027883a 	mov	r19,r2
   24ef0:	10c4b03a 	or	r2,r2,r3
   24ef4:	1823883a 	mov	r17,r3
   24ef8:	103fef1e 	bne	r2,zero,24eb8 <__alt_data_end+0xfffe4eb8>
   24efc:	d8c02817 	ldw	r3,160(sp)
   24f00:	dc402a17 	ldw	r17,168(sp)
   24f04:	b011883a 	mov	r8,r22
   24f08:	1c07c83a 	sub	r3,r3,r16
   24f0c:	d8c02e15 	stw	r3,184(sp)
   24f10:	00005906 	br	25078 <___vfprintf_internal_r+0x71c>
   24f14:	18c03fcc 	andi	r3,r3,255
   24f18:	1806fa1e 	bne	r3,zero,26b04 <___vfprintf_internal_r+0x21a8>
   24f1c:	9080020c 	andi	r2,r18,8
   24f20:	10048a26 	beq	r2,zero,2614c <___vfprintf_internal_r+0x17f0>
   24f24:	d8c02d17 	ldw	r3,180(sp)
   24f28:	d9002d17 	ldw	r4,180(sp)
   24f2c:	d9402d17 	ldw	r5,180(sp)
   24f30:	18c00017 	ldw	r3,0(r3)
   24f34:	21000117 	ldw	r4,4(r4)
   24f38:	29400204 	addi	r5,r5,8
   24f3c:	d8c03615 	stw	r3,216(sp)
   24f40:	d9003815 	stw	r4,224(sp)
   24f44:	d9402d15 	stw	r5,180(sp)
   24f48:	d9003617 	ldw	r4,216(sp)
   24f4c:	d9403817 	ldw	r5,224(sp)
   24f50:	da003d15 	stw	r8,244(sp)
   24f54:	04000044 	movi	r16,1
   24f58:	0021d400 	call	21d40 <__fpclassifyd>
   24f5c:	da003d17 	ldw	r8,244(sp)
   24f60:	14041f1e 	bne	r2,r16,25fe0 <___vfprintf_internal_r+0x1684>
   24f64:	d9003617 	ldw	r4,216(sp)
   24f68:	d9403817 	ldw	r5,224(sp)
   24f6c:	000d883a 	mov	r6,zero
   24f70:	000f883a 	mov	r7,zero
   24f74:	00236180 	call	23618 <__ledf2>
   24f78:	da003d17 	ldw	r8,244(sp)
   24f7c:	1005be16 	blt	r2,zero,26678 <___vfprintf_internal_r+0x1d1c>
   24f80:	df002783 	ldbu	fp,158(sp)
   24f84:	008011c4 	movi	r2,71
   24f88:	1445330e 	bge	r2,r17,26458 <___vfprintf_internal_r+0x1afc>
   24f8c:	040000f4 	movhi	r16,3
   24f90:	8404ee04 	addi	r16,r16,5048
   24f94:	00c000c4 	movi	r3,3
   24f98:	00bfdfc4 	movi	r2,-129
   24f9c:	d8c02a15 	stw	r3,168(sp)
   24fa0:	90a4703a 	and	r18,r18,r2
   24fa4:	d8c02e15 	stw	r3,184(sp)
   24fa8:	d8002915 	stw	zero,164(sp)
   24fac:	d8003215 	stw	zero,200(sp)
   24fb0:	00003706 	br	25090 <___vfprintf_internal_r+0x734>
   24fb4:	94800214 	ori	r18,r18,8
   24fb8:	ac400007 	ldb	r17,0(r21)
   24fbc:	003ec806 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   24fc0:	18c03fcc 	andi	r3,r3,255
   24fc4:	1806db1e 	bne	r3,zero,26b34 <___vfprintf_internal_r+0x21d8>
   24fc8:	94800414 	ori	r18,r18,16
   24fcc:	9080080c 	andi	r2,r18,32
   24fd0:	1002d826 	beq	r2,zero,25b34 <___vfprintf_internal_r+0x11d8>
   24fd4:	d9402d17 	ldw	r5,180(sp)
   24fd8:	d8c02917 	ldw	r3,164(sp)
   24fdc:	d8002785 	stb	zero,158(sp)
   24fe0:	28800204 	addi	r2,r5,8
   24fe4:	2cc00017 	ldw	r19,0(r5)
   24fe8:	2d800117 	ldw	r22,4(r5)
   24fec:	18048f16 	blt	r3,zero,2622c <___vfprintf_internal_r+0x18d0>
   24ff0:	013fdfc4 	movi	r4,-129
   24ff4:	9d86b03a 	or	r3,r19,r22
   24ff8:	d8802d15 	stw	r2,180(sp)
   24ffc:	9124703a 	and	r18,r18,r4
   25000:	1802d91e 	bne	r3,zero,25b68 <___vfprintf_internal_r+0x120c>
   25004:	d8c02917 	ldw	r3,164(sp)
   25008:	0039883a 	mov	fp,zero
   2500c:	1805c326 	beq	r3,zero,2671c <___vfprintf_internal_r+0x1dc0>
   25010:	0027883a 	mov	r19,zero
   25014:	002d883a 	mov	r22,zero
   25018:	dc001e04 	addi	r16,sp,120
   2501c:	9806d0fa 	srli	r3,r19,3
   25020:	b008977a 	slli	r4,r22,29
   25024:	b02cd0fa 	srli	r22,r22,3
   25028:	9cc001cc 	andi	r19,r19,7
   2502c:	98800c04 	addi	r2,r19,48
   25030:	843fffc4 	addi	r16,r16,-1
   25034:	20e6b03a 	or	r19,r4,r3
   25038:	80800005 	stb	r2,0(r16)
   2503c:	9d86b03a 	or	r3,r19,r22
   25040:	183ff61e 	bne	r3,zero,2501c <__alt_data_end+0xfffe501c>
   25044:	90c0004c 	andi	r3,r18,1
   25048:	18013b26 	beq	r3,zero,25538 <___vfprintf_internal_r+0xbdc>
   2504c:	10803fcc 	andi	r2,r2,255
   25050:	1080201c 	xori	r2,r2,128
   25054:	10bfe004 	addi	r2,r2,-128
   25058:	00c00c04 	movi	r3,48
   2505c:	10c13626 	beq	r2,r3,25538 <___vfprintf_internal_r+0xbdc>
   25060:	80ffffc5 	stb	r3,-1(r16)
   25064:	d8c02817 	ldw	r3,160(sp)
   25068:	80bfffc4 	addi	r2,r16,-1
   2506c:	1021883a 	mov	r16,r2
   25070:	1887c83a 	sub	r3,r3,r2
   25074:	d8c02e15 	stw	r3,184(sp)
   25078:	d8802e17 	ldw	r2,184(sp)
   2507c:	d9002917 	ldw	r4,164(sp)
   25080:	1100010e 	bge	r2,r4,25088 <___vfprintf_internal_r+0x72c>
   25084:	2005883a 	mov	r2,r4
   25088:	d8802a15 	stw	r2,168(sp)
   2508c:	d8003215 	stw	zero,200(sp)
   25090:	e7003fcc 	andi	fp,fp,255
   25094:	e700201c 	xori	fp,fp,128
   25098:	e73fe004 	addi	fp,fp,-128
   2509c:	e0000326 	beq	fp,zero,250ac <___vfprintf_internal_r+0x750>
   250a0:	d8c02a17 	ldw	r3,168(sp)
   250a4:	18c00044 	addi	r3,r3,1
   250a8:	d8c02a15 	stw	r3,168(sp)
   250ac:	90c0008c 	andi	r3,r18,2
   250b0:	d8c02b15 	stw	r3,172(sp)
   250b4:	18000326 	beq	r3,zero,250c4 <___vfprintf_internal_r+0x768>
   250b8:	d8c02a17 	ldw	r3,168(sp)
   250bc:	18c00084 	addi	r3,r3,2
   250c0:	d8c02a15 	stw	r3,168(sp)
   250c4:	90c0210c 	andi	r3,r18,132
   250c8:	d8c03015 	stw	r3,192(sp)
   250cc:	1801a31e 	bne	r3,zero,2575c <___vfprintf_internal_r+0xe00>
   250d0:	d9003117 	ldw	r4,196(sp)
   250d4:	d8c02a17 	ldw	r3,168(sp)
   250d8:	20e7c83a 	sub	r19,r4,r3
   250dc:	04c19f0e 	bge	zero,r19,2575c <___vfprintf_internal_r+0xe00>
   250e0:	02400404 	movi	r9,16
   250e4:	d8c02017 	ldw	r3,128(sp)
   250e8:	d8801f17 	ldw	r2,124(sp)
   250ec:	4cc50d0e 	bge	r9,r19,26524 <___vfprintf_internal_r+0x1bc8>
   250f0:	014000f4 	movhi	r5,3
   250f4:	29450184 	addi	r5,r5,5126
   250f8:	dc403b15 	stw	r17,236(sp)
   250fc:	d9403515 	stw	r5,212(sp)
   25100:	9823883a 	mov	r17,r19
   25104:	482d883a 	mov	r22,r9
   25108:	9027883a 	mov	r19,r18
   2510c:	070001c4 	movi	fp,7
   25110:	8025883a 	mov	r18,r16
   25114:	dc002c17 	ldw	r16,176(sp)
   25118:	00000306 	br	25128 <___vfprintf_internal_r+0x7cc>
   2511c:	8c7ffc04 	addi	r17,r17,-16
   25120:	42000204 	addi	r8,r8,8
   25124:	b440130e 	bge	r22,r17,25174 <___vfprintf_internal_r+0x818>
   25128:	010000f4 	movhi	r4,3
   2512c:	18c00404 	addi	r3,r3,16
   25130:	10800044 	addi	r2,r2,1
   25134:	21050184 	addi	r4,r4,5126
   25138:	41000015 	stw	r4,0(r8)
   2513c:	45800115 	stw	r22,4(r8)
   25140:	d8c02015 	stw	r3,128(sp)
   25144:	d8801f15 	stw	r2,124(sp)
   25148:	e0bff40e 	bge	fp,r2,2511c <__alt_data_end+0xfffe511c>
   2514c:	d9801e04 	addi	r6,sp,120
   25150:	b80b883a 	mov	r5,r23
   25154:	8009883a 	mov	r4,r16
   25158:	002b4000 	call	2b400 <__sprint_r>
   2515c:	103f011e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25160:	8c7ffc04 	addi	r17,r17,-16
   25164:	d8c02017 	ldw	r3,128(sp)
   25168:	d8801f17 	ldw	r2,124(sp)
   2516c:	da000404 	addi	r8,sp,16
   25170:	b47fed16 	blt	r22,r17,25128 <__alt_data_end+0xfffe5128>
   25174:	9021883a 	mov	r16,r18
   25178:	9825883a 	mov	r18,r19
   2517c:	8827883a 	mov	r19,r17
   25180:	dc403b17 	ldw	r17,236(sp)
   25184:	d9403517 	ldw	r5,212(sp)
   25188:	98c7883a 	add	r3,r19,r3
   2518c:	10800044 	addi	r2,r2,1
   25190:	41400015 	stw	r5,0(r8)
   25194:	44c00115 	stw	r19,4(r8)
   25198:	d8c02015 	stw	r3,128(sp)
   2519c:	d8801f15 	stw	r2,124(sp)
   251a0:	010001c4 	movi	r4,7
   251a4:	2082a316 	blt	r4,r2,25c34 <___vfprintf_internal_r+0x12d8>
   251a8:	df002787 	ldb	fp,158(sp)
   251ac:	42000204 	addi	r8,r8,8
   251b0:	e0000c26 	beq	fp,zero,251e4 <___vfprintf_internal_r+0x888>
   251b4:	d8801f17 	ldw	r2,124(sp)
   251b8:	d9002784 	addi	r4,sp,158
   251bc:	18c00044 	addi	r3,r3,1
   251c0:	10800044 	addi	r2,r2,1
   251c4:	41000015 	stw	r4,0(r8)
   251c8:	01000044 	movi	r4,1
   251cc:	41000115 	stw	r4,4(r8)
   251d0:	d8c02015 	stw	r3,128(sp)
   251d4:	d8801f15 	stw	r2,124(sp)
   251d8:	010001c4 	movi	r4,7
   251dc:	20823c16 	blt	r4,r2,25ad0 <___vfprintf_internal_r+0x1174>
   251e0:	42000204 	addi	r8,r8,8
   251e4:	d8802b17 	ldw	r2,172(sp)
   251e8:	10000c26 	beq	r2,zero,2521c <___vfprintf_internal_r+0x8c0>
   251ec:	d8801f17 	ldw	r2,124(sp)
   251f0:	d9002704 	addi	r4,sp,156
   251f4:	18c00084 	addi	r3,r3,2
   251f8:	10800044 	addi	r2,r2,1
   251fc:	41000015 	stw	r4,0(r8)
   25200:	01000084 	movi	r4,2
   25204:	41000115 	stw	r4,4(r8)
   25208:	d8c02015 	stw	r3,128(sp)
   2520c:	d8801f15 	stw	r2,124(sp)
   25210:	010001c4 	movi	r4,7
   25214:	20823616 	blt	r4,r2,25af0 <___vfprintf_internal_r+0x1194>
   25218:	42000204 	addi	r8,r8,8
   2521c:	d9003017 	ldw	r4,192(sp)
   25220:	00802004 	movi	r2,128
   25224:	20819926 	beq	r4,r2,2588c <___vfprintf_internal_r+0xf30>
   25228:	d9402917 	ldw	r5,164(sp)
   2522c:	d8802e17 	ldw	r2,184(sp)
   25230:	28adc83a 	sub	r22,r5,r2
   25234:	0580310e 	bge	zero,r22,252fc <___vfprintf_internal_r+0x9a0>
   25238:	07000404 	movi	fp,16
   2523c:	d8801f17 	ldw	r2,124(sp)
   25240:	e584140e 	bge	fp,r22,26294 <___vfprintf_internal_r+0x1938>
   25244:	014000f4 	movhi	r5,3
   25248:	2944fd84 	addi	r5,r5,5110
   2524c:	dc402915 	stw	r17,164(sp)
   25250:	d9402b15 	stw	r5,172(sp)
   25254:	b023883a 	mov	r17,r22
   25258:	04c001c4 	movi	r19,7
   2525c:	a82d883a 	mov	r22,r21
   25260:	902b883a 	mov	r21,r18
   25264:	8025883a 	mov	r18,r16
   25268:	dc002c17 	ldw	r16,176(sp)
   2526c:	00000306 	br	2527c <___vfprintf_internal_r+0x920>
   25270:	8c7ffc04 	addi	r17,r17,-16
   25274:	42000204 	addi	r8,r8,8
   25278:	e440110e 	bge	fp,r17,252c0 <___vfprintf_internal_r+0x964>
   2527c:	18c00404 	addi	r3,r3,16
   25280:	10800044 	addi	r2,r2,1
   25284:	45000015 	stw	r20,0(r8)
   25288:	47000115 	stw	fp,4(r8)
   2528c:	d8c02015 	stw	r3,128(sp)
   25290:	d8801f15 	stw	r2,124(sp)
   25294:	98bff60e 	bge	r19,r2,25270 <__alt_data_end+0xfffe5270>
   25298:	d9801e04 	addi	r6,sp,120
   2529c:	b80b883a 	mov	r5,r23
   252a0:	8009883a 	mov	r4,r16
   252a4:	002b4000 	call	2b400 <__sprint_r>
   252a8:	103eae1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   252ac:	8c7ffc04 	addi	r17,r17,-16
   252b0:	d8c02017 	ldw	r3,128(sp)
   252b4:	d8801f17 	ldw	r2,124(sp)
   252b8:	da000404 	addi	r8,sp,16
   252bc:	e47fef16 	blt	fp,r17,2527c <__alt_data_end+0xfffe527c>
   252c0:	9021883a 	mov	r16,r18
   252c4:	a825883a 	mov	r18,r21
   252c8:	b02b883a 	mov	r21,r22
   252cc:	882d883a 	mov	r22,r17
   252d0:	dc402917 	ldw	r17,164(sp)
   252d4:	d9002b17 	ldw	r4,172(sp)
   252d8:	1d87883a 	add	r3,r3,r22
   252dc:	10800044 	addi	r2,r2,1
   252e0:	41000015 	stw	r4,0(r8)
   252e4:	45800115 	stw	r22,4(r8)
   252e8:	d8c02015 	stw	r3,128(sp)
   252ec:	d8801f15 	stw	r2,124(sp)
   252f0:	010001c4 	movi	r4,7
   252f4:	2081ee16 	blt	r4,r2,25ab0 <___vfprintf_internal_r+0x1154>
   252f8:	42000204 	addi	r8,r8,8
   252fc:	9080400c 	andi	r2,r18,256
   25300:	1001181e 	bne	r2,zero,25764 <___vfprintf_internal_r+0xe08>
   25304:	d9402e17 	ldw	r5,184(sp)
   25308:	d8801f17 	ldw	r2,124(sp)
   2530c:	44000015 	stw	r16,0(r8)
   25310:	1947883a 	add	r3,r3,r5
   25314:	10800044 	addi	r2,r2,1
   25318:	41400115 	stw	r5,4(r8)
   2531c:	d8c02015 	stw	r3,128(sp)
   25320:	d8801f15 	stw	r2,124(sp)
   25324:	010001c4 	movi	r4,7
   25328:	2081d316 	blt	r4,r2,25a78 <___vfprintf_internal_r+0x111c>
   2532c:	42000204 	addi	r8,r8,8
   25330:	9480010c 	andi	r18,r18,4
   25334:	90003226 	beq	r18,zero,25400 <___vfprintf_internal_r+0xaa4>
   25338:	d9403117 	ldw	r5,196(sp)
   2533c:	d8802a17 	ldw	r2,168(sp)
   25340:	28a1c83a 	sub	r16,r5,r2
   25344:	04002e0e 	bge	zero,r16,25400 <___vfprintf_internal_r+0xaa4>
   25348:	04400404 	movi	r17,16
   2534c:	d8801f17 	ldw	r2,124(sp)
   25350:	8c04a20e 	bge	r17,r16,265dc <___vfprintf_internal_r+0x1c80>
   25354:	014000f4 	movhi	r5,3
   25358:	29450184 	addi	r5,r5,5126
   2535c:	d9403515 	stw	r5,212(sp)
   25360:	048001c4 	movi	r18,7
   25364:	dcc02c17 	ldw	r19,176(sp)
   25368:	00000306 	br	25378 <___vfprintf_internal_r+0xa1c>
   2536c:	843ffc04 	addi	r16,r16,-16
   25370:	42000204 	addi	r8,r8,8
   25374:	8c00130e 	bge	r17,r16,253c4 <___vfprintf_internal_r+0xa68>
   25378:	010000f4 	movhi	r4,3
   2537c:	18c00404 	addi	r3,r3,16
   25380:	10800044 	addi	r2,r2,1
   25384:	21050184 	addi	r4,r4,5126
   25388:	41000015 	stw	r4,0(r8)
   2538c:	44400115 	stw	r17,4(r8)
   25390:	d8c02015 	stw	r3,128(sp)
   25394:	d8801f15 	stw	r2,124(sp)
   25398:	90bff40e 	bge	r18,r2,2536c <__alt_data_end+0xfffe536c>
   2539c:	d9801e04 	addi	r6,sp,120
   253a0:	b80b883a 	mov	r5,r23
   253a4:	9809883a 	mov	r4,r19
   253a8:	002b4000 	call	2b400 <__sprint_r>
   253ac:	103e6d1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   253b0:	843ffc04 	addi	r16,r16,-16
   253b4:	d8c02017 	ldw	r3,128(sp)
   253b8:	d8801f17 	ldw	r2,124(sp)
   253bc:	da000404 	addi	r8,sp,16
   253c0:	8c3fed16 	blt	r17,r16,25378 <__alt_data_end+0xfffe5378>
   253c4:	d9403517 	ldw	r5,212(sp)
   253c8:	1c07883a 	add	r3,r3,r16
   253cc:	10800044 	addi	r2,r2,1
   253d0:	41400015 	stw	r5,0(r8)
   253d4:	44000115 	stw	r16,4(r8)
   253d8:	d8c02015 	stw	r3,128(sp)
   253dc:	d8801f15 	stw	r2,124(sp)
   253e0:	010001c4 	movi	r4,7
   253e4:	2080060e 	bge	r4,r2,25400 <___vfprintf_internal_r+0xaa4>
   253e8:	d9002c17 	ldw	r4,176(sp)
   253ec:	d9801e04 	addi	r6,sp,120
   253f0:	b80b883a 	mov	r5,r23
   253f4:	002b4000 	call	2b400 <__sprint_r>
   253f8:	103e5a1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   253fc:	d8c02017 	ldw	r3,128(sp)
   25400:	d8803117 	ldw	r2,196(sp)
   25404:	d9002a17 	ldw	r4,168(sp)
   25408:	1100010e 	bge	r2,r4,25410 <___vfprintf_internal_r+0xab4>
   2540c:	2005883a 	mov	r2,r4
   25410:	d9402f17 	ldw	r5,188(sp)
   25414:	288b883a 	add	r5,r5,r2
   25418:	d9402f15 	stw	r5,188(sp)
   2541c:	18019e1e 	bne	r3,zero,25a98 <___vfprintf_internal_r+0x113c>
   25420:	a8800007 	ldb	r2,0(r21)
   25424:	d8001f15 	stw	zero,124(sp)
   25428:	da000404 	addi	r8,sp,16
   2542c:	103d851e 	bne	r2,zero,24a44 <__alt_data_end+0xfffe4a44>
   25430:	a821883a 	mov	r16,r21
   25434:	003d9b06 	br	24aa4 <__alt_data_end+0xfffe4aa4>
   25438:	18c03fcc 	andi	r3,r3,255
   2543c:	1805c11e 	bne	r3,zero,26b44 <___vfprintf_internal_r+0x21e8>
   25440:	94800414 	ori	r18,r18,16
   25444:	9080080c 	andi	r2,r18,32
   25448:	10020c26 	beq	r2,zero,25c7c <___vfprintf_internal_r+0x1320>
   2544c:	d8802d17 	ldw	r2,180(sp)
   25450:	d9002917 	ldw	r4,164(sp)
   25454:	d8002785 	stb	zero,158(sp)
   25458:	10c00204 	addi	r3,r2,8
   2545c:	14c00017 	ldw	r19,0(r2)
   25460:	15800117 	ldw	r22,4(r2)
   25464:	20040f16 	blt	r4,zero,264a4 <___vfprintf_internal_r+0x1b48>
   25468:	013fdfc4 	movi	r4,-129
   2546c:	9d84b03a 	or	r2,r19,r22
   25470:	d8c02d15 	stw	r3,180(sp)
   25474:	9124703a 	and	r18,r18,r4
   25478:	0039883a 	mov	fp,zero
   2547c:	103e891e 	bne	r2,zero,24ea4 <__alt_data_end+0xfffe4ea4>
   25480:	d9002917 	ldw	r4,164(sp)
   25484:	2002c11e 	bne	r4,zero,25f8c <___vfprintf_internal_r+0x1630>
   25488:	d8002915 	stw	zero,164(sp)
   2548c:	d8002e15 	stw	zero,184(sp)
   25490:	dc001e04 	addi	r16,sp,120
   25494:	003ef806 	br	25078 <__alt_data_end+0xfffe5078>
   25498:	18c03fcc 	andi	r3,r3,255
   2549c:	18059d1e 	bne	r3,zero,26b14 <___vfprintf_internal_r+0x21b8>
   254a0:	014000f4 	movhi	r5,3
   254a4:	2944f104 	addi	r5,r5,5060
   254a8:	d9403915 	stw	r5,228(sp)
   254ac:	9080080c 	andi	r2,r18,32
   254b0:	10005226 	beq	r2,zero,255fc <___vfprintf_internal_r+0xca0>
   254b4:	d8802d17 	ldw	r2,180(sp)
   254b8:	14c00017 	ldw	r19,0(r2)
   254bc:	15800117 	ldw	r22,4(r2)
   254c0:	10800204 	addi	r2,r2,8
   254c4:	d8802d15 	stw	r2,180(sp)
   254c8:	9080004c 	andi	r2,r18,1
   254cc:	10019026 	beq	r2,zero,25b10 <___vfprintf_internal_r+0x11b4>
   254d0:	9d84b03a 	or	r2,r19,r22
   254d4:	10036926 	beq	r2,zero,2627c <___vfprintf_internal_r+0x1920>
   254d8:	d8c02917 	ldw	r3,164(sp)
   254dc:	00800c04 	movi	r2,48
   254e0:	d8802705 	stb	r2,156(sp)
   254e4:	dc402745 	stb	r17,157(sp)
   254e8:	d8002785 	stb	zero,158(sp)
   254ec:	90800094 	ori	r2,r18,2
   254f0:	18045d16 	blt	r3,zero,26668 <___vfprintf_internal_r+0x1d0c>
   254f4:	00bfdfc4 	movi	r2,-129
   254f8:	90a4703a 	and	r18,r18,r2
   254fc:	94800094 	ori	r18,r18,2
   25500:	0039883a 	mov	fp,zero
   25504:	d9003917 	ldw	r4,228(sp)
   25508:	dc001e04 	addi	r16,sp,120
   2550c:	988003cc 	andi	r2,r19,15
   25510:	b006973a 	slli	r3,r22,28
   25514:	2085883a 	add	r2,r4,r2
   25518:	9826d13a 	srli	r19,r19,4
   2551c:	10800003 	ldbu	r2,0(r2)
   25520:	b02cd13a 	srli	r22,r22,4
   25524:	843fffc4 	addi	r16,r16,-1
   25528:	1ce6b03a 	or	r19,r3,r19
   2552c:	80800005 	stb	r2,0(r16)
   25530:	9d84b03a 	or	r2,r19,r22
   25534:	103ff51e 	bne	r2,zero,2550c <__alt_data_end+0xfffe550c>
   25538:	d8c02817 	ldw	r3,160(sp)
   2553c:	1c07c83a 	sub	r3,r3,r16
   25540:	d8c02e15 	stw	r3,184(sp)
   25544:	003ecc06 	br	25078 <__alt_data_end+0xfffe5078>
   25548:	18c03fcc 	andi	r3,r3,255
   2554c:	183e9f26 	beq	r3,zero,24fcc <__alt_data_end+0xfffe4fcc>
   25550:	d9c02785 	stb	r7,158(sp)
   25554:	003e9d06 	br	24fcc <__alt_data_end+0xfffe4fcc>
   25558:	00c00044 	movi	r3,1
   2555c:	01c00ac4 	movi	r7,43
   25560:	ac400007 	ldb	r17,0(r21)
   25564:	003d5e06 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   25568:	94800814 	ori	r18,r18,32
   2556c:	ac400007 	ldb	r17,0(r21)
   25570:	003d5b06 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   25574:	d8c02d17 	ldw	r3,180(sp)
   25578:	d8002785 	stb	zero,158(sp)
   2557c:	1c000017 	ldw	r16,0(r3)
   25580:	1cc00104 	addi	r19,r3,4
   25584:	80041926 	beq	r16,zero,265ec <___vfprintf_internal_r+0x1c90>
   25588:	d9002917 	ldw	r4,164(sp)
   2558c:	2003d016 	blt	r4,zero,264d0 <___vfprintf_internal_r+0x1b74>
   25590:	200d883a 	mov	r6,r4
   25594:	000b883a 	mov	r5,zero
   25598:	8009883a 	mov	r4,r16
   2559c:	da003d15 	stw	r8,244(sp)
   255a0:	0029cb00 	call	29cb0 <memchr>
   255a4:	da003d17 	ldw	r8,244(sp)
   255a8:	10045426 	beq	r2,zero,266fc <___vfprintf_internal_r+0x1da0>
   255ac:	1405c83a 	sub	r2,r2,r16
   255b0:	d8802e15 	stw	r2,184(sp)
   255b4:	1003cc16 	blt	r2,zero,264e8 <___vfprintf_internal_r+0x1b8c>
   255b8:	df002783 	ldbu	fp,158(sp)
   255bc:	d8802a15 	stw	r2,168(sp)
   255c0:	dcc02d15 	stw	r19,180(sp)
   255c4:	d8002915 	stw	zero,164(sp)
   255c8:	d8003215 	stw	zero,200(sp)
   255cc:	003eb006 	br	25090 <__alt_data_end+0xfffe5090>
   255d0:	18c03fcc 	andi	r3,r3,255
   255d4:	183f9b26 	beq	r3,zero,25444 <__alt_data_end+0xfffe5444>
   255d8:	d9c02785 	stb	r7,158(sp)
   255dc:	003f9906 	br	25444 <__alt_data_end+0xfffe5444>
   255e0:	18c03fcc 	andi	r3,r3,255
   255e4:	1805551e 	bne	r3,zero,26b3c <___vfprintf_internal_r+0x21e0>
   255e8:	014000f4 	movhi	r5,3
   255ec:	2944f604 	addi	r5,r5,5080
   255f0:	d9403915 	stw	r5,228(sp)
   255f4:	9080080c 	andi	r2,r18,32
   255f8:	103fae1e 	bne	r2,zero,254b4 <__alt_data_end+0xfffe54b4>
   255fc:	9080040c 	andi	r2,r18,16
   25600:	1002de26 	beq	r2,zero,2617c <___vfprintf_internal_r+0x1820>
   25604:	d8c02d17 	ldw	r3,180(sp)
   25608:	002d883a 	mov	r22,zero
   2560c:	1cc00017 	ldw	r19,0(r3)
   25610:	18c00104 	addi	r3,r3,4
   25614:	d8c02d15 	stw	r3,180(sp)
   25618:	003fab06 	br	254c8 <__alt_data_end+0xfffe54c8>
   2561c:	38803fcc 	andi	r2,r7,255
   25620:	1080201c 	xori	r2,r2,128
   25624:	10bfe004 	addi	r2,r2,-128
   25628:	1002d21e 	bne	r2,zero,26174 <___vfprintf_internal_r+0x1818>
   2562c:	00c00044 	movi	r3,1
   25630:	01c00804 	movi	r7,32
   25634:	ac400007 	ldb	r17,0(r21)
   25638:	003d2906 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   2563c:	94800054 	ori	r18,r18,1
   25640:	ac400007 	ldb	r17,0(r21)
   25644:	003d2606 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   25648:	18c03fcc 	andi	r3,r3,255
   2564c:	183e0526 	beq	r3,zero,24e64 <__alt_data_end+0xfffe4e64>
   25650:	d9c02785 	stb	r7,158(sp)
   25654:	003e0306 	br	24e64 <__alt_data_end+0xfffe4e64>
   25658:	94801014 	ori	r18,r18,64
   2565c:	ac400007 	ldb	r17,0(r21)
   25660:	003d1f06 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   25664:	ac400007 	ldb	r17,0(r21)
   25668:	8a438726 	beq	r17,r9,26488 <___vfprintf_internal_r+0x1b2c>
   2566c:	94800414 	ori	r18,r18,16
   25670:	003d1b06 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   25674:	18c03fcc 	andi	r3,r3,255
   25678:	1805341e 	bne	r3,zero,26b4c <___vfprintf_internal_r+0x21f0>
   2567c:	9080080c 	andi	r2,r18,32
   25680:	1002cd26 	beq	r2,zero,261b8 <___vfprintf_internal_r+0x185c>
   25684:	d9402d17 	ldw	r5,180(sp)
   25688:	d9002f17 	ldw	r4,188(sp)
   2568c:	28800017 	ldw	r2,0(r5)
   25690:	2007d7fa 	srai	r3,r4,31
   25694:	29400104 	addi	r5,r5,4
   25698:	d9402d15 	stw	r5,180(sp)
   2569c:	11000015 	stw	r4,0(r2)
   256a0:	10c00115 	stw	r3,4(r2)
   256a4:	003ce506 	br	24a3c <__alt_data_end+0xfffe4a3c>
   256a8:	d8c02d17 	ldw	r3,180(sp)
   256ac:	d9002d17 	ldw	r4,180(sp)
   256b0:	d8002785 	stb	zero,158(sp)
   256b4:	18800017 	ldw	r2,0(r3)
   256b8:	21000104 	addi	r4,r4,4
   256bc:	00c00044 	movi	r3,1
   256c0:	d8c02a15 	stw	r3,168(sp)
   256c4:	d8801405 	stb	r2,80(sp)
   256c8:	d9002d15 	stw	r4,180(sp)
   256cc:	d8c02e15 	stw	r3,184(sp)
   256d0:	d8002915 	stw	zero,164(sp)
   256d4:	d8003215 	stw	zero,200(sp)
   256d8:	dc001404 	addi	r16,sp,80
   256dc:	0039883a 	mov	fp,zero
   256e0:	003e7206 	br	250ac <__alt_data_end+0xfffe50ac>
   256e4:	010000f4 	movhi	r4,3
   256e8:	2104f604 	addi	r4,r4,5080
   256ec:	0039883a 	mov	fp,zero
   256f0:	d9003915 	stw	r4,228(sp)
   256f4:	04401e04 	movi	r17,120
   256f8:	003f8206 	br	25504 <__alt_data_end+0xfffe5504>
   256fc:	18c03fcc 	andi	r3,r3,255
   25700:	1805061e 	bne	r3,zero,26b1c <___vfprintf_internal_r+0x21c0>
   25704:	883d9126 	beq	r17,zero,24d4c <__alt_data_end+0xfffe4d4c>
   25708:	00c00044 	movi	r3,1
   2570c:	d8c02a15 	stw	r3,168(sp)
   25710:	dc401405 	stb	r17,80(sp)
   25714:	d8002785 	stb	zero,158(sp)
   25718:	003fec06 	br	256cc <__alt_data_end+0xfffe56cc>
   2571c:	014000f4 	movhi	r5,3
   25720:	2944f604 	addi	r5,r5,5080
   25724:	d9403915 	stw	r5,228(sp)
   25728:	d8c02d15 	stw	r3,180(sp)
   2572c:	1025883a 	mov	r18,r2
   25730:	04401e04 	movi	r17,120
   25734:	9d84b03a 	or	r2,r19,r22
   25738:	1000fc1e 	bne	r2,zero,25b2c <___vfprintf_internal_r+0x11d0>
   2573c:	0039883a 	mov	fp,zero
   25740:	00800084 	movi	r2,2
   25744:	10803fcc 	andi	r2,r2,255
   25748:	00c00044 	movi	r3,1
   2574c:	10c20f26 	beq	r2,r3,25f8c <___vfprintf_internal_r+0x1630>
   25750:	00c00084 	movi	r3,2
   25754:	10fd6326 	beq	r2,r3,24ce4 <__alt_data_end+0xfffe4ce4>
   25758:	003e2d06 	br	25010 <__alt_data_end+0xfffe5010>
   2575c:	d8c02017 	ldw	r3,128(sp)
   25760:	003e9306 	br	251b0 <__alt_data_end+0xfffe51b0>
   25764:	00801944 	movi	r2,101
   25768:	14407e0e 	bge	r2,r17,25964 <___vfprintf_internal_r+0x1008>
   2576c:	d9003617 	ldw	r4,216(sp)
   25770:	d9403817 	ldw	r5,224(sp)
   25774:	000d883a 	mov	r6,zero
   25778:	000f883a 	mov	r7,zero
   2577c:	d8c03c15 	stw	r3,240(sp)
   25780:	da003d15 	stw	r8,244(sp)
   25784:	00234b40 	call	234b4 <__eqdf2>
   25788:	d8c03c17 	ldw	r3,240(sp)
   2578c:	da003d17 	ldw	r8,244(sp)
   25790:	1000f71e 	bne	r2,zero,25b70 <___vfprintf_internal_r+0x1214>
   25794:	d8801f17 	ldw	r2,124(sp)
   25798:	010000f4 	movhi	r4,3
   2579c:	2104fd04 	addi	r4,r4,5108
   257a0:	18c00044 	addi	r3,r3,1
   257a4:	10800044 	addi	r2,r2,1
   257a8:	41000015 	stw	r4,0(r8)
   257ac:	01000044 	movi	r4,1
   257b0:	41000115 	stw	r4,4(r8)
   257b4:	d8c02015 	stw	r3,128(sp)
   257b8:	d8801f15 	stw	r2,124(sp)
   257bc:	010001c4 	movi	r4,7
   257c0:	2082b816 	blt	r4,r2,262a4 <___vfprintf_internal_r+0x1948>
   257c4:	42000204 	addi	r8,r8,8
   257c8:	d8802617 	ldw	r2,152(sp)
   257cc:	d9403317 	ldw	r5,204(sp)
   257d0:	11400216 	blt	r2,r5,257dc <___vfprintf_internal_r+0xe80>
   257d4:	9080004c 	andi	r2,r18,1
   257d8:	103ed526 	beq	r2,zero,25330 <__alt_data_end+0xfffe5330>
   257dc:	d8803717 	ldw	r2,220(sp)
   257e0:	d9003417 	ldw	r4,208(sp)
   257e4:	d9403717 	ldw	r5,220(sp)
   257e8:	1887883a 	add	r3,r3,r2
   257ec:	d8801f17 	ldw	r2,124(sp)
   257f0:	41000015 	stw	r4,0(r8)
   257f4:	41400115 	stw	r5,4(r8)
   257f8:	10800044 	addi	r2,r2,1
   257fc:	d8c02015 	stw	r3,128(sp)
   25800:	d8801f15 	stw	r2,124(sp)
   25804:	010001c4 	movi	r4,7
   25808:	20832916 	blt	r4,r2,264b0 <___vfprintf_internal_r+0x1b54>
   2580c:	42000204 	addi	r8,r8,8
   25810:	d8803317 	ldw	r2,204(sp)
   25814:	143fffc4 	addi	r16,r2,-1
   25818:	043ec50e 	bge	zero,r16,25330 <__alt_data_end+0xfffe5330>
   2581c:	04400404 	movi	r17,16
   25820:	d8801f17 	ldw	r2,124(sp)
   25824:	8c00880e 	bge	r17,r16,25a48 <___vfprintf_internal_r+0x10ec>
   25828:	014000f4 	movhi	r5,3
   2582c:	2944fd84 	addi	r5,r5,5110
   25830:	d9402b15 	stw	r5,172(sp)
   25834:	058001c4 	movi	r22,7
   25838:	dcc02c17 	ldw	r19,176(sp)
   2583c:	00000306 	br	2584c <___vfprintf_internal_r+0xef0>
   25840:	42000204 	addi	r8,r8,8
   25844:	843ffc04 	addi	r16,r16,-16
   25848:	8c00820e 	bge	r17,r16,25a54 <___vfprintf_internal_r+0x10f8>
   2584c:	18c00404 	addi	r3,r3,16
   25850:	10800044 	addi	r2,r2,1
   25854:	45000015 	stw	r20,0(r8)
   25858:	44400115 	stw	r17,4(r8)
   2585c:	d8c02015 	stw	r3,128(sp)
   25860:	d8801f15 	stw	r2,124(sp)
   25864:	b0bff60e 	bge	r22,r2,25840 <__alt_data_end+0xfffe5840>
   25868:	d9801e04 	addi	r6,sp,120
   2586c:	b80b883a 	mov	r5,r23
   25870:	9809883a 	mov	r4,r19
   25874:	002b4000 	call	2b400 <__sprint_r>
   25878:	103d3a1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   2587c:	d8c02017 	ldw	r3,128(sp)
   25880:	d8801f17 	ldw	r2,124(sp)
   25884:	da000404 	addi	r8,sp,16
   25888:	003fee06 	br	25844 <__alt_data_end+0xfffe5844>
   2588c:	d9403117 	ldw	r5,196(sp)
   25890:	d8802a17 	ldw	r2,168(sp)
   25894:	28adc83a 	sub	r22,r5,r2
   25898:	05be630e 	bge	zero,r22,25228 <__alt_data_end+0xfffe5228>
   2589c:	07000404 	movi	fp,16
   258a0:	d8801f17 	ldw	r2,124(sp)
   258a4:	e5838f0e 	bge	fp,r22,266e4 <___vfprintf_internal_r+0x1d88>
   258a8:	014000f4 	movhi	r5,3
   258ac:	2944fd84 	addi	r5,r5,5110
   258b0:	dc403015 	stw	r17,192(sp)
   258b4:	d9402b15 	stw	r5,172(sp)
   258b8:	b023883a 	mov	r17,r22
   258bc:	04c001c4 	movi	r19,7
   258c0:	a82d883a 	mov	r22,r21
   258c4:	902b883a 	mov	r21,r18
   258c8:	8025883a 	mov	r18,r16
   258cc:	dc002c17 	ldw	r16,176(sp)
   258d0:	00000306 	br	258e0 <___vfprintf_internal_r+0xf84>
   258d4:	8c7ffc04 	addi	r17,r17,-16
   258d8:	42000204 	addi	r8,r8,8
   258dc:	e440110e 	bge	fp,r17,25924 <___vfprintf_internal_r+0xfc8>
   258e0:	18c00404 	addi	r3,r3,16
   258e4:	10800044 	addi	r2,r2,1
   258e8:	45000015 	stw	r20,0(r8)
   258ec:	47000115 	stw	fp,4(r8)
   258f0:	d8c02015 	stw	r3,128(sp)
   258f4:	d8801f15 	stw	r2,124(sp)
   258f8:	98bff60e 	bge	r19,r2,258d4 <__alt_data_end+0xfffe58d4>
   258fc:	d9801e04 	addi	r6,sp,120
   25900:	b80b883a 	mov	r5,r23
   25904:	8009883a 	mov	r4,r16
   25908:	002b4000 	call	2b400 <__sprint_r>
   2590c:	103d151e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25910:	8c7ffc04 	addi	r17,r17,-16
   25914:	d8c02017 	ldw	r3,128(sp)
   25918:	d8801f17 	ldw	r2,124(sp)
   2591c:	da000404 	addi	r8,sp,16
   25920:	e47fef16 	blt	fp,r17,258e0 <__alt_data_end+0xfffe58e0>
   25924:	9021883a 	mov	r16,r18
   25928:	a825883a 	mov	r18,r21
   2592c:	b02b883a 	mov	r21,r22
   25930:	882d883a 	mov	r22,r17
   25934:	dc403017 	ldw	r17,192(sp)
   25938:	d9002b17 	ldw	r4,172(sp)
   2593c:	1d87883a 	add	r3,r3,r22
   25940:	10800044 	addi	r2,r2,1
   25944:	41000015 	stw	r4,0(r8)
   25948:	45800115 	stw	r22,4(r8)
   2594c:	d8c02015 	stw	r3,128(sp)
   25950:	d8801f15 	stw	r2,124(sp)
   25954:	010001c4 	movi	r4,7
   25958:	20818e16 	blt	r4,r2,25f94 <___vfprintf_internal_r+0x1638>
   2595c:	42000204 	addi	r8,r8,8
   25960:	003e3106 	br	25228 <__alt_data_end+0xfffe5228>
   25964:	d9403317 	ldw	r5,204(sp)
   25968:	00800044 	movi	r2,1
   2596c:	18c00044 	addi	r3,r3,1
   25970:	1141530e 	bge	r2,r5,25ec0 <___vfprintf_internal_r+0x1564>
   25974:	dc401f17 	ldw	r17,124(sp)
   25978:	00800044 	movi	r2,1
   2597c:	40800115 	stw	r2,4(r8)
   25980:	8c400044 	addi	r17,r17,1
   25984:	44000015 	stw	r16,0(r8)
   25988:	d8c02015 	stw	r3,128(sp)
   2598c:	dc401f15 	stw	r17,124(sp)
   25990:	008001c4 	movi	r2,7
   25994:	14416b16 	blt	r2,r17,25f44 <___vfprintf_internal_r+0x15e8>
   25998:	42000204 	addi	r8,r8,8
   2599c:	d8803717 	ldw	r2,220(sp)
   259a0:	d9003417 	ldw	r4,208(sp)
   259a4:	8c400044 	addi	r17,r17,1
   259a8:	10c7883a 	add	r3,r2,r3
   259ac:	40800115 	stw	r2,4(r8)
   259b0:	41000015 	stw	r4,0(r8)
   259b4:	d8c02015 	stw	r3,128(sp)
   259b8:	dc401f15 	stw	r17,124(sp)
   259bc:	008001c4 	movi	r2,7
   259c0:	14416916 	blt	r2,r17,25f68 <___vfprintf_internal_r+0x160c>
   259c4:	45800204 	addi	r22,r8,8
   259c8:	d9003617 	ldw	r4,216(sp)
   259cc:	d9403817 	ldw	r5,224(sp)
   259d0:	000d883a 	mov	r6,zero
   259d4:	000f883a 	mov	r7,zero
   259d8:	d8c03c15 	stw	r3,240(sp)
   259dc:	00234b40 	call	234b4 <__eqdf2>
   259e0:	d8c03c17 	ldw	r3,240(sp)
   259e4:	1000bc26 	beq	r2,zero,25cd8 <___vfprintf_internal_r+0x137c>
   259e8:	d9403317 	ldw	r5,204(sp)
   259ec:	84000044 	addi	r16,r16,1
   259f0:	8c400044 	addi	r17,r17,1
   259f4:	28bfffc4 	addi	r2,r5,-1
   259f8:	1887883a 	add	r3,r3,r2
   259fc:	b0800115 	stw	r2,4(r22)
   25a00:	b4000015 	stw	r16,0(r22)
   25a04:	d8c02015 	stw	r3,128(sp)
   25a08:	dc401f15 	stw	r17,124(sp)
   25a0c:	008001c4 	movi	r2,7
   25a10:	14414316 	blt	r2,r17,25f20 <___vfprintf_internal_r+0x15c4>
   25a14:	b5800204 	addi	r22,r22,8
   25a18:	d9003a17 	ldw	r4,232(sp)
   25a1c:	df0022c4 	addi	fp,sp,139
   25a20:	8c400044 	addi	r17,r17,1
   25a24:	20c7883a 	add	r3,r4,r3
   25a28:	b7000015 	stw	fp,0(r22)
   25a2c:	b1000115 	stw	r4,4(r22)
   25a30:	d8c02015 	stw	r3,128(sp)
   25a34:	dc401f15 	stw	r17,124(sp)
   25a38:	008001c4 	movi	r2,7
   25a3c:	14400e16 	blt	r2,r17,25a78 <___vfprintf_internal_r+0x111c>
   25a40:	b2000204 	addi	r8,r22,8
   25a44:	003e3a06 	br	25330 <__alt_data_end+0xfffe5330>
   25a48:	010000f4 	movhi	r4,3
   25a4c:	2104fd84 	addi	r4,r4,5110
   25a50:	d9002b15 	stw	r4,172(sp)
   25a54:	d9002b17 	ldw	r4,172(sp)
   25a58:	1c07883a 	add	r3,r3,r16
   25a5c:	44000115 	stw	r16,4(r8)
   25a60:	41000015 	stw	r4,0(r8)
   25a64:	10800044 	addi	r2,r2,1
   25a68:	d8c02015 	stw	r3,128(sp)
   25a6c:	d8801f15 	stw	r2,124(sp)
   25a70:	010001c4 	movi	r4,7
   25a74:	20be2d0e 	bge	r4,r2,2532c <__alt_data_end+0xfffe532c>
   25a78:	d9002c17 	ldw	r4,176(sp)
   25a7c:	d9801e04 	addi	r6,sp,120
   25a80:	b80b883a 	mov	r5,r23
   25a84:	002b4000 	call	2b400 <__sprint_r>
   25a88:	103cb61e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25a8c:	d8c02017 	ldw	r3,128(sp)
   25a90:	da000404 	addi	r8,sp,16
   25a94:	003e2606 	br	25330 <__alt_data_end+0xfffe5330>
   25a98:	d9002c17 	ldw	r4,176(sp)
   25a9c:	d9801e04 	addi	r6,sp,120
   25aa0:	b80b883a 	mov	r5,r23
   25aa4:	002b4000 	call	2b400 <__sprint_r>
   25aa8:	103e5d26 	beq	r2,zero,25420 <__alt_data_end+0xfffe5420>
   25aac:	003cad06 	br	24d64 <__alt_data_end+0xfffe4d64>
   25ab0:	d9002c17 	ldw	r4,176(sp)
   25ab4:	d9801e04 	addi	r6,sp,120
   25ab8:	b80b883a 	mov	r5,r23
   25abc:	002b4000 	call	2b400 <__sprint_r>
   25ac0:	103ca81e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25ac4:	d8c02017 	ldw	r3,128(sp)
   25ac8:	da000404 	addi	r8,sp,16
   25acc:	003e0b06 	br	252fc <__alt_data_end+0xfffe52fc>
   25ad0:	d9002c17 	ldw	r4,176(sp)
   25ad4:	d9801e04 	addi	r6,sp,120
   25ad8:	b80b883a 	mov	r5,r23
   25adc:	002b4000 	call	2b400 <__sprint_r>
   25ae0:	103ca01e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25ae4:	d8c02017 	ldw	r3,128(sp)
   25ae8:	da000404 	addi	r8,sp,16
   25aec:	003dbd06 	br	251e4 <__alt_data_end+0xfffe51e4>
   25af0:	d9002c17 	ldw	r4,176(sp)
   25af4:	d9801e04 	addi	r6,sp,120
   25af8:	b80b883a 	mov	r5,r23
   25afc:	002b4000 	call	2b400 <__sprint_r>
   25b00:	103c981e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25b04:	d8c02017 	ldw	r3,128(sp)
   25b08:	da000404 	addi	r8,sp,16
   25b0c:	003dc306 	br	2521c <__alt_data_end+0xfffe521c>
   25b10:	d8802917 	ldw	r2,164(sp)
   25b14:	d8002785 	stb	zero,158(sp)
   25b18:	103f0616 	blt	r2,zero,25734 <__alt_data_end+0xfffe5734>
   25b1c:	00ffdfc4 	movi	r3,-129
   25b20:	9d84b03a 	or	r2,r19,r22
   25b24:	90e4703a 	and	r18,r18,r3
   25b28:	103c6b26 	beq	r2,zero,24cd8 <__alt_data_end+0xfffe4cd8>
   25b2c:	0039883a 	mov	fp,zero
   25b30:	003e7406 	br	25504 <__alt_data_end+0xfffe5504>
   25b34:	9080040c 	andi	r2,r18,16
   25b38:	1001b326 	beq	r2,zero,26208 <___vfprintf_internal_r+0x18ac>
   25b3c:	d9002d17 	ldw	r4,180(sp)
   25b40:	d9402917 	ldw	r5,164(sp)
   25b44:	d8002785 	stb	zero,158(sp)
   25b48:	20800104 	addi	r2,r4,4
   25b4c:	24c00017 	ldw	r19,0(r4)
   25b50:	002d883a 	mov	r22,zero
   25b54:	2801b516 	blt	r5,zero,2622c <___vfprintf_internal_r+0x18d0>
   25b58:	00ffdfc4 	movi	r3,-129
   25b5c:	d8802d15 	stw	r2,180(sp)
   25b60:	90e4703a 	and	r18,r18,r3
   25b64:	983d2726 	beq	r19,zero,25004 <__alt_data_end+0xfffe5004>
   25b68:	0039883a 	mov	fp,zero
   25b6c:	003d2a06 	br	25018 <__alt_data_end+0xfffe5018>
   25b70:	dc402617 	ldw	r17,152(sp)
   25b74:	0441d30e 	bge	zero,r17,262c4 <___vfprintf_internal_r+0x1968>
   25b78:	dc403217 	ldw	r17,200(sp)
   25b7c:	d8803317 	ldw	r2,204(sp)
   25b80:	1440010e 	bge	r2,r17,25b88 <___vfprintf_internal_r+0x122c>
   25b84:	1023883a 	mov	r17,r2
   25b88:	04400a0e 	bge	zero,r17,25bb4 <___vfprintf_internal_r+0x1258>
   25b8c:	d8801f17 	ldw	r2,124(sp)
   25b90:	1c47883a 	add	r3,r3,r17
   25b94:	44000015 	stw	r16,0(r8)
   25b98:	10800044 	addi	r2,r2,1
   25b9c:	44400115 	stw	r17,4(r8)
   25ba0:	d8c02015 	stw	r3,128(sp)
   25ba4:	d8801f15 	stw	r2,124(sp)
   25ba8:	010001c4 	movi	r4,7
   25bac:	20826516 	blt	r4,r2,26544 <___vfprintf_internal_r+0x1be8>
   25bb0:	42000204 	addi	r8,r8,8
   25bb4:	88026116 	blt	r17,zero,2653c <___vfprintf_internal_r+0x1be0>
   25bb8:	d9003217 	ldw	r4,200(sp)
   25bbc:	2463c83a 	sub	r17,r4,r17
   25bc0:	04407b0e 	bge	zero,r17,25db0 <___vfprintf_internal_r+0x1454>
   25bc4:	05800404 	movi	r22,16
   25bc8:	d8801f17 	ldw	r2,124(sp)
   25bcc:	b4419d0e 	bge	r22,r17,26244 <___vfprintf_internal_r+0x18e8>
   25bd0:	010000f4 	movhi	r4,3
   25bd4:	2104fd84 	addi	r4,r4,5110
   25bd8:	d9002b15 	stw	r4,172(sp)
   25bdc:	070001c4 	movi	fp,7
   25be0:	dcc02c17 	ldw	r19,176(sp)
   25be4:	00000306 	br	25bf4 <___vfprintf_internal_r+0x1298>
   25be8:	42000204 	addi	r8,r8,8
   25bec:	8c7ffc04 	addi	r17,r17,-16
   25bf0:	b441970e 	bge	r22,r17,26250 <___vfprintf_internal_r+0x18f4>
   25bf4:	18c00404 	addi	r3,r3,16
   25bf8:	10800044 	addi	r2,r2,1
   25bfc:	45000015 	stw	r20,0(r8)
   25c00:	45800115 	stw	r22,4(r8)
   25c04:	d8c02015 	stw	r3,128(sp)
   25c08:	d8801f15 	stw	r2,124(sp)
   25c0c:	e0bff60e 	bge	fp,r2,25be8 <__alt_data_end+0xfffe5be8>
   25c10:	d9801e04 	addi	r6,sp,120
   25c14:	b80b883a 	mov	r5,r23
   25c18:	9809883a 	mov	r4,r19
   25c1c:	002b4000 	call	2b400 <__sprint_r>
   25c20:	103c501e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25c24:	d8c02017 	ldw	r3,128(sp)
   25c28:	d8801f17 	ldw	r2,124(sp)
   25c2c:	da000404 	addi	r8,sp,16
   25c30:	003fee06 	br	25bec <__alt_data_end+0xfffe5bec>
   25c34:	d9002c17 	ldw	r4,176(sp)
   25c38:	d9801e04 	addi	r6,sp,120
   25c3c:	b80b883a 	mov	r5,r23
   25c40:	002b4000 	call	2b400 <__sprint_r>
   25c44:	103c471e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25c48:	d8c02017 	ldw	r3,128(sp)
   25c4c:	df002787 	ldb	fp,158(sp)
   25c50:	da000404 	addi	r8,sp,16
   25c54:	003d5606 	br	251b0 <__alt_data_end+0xfffe51b0>
   25c58:	9080040c 	andi	r2,r18,16
   25c5c:	10016126 	beq	r2,zero,261e4 <___vfprintf_internal_r+0x1888>
   25c60:	d8802d17 	ldw	r2,180(sp)
   25c64:	14c00017 	ldw	r19,0(r2)
   25c68:	10800104 	addi	r2,r2,4
   25c6c:	d8802d15 	stw	r2,180(sp)
   25c70:	982dd7fa 	srai	r22,r19,31
   25c74:	b005883a 	mov	r2,r22
   25c78:	003c8206 	br	24e84 <__alt_data_end+0xfffe4e84>
   25c7c:	9080040c 	andi	r2,r18,16
   25c80:	10003526 	beq	r2,zero,25d58 <___vfprintf_internal_r+0x13fc>
   25c84:	d9402d17 	ldw	r5,180(sp)
   25c88:	d8c02917 	ldw	r3,164(sp)
   25c8c:	d8002785 	stb	zero,158(sp)
   25c90:	28800104 	addi	r2,r5,4
   25c94:	2cc00017 	ldw	r19,0(r5)
   25c98:	002d883a 	mov	r22,zero
   25c9c:	18003716 	blt	r3,zero,25d7c <___vfprintf_internal_r+0x1420>
   25ca0:	00ffdfc4 	movi	r3,-129
   25ca4:	d8802d15 	stw	r2,180(sp)
   25ca8:	90e4703a 	and	r18,r18,r3
   25cac:	0039883a 	mov	fp,zero
   25cb0:	983df326 	beq	r19,zero,25480 <__alt_data_end+0xfffe5480>
   25cb4:	00800244 	movi	r2,9
   25cb8:	14fc7b36 	bltu	r2,r19,24ea8 <__alt_data_end+0xfffe4ea8>
   25cbc:	d8c02817 	ldw	r3,160(sp)
   25cc0:	dc001dc4 	addi	r16,sp,119
   25cc4:	9cc00c04 	addi	r19,r19,48
   25cc8:	1c07c83a 	sub	r3,r3,r16
   25ccc:	dcc01dc5 	stb	r19,119(sp)
   25cd0:	d8c02e15 	stw	r3,184(sp)
   25cd4:	003ce806 	br	25078 <__alt_data_end+0xfffe5078>
   25cd8:	d8803317 	ldw	r2,204(sp)
   25cdc:	143fffc4 	addi	r16,r2,-1
   25ce0:	043f4d0e 	bge	zero,r16,25a18 <__alt_data_end+0xfffe5a18>
   25ce4:	07000404 	movi	fp,16
   25ce8:	e400810e 	bge	fp,r16,25ef0 <___vfprintf_internal_r+0x1594>
   25cec:	014000f4 	movhi	r5,3
   25cf0:	2944fd84 	addi	r5,r5,5110
   25cf4:	d9402b15 	stw	r5,172(sp)
   25cf8:	01c001c4 	movi	r7,7
   25cfc:	dcc02c17 	ldw	r19,176(sp)
   25d00:	00000306 	br	25d10 <___vfprintf_internal_r+0x13b4>
   25d04:	b5800204 	addi	r22,r22,8
   25d08:	843ffc04 	addi	r16,r16,-16
   25d0c:	e4007b0e 	bge	fp,r16,25efc <___vfprintf_internal_r+0x15a0>
   25d10:	18c00404 	addi	r3,r3,16
   25d14:	8c400044 	addi	r17,r17,1
   25d18:	b5000015 	stw	r20,0(r22)
   25d1c:	b7000115 	stw	fp,4(r22)
   25d20:	d8c02015 	stw	r3,128(sp)
   25d24:	dc401f15 	stw	r17,124(sp)
   25d28:	3c7ff60e 	bge	r7,r17,25d04 <__alt_data_end+0xfffe5d04>
   25d2c:	d9801e04 	addi	r6,sp,120
   25d30:	b80b883a 	mov	r5,r23
   25d34:	9809883a 	mov	r4,r19
   25d38:	d9c03c15 	stw	r7,240(sp)
   25d3c:	002b4000 	call	2b400 <__sprint_r>
   25d40:	d9c03c17 	ldw	r7,240(sp)
   25d44:	103c071e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25d48:	d8c02017 	ldw	r3,128(sp)
   25d4c:	dc401f17 	ldw	r17,124(sp)
   25d50:	dd800404 	addi	r22,sp,16
   25d54:	003fec06 	br	25d08 <__alt_data_end+0xfffe5d08>
   25d58:	9080100c 	andi	r2,r18,64
   25d5c:	d8002785 	stb	zero,158(sp)
   25d60:	10010e26 	beq	r2,zero,2619c <___vfprintf_internal_r+0x1840>
   25d64:	d9002d17 	ldw	r4,180(sp)
   25d68:	d9402917 	ldw	r5,164(sp)
   25d6c:	002d883a 	mov	r22,zero
   25d70:	20800104 	addi	r2,r4,4
   25d74:	24c0000b 	ldhu	r19,0(r4)
   25d78:	283fc90e 	bge	r5,zero,25ca0 <__alt_data_end+0xfffe5ca0>
   25d7c:	d8802d15 	stw	r2,180(sp)
   25d80:	0039883a 	mov	fp,zero
   25d84:	9d84b03a 	or	r2,r19,r22
   25d88:	103c461e 	bne	r2,zero,24ea4 <__alt_data_end+0xfffe4ea4>
   25d8c:	00800044 	movi	r2,1
   25d90:	003e6c06 	br	25744 <__alt_data_end+0xfffe5744>
   25d94:	d9002c17 	ldw	r4,176(sp)
   25d98:	d9801e04 	addi	r6,sp,120
   25d9c:	b80b883a 	mov	r5,r23
   25da0:	002b4000 	call	2b400 <__sprint_r>
   25da4:	103bef1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25da8:	d8c02017 	ldw	r3,128(sp)
   25dac:	da000404 	addi	r8,sp,16
   25db0:	d9003217 	ldw	r4,200(sp)
   25db4:	d8802617 	ldw	r2,152(sp)
   25db8:	d9403317 	ldw	r5,204(sp)
   25dbc:	8123883a 	add	r17,r16,r4
   25dc0:	11400216 	blt	r2,r5,25dcc <___vfprintf_internal_r+0x1470>
   25dc4:	9100004c 	andi	r4,r18,1
   25dc8:	20000d26 	beq	r4,zero,25e00 <___vfprintf_internal_r+0x14a4>
   25dcc:	d9003717 	ldw	r4,220(sp)
   25dd0:	d9403417 	ldw	r5,208(sp)
   25dd4:	1907883a 	add	r3,r3,r4
   25dd8:	d9001f17 	ldw	r4,124(sp)
   25ddc:	41400015 	stw	r5,0(r8)
   25de0:	d9403717 	ldw	r5,220(sp)
   25de4:	21000044 	addi	r4,r4,1
   25de8:	d8c02015 	stw	r3,128(sp)
   25dec:	41400115 	stw	r5,4(r8)
   25df0:	d9001f15 	stw	r4,124(sp)
   25df4:	014001c4 	movi	r5,7
   25df8:	2901e816 	blt	r5,r4,2659c <___vfprintf_internal_r+0x1c40>
   25dfc:	42000204 	addi	r8,r8,8
   25e00:	d9003317 	ldw	r4,204(sp)
   25e04:	8121883a 	add	r16,r16,r4
   25e08:	2085c83a 	sub	r2,r4,r2
   25e0c:	8461c83a 	sub	r16,r16,r17
   25e10:	1400010e 	bge	r2,r16,25e18 <___vfprintf_internal_r+0x14bc>
   25e14:	1021883a 	mov	r16,r2
   25e18:	04000a0e 	bge	zero,r16,25e44 <___vfprintf_internal_r+0x14e8>
   25e1c:	d9001f17 	ldw	r4,124(sp)
   25e20:	1c07883a 	add	r3,r3,r16
   25e24:	44400015 	stw	r17,0(r8)
   25e28:	21000044 	addi	r4,r4,1
   25e2c:	44000115 	stw	r16,4(r8)
   25e30:	d8c02015 	stw	r3,128(sp)
   25e34:	d9001f15 	stw	r4,124(sp)
   25e38:	014001c4 	movi	r5,7
   25e3c:	2901fb16 	blt	r5,r4,2662c <___vfprintf_internal_r+0x1cd0>
   25e40:	42000204 	addi	r8,r8,8
   25e44:	8001f716 	blt	r16,zero,26624 <___vfprintf_internal_r+0x1cc8>
   25e48:	1421c83a 	sub	r16,r2,r16
   25e4c:	043d380e 	bge	zero,r16,25330 <__alt_data_end+0xfffe5330>
   25e50:	04400404 	movi	r17,16
   25e54:	d8801f17 	ldw	r2,124(sp)
   25e58:	8c3efb0e 	bge	r17,r16,25a48 <__alt_data_end+0xfffe5a48>
   25e5c:	014000f4 	movhi	r5,3
   25e60:	2944fd84 	addi	r5,r5,5110
   25e64:	d9402b15 	stw	r5,172(sp)
   25e68:	058001c4 	movi	r22,7
   25e6c:	dcc02c17 	ldw	r19,176(sp)
   25e70:	00000306 	br	25e80 <___vfprintf_internal_r+0x1524>
   25e74:	42000204 	addi	r8,r8,8
   25e78:	843ffc04 	addi	r16,r16,-16
   25e7c:	8c3ef50e 	bge	r17,r16,25a54 <__alt_data_end+0xfffe5a54>
   25e80:	18c00404 	addi	r3,r3,16
   25e84:	10800044 	addi	r2,r2,1
   25e88:	45000015 	stw	r20,0(r8)
   25e8c:	44400115 	stw	r17,4(r8)
   25e90:	d8c02015 	stw	r3,128(sp)
   25e94:	d8801f15 	stw	r2,124(sp)
   25e98:	b0bff60e 	bge	r22,r2,25e74 <__alt_data_end+0xfffe5e74>
   25e9c:	d9801e04 	addi	r6,sp,120
   25ea0:	b80b883a 	mov	r5,r23
   25ea4:	9809883a 	mov	r4,r19
   25ea8:	002b4000 	call	2b400 <__sprint_r>
   25eac:	103bad1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25eb0:	d8c02017 	ldw	r3,128(sp)
   25eb4:	d8801f17 	ldw	r2,124(sp)
   25eb8:	da000404 	addi	r8,sp,16
   25ebc:	003fee06 	br	25e78 <__alt_data_end+0xfffe5e78>
   25ec0:	9088703a 	and	r4,r18,r2
   25ec4:	203eab1e 	bne	r4,zero,25974 <__alt_data_end+0xfffe5974>
   25ec8:	dc401f17 	ldw	r17,124(sp)
   25ecc:	40800115 	stw	r2,4(r8)
   25ed0:	44000015 	stw	r16,0(r8)
   25ed4:	8c400044 	addi	r17,r17,1
   25ed8:	d8c02015 	stw	r3,128(sp)
   25edc:	dc401f15 	stw	r17,124(sp)
   25ee0:	008001c4 	movi	r2,7
   25ee4:	14400e16 	blt	r2,r17,25f20 <___vfprintf_internal_r+0x15c4>
   25ee8:	45800204 	addi	r22,r8,8
   25eec:	003eca06 	br	25a18 <__alt_data_end+0xfffe5a18>
   25ef0:	010000f4 	movhi	r4,3
   25ef4:	2104fd84 	addi	r4,r4,5110
   25ef8:	d9002b15 	stw	r4,172(sp)
   25efc:	d8802b17 	ldw	r2,172(sp)
   25f00:	1c07883a 	add	r3,r3,r16
   25f04:	8c400044 	addi	r17,r17,1
   25f08:	b0800015 	stw	r2,0(r22)
   25f0c:	b4000115 	stw	r16,4(r22)
   25f10:	d8c02015 	stw	r3,128(sp)
   25f14:	dc401f15 	stw	r17,124(sp)
   25f18:	008001c4 	movi	r2,7
   25f1c:	147ebd0e 	bge	r2,r17,25a14 <__alt_data_end+0xfffe5a14>
   25f20:	d9002c17 	ldw	r4,176(sp)
   25f24:	d9801e04 	addi	r6,sp,120
   25f28:	b80b883a 	mov	r5,r23
   25f2c:	002b4000 	call	2b400 <__sprint_r>
   25f30:	103b8c1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25f34:	d8c02017 	ldw	r3,128(sp)
   25f38:	dc401f17 	ldw	r17,124(sp)
   25f3c:	dd800404 	addi	r22,sp,16
   25f40:	003eb506 	br	25a18 <__alt_data_end+0xfffe5a18>
   25f44:	d9002c17 	ldw	r4,176(sp)
   25f48:	d9801e04 	addi	r6,sp,120
   25f4c:	b80b883a 	mov	r5,r23
   25f50:	002b4000 	call	2b400 <__sprint_r>
   25f54:	103b831e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25f58:	d8c02017 	ldw	r3,128(sp)
   25f5c:	dc401f17 	ldw	r17,124(sp)
   25f60:	da000404 	addi	r8,sp,16
   25f64:	003e8d06 	br	2599c <__alt_data_end+0xfffe599c>
   25f68:	d9002c17 	ldw	r4,176(sp)
   25f6c:	d9801e04 	addi	r6,sp,120
   25f70:	b80b883a 	mov	r5,r23
   25f74:	002b4000 	call	2b400 <__sprint_r>
   25f78:	103b7a1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25f7c:	d8c02017 	ldw	r3,128(sp)
   25f80:	dc401f17 	ldw	r17,124(sp)
   25f84:	dd800404 	addi	r22,sp,16
   25f88:	003e8f06 	br	259c8 <__alt_data_end+0xfffe59c8>
   25f8c:	0027883a 	mov	r19,zero
   25f90:	003f4a06 	br	25cbc <__alt_data_end+0xfffe5cbc>
   25f94:	d9002c17 	ldw	r4,176(sp)
   25f98:	d9801e04 	addi	r6,sp,120
   25f9c:	b80b883a 	mov	r5,r23
   25fa0:	002b4000 	call	2b400 <__sprint_r>
   25fa4:	103b6f1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   25fa8:	d8c02017 	ldw	r3,128(sp)
   25fac:	da000404 	addi	r8,sp,16
   25fb0:	003c9d06 	br	25228 <__alt_data_end+0xfffe5228>
   25fb4:	04e7c83a 	sub	r19,zero,r19
   25fb8:	9804c03a 	cmpne	r2,r19,zero
   25fbc:	05adc83a 	sub	r22,zero,r22
   25fc0:	b0adc83a 	sub	r22,r22,r2
   25fc4:	d8802917 	ldw	r2,164(sp)
   25fc8:	07000b44 	movi	fp,45
   25fcc:	df002785 	stb	fp,158(sp)
   25fd0:	10017b16 	blt	r2,zero,265c0 <___vfprintf_internal_r+0x1c64>
   25fd4:	00bfdfc4 	movi	r2,-129
   25fd8:	90a4703a 	and	r18,r18,r2
   25fdc:	003bb106 	br	24ea4 <__alt_data_end+0xfffe4ea4>
   25fe0:	d9003617 	ldw	r4,216(sp)
   25fe4:	d9403817 	ldw	r5,224(sp)
   25fe8:	da003d15 	stw	r8,244(sp)
   25fec:	0021d400 	call	21d40 <__fpclassifyd>
   25ff0:	da003d17 	ldw	r8,244(sp)
   25ff4:	1000f026 	beq	r2,zero,263b8 <___vfprintf_internal_r+0x1a5c>
   25ff8:	d9002917 	ldw	r4,164(sp)
   25ffc:	05bff7c4 	movi	r22,-33
   26000:	00bfffc4 	movi	r2,-1
   26004:	8dac703a 	and	r22,r17,r22
   26008:	20820026 	beq	r4,r2,2680c <___vfprintf_internal_r+0x1eb0>
   2600c:	008011c4 	movi	r2,71
   26010:	b081f726 	beq	r22,r2,267f0 <___vfprintf_internal_r+0x1e94>
   26014:	d9003817 	ldw	r4,224(sp)
   26018:	90c04014 	ori	r3,r18,256
   2601c:	d8c02b15 	stw	r3,172(sp)
   26020:	20021516 	blt	r4,zero,26878 <___vfprintf_internal_r+0x1f1c>
   26024:	dcc03817 	ldw	r19,224(sp)
   26028:	d8002a05 	stb	zero,168(sp)
   2602c:	00801984 	movi	r2,102
   26030:	8881f926 	beq	r17,r2,26818 <___vfprintf_internal_r+0x1ebc>
   26034:	00801184 	movi	r2,70
   26038:	88821c26 	beq	r17,r2,268ac <___vfprintf_internal_r+0x1f50>
   2603c:	00801144 	movi	r2,69
   26040:	b081ef26 	beq	r22,r2,26800 <___vfprintf_internal_r+0x1ea4>
   26044:	d8c02917 	ldw	r3,164(sp)
   26048:	d8802104 	addi	r2,sp,132
   2604c:	d8800315 	stw	r2,12(sp)
   26050:	d9403617 	ldw	r5,216(sp)
   26054:	d8802504 	addi	r2,sp,148
   26058:	d9002c17 	ldw	r4,176(sp)
   2605c:	d8800215 	stw	r2,8(sp)
   26060:	d8802604 	addi	r2,sp,152
   26064:	d8c00015 	stw	r3,0(sp)
   26068:	d8800115 	stw	r2,4(sp)
   2606c:	01c00084 	movi	r7,2
   26070:	980d883a 	mov	r6,r19
   26074:	d8c03c15 	stw	r3,240(sp)
   26078:	da003d15 	stw	r8,244(sp)
   2607c:	0026f800 	call	26f80 <_dtoa_r>
   26080:	1021883a 	mov	r16,r2
   26084:	008019c4 	movi	r2,103
   26088:	d8c03c17 	ldw	r3,240(sp)
   2608c:	da003d17 	ldw	r8,244(sp)
   26090:	88817126 	beq	r17,r2,26658 <___vfprintf_internal_r+0x1cfc>
   26094:	008011c4 	movi	r2,71
   26098:	88829226 	beq	r17,r2,26ae4 <___vfprintf_internal_r+0x2188>
   2609c:	80f9883a 	add	fp,r16,r3
   260a0:	d9003617 	ldw	r4,216(sp)
   260a4:	000d883a 	mov	r6,zero
   260a8:	000f883a 	mov	r7,zero
   260ac:	980b883a 	mov	r5,r19
   260b0:	da003d15 	stw	r8,244(sp)
   260b4:	00234b40 	call	234b4 <__eqdf2>
   260b8:	da003d17 	ldw	r8,244(sp)
   260bc:	10018d26 	beq	r2,zero,266f4 <___vfprintf_internal_r+0x1d98>
   260c0:	d8802117 	ldw	r2,132(sp)
   260c4:	1700062e 	bgeu	r2,fp,260e0 <___vfprintf_internal_r+0x1784>
   260c8:	01000c04 	movi	r4,48
   260cc:	10c00044 	addi	r3,r2,1
   260d0:	d8c02115 	stw	r3,132(sp)
   260d4:	11000005 	stb	r4,0(r2)
   260d8:	d8802117 	ldw	r2,132(sp)
   260dc:	173ffb36 	bltu	r2,fp,260cc <__alt_data_end+0xfffe60cc>
   260e0:	1405c83a 	sub	r2,r2,r16
   260e4:	d8803315 	stw	r2,204(sp)
   260e8:	008011c4 	movi	r2,71
   260ec:	b0817626 	beq	r22,r2,266c8 <___vfprintf_internal_r+0x1d6c>
   260f0:	00801944 	movi	r2,101
   260f4:	1442810e 	bge	r2,r17,26afc <___vfprintf_internal_r+0x21a0>
   260f8:	d8c02617 	ldw	r3,152(sp)
   260fc:	00801984 	movi	r2,102
   26100:	d8c03215 	stw	r3,200(sp)
   26104:	8881fe26 	beq	r17,r2,26900 <___vfprintf_internal_r+0x1fa4>
   26108:	d8c03217 	ldw	r3,200(sp)
   2610c:	d9003317 	ldw	r4,204(sp)
   26110:	1901dd16 	blt	r3,r4,26888 <___vfprintf_internal_r+0x1f2c>
   26114:	9480004c 	andi	r18,r18,1
   26118:	90022b1e 	bne	r18,zero,269c8 <___vfprintf_internal_r+0x206c>
   2611c:	1805883a 	mov	r2,r3
   26120:	18028016 	blt	r3,zero,26b24 <___vfprintf_internal_r+0x21c8>
   26124:	d8c03217 	ldw	r3,200(sp)
   26128:	044019c4 	movi	r17,103
   2612c:	d8c02e15 	stw	r3,184(sp)
   26130:	df002a07 	ldb	fp,168(sp)
   26134:	e001531e 	bne	fp,zero,26684 <___vfprintf_internal_r+0x1d28>
   26138:	df002783 	ldbu	fp,158(sp)
   2613c:	d8802a15 	stw	r2,168(sp)
   26140:	dc802b17 	ldw	r18,172(sp)
   26144:	d8002915 	stw	zero,164(sp)
   26148:	003bd106 	br	25090 <__alt_data_end+0xfffe5090>
   2614c:	d8802d17 	ldw	r2,180(sp)
   26150:	d8c02d17 	ldw	r3,180(sp)
   26154:	d9002d17 	ldw	r4,180(sp)
   26158:	10800017 	ldw	r2,0(r2)
   2615c:	18c00117 	ldw	r3,4(r3)
   26160:	21000204 	addi	r4,r4,8
   26164:	d8803615 	stw	r2,216(sp)
   26168:	d8c03815 	stw	r3,224(sp)
   2616c:	d9002d15 	stw	r4,180(sp)
   26170:	003b7506 	br	24f48 <__alt_data_end+0xfffe4f48>
   26174:	ac400007 	ldb	r17,0(r21)
   26178:	003a5906 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   2617c:	9080100c 	andi	r2,r18,64
   26180:	1000a826 	beq	r2,zero,26424 <___vfprintf_internal_r+0x1ac8>
   26184:	d9002d17 	ldw	r4,180(sp)
   26188:	002d883a 	mov	r22,zero
   2618c:	24c0000b 	ldhu	r19,0(r4)
   26190:	21000104 	addi	r4,r4,4
   26194:	d9002d15 	stw	r4,180(sp)
   26198:	003ccb06 	br	254c8 <__alt_data_end+0xfffe54c8>
   2619c:	d8c02d17 	ldw	r3,180(sp)
   261a0:	d9002917 	ldw	r4,164(sp)
   261a4:	002d883a 	mov	r22,zero
   261a8:	18800104 	addi	r2,r3,4
   261ac:	1cc00017 	ldw	r19,0(r3)
   261b0:	203ebb0e 	bge	r4,zero,25ca0 <__alt_data_end+0xfffe5ca0>
   261b4:	003ef106 	br	25d7c <__alt_data_end+0xfffe5d7c>
   261b8:	9080040c 	andi	r2,r18,16
   261bc:	1000921e 	bne	r2,zero,26408 <___vfprintf_internal_r+0x1aac>
   261c0:	9480100c 	andi	r18,r18,64
   261c4:	90013926 	beq	r18,zero,266ac <___vfprintf_internal_r+0x1d50>
   261c8:	d9002d17 	ldw	r4,180(sp)
   261cc:	d9402f17 	ldw	r5,188(sp)
   261d0:	20800017 	ldw	r2,0(r4)
   261d4:	21000104 	addi	r4,r4,4
   261d8:	d9002d15 	stw	r4,180(sp)
   261dc:	1140000d 	sth	r5,0(r2)
   261e0:	003a1606 	br	24a3c <__alt_data_end+0xfffe4a3c>
   261e4:	9080100c 	andi	r2,r18,64
   261e8:	10008026 	beq	r2,zero,263ec <___vfprintf_internal_r+0x1a90>
   261ec:	d8c02d17 	ldw	r3,180(sp)
   261f0:	1cc0000f 	ldh	r19,0(r3)
   261f4:	18c00104 	addi	r3,r3,4
   261f8:	d8c02d15 	stw	r3,180(sp)
   261fc:	982dd7fa 	srai	r22,r19,31
   26200:	b005883a 	mov	r2,r22
   26204:	003b1f06 	br	24e84 <__alt_data_end+0xfffe4e84>
   26208:	9080100c 	andi	r2,r18,64
   2620c:	d8002785 	stb	zero,158(sp)
   26210:	10008a1e 	bne	r2,zero,2643c <___vfprintf_internal_r+0x1ae0>
   26214:	d9402d17 	ldw	r5,180(sp)
   26218:	d8c02917 	ldw	r3,164(sp)
   2621c:	002d883a 	mov	r22,zero
   26220:	28800104 	addi	r2,r5,4
   26224:	2cc00017 	ldw	r19,0(r5)
   26228:	183e4b0e 	bge	r3,zero,25b58 <__alt_data_end+0xfffe5b58>
   2622c:	9d86b03a 	or	r3,r19,r22
   26230:	d8802d15 	stw	r2,180(sp)
   26234:	183e4c1e 	bne	r3,zero,25b68 <__alt_data_end+0xfffe5b68>
   26238:	0039883a 	mov	fp,zero
   2623c:	0005883a 	mov	r2,zero
   26240:	003d4006 	br	25744 <__alt_data_end+0xfffe5744>
   26244:	014000f4 	movhi	r5,3
   26248:	2944fd84 	addi	r5,r5,5110
   2624c:	d9402b15 	stw	r5,172(sp)
   26250:	d9402b17 	ldw	r5,172(sp)
   26254:	1c47883a 	add	r3,r3,r17
   26258:	10800044 	addi	r2,r2,1
   2625c:	41400015 	stw	r5,0(r8)
   26260:	44400115 	stw	r17,4(r8)
   26264:	d8c02015 	stw	r3,128(sp)
   26268:	d8801f15 	stw	r2,124(sp)
   2626c:	010001c4 	movi	r4,7
   26270:	20bec816 	blt	r4,r2,25d94 <__alt_data_end+0xfffe5d94>
   26274:	42000204 	addi	r8,r8,8
   26278:	003ecd06 	br	25db0 <__alt_data_end+0xfffe5db0>
   2627c:	d9002917 	ldw	r4,164(sp)
   26280:	d8002785 	stb	zero,158(sp)
   26284:	203d2d16 	blt	r4,zero,2573c <__alt_data_end+0xfffe573c>
   26288:	00bfdfc4 	movi	r2,-129
   2628c:	90a4703a 	and	r18,r18,r2
   26290:	003a9106 	br	24cd8 <__alt_data_end+0xfffe4cd8>
   26294:	010000f4 	movhi	r4,3
   26298:	2104fd84 	addi	r4,r4,5110
   2629c:	d9002b15 	stw	r4,172(sp)
   262a0:	003c0c06 	br	252d4 <__alt_data_end+0xfffe52d4>
   262a4:	d9002c17 	ldw	r4,176(sp)
   262a8:	d9801e04 	addi	r6,sp,120
   262ac:	b80b883a 	mov	r5,r23
   262b0:	002b4000 	call	2b400 <__sprint_r>
   262b4:	103aab1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   262b8:	d8c02017 	ldw	r3,128(sp)
   262bc:	da000404 	addi	r8,sp,16
   262c0:	003d4106 	br	257c8 <__alt_data_end+0xfffe57c8>
   262c4:	d8801f17 	ldw	r2,124(sp)
   262c8:	014000f4 	movhi	r5,3
   262cc:	01000044 	movi	r4,1
   262d0:	18c00044 	addi	r3,r3,1
   262d4:	10800044 	addi	r2,r2,1
   262d8:	2944fd04 	addi	r5,r5,5108
   262dc:	41000115 	stw	r4,4(r8)
   262e0:	41400015 	stw	r5,0(r8)
   262e4:	d8c02015 	stw	r3,128(sp)
   262e8:	d8801f15 	stw	r2,124(sp)
   262ec:	010001c4 	movi	r4,7
   262f0:	20805c16 	blt	r4,r2,26464 <___vfprintf_internal_r+0x1b08>
   262f4:	42000204 	addi	r8,r8,8
   262f8:	8800041e 	bne	r17,zero,2630c <___vfprintf_internal_r+0x19b0>
   262fc:	d8803317 	ldw	r2,204(sp)
   26300:	1000021e 	bne	r2,zero,2630c <___vfprintf_internal_r+0x19b0>
   26304:	9080004c 	andi	r2,r18,1
   26308:	103c0926 	beq	r2,zero,25330 <__alt_data_end+0xfffe5330>
   2630c:	d9003717 	ldw	r4,220(sp)
   26310:	d8801f17 	ldw	r2,124(sp)
   26314:	d9403417 	ldw	r5,208(sp)
   26318:	20c7883a 	add	r3,r4,r3
   2631c:	10800044 	addi	r2,r2,1
   26320:	41000115 	stw	r4,4(r8)
   26324:	41400015 	stw	r5,0(r8)
   26328:	d8c02015 	stw	r3,128(sp)
   2632c:	d8801f15 	stw	r2,124(sp)
   26330:	010001c4 	movi	r4,7
   26334:	20812116 	blt	r4,r2,267bc <___vfprintf_internal_r+0x1e60>
   26338:	42000204 	addi	r8,r8,8
   2633c:	0463c83a 	sub	r17,zero,r17
   26340:	0440730e 	bge	zero,r17,26510 <___vfprintf_internal_r+0x1bb4>
   26344:	05800404 	movi	r22,16
   26348:	b440860e 	bge	r22,r17,26564 <___vfprintf_internal_r+0x1c08>
   2634c:	014000f4 	movhi	r5,3
   26350:	2944fd84 	addi	r5,r5,5110
   26354:	d9402b15 	stw	r5,172(sp)
   26358:	070001c4 	movi	fp,7
   2635c:	dcc02c17 	ldw	r19,176(sp)
   26360:	00000306 	br	26370 <___vfprintf_internal_r+0x1a14>
   26364:	42000204 	addi	r8,r8,8
   26368:	8c7ffc04 	addi	r17,r17,-16
   2636c:	b440800e 	bge	r22,r17,26570 <___vfprintf_internal_r+0x1c14>
   26370:	18c00404 	addi	r3,r3,16
   26374:	10800044 	addi	r2,r2,1
   26378:	45000015 	stw	r20,0(r8)
   2637c:	45800115 	stw	r22,4(r8)
   26380:	d8c02015 	stw	r3,128(sp)
   26384:	d8801f15 	stw	r2,124(sp)
   26388:	e0bff60e 	bge	fp,r2,26364 <__alt_data_end+0xfffe6364>
   2638c:	d9801e04 	addi	r6,sp,120
   26390:	b80b883a 	mov	r5,r23
   26394:	9809883a 	mov	r4,r19
   26398:	002b4000 	call	2b400 <__sprint_r>
   2639c:	103a711e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   263a0:	d8c02017 	ldw	r3,128(sp)
   263a4:	d8801f17 	ldw	r2,124(sp)
   263a8:	da000404 	addi	r8,sp,16
   263ac:	003fee06 	br	26368 <__alt_data_end+0xfffe6368>
   263b0:	00bfffc4 	movi	r2,-1
   263b4:	003a6f06 	br	24d74 <__alt_data_end+0xfffe4d74>
   263b8:	008011c4 	movi	r2,71
   263bc:	1440b816 	blt	r2,r17,266a0 <___vfprintf_internal_r+0x1d44>
   263c0:	040000f4 	movhi	r16,3
   263c4:	8404ef04 	addi	r16,r16,5052
   263c8:	00c000c4 	movi	r3,3
   263cc:	00bfdfc4 	movi	r2,-129
   263d0:	d8c02a15 	stw	r3,168(sp)
   263d4:	90a4703a 	and	r18,r18,r2
   263d8:	df002783 	ldbu	fp,158(sp)
   263dc:	d8c02e15 	stw	r3,184(sp)
   263e0:	d8002915 	stw	zero,164(sp)
   263e4:	d8003215 	stw	zero,200(sp)
   263e8:	003b2906 	br	25090 <__alt_data_end+0xfffe5090>
   263ec:	d9002d17 	ldw	r4,180(sp)
   263f0:	24c00017 	ldw	r19,0(r4)
   263f4:	21000104 	addi	r4,r4,4
   263f8:	d9002d15 	stw	r4,180(sp)
   263fc:	982dd7fa 	srai	r22,r19,31
   26400:	b005883a 	mov	r2,r22
   26404:	003a9f06 	br	24e84 <__alt_data_end+0xfffe4e84>
   26408:	d9402d17 	ldw	r5,180(sp)
   2640c:	d8c02f17 	ldw	r3,188(sp)
   26410:	28800017 	ldw	r2,0(r5)
   26414:	29400104 	addi	r5,r5,4
   26418:	d9402d15 	stw	r5,180(sp)
   2641c:	10c00015 	stw	r3,0(r2)
   26420:	00398606 	br	24a3c <__alt_data_end+0xfffe4a3c>
   26424:	d9402d17 	ldw	r5,180(sp)
   26428:	002d883a 	mov	r22,zero
   2642c:	2cc00017 	ldw	r19,0(r5)
   26430:	29400104 	addi	r5,r5,4
   26434:	d9402d15 	stw	r5,180(sp)
   26438:	003c2306 	br	254c8 <__alt_data_end+0xfffe54c8>
   2643c:	d8c02d17 	ldw	r3,180(sp)
   26440:	d9002917 	ldw	r4,164(sp)
   26444:	002d883a 	mov	r22,zero
   26448:	18800104 	addi	r2,r3,4
   2644c:	1cc0000b 	ldhu	r19,0(r3)
   26450:	203dc10e 	bge	r4,zero,25b58 <__alt_data_end+0xfffe5b58>
   26454:	003f7506 	br	2622c <__alt_data_end+0xfffe622c>
   26458:	040000f4 	movhi	r16,3
   2645c:	8404ed04 	addi	r16,r16,5044
   26460:	003acc06 	br	24f94 <__alt_data_end+0xfffe4f94>
   26464:	d9002c17 	ldw	r4,176(sp)
   26468:	d9801e04 	addi	r6,sp,120
   2646c:	b80b883a 	mov	r5,r23
   26470:	002b4000 	call	2b400 <__sprint_r>
   26474:	103a3b1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   26478:	dc402617 	ldw	r17,152(sp)
   2647c:	d8c02017 	ldw	r3,128(sp)
   26480:	da000404 	addi	r8,sp,16
   26484:	003f9c06 	br	262f8 <__alt_data_end+0xfffe62f8>
   26488:	ac400043 	ldbu	r17,1(r21)
   2648c:	94800814 	ori	r18,r18,32
   26490:	ad400044 	addi	r21,r21,1
   26494:	8c403fcc 	andi	r17,r17,255
   26498:	8c40201c 	xori	r17,r17,128
   2649c:	8c7fe004 	addi	r17,r17,-128
   264a0:	00398f06 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   264a4:	d8c02d15 	stw	r3,180(sp)
   264a8:	0039883a 	mov	fp,zero
   264ac:	003e3506 	br	25d84 <__alt_data_end+0xfffe5d84>
   264b0:	d9002c17 	ldw	r4,176(sp)
   264b4:	d9801e04 	addi	r6,sp,120
   264b8:	b80b883a 	mov	r5,r23
   264bc:	002b4000 	call	2b400 <__sprint_r>
   264c0:	103a281e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   264c4:	d8c02017 	ldw	r3,128(sp)
   264c8:	da000404 	addi	r8,sp,16
   264cc:	003cd006 	br	25810 <__alt_data_end+0xfffe5810>
   264d0:	8009883a 	mov	r4,r16
   264d4:	da003d15 	stw	r8,244(sp)
   264d8:	002b26c0 	call	2b26c <strlen>
   264dc:	d8802e15 	stw	r2,184(sp)
   264e0:	da003d17 	ldw	r8,244(sp)
   264e4:	103c340e 	bge	r2,zero,255b8 <__alt_data_end+0xfffe55b8>
   264e8:	0005883a 	mov	r2,zero
   264ec:	003c3206 	br	255b8 <__alt_data_end+0xfffe55b8>
   264f0:	d9002c17 	ldw	r4,176(sp)
   264f4:	d9801e04 	addi	r6,sp,120
   264f8:	b80b883a 	mov	r5,r23
   264fc:	002b4000 	call	2b400 <__sprint_r>
   26500:	103a181e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   26504:	d8c02017 	ldw	r3,128(sp)
   26508:	d8801f17 	ldw	r2,124(sp)
   2650c:	da000404 	addi	r8,sp,16
   26510:	d9403317 	ldw	r5,204(sp)
   26514:	10800044 	addi	r2,r2,1
   26518:	44000015 	stw	r16,0(r8)
   2651c:	28c7883a 	add	r3,r5,r3
   26520:	003b7d06 	br	25318 <__alt_data_end+0xfffe5318>
   26524:	010000f4 	movhi	r4,3
   26528:	21050184 	addi	r4,r4,5126
   2652c:	d9003515 	stw	r4,212(sp)
   26530:	003b1406 	br	25184 <__alt_data_end+0xfffe5184>
   26534:	013fffc4 	movi	r4,-1
   26538:	003a3506 	br	24e10 <__alt_data_end+0xfffe4e10>
   2653c:	0023883a 	mov	r17,zero
   26540:	003d9d06 	br	25bb8 <__alt_data_end+0xfffe5bb8>
   26544:	d9002c17 	ldw	r4,176(sp)
   26548:	d9801e04 	addi	r6,sp,120
   2654c:	b80b883a 	mov	r5,r23
   26550:	002b4000 	call	2b400 <__sprint_r>
   26554:	103a031e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   26558:	d8c02017 	ldw	r3,128(sp)
   2655c:	da000404 	addi	r8,sp,16
   26560:	003d9406 	br	25bb4 <__alt_data_end+0xfffe5bb4>
   26564:	010000f4 	movhi	r4,3
   26568:	2104fd84 	addi	r4,r4,5110
   2656c:	d9002b15 	stw	r4,172(sp)
   26570:	d9002b17 	ldw	r4,172(sp)
   26574:	1c47883a 	add	r3,r3,r17
   26578:	10800044 	addi	r2,r2,1
   2657c:	41000015 	stw	r4,0(r8)
   26580:	44400115 	stw	r17,4(r8)
   26584:	d8c02015 	stw	r3,128(sp)
   26588:	d8801f15 	stw	r2,124(sp)
   2658c:	010001c4 	movi	r4,7
   26590:	20bfd716 	blt	r4,r2,264f0 <__alt_data_end+0xfffe64f0>
   26594:	42000204 	addi	r8,r8,8
   26598:	003fdd06 	br	26510 <__alt_data_end+0xfffe6510>
   2659c:	d9002c17 	ldw	r4,176(sp)
   265a0:	d9801e04 	addi	r6,sp,120
   265a4:	b80b883a 	mov	r5,r23
   265a8:	002b4000 	call	2b400 <__sprint_r>
   265ac:	1039ed1e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   265b0:	d8802617 	ldw	r2,152(sp)
   265b4:	d8c02017 	ldw	r3,128(sp)
   265b8:	da000404 	addi	r8,sp,16
   265bc:	003e1006 	br	25e00 <__alt_data_end+0xfffe5e00>
   265c0:	00800044 	movi	r2,1
   265c4:	10803fcc 	andi	r2,r2,255
   265c8:	00c00044 	movi	r3,1
   265cc:	10fa3526 	beq	r2,r3,24ea4 <__alt_data_end+0xfffe4ea4>
   265d0:	00c00084 	movi	r3,2
   265d4:	10fbcb26 	beq	r2,r3,25504 <__alt_data_end+0xfffe5504>
   265d8:	003a8f06 	br	25018 <__alt_data_end+0xfffe5018>
   265dc:	010000f4 	movhi	r4,3
   265e0:	21050184 	addi	r4,r4,5126
   265e4:	d9003515 	stw	r4,212(sp)
   265e8:	003b7606 	br	253c4 <__alt_data_end+0xfffe53c4>
   265ec:	d8802917 	ldw	r2,164(sp)
   265f0:	00c00184 	movi	r3,6
   265f4:	1880012e 	bgeu	r3,r2,265fc <___vfprintf_internal_r+0x1ca0>
   265f8:	1805883a 	mov	r2,r3
   265fc:	d8802e15 	stw	r2,184(sp)
   26600:	1000ef16 	blt	r2,zero,269c0 <___vfprintf_internal_r+0x2064>
   26604:	040000f4 	movhi	r16,3
   26608:	d8802a15 	stw	r2,168(sp)
   2660c:	dcc02d15 	stw	r19,180(sp)
   26610:	d8002915 	stw	zero,164(sp)
   26614:	d8003215 	stw	zero,200(sp)
   26618:	8404fb04 	addi	r16,r16,5100
   2661c:	0039883a 	mov	fp,zero
   26620:	003aa206 	br	250ac <__alt_data_end+0xfffe50ac>
   26624:	0021883a 	mov	r16,zero
   26628:	003e0706 	br	25e48 <__alt_data_end+0xfffe5e48>
   2662c:	d9002c17 	ldw	r4,176(sp)
   26630:	d9801e04 	addi	r6,sp,120
   26634:	b80b883a 	mov	r5,r23
   26638:	002b4000 	call	2b400 <__sprint_r>
   2663c:	1039c91e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   26640:	d8802617 	ldw	r2,152(sp)
   26644:	d9403317 	ldw	r5,204(sp)
   26648:	d8c02017 	ldw	r3,128(sp)
   2664c:	da000404 	addi	r8,sp,16
   26650:	2885c83a 	sub	r2,r5,r2
   26654:	003dfb06 	br	25e44 <__alt_data_end+0xfffe5e44>
   26658:	9080004c 	andi	r2,r18,1
   2665c:	103e8f1e 	bne	r2,zero,2609c <__alt_data_end+0xfffe609c>
   26660:	d8802117 	ldw	r2,132(sp)
   26664:	003e9e06 	br	260e0 <__alt_data_end+0xfffe60e0>
   26668:	1025883a 	mov	r18,r2
   2666c:	0039883a 	mov	fp,zero
   26670:	00800084 	movi	r2,2
   26674:	003fd306 	br	265c4 <__alt_data_end+0xfffe65c4>
   26678:	07000b44 	movi	fp,45
   2667c:	df002785 	stb	fp,158(sp)
   26680:	003a4006 	br	24f84 <__alt_data_end+0xfffe4f84>
   26684:	00c00b44 	movi	r3,45
   26688:	d8c02785 	stb	r3,158(sp)
   2668c:	d8802a15 	stw	r2,168(sp)
   26690:	dc802b17 	ldw	r18,172(sp)
   26694:	d8002915 	stw	zero,164(sp)
   26698:	07000b44 	movi	fp,45
   2669c:	003a8006 	br	250a0 <__alt_data_end+0xfffe50a0>
   266a0:	040000f4 	movhi	r16,3
   266a4:	8404f004 	addi	r16,r16,5056
   266a8:	003f4706 	br	263c8 <__alt_data_end+0xfffe63c8>
   266ac:	d8c02d17 	ldw	r3,180(sp)
   266b0:	d9002f17 	ldw	r4,188(sp)
   266b4:	18800017 	ldw	r2,0(r3)
   266b8:	18c00104 	addi	r3,r3,4
   266bc:	d8c02d15 	stw	r3,180(sp)
   266c0:	11000015 	stw	r4,0(r2)
   266c4:	0038dd06 	br	24a3c <__alt_data_end+0xfffe4a3c>
   266c8:	dd802617 	ldw	r22,152(sp)
   266cc:	00bfff44 	movi	r2,-3
   266d0:	b0801c16 	blt	r22,r2,26744 <___vfprintf_internal_r+0x1de8>
   266d4:	d9402917 	ldw	r5,164(sp)
   266d8:	2d801a16 	blt	r5,r22,26744 <___vfprintf_internal_r+0x1de8>
   266dc:	dd803215 	stw	r22,200(sp)
   266e0:	003e8906 	br	26108 <__alt_data_end+0xfffe6108>
   266e4:	010000f4 	movhi	r4,3
   266e8:	2104fd84 	addi	r4,r4,5110
   266ec:	d9002b15 	stw	r4,172(sp)
   266f0:	003c9106 	br	25938 <__alt_data_end+0xfffe5938>
   266f4:	e005883a 	mov	r2,fp
   266f8:	003e7906 	br	260e0 <__alt_data_end+0xfffe60e0>
   266fc:	d9402917 	ldw	r5,164(sp)
   26700:	df002783 	ldbu	fp,158(sp)
   26704:	dcc02d15 	stw	r19,180(sp)
   26708:	d9402a15 	stw	r5,168(sp)
   2670c:	d9402e15 	stw	r5,184(sp)
   26710:	d8002915 	stw	zero,164(sp)
   26714:	d8003215 	stw	zero,200(sp)
   26718:	003a5d06 	br	25090 <__alt_data_end+0xfffe5090>
   2671c:	9080004c 	andi	r2,r18,1
   26720:	0039883a 	mov	fp,zero
   26724:	10000426 	beq	r2,zero,26738 <___vfprintf_internal_r+0x1ddc>
   26728:	00800c04 	movi	r2,48
   2672c:	dc001dc4 	addi	r16,sp,119
   26730:	d8801dc5 	stb	r2,119(sp)
   26734:	003b8006 	br	25538 <__alt_data_end+0xfffe5538>
   26738:	d8002e15 	stw	zero,184(sp)
   2673c:	dc001e04 	addi	r16,sp,120
   26740:	003a4d06 	br	25078 <__alt_data_end+0xfffe5078>
   26744:	8c7fff84 	addi	r17,r17,-2
   26748:	b5bfffc4 	addi	r22,r22,-1
   2674c:	dd802615 	stw	r22,152(sp)
   26750:	dc4022c5 	stb	r17,139(sp)
   26754:	b000bf16 	blt	r22,zero,26a54 <___vfprintf_internal_r+0x20f8>
   26758:	00800ac4 	movi	r2,43
   2675c:	d8802305 	stb	r2,140(sp)
   26760:	00800244 	movi	r2,9
   26764:	15807016 	blt	r2,r22,26928 <___vfprintf_internal_r+0x1fcc>
   26768:	00800c04 	movi	r2,48
   2676c:	b5800c04 	addi	r22,r22,48
   26770:	d8802345 	stb	r2,141(sp)
   26774:	dd802385 	stb	r22,142(sp)
   26778:	d88023c4 	addi	r2,sp,143
   2677c:	df0022c4 	addi	fp,sp,139
   26780:	d8c03317 	ldw	r3,204(sp)
   26784:	1739c83a 	sub	fp,r2,fp
   26788:	d9003317 	ldw	r4,204(sp)
   2678c:	e0c7883a 	add	r3,fp,r3
   26790:	df003a15 	stw	fp,232(sp)
   26794:	d8c02e15 	stw	r3,184(sp)
   26798:	00800044 	movi	r2,1
   2679c:	1100b30e 	bge	r2,r4,26a6c <___vfprintf_internal_r+0x2110>
   267a0:	d8c02e17 	ldw	r3,184(sp)
   267a4:	18c00044 	addi	r3,r3,1
   267a8:	d8c02e15 	stw	r3,184(sp)
   267ac:	1805883a 	mov	r2,r3
   267b0:	1800ac16 	blt	r3,zero,26a64 <___vfprintf_internal_r+0x2108>
   267b4:	d8003215 	stw	zero,200(sp)
   267b8:	003e5d06 	br	26130 <__alt_data_end+0xfffe6130>
   267bc:	d9002c17 	ldw	r4,176(sp)
   267c0:	d9801e04 	addi	r6,sp,120
   267c4:	b80b883a 	mov	r5,r23
   267c8:	002b4000 	call	2b400 <__sprint_r>
   267cc:	1039651e 	bne	r2,zero,24d64 <__alt_data_end+0xfffe4d64>
   267d0:	dc402617 	ldw	r17,152(sp)
   267d4:	d8c02017 	ldw	r3,128(sp)
   267d8:	d8801f17 	ldw	r2,124(sp)
   267dc:	da000404 	addi	r8,sp,16
   267e0:	003ed606 	br	2633c <__alt_data_end+0xfffe633c>
   267e4:	582b883a 	mov	r21,r11
   267e8:	d8002915 	stw	zero,164(sp)
   267ec:	0038bd06 	br	24ae4 <__alt_data_end+0xfffe4ae4>
   267f0:	d8802917 	ldw	r2,164(sp)
   267f4:	103e071e 	bne	r2,zero,26014 <__alt_data_end+0xfffe6014>
   267f8:	dc002915 	stw	r16,164(sp)
   267fc:	003e0506 	br	26014 <__alt_data_end+0xfffe6014>
   26800:	d9002917 	ldw	r4,164(sp)
   26804:	20c00044 	addi	r3,r4,1
   26808:	003e0f06 	br	26048 <__alt_data_end+0xfffe6048>
   2680c:	01400184 	movi	r5,6
   26810:	d9402915 	stw	r5,164(sp)
   26814:	003dff06 	br	26014 <__alt_data_end+0xfffe6014>
   26818:	d8802104 	addi	r2,sp,132
   2681c:	d8800315 	stw	r2,12(sp)
   26820:	d8802504 	addi	r2,sp,148
   26824:	d8800215 	stw	r2,8(sp)
   26828:	d8802604 	addi	r2,sp,152
   2682c:	d8800115 	stw	r2,4(sp)
   26830:	d8802917 	ldw	r2,164(sp)
   26834:	d9403617 	ldw	r5,216(sp)
   26838:	d9002c17 	ldw	r4,176(sp)
   2683c:	d8800015 	stw	r2,0(sp)
   26840:	01c000c4 	movi	r7,3
   26844:	980d883a 	mov	r6,r19
   26848:	da003d15 	stw	r8,244(sp)
   2684c:	0026f800 	call	26f80 <_dtoa_r>
   26850:	d8c02917 	ldw	r3,164(sp)
   26854:	da003d17 	ldw	r8,244(sp)
   26858:	1021883a 	mov	r16,r2
   2685c:	10f9883a 	add	fp,r2,r3
   26860:	81000007 	ldb	r4,0(r16)
   26864:	00800c04 	movi	r2,48
   26868:	20805e26 	beq	r4,r2,269e4 <___vfprintf_internal_r+0x2088>
   2686c:	d8c02617 	ldw	r3,152(sp)
   26870:	e0f9883a 	add	fp,fp,r3
   26874:	003e0a06 	br	260a0 <__alt_data_end+0xfffe60a0>
   26878:	00c00b44 	movi	r3,45
   2687c:	24e0003c 	xorhi	r19,r4,32768
   26880:	d8c02a05 	stb	r3,168(sp)
   26884:	003de906 	br	2602c <__alt_data_end+0xfffe602c>
   26888:	d8c03217 	ldw	r3,200(sp)
   2688c:	00c07a0e 	bge	zero,r3,26a78 <___vfprintf_internal_r+0x211c>
   26890:	00800044 	movi	r2,1
   26894:	d9003317 	ldw	r4,204(sp)
   26898:	1105883a 	add	r2,r2,r4
   2689c:	d8802e15 	stw	r2,184(sp)
   268a0:	10004e16 	blt	r2,zero,269dc <___vfprintf_internal_r+0x2080>
   268a4:	044019c4 	movi	r17,103
   268a8:	003e2106 	br	26130 <__alt_data_end+0xfffe6130>
   268ac:	d9002917 	ldw	r4,164(sp)
   268b0:	d8802104 	addi	r2,sp,132
   268b4:	d8800315 	stw	r2,12(sp)
   268b8:	d9000015 	stw	r4,0(sp)
   268bc:	d8802504 	addi	r2,sp,148
   268c0:	d9403617 	ldw	r5,216(sp)
   268c4:	d9002c17 	ldw	r4,176(sp)
   268c8:	d8800215 	stw	r2,8(sp)
   268cc:	d8802604 	addi	r2,sp,152
   268d0:	d8800115 	stw	r2,4(sp)
   268d4:	01c000c4 	movi	r7,3
   268d8:	980d883a 	mov	r6,r19
   268dc:	da003d15 	stw	r8,244(sp)
   268e0:	0026f800 	call	26f80 <_dtoa_r>
   268e4:	d8c02917 	ldw	r3,164(sp)
   268e8:	da003d17 	ldw	r8,244(sp)
   268ec:	1021883a 	mov	r16,r2
   268f0:	00801184 	movi	r2,70
   268f4:	80f9883a 	add	fp,r16,r3
   268f8:	88bfd926 	beq	r17,r2,26860 <__alt_data_end+0xfffe6860>
   268fc:	003de806 	br	260a0 <__alt_data_end+0xfffe60a0>
   26900:	d9002917 	ldw	r4,164(sp)
   26904:	00c04d0e 	bge	zero,r3,26a3c <___vfprintf_internal_r+0x20e0>
   26908:	2000441e 	bne	r4,zero,26a1c <___vfprintf_internal_r+0x20c0>
   2690c:	9480004c 	andi	r18,r18,1
   26910:	9000421e 	bne	r18,zero,26a1c <___vfprintf_internal_r+0x20c0>
   26914:	1805883a 	mov	r2,r3
   26918:	18007016 	blt	r3,zero,26adc <___vfprintf_internal_r+0x2180>
   2691c:	d8c03217 	ldw	r3,200(sp)
   26920:	d8c02e15 	stw	r3,184(sp)
   26924:	003e0206 	br	26130 <__alt_data_end+0xfffe6130>
   26928:	df0022c4 	addi	fp,sp,139
   2692c:	dc002915 	stw	r16,164(sp)
   26930:	4027883a 	mov	r19,r8
   26934:	e021883a 	mov	r16,fp
   26938:	b009883a 	mov	r4,r22
   2693c:	01400284 	movi	r5,10
   26940:	00221f00 	call	221f0 <__modsi3>
   26944:	10800c04 	addi	r2,r2,48
   26948:	843fffc4 	addi	r16,r16,-1
   2694c:	b009883a 	mov	r4,r22
   26950:	01400284 	movi	r5,10
   26954:	80800005 	stb	r2,0(r16)
   26958:	002216c0 	call	2216c <__divsi3>
   2695c:	102d883a 	mov	r22,r2
   26960:	00800244 	movi	r2,9
   26964:	15bff416 	blt	r2,r22,26938 <__alt_data_end+0xfffe6938>
   26968:	9811883a 	mov	r8,r19
   2696c:	b0800c04 	addi	r2,r22,48
   26970:	8027883a 	mov	r19,r16
   26974:	997fffc4 	addi	r5,r19,-1
   26978:	98bfffc5 	stb	r2,-1(r19)
   2697c:	dc002917 	ldw	r16,164(sp)
   26980:	2f006a2e 	bgeu	r5,fp,26b2c <___vfprintf_internal_r+0x21d0>
   26984:	d9c02384 	addi	r7,sp,142
   26988:	3ccfc83a 	sub	r7,r7,r19
   2698c:	d9002344 	addi	r4,sp,141
   26990:	e1cf883a 	add	r7,fp,r7
   26994:	00000106 	br	2699c <___vfprintf_internal_r+0x2040>
   26998:	28800003 	ldbu	r2,0(r5)
   2699c:	20800005 	stb	r2,0(r4)
   269a0:	21000044 	addi	r4,r4,1
   269a4:	29400044 	addi	r5,r5,1
   269a8:	393ffb1e 	bne	r7,r4,26998 <__alt_data_end+0xfffe6998>
   269ac:	d8802304 	addi	r2,sp,140
   269b0:	14c5c83a 	sub	r2,r2,r19
   269b4:	d8c02344 	addi	r3,sp,141
   269b8:	1885883a 	add	r2,r3,r2
   269bc:	003f7006 	br	26780 <__alt_data_end+0xfffe6780>
   269c0:	0005883a 	mov	r2,zero
   269c4:	003f0f06 	br	26604 <__alt_data_end+0xfffe6604>
   269c8:	d8c03217 	ldw	r3,200(sp)
   269cc:	18c00044 	addi	r3,r3,1
   269d0:	d8c02e15 	stw	r3,184(sp)
   269d4:	1805883a 	mov	r2,r3
   269d8:	183fb20e 	bge	r3,zero,268a4 <__alt_data_end+0xfffe68a4>
   269dc:	0005883a 	mov	r2,zero
   269e0:	003fb006 	br	268a4 <__alt_data_end+0xfffe68a4>
   269e4:	d9003617 	ldw	r4,216(sp)
   269e8:	000d883a 	mov	r6,zero
   269ec:	000f883a 	mov	r7,zero
   269f0:	980b883a 	mov	r5,r19
   269f4:	d8c03c15 	stw	r3,240(sp)
   269f8:	da003d15 	stw	r8,244(sp)
   269fc:	00234b40 	call	234b4 <__eqdf2>
   26a00:	d8c03c17 	ldw	r3,240(sp)
   26a04:	da003d17 	ldw	r8,244(sp)
   26a08:	103f9826 	beq	r2,zero,2686c <__alt_data_end+0xfffe686c>
   26a0c:	00800044 	movi	r2,1
   26a10:	10c7c83a 	sub	r3,r2,r3
   26a14:	d8c02615 	stw	r3,152(sp)
   26a18:	003f9506 	br	26870 <__alt_data_end+0xfffe6870>
   26a1c:	d9002917 	ldw	r4,164(sp)
   26a20:	d8c03217 	ldw	r3,200(sp)
   26a24:	20800044 	addi	r2,r4,1
   26a28:	1885883a 	add	r2,r3,r2
   26a2c:	d8802e15 	stw	r2,184(sp)
   26a30:	103dbf0e 	bge	r2,zero,26130 <__alt_data_end+0xfffe6130>
   26a34:	0005883a 	mov	r2,zero
   26a38:	003dbd06 	br	26130 <__alt_data_end+0xfffe6130>
   26a3c:	2000211e 	bne	r4,zero,26ac4 <___vfprintf_internal_r+0x2168>
   26a40:	9480004c 	andi	r18,r18,1
   26a44:	90001f1e 	bne	r18,zero,26ac4 <___vfprintf_internal_r+0x2168>
   26a48:	00800044 	movi	r2,1
   26a4c:	d8802e15 	stw	r2,184(sp)
   26a50:	003db706 	br	26130 <__alt_data_end+0xfffe6130>
   26a54:	00800b44 	movi	r2,45
   26a58:	05adc83a 	sub	r22,zero,r22
   26a5c:	d8802305 	stb	r2,140(sp)
   26a60:	003f3f06 	br	26760 <__alt_data_end+0xfffe6760>
   26a64:	0005883a 	mov	r2,zero
   26a68:	003f5206 	br	267b4 <__alt_data_end+0xfffe67b4>
   26a6c:	90a4703a 	and	r18,r18,r2
   26a70:	903f4e26 	beq	r18,zero,267ac <__alt_data_end+0xfffe67ac>
   26a74:	003f4a06 	br	267a0 <__alt_data_end+0xfffe67a0>
   26a78:	00800084 	movi	r2,2
   26a7c:	10c5c83a 	sub	r2,r2,r3
   26a80:	003f8406 	br	26894 <__alt_data_end+0xfffe6894>
   26a84:	d8802d17 	ldw	r2,180(sp)
   26a88:	d9002d17 	ldw	r4,180(sp)
   26a8c:	ac400043 	ldbu	r17,1(r21)
   26a90:	10800017 	ldw	r2,0(r2)
   26a94:	582b883a 	mov	r21,r11
   26a98:	d8802915 	stw	r2,164(sp)
   26a9c:	20800104 	addi	r2,r4,4
   26aa0:	d9002917 	ldw	r4,164(sp)
   26aa4:	d8802d15 	stw	r2,180(sp)
   26aa8:	203e7a0e 	bge	r4,zero,26494 <__alt_data_end+0xfffe6494>
   26aac:	8c403fcc 	andi	r17,r17,255
   26ab0:	00bfffc4 	movi	r2,-1
   26ab4:	8c40201c 	xori	r17,r17,128
   26ab8:	d8802915 	stw	r2,164(sp)
   26abc:	8c7fe004 	addi	r17,r17,-128
   26ac0:	00380706 	br	24ae0 <__alt_data_end+0xfffe4ae0>
   26ac4:	d8c02917 	ldw	r3,164(sp)
   26ac8:	18c00084 	addi	r3,r3,2
   26acc:	d8c02e15 	stw	r3,184(sp)
   26ad0:	1805883a 	mov	r2,r3
   26ad4:	183d960e 	bge	r3,zero,26130 <__alt_data_end+0xfffe6130>
   26ad8:	003fd606 	br	26a34 <__alt_data_end+0xfffe6a34>
   26adc:	0005883a 	mov	r2,zero
   26ae0:	003f8e06 	br	2691c <__alt_data_end+0xfffe691c>
   26ae4:	9080004c 	andi	r2,r18,1
   26ae8:	103f811e 	bne	r2,zero,268f0 <__alt_data_end+0xfffe68f0>
   26aec:	d8802117 	ldw	r2,132(sp)
   26af0:	1405c83a 	sub	r2,r2,r16
   26af4:	d8803315 	stw	r2,204(sp)
   26af8:	b47ef326 	beq	r22,r17,266c8 <__alt_data_end+0xfffe66c8>
   26afc:	dd802617 	ldw	r22,152(sp)
   26b00:	003f1106 	br	26748 <__alt_data_end+0xfffe6748>
   26b04:	d9c02785 	stb	r7,158(sp)
   26b08:	00390406 	br	24f1c <__alt_data_end+0xfffe4f1c>
   26b0c:	d9c02785 	stb	r7,158(sp)
   26b10:	0038d306 	br	24e60 <__alt_data_end+0xfffe4e60>
   26b14:	d9c02785 	stb	r7,158(sp)
   26b18:	003a6106 	br	254a0 <__alt_data_end+0xfffe54a0>
   26b1c:	d9c02785 	stb	r7,158(sp)
   26b20:	003af806 	br	25704 <__alt_data_end+0xfffe5704>
   26b24:	0005883a 	mov	r2,zero
   26b28:	003d7e06 	br	26124 <__alt_data_end+0xfffe6124>
   26b2c:	d8802344 	addi	r2,sp,141
   26b30:	003f1306 	br	26780 <__alt_data_end+0xfffe6780>
   26b34:	d9c02785 	stb	r7,158(sp)
   26b38:	00392306 	br	24fc8 <__alt_data_end+0xfffe4fc8>
   26b3c:	d9c02785 	stb	r7,158(sp)
   26b40:	003aa906 	br	255e8 <__alt_data_end+0xfffe55e8>
   26b44:	d9c02785 	stb	r7,158(sp)
   26b48:	003a3d06 	br	25440 <__alt_data_end+0xfffe5440>
   26b4c:	d9c02785 	stb	r7,158(sp)
   26b50:	003aca06 	br	2567c <__alt_data_end+0xfffe567c>

00026b54 <__vfprintf_internal>:
   26b54:	008000f4 	movhi	r2,3
   26b58:	108c1804 	addi	r2,r2,12384
   26b5c:	300f883a 	mov	r7,r6
   26b60:	280d883a 	mov	r6,r5
   26b64:	200b883a 	mov	r5,r4
   26b68:	11000017 	ldw	r4,0(r2)
   26b6c:	002495c1 	jmpi	2495c <___vfprintf_internal_r>

00026b70 <__sbprintf>:
   26b70:	2880030b 	ldhu	r2,12(r5)
   26b74:	2ac01917 	ldw	r11,100(r5)
   26b78:	2a80038b 	ldhu	r10,14(r5)
   26b7c:	2a400717 	ldw	r9,28(r5)
   26b80:	2a000917 	ldw	r8,36(r5)
   26b84:	defee204 	addi	sp,sp,-1144
   26b88:	00c10004 	movi	r3,1024
   26b8c:	dc011a15 	stw	r16,1128(sp)
   26b90:	10bfff4c 	andi	r2,r2,65533
   26b94:	2821883a 	mov	r16,r5
   26b98:	d8cb883a 	add	r5,sp,r3
   26b9c:	dc811c15 	stw	r18,1136(sp)
   26ba0:	dc411b15 	stw	r17,1132(sp)
   26ba4:	dfc11d15 	stw	ra,1140(sp)
   26ba8:	2025883a 	mov	r18,r4
   26bac:	d881030d 	sth	r2,1036(sp)
   26bb0:	dac11915 	stw	r11,1124(sp)
   26bb4:	da81038d 	sth	r10,1038(sp)
   26bb8:	da410715 	stw	r9,1052(sp)
   26bbc:	da010915 	stw	r8,1060(sp)
   26bc0:	dec10015 	stw	sp,1024(sp)
   26bc4:	dec10415 	stw	sp,1040(sp)
   26bc8:	d8c10215 	stw	r3,1032(sp)
   26bcc:	d8c10515 	stw	r3,1044(sp)
   26bd0:	d8010615 	stw	zero,1048(sp)
   26bd4:	002495c0 	call	2495c <___vfprintf_internal_r>
   26bd8:	1023883a 	mov	r17,r2
   26bdc:	10000416 	blt	r2,zero,26bf0 <__sbprintf+0x80>
   26be0:	d9410004 	addi	r5,sp,1024
   26be4:	9009883a 	mov	r4,r18
   26be8:	00288240 	call	28824 <_fflush_r>
   26bec:	10000d1e 	bne	r2,zero,26c24 <__sbprintf+0xb4>
   26bf0:	d881030b 	ldhu	r2,1036(sp)
   26bf4:	1080100c 	andi	r2,r2,64
   26bf8:	10000326 	beq	r2,zero,26c08 <__sbprintf+0x98>
   26bfc:	8080030b 	ldhu	r2,12(r16)
   26c00:	10801014 	ori	r2,r2,64
   26c04:	8080030d 	sth	r2,12(r16)
   26c08:	8805883a 	mov	r2,r17
   26c0c:	dfc11d17 	ldw	ra,1140(sp)
   26c10:	dc811c17 	ldw	r18,1136(sp)
   26c14:	dc411b17 	ldw	r17,1132(sp)
   26c18:	dc011a17 	ldw	r16,1128(sp)
   26c1c:	dec11e04 	addi	sp,sp,1144
   26c20:	f800283a 	ret
   26c24:	047fffc4 	movi	r17,-1
   26c28:	003ff106 	br	26bf0 <__alt_data_end+0xfffe6bf0>

00026c2c <__swsetup_r>:
   26c2c:	008000f4 	movhi	r2,3
   26c30:	defffd04 	addi	sp,sp,-12
   26c34:	108c1804 	addi	r2,r2,12384
   26c38:	dc400115 	stw	r17,4(sp)
   26c3c:	2023883a 	mov	r17,r4
   26c40:	11000017 	ldw	r4,0(r2)
   26c44:	dc000015 	stw	r16,0(sp)
   26c48:	dfc00215 	stw	ra,8(sp)
   26c4c:	2821883a 	mov	r16,r5
   26c50:	20000226 	beq	r4,zero,26c5c <__swsetup_r+0x30>
   26c54:	20800e17 	ldw	r2,56(r4)
   26c58:	10003126 	beq	r2,zero,26d20 <__swsetup_r+0xf4>
   26c5c:	8080030b 	ldhu	r2,12(r16)
   26c60:	10c0020c 	andi	r3,r2,8
   26c64:	1009883a 	mov	r4,r2
   26c68:	18000f26 	beq	r3,zero,26ca8 <__swsetup_r+0x7c>
   26c6c:	80c00417 	ldw	r3,16(r16)
   26c70:	18001526 	beq	r3,zero,26cc8 <__swsetup_r+0x9c>
   26c74:	1100004c 	andi	r4,r2,1
   26c78:	20001c1e 	bne	r4,zero,26cec <__swsetup_r+0xc0>
   26c7c:	1080008c 	andi	r2,r2,2
   26c80:	1000291e 	bne	r2,zero,26d28 <__swsetup_r+0xfc>
   26c84:	80800517 	ldw	r2,20(r16)
   26c88:	80800215 	stw	r2,8(r16)
   26c8c:	18001c26 	beq	r3,zero,26d00 <__swsetup_r+0xd4>
   26c90:	0005883a 	mov	r2,zero
   26c94:	dfc00217 	ldw	ra,8(sp)
   26c98:	dc400117 	ldw	r17,4(sp)
   26c9c:	dc000017 	ldw	r16,0(sp)
   26ca0:	dec00304 	addi	sp,sp,12
   26ca4:	f800283a 	ret
   26ca8:	2080040c 	andi	r2,r4,16
   26cac:	10002e26 	beq	r2,zero,26d68 <__swsetup_r+0x13c>
   26cb0:	2080010c 	andi	r2,r4,4
   26cb4:	10001e1e 	bne	r2,zero,26d30 <__swsetup_r+0x104>
   26cb8:	80c00417 	ldw	r3,16(r16)
   26cbc:	20800214 	ori	r2,r4,8
   26cc0:	8080030d 	sth	r2,12(r16)
   26cc4:	183feb1e 	bne	r3,zero,26c74 <__alt_data_end+0xfffe6c74>
   26cc8:	1100a00c 	andi	r4,r2,640
   26ccc:	01408004 	movi	r5,512
   26cd0:	217fe826 	beq	r4,r5,26c74 <__alt_data_end+0xfffe6c74>
   26cd4:	800b883a 	mov	r5,r16
   26cd8:	8809883a 	mov	r4,r17
   26cdc:	00292e80 	call	292e8 <__smakebuf_r>
   26ce0:	8080030b 	ldhu	r2,12(r16)
   26ce4:	80c00417 	ldw	r3,16(r16)
   26ce8:	003fe206 	br	26c74 <__alt_data_end+0xfffe6c74>
   26cec:	80800517 	ldw	r2,20(r16)
   26cf0:	80000215 	stw	zero,8(r16)
   26cf4:	0085c83a 	sub	r2,zero,r2
   26cf8:	80800615 	stw	r2,24(r16)
   26cfc:	183fe41e 	bne	r3,zero,26c90 <__alt_data_end+0xfffe6c90>
   26d00:	80c0030b 	ldhu	r3,12(r16)
   26d04:	0005883a 	mov	r2,zero
   26d08:	1900200c 	andi	r4,r3,128
   26d0c:	203fe126 	beq	r4,zero,26c94 <__alt_data_end+0xfffe6c94>
   26d10:	18c01014 	ori	r3,r3,64
   26d14:	80c0030d 	sth	r3,12(r16)
   26d18:	00bfffc4 	movi	r2,-1
   26d1c:	003fdd06 	br	26c94 <__alt_data_end+0xfffe6c94>
   26d20:	0028c000 	call	28c00 <__sinit>
   26d24:	003fcd06 	br	26c5c <__alt_data_end+0xfffe6c5c>
   26d28:	0005883a 	mov	r2,zero
   26d2c:	003fd606 	br	26c88 <__alt_data_end+0xfffe6c88>
   26d30:	81400c17 	ldw	r5,48(r16)
   26d34:	28000626 	beq	r5,zero,26d50 <__swsetup_r+0x124>
   26d38:	80801004 	addi	r2,r16,64
   26d3c:	28800326 	beq	r5,r2,26d4c <__swsetup_r+0x120>
   26d40:	8809883a 	mov	r4,r17
   26d44:	0028d740 	call	28d74 <_free_r>
   26d48:	8100030b 	ldhu	r4,12(r16)
   26d4c:	80000c15 	stw	zero,48(r16)
   26d50:	80c00417 	ldw	r3,16(r16)
   26d54:	00bff6c4 	movi	r2,-37
   26d58:	1108703a 	and	r4,r2,r4
   26d5c:	80000115 	stw	zero,4(r16)
   26d60:	80c00015 	stw	r3,0(r16)
   26d64:	003fd506 	br	26cbc <__alt_data_end+0xfffe6cbc>
   26d68:	00800244 	movi	r2,9
   26d6c:	88800015 	stw	r2,0(r17)
   26d70:	20801014 	ori	r2,r4,64
   26d74:	8080030d 	sth	r2,12(r16)
   26d78:	00bfffc4 	movi	r2,-1
   26d7c:	003fc506 	br	26c94 <__alt_data_end+0xfffe6c94>

00026d80 <quorem>:
   26d80:	defff704 	addi	sp,sp,-36
   26d84:	dc800215 	stw	r18,8(sp)
   26d88:	20800417 	ldw	r2,16(r4)
   26d8c:	2c800417 	ldw	r18,16(r5)
   26d90:	dfc00815 	stw	ra,32(sp)
   26d94:	ddc00715 	stw	r23,28(sp)
   26d98:	dd800615 	stw	r22,24(sp)
   26d9c:	dd400515 	stw	r21,20(sp)
   26da0:	dd000415 	stw	r20,16(sp)
   26da4:	dcc00315 	stw	r19,12(sp)
   26da8:	dc400115 	stw	r17,4(sp)
   26dac:	dc000015 	stw	r16,0(sp)
   26db0:	14807116 	blt	r2,r18,26f78 <quorem+0x1f8>
   26db4:	94bfffc4 	addi	r18,r18,-1
   26db8:	94ad883a 	add	r22,r18,r18
   26dbc:	b5ad883a 	add	r22,r22,r22
   26dc0:	2c400504 	addi	r17,r5,20
   26dc4:	8da9883a 	add	r20,r17,r22
   26dc8:	25400504 	addi	r21,r4,20
   26dcc:	282f883a 	mov	r23,r5
   26dd0:	adad883a 	add	r22,r21,r22
   26dd4:	a1400017 	ldw	r5,0(r20)
   26dd8:	2021883a 	mov	r16,r4
   26ddc:	b1000017 	ldw	r4,0(r22)
   26de0:	29400044 	addi	r5,r5,1
   26de4:	00222640 	call	22264 <__udivsi3>
   26de8:	1027883a 	mov	r19,r2
   26dec:	10002c26 	beq	r2,zero,26ea0 <quorem+0x120>
   26df0:	a813883a 	mov	r9,r21
   26df4:	880b883a 	mov	r5,r17
   26df8:	0009883a 	mov	r4,zero
   26dfc:	000d883a 	mov	r6,zero
   26e00:	2a000017 	ldw	r8,0(r5)
   26e04:	49c00017 	ldw	r7,0(r9)
   26e08:	29400104 	addi	r5,r5,4
   26e0c:	40bfffcc 	andi	r2,r8,65535
   26e10:	14c5383a 	mul	r2,r2,r19
   26e14:	4010d43a 	srli	r8,r8,16
   26e18:	38ffffcc 	andi	r3,r7,65535
   26e1c:	1105883a 	add	r2,r2,r4
   26e20:	1008d43a 	srli	r4,r2,16
   26e24:	44d1383a 	mul	r8,r8,r19
   26e28:	198d883a 	add	r6,r3,r6
   26e2c:	10ffffcc 	andi	r3,r2,65535
   26e30:	30c7c83a 	sub	r3,r6,r3
   26e34:	380ed43a 	srli	r7,r7,16
   26e38:	4105883a 	add	r2,r8,r4
   26e3c:	180dd43a 	srai	r6,r3,16
   26e40:	113fffcc 	andi	r4,r2,65535
   26e44:	390fc83a 	sub	r7,r7,r4
   26e48:	398d883a 	add	r6,r7,r6
   26e4c:	300e943a 	slli	r7,r6,16
   26e50:	18ffffcc 	andi	r3,r3,65535
   26e54:	1008d43a 	srli	r4,r2,16
   26e58:	38ceb03a 	or	r7,r7,r3
   26e5c:	49c00015 	stw	r7,0(r9)
   26e60:	300dd43a 	srai	r6,r6,16
   26e64:	4a400104 	addi	r9,r9,4
   26e68:	a17fe52e 	bgeu	r20,r5,26e00 <__alt_data_end+0xfffe6e00>
   26e6c:	b0800017 	ldw	r2,0(r22)
   26e70:	10000b1e 	bne	r2,zero,26ea0 <quorem+0x120>
   26e74:	b0bfff04 	addi	r2,r22,-4
   26e78:	a880082e 	bgeu	r21,r2,26e9c <quorem+0x11c>
   26e7c:	b0ffff17 	ldw	r3,-4(r22)
   26e80:	18000326 	beq	r3,zero,26e90 <quorem+0x110>
   26e84:	00000506 	br	26e9c <quorem+0x11c>
   26e88:	10c00017 	ldw	r3,0(r2)
   26e8c:	1800031e 	bne	r3,zero,26e9c <quorem+0x11c>
   26e90:	10bfff04 	addi	r2,r2,-4
   26e94:	94bfffc4 	addi	r18,r18,-1
   26e98:	a8bffb36 	bltu	r21,r2,26e88 <__alt_data_end+0xfffe6e88>
   26e9c:	84800415 	stw	r18,16(r16)
   26ea0:	b80b883a 	mov	r5,r23
   26ea4:	8009883a 	mov	r4,r16
   26ea8:	002a8cc0 	call	2a8cc <__mcmp>
   26eac:	10002616 	blt	r2,zero,26f48 <quorem+0x1c8>
   26eb0:	9cc00044 	addi	r19,r19,1
   26eb4:	a805883a 	mov	r2,r21
   26eb8:	000b883a 	mov	r5,zero
   26ebc:	11000017 	ldw	r4,0(r2)
   26ec0:	89800017 	ldw	r6,0(r17)
   26ec4:	10800104 	addi	r2,r2,4
   26ec8:	20ffffcc 	andi	r3,r4,65535
   26ecc:	194b883a 	add	r5,r3,r5
   26ed0:	30ffffcc 	andi	r3,r6,65535
   26ed4:	28c7c83a 	sub	r3,r5,r3
   26ed8:	300cd43a 	srli	r6,r6,16
   26edc:	2008d43a 	srli	r4,r4,16
   26ee0:	180bd43a 	srai	r5,r3,16
   26ee4:	18ffffcc 	andi	r3,r3,65535
   26ee8:	2189c83a 	sub	r4,r4,r6
   26eec:	2149883a 	add	r4,r4,r5
   26ef0:	200c943a 	slli	r6,r4,16
   26ef4:	8c400104 	addi	r17,r17,4
   26ef8:	200bd43a 	srai	r5,r4,16
   26efc:	30c6b03a 	or	r3,r6,r3
   26f00:	10ffff15 	stw	r3,-4(r2)
   26f04:	a47fed2e 	bgeu	r20,r17,26ebc <__alt_data_end+0xfffe6ebc>
   26f08:	9485883a 	add	r2,r18,r18
   26f0c:	1085883a 	add	r2,r2,r2
   26f10:	a887883a 	add	r3,r21,r2
   26f14:	18800017 	ldw	r2,0(r3)
   26f18:	10000b1e 	bne	r2,zero,26f48 <quorem+0x1c8>
   26f1c:	18bfff04 	addi	r2,r3,-4
   26f20:	a880082e 	bgeu	r21,r2,26f44 <quorem+0x1c4>
   26f24:	18ffff17 	ldw	r3,-4(r3)
   26f28:	18000326 	beq	r3,zero,26f38 <quorem+0x1b8>
   26f2c:	00000506 	br	26f44 <quorem+0x1c4>
   26f30:	10c00017 	ldw	r3,0(r2)
   26f34:	1800031e 	bne	r3,zero,26f44 <quorem+0x1c4>
   26f38:	10bfff04 	addi	r2,r2,-4
   26f3c:	94bfffc4 	addi	r18,r18,-1
   26f40:	a8bffb36 	bltu	r21,r2,26f30 <__alt_data_end+0xfffe6f30>
   26f44:	84800415 	stw	r18,16(r16)
   26f48:	9805883a 	mov	r2,r19
   26f4c:	dfc00817 	ldw	ra,32(sp)
   26f50:	ddc00717 	ldw	r23,28(sp)
   26f54:	dd800617 	ldw	r22,24(sp)
   26f58:	dd400517 	ldw	r21,20(sp)
   26f5c:	dd000417 	ldw	r20,16(sp)
   26f60:	dcc00317 	ldw	r19,12(sp)
   26f64:	dc800217 	ldw	r18,8(sp)
   26f68:	dc400117 	ldw	r17,4(sp)
   26f6c:	dc000017 	ldw	r16,0(sp)
   26f70:	dec00904 	addi	sp,sp,36
   26f74:	f800283a 	ret
   26f78:	0005883a 	mov	r2,zero
   26f7c:	003ff306 	br	26f4c <__alt_data_end+0xfffe6f4c>

00026f80 <_dtoa_r>:
   26f80:	20801017 	ldw	r2,64(r4)
   26f84:	deffde04 	addi	sp,sp,-136
   26f88:	df002015 	stw	fp,128(sp)
   26f8c:	dcc01b15 	stw	r19,108(sp)
   26f90:	dc801a15 	stw	r18,104(sp)
   26f94:	dc401915 	stw	r17,100(sp)
   26f98:	dc001815 	stw	r16,96(sp)
   26f9c:	dfc02115 	stw	ra,132(sp)
   26fa0:	ddc01f15 	stw	r23,124(sp)
   26fa4:	dd801e15 	stw	r22,120(sp)
   26fa8:	dd401d15 	stw	r21,116(sp)
   26fac:	dd001c15 	stw	r20,112(sp)
   26fb0:	d9c00315 	stw	r7,12(sp)
   26fb4:	2039883a 	mov	fp,r4
   26fb8:	3023883a 	mov	r17,r6
   26fbc:	2825883a 	mov	r18,r5
   26fc0:	dc002417 	ldw	r16,144(sp)
   26fc4:	3027883a 	mov	r19,r6
   26fc8:	10000826 	beq	r2,zero,26fec <_dtoa_r+0x6c>
   26fcc:	21801117 	ldw	r6,68(r4)
   26fd0:	00c00044 	movi	r3,1
   26fd4:	100b883a 	mov	r5,r2
   26fd8:	1986983a 	sll	r3,r3,r6
   26fdc:	11800115 	stw	r6,4(r2)
   26fe0:	10c00215 	stw	r3,8(r2)
   26fe4:	002a0ac0 	call	2a0ac <_Bfree>
   26fe8:	e0001015 	stw	zero,64(fp)
   26fec:	88002e16 	blt	r17,zero,270a8 <_dtoa_r+0x128>
   26ff0:	80000015 	stw	zero,0(r16)
   26ff4:	889ffc2c 	andhi	r2,r17,32752
   26ff8:	00dffc34 	movhi	r3,32752
   26ffc:	10c01c26 	beq	r2,r3,27070 <_dtoa_r+0xf0>
   27000:	000d883a 	mov	r6,zero
   27004:	000f883a 	mov	r7,zero
   27008:	9009883a 	mov	r4,r18
   2700c:	980b883a 	mov	r5,r19
   27010:	00234b40 	call	234b4 <__eqdf2>
   27014:	10002b1e 	bne	r2,zero,270c4 <_dtoa_r+0x144>
   27018:	d9c02317 	ldw	r7,140(sp)
   2701c:	00800044 	movi	r2,1
   27020:	38800015 	stw	r2,0(r7)
   27024:	d8802517 	ldw	r2,148(sp)
   27028:	10019e26 	beq	r2,zero,276a4 <_dtoa_r+0x724>
   2702c:	d8c02517 	ldw	r3,148(sp)
   27030:	008000f4 	movhi	r2,3
   27034:	1084fd44 	addi	r2,r2,5109
   27038:	18800015 	stw	r2,0(r3)
   2703c:	10bfffc4 	addi	r2,r2,-1
   27040:	dfc02117 	ldw	ra,132(sp)
   27044:	df002017 	ldw	fp,128(sp)
   27048:	ddc01f17 	ldw	r23,124(sp)
   2704c:	dd801e17 	ldw	r22,120(sp)
   27050:	dd401d17 	ldw	r21,116(sp)
   27054:	dd001c17 	ldw	r20,112(sp)
   27058:	dcc01b17 	ldw	r19,108(sp)
   2705c:	dc801a17 	ldw	r18,104(sp)
   27060:	dc401917 	ldw	r17,100(sp)
   27064:	dc001817 	ldw	r16,96(sp)
   27068:	dec02204 	addi	sp,sp,136
   2706c:	f800283a 	ret
   27070:	d8c02317 	ldw	r3,140(sp)
   27074:	0089c3c4 	movi	r2,9999
   27078:	18800015 	stw	r2,0(r3)
   2707c:	90017726 	beq	r18,zero,2765c <_dtoa_r+0x6dc>
   27080:	008000f4 	movhi	r2,3
   27084:	10850904 	addi	r2,r2,5156
   27088:	d9002517 	ldw	r4,148(sp)
   2708c:	203fec26 	beq	r4,zero,27040 <__alt_data_end+0xfffe7040>
   27090:	10c000c7 	ldb	r3,3(r2)
   27094:	1801781e 	bne	r3,zero,27678 <_dtoa_r+0x6f8>
   27098:	10c000c4 	addi	r3,r2,3
   2709c:	d9802517 	ldw	r6,148(sp)
   270a0:	30c00015 	stw	r3,0(r6)
   270a4:	003fe606 	br	27040 <__alt_data_end+0xfffe7040>
   270a8:	04e00034 	movhi	r19,32768
   270ac:	9cffffc4 	addi	r19,r19,-1
   270b0:	00800044 	movi	r2,1
   270b4:	8ce6703a 	and	r19,r17,r19
   270b8:	80800015 	stw	r2,0(r16)
   270bc:	9823883a 	mov	r17,r19
   270c0:	003fcc06 	br	26ff4 <__alt_data_end+0xfffe6ff4>
   270c4:	d8800204 	addi	r2,sp,8
   270c8:	d8800015 	stw	r2,0(sp)
   270cc:	d9c00104 	addi	r7,sp,4
   270d0:	900b883a 	mov	r5,r18
   270d4:	980d883a 	mov	r6,r19
   270d8:	e009883a 	mov	r4,fp
   270dc:	8820d53a 	srli	r16,r17,20
   270e0:	002ac980 	call	2ac98 <__d2b>
   270e4:	d8800915 	stw	r2,36(sp)
   270e8:	8001651e 	bne	r16,zero,27680 <_dtoa_r+0x700>
   270ec:	dd800217 	ldw	r22,8(sp)
   270f0:	dc000117 	ldw	r16,4(sp)
   270f4:	00800804 	movi	r2,32
   270f8:	b421883a 	add	r16,r22,r16
   270fc:	80c10c84 	addi	r3,r16,1074
   27100:	10c2d10e 	bge	r2,r3,27c48 <_dtoa_r+0xcc8>
   27104:	00801004 	movi	r2,64
   27108:	81010484 	addi	r4,r16,1042
   2710c:	10c7c83a 	sub	r3,r2,r3
   27110:	9108d83a 	srl	r4,r18,r4
   27114:	88e2983a 	sll	r17,r17,r3
   27118:	2448b03a 	or	r4,r4,r17
   2711c:	002e8ac0 	call	2e8ac <__floatunsidf>
   27120:	017f8434 	movhi	r5,65040
   27124:	01800044 	movi	r6,1
   27128:	1009883a 	mov	r4,r2
   2712c:	194b883a 	add	r5,r3,r5
   27130:	843fffc4 	addi	r16,r16,-1
   27134:	d9801115 	stw	r6,68(sp)
   27138:	000d883a 	mov	r6,zero
   2713c:	01cffe34 	movhi	r7,16376
   27140:	0023e240 	call	23e24 <__subdf3>
   27144:	0198dbf4 	movhi	r6,25455
   27148:	01cff4f4 	movhi	r7,16339
   2714c:	3190d844 	addi	r6,r6,17249
   27150:	39e1e9c4 	addi	r7,r7,-30809
   27154:	1009883a 	mov	r4,r2
   27158:	180b883a 	mov	r5,r3
   2715c:	002370c0 	call	2370c <__muldf3>
   27160:	01a2d874 	movhi	r6,35681
   27164:	01cff1f4 	movhi	r7,16327
   27168:	31b22cc4 	addi	r6,r6,-14157
   2716c:	39e28a04 	addi	r7,r7,-30168
   27170:	180b883a 	mov	r5,r3
   27174:	1009883a 	mov	r4,r2
   27178:	00223200 	call	22320 <__adddf3>
   2717c:	8009883a 	mov	r4,r16
   27180:	1029883a 	mov	r20,r2
   27184:	1823883a 	mov	r17,r3
   27188:	00247a00 	call	247a0 <__floatsidf>
   2718c:	019427f4 	movhi	r6,20639
   27190:	01cff4f4 	movhi	r7,16339
   27194:	319e7ec4 	addi	r6,r6,31227
   27198:	39d104c4 	addi	r7,r7,17427
   2719c:	1009883a 	mov	r4,r2
   271a0:	180b883a 	mov	r5,r3
   271a4:	002370c0 	call	2370c <__muldf3>
   271a8:	100d883a 	mov	r6,r2
   271ac:	180f883a 	mov	r7,r3
   271b0:	a009883a 	mov	r4,r20
   271b4:	880b883a 	mov	r5,r17
   271b8:	00223200 	call	22320 <__adddf3>
   271bc:	1009883a 	mov	r4,r2
   271c0:	180b883a 	mov	r5,r3
   271c4:	1029883a 	mov	r20,r2
   271c8:	1823883a 	mov	r17,r3
   271cc:	00247200 	call	24720 <__fixdfsi>
   271d0:	000d883a 	mov	r6,zero
   271d4:	000f883a 	mov	r7,zero
   271d8:	a009883a 	mov	r4,r20
   271dc:	880b883a 	mov	r5,r17
   271e0:	d8800515 	stw	r2,20(sp)
   271e4:	00236180 	call	23618 <__ledf2>
   271e8:	10028716 	blt	r2,zero,27c08 <_dtoa_r+0xc88>
   271ec:	d8c00517 	ldw	r3,20(sp)
   271f0:	00800584 	movi	r2,22
   271f4:	10c27536 	bltu	r2,r3,27bcc <_dtoa_r+0xc4c>
   271f8:	180490fa 	slli	r2,r3,3
   271fc:	00c000f4 	movhi	r3,3
   27200:	18c52404 	addi	r3,r3,5264
   27204:	1885883a 	add	r2,r3,r2
   27208:	11000017 	ldw	r4,0(r2)
   2720c:	11400117 	ldw	r5,4(r2)
   27210:	900d883a 	mov	r6,r18
   27214:	980f883a 	mov	r7,r19
   27218:	002353c0 	call	2353c <__gedf2>
   2721c:	00828d0e 	bge	zero,r2,27c54 <_dtoa_r+0xcd4>
   27220:	d9000517 	ldw	r4,20(sp)
   27224:	d8000e15 	stw	zero,56(sp)
   27228:	213fffc4 	addi	r4,r4,-1
   2722c:	d9000515 	stw	r4,20(sp)
   27230:	b42dc83a 	sub	r22,r22,r16
   27234:	b5bfffc4 	addi	r22,r22,-1
   27238:	b0026f16 	blt	r22,zero,27bf8 <_dtoa_r+0xc78>
   2723c:	d8000815 	stw	zero,32(sp)
   27240:	d9c00517 	ldw	r7,20(sp)
   27244:	38026416 	blt	r7,zero,27bd8 <_dtoa_r+0xc58>
   27248:	b1ed883a 	add	r22,r22,r7
   2724c:	d9c00d15 	stw	r7,52(sp)
   27250:	d8000a15 	stw	zero,40(sp)
   27254:	d9800317 	ldw	r6,12(sp)
   27258:	00800244 	movi	r2,9
   2725c:	11811436 	bltu	r2,r6,276b0 <_dtoa_r+0x730>
   27260:	00800144 	movi	r2,5
   27264:	1184e10e 	bge	r2,r6,285ec <_dtoa_r+0x166c>
   27268:	31bfff04 	addi	r6,r6,-4
   2726c:	d9800315 	stw	r6,12(sp)
   27270:	0023883a 	mov	r17,zero
   27274:	d9800317 	ldw	r6,12(sp)
   27278:	008000c4 	movi	r2,3
   2727c:	30836726 	beq	r6,r2,2801c <_dtoa_r+0x109c>
   27280:	1183410e 	bge	r2,r6,27f88 <_dtoa_r+0x1008>
   27284:	d9c00317 	ldw	r7,12(sp)
   27288:	00800104 	movi	r2,4
   2728c:	38827c26 	beq	r7,r2,27c80 <_dtoa_r+0xd00>
   27290:	00800144 	movi	r2,5
   27294:	3884c41e 	bne	r7,r2,285a8 <_dtoa_r+0x1628>
   27298:	00800044 	movi	r2,1
   2729c:	d8800b15 	stw	r2,44(sp)
   272a0:	d8c00517 	ldw	r3,20(sp)
   272a4:	d9002217 	ldw	r4,136(sp)
   272a8:	1907883a 	add	r3,r3,r4
   272ac:	19800044 	addi	r6,r3,1
   272b0:	d8c00c15 	stw	r3,48(sp)
   272b4:	d9800615 	stw	r6,24(sp)
   272b8:	0183a40e 	bge	zero,r6,2814c <_dtoa_r+0x11cc>
   272bc:	d9800617 	ldw	r6,24(sp)
   272c0:	3021883a 	mov	r16,r6
   272c4:	e0001115 	stw	zero,68(fp)
   272c8:	008005c4 	movi	r2,23
   272cc:	1184c92e 	bgeu	r2,r6,285f4 <_dtoa_r+0x1674>
   272d0:	00c00044 	movi	r3,1
   272d4:	00800104 	movi	r2,4
   272d8:	1085883a 	add	r2,r2,r2
   272dc:	11000504 	addi	r4,r2,20
   272e0:	180b883a 	mov	r5,r3
   272e4:	18c00044 	addi	r3,r3,1
   272e8:	313ffb2e 	bgeu	r6,r4,272d8 <__alt_data_end+0xfffe72d8>
   272ec:	e1401115 	stw	r5,68(fp)
   272f0:	e009883a 	mov	r4,fp
   272f4:	002a0040 	call	2a004 <_Balloc>
   272f8:	d8800715 	stw	r2,28(sp)
   272fc:	e0801015 	stw	r2,64(fp)
   27300:	00800384 	movi	r2,14
   27304:	1400f736 	bltu	r2,r16,276e4 <_dtoa_r+0x764>
   27308:	8800f626 	beq	r17,zero,276e4 <_dtoa_r+0x764>
   2730c:	d9c00517 	ldw	r7,20(sp)
   27310:	01c39a0e 	bge	zero,r7,2817c <_dtoa_r+0x11fc>
   27314:	388003cc 	andi	r2,r7,15
   27318:	100490fa 	slli	r2,r2,3
   2731c:	382bd13a 	srai	r21,r7,4
   27320:	00c000f4 	movhi	r3,3
   27324:	18c52404 	addi	r3,r3,5264
   27328:	1885883a 	add	r2,r3,r2
   2732c:	a8c0040c 	andi	r3,r21,16
   27330:	12400017 	ldw	r9,0(r2)
   27334:	12000117 	ldw	r8,4(r2)
   27338:	18037926 	beq	r3,zero,28120 <_dtoa_r+0x11a0>
   2733c:	008000f4 	movhi	r2,3
   27340:	10851a04 	addi	r2,r2,5224
   27344:	11800817 	ldw	r6,32(r2)
   27348:	11c00917 	ldw	r7,36(r2)
   2734c:	9009883a 	mov	r4,r18
   27350:	980b883a 	mov	r5,r19
   27354:	da001715 	stw	r8,92(sp)
   27358:	da401615 	stw	r9,88(sp)
   2735c:	0022bcc0 	call	22bcc <__divdf3>
   27360:	da001717 	ldw	r8,92(sp)
   27364:	da401617 	ldw	r9,88(sp)
   27368:	ad4003cc 	andi	r21,r21,15
   2736c:	040000c4 	movi	r16,3
   27370:	1023883a 	mov	r17,r2
   27374:	1829883a 	mov	r20,r3
   27378:	a8001126 	beq	r21,zero,273c0 <_dtoa_r+0x440>
   2737c:	05c000f4 	movhi	r23,3
   27380:	bdc51a04 	addi	r23,r23,5224
   27384:	4805883a 	mov	r2,r9
   27388:	4007883a 	mov	r3,r8
   2738c:	a980004c 	andi	r6,r21,1
   27390:	1009883a 	mov	r4,r2
   27394:	a82bd07a 	srai	r21,r21,1
   27398:	180b883a 	mov	r5,r3
   2739c:	30000426 	beq	r6,zero,273b0 <_dtoa_r+0x430>
   273a0:	b9800017 	ldw	r6,0(r23)
   273a4:	b9c00117 	ldw	r7,4(r23)
   273a8:	84000044 	addi	r16,r16,1
   273ac:	002370c0 	call	2370c <__muldf3>
   273b0:	bdc00204 	addi	r23,r23,8
   273b4:	a83ff51e 	bne	r21,zero,2738c <__alt_data_end+0xfffe738c>
   273b8:	1013883a 	mov	r9,r2
   273bc:	1811883a 	mov	r8,r3
   273c0:	480d883a 	mov	r6,r9
   273c4:	400f883a 	mov	r7,r8
   273c8:	8809883a 	mov	r4,r17
   273cc:	a00b883a 	mov	r5,r20
   273d0:	0022bcc0 	call	22bcc <__divdf3>
   273d4:	d8800f15 	stw	r2,60(sp)
   273d8:	d8c01015 	stw	r3,64(sp)
   273dc:	d8c00e17 	ldw	r3,56(sp)
   273e0:	18000626 	beq	r3,zero,273fc <_dtoa_r+0x47c>
   273e4:	d9000f17 	ldw	r4,60(sp)
   273e8:	d9401017 	ldw	r5,64(sp)
   273ec:	000d883a 	mov	r6,zero
   273f0:	01cffc34 	movhi	r7,16368
   273f4:	00236180 	call	23618 <__ledf2>
   273f8:	10040b16 	blt	r2,zero,28428 <_dtoa_r+0x14a8>
   273fc:	8009883a 	mov	r4,r16
   27400:	00247a00 	call	247a0 <__floatsidf>
   27404:	d9800f17 	ldw	r6,60(sp)
   27408:	d9c01017 	ldw	r7,64(sp)
   2740c:	1009883a 	mov	r4,r2
   27410:	180b883a 	mov	r5,r3
   27414:	002370c0 	call	2370c <__muldf3>
   27418:	000d883a 	mov	r6,zero
   2741c:	01d00734 	movhi	r7,16412
   27420:	1009883a 	mov	r4,r2
   27424:	180b883a 	mov	r5,r3
   27428:	00223200 	call	22320 <__adddf3>
   2742c:	1021883a 	mov	r16,r2
   27430:	d8800617 	ldw	r2,24(sp)
   27434:	047f3034 	movhi	r17,64704
   27438:	1c63883a 	add	r17,r3,r17
   2743c:	10031826 	beq	r2,zero,280a0 <_dtoa_r+0x1120>
   27440:	d8c00517 	ldw	r3,20(sp)
   27444:	db000617 	ldw	r12,24(sp)
   27448:	d8c01315 	stw	r3,76(sp)
   2744c:	d9000b17 	ldw	r4,44(sp)
   27450:	20038f26 	beq	r4,zero,28290 <_dtoa_r+0x1310>
   27454:	60bfffc4 	addi	r2,r12,-1
   27458:	100490fa 	slli	r2,r2,3
   2745c:	00c000f4 	movhi	r3,3
   27460:	18c52404 	addi	r3,r3,5264
   27464:	1885883a 	add	r2,r3,r2
   27468:	11800017 	ldw	r6,0(r2)
   2746c:	11c00117 	ldw	r7,4(r2)
   27470:	d8800717 	ldw	r2,28(sp)
   27474:	0009883a 	mov	r4,zero
   27478:	014ff834 	movhi	r5,16352
   2747c:	db001615 	stw	r12,88(sp)
   27480:	15c00044 	addi	r23,r2,1
   27484:	0022bcc0 	call	22bcc <__divdf3>
   27488:	800d883a 	mov	r6,r16
   2748c:	880f883a 	mov	r7,r17
   27490:	1009883a 	mov	r4,r2
   27494:	180b883a 	mov	r5,r3
   27498:	0023e240 	call	23e24 <__subdf3>
   2749c:	d9401017 	ldw	r5,64(sp)
   274a0:	d9000f17 	ldw	r4,60(sp)
   274a4:	102b883a 	mov	r21,r2
   274a8:	d8c01215 	stw	r3,72(sp)
   274ac:	00247200 	call	24720 <__fixdfsi>
   274b0:	1009883a 	mov	r4,r2
   274b4:	1029883a 	mov	r20,r2
   274b8:	00247a00 	call	247a0 <__floatsidf>
   274bc:	d9000f17 	ldw	r4,60(sp)
   274c0:	d9401017 	ldw	r5,64(sp)
   274c4:	100d883a 	mov	r6,r2
   274c8:	180f883a 	mov	r7,r3
   274cc:	0023e240 	call	23e24 <__subdf3>
   274d0:	1823883a 	mov	r17,r3
   274d4:	d8c00717 	ldw	r3,28(sp)
   274d8:	d9401217 	ldw	r5,72(sp)
   274dc:	a2000c04 	addi	r8,r20,48
   274e0:	1021883a 	mov	r16,r2
   274e4:	1a000005 	stb	r8,0(r3)
   274e8:	800d883a 	mov	r6,r16
   274ec:	880f883a 	mov	r7,r17
   274f0:	a809883a 	mov	r4,r21
   274f4:	4029883a 	mov	r20,r8
   274f8:	002353c0 	call	2353c <__gedf2>
   274fc:	00841d16 	blt	zero,r2,28574 <_dtoa_r+0x15f4>
   27500:	800d883a 	mov	r6,r16
   27504:	880f883a 	mov	r7,r17
   27508:	0009883a 	mov	r4,zero
   2750c:	014ffc34 	movhi	r5,16368
   27510:	0023e240 	call	23e24 <__subdf3>
   27514:	d9401217 	ldw	r5,72(sp)
   27518:	100d883a 	mov	r6,r2
   2751c:	180f883a 	mov	r7,r3
   27520:	a809883a 	mov	r4,r21
   27524:	002353c0 	call	2353c <__gedf2>
   27528:	db001617 	ldw	r12,88(sp)
   2752c:	00840e16 	blt	zero,r2,28568 <_dtoa_r+0x15e8>
   27530:	00800044 	movi	r2,1
   27534:	13006b0e 	bge	r2,r12,276e4 <_dtoa_r+0x764>
   27538:	d9000717 	ldw	r4,28(sp)
   2753c:	dd800f15 	stw	r22,60(sp)
   27540:	dcc01015 	stw	r19,64(sp)
   27544:	2319883a 	add	r12,r4,r12
   27548:	dcc01217 	ldw	r19,72(sp)
   2754c:	602d883a 	mov	r22,r12
   27550:	dc801215 	stw	r18,72(sp)
   27554:	b825883a 	mov	r18,r23
   27558:	00000906 	br	27580 <_dtoa_r+0x600>
   2755c:	0023e240 	call	23e24 <__subdf3>
   27560:	a80d883a 	mov	r6,r21
   27564:	980f883a 	mov	r7,r19
   27568:	1009883a 	mov	r4,r2
   2756c:	180b883a 	mov	r5,r3
   27570:	00236180 	call	23618 <__ledf2>
   27574:	1003e816 	blt	r2,zero,28518 <_dtoa_r+0x1598>
   27578:	b825883a 	mov	r18,r23
   2757c:	bd83e926 	beq	r23,r22,28524 <_dtoa_r+0x15a4>
   27580:	a809883a 	mov	r4,r21
   27584:	980b883a 	mov	r5,r19
   27588:	000d883a 	mov	r6,zero
   2758c:	01d00934 	movhi	r7,16420
   27590:	002370c0 	call	2370c <__muldf3>
   27594:	000d883a 	mov	r6,zero
   27598:	01d00934 	movhi	r7,16420
   2759c:	8009883a 	mov	r4,r16
   275a0:	880b883a 	mov	r5,r17
   275a4:	102b883a 	mov	r21,r2
   275a8:	1827883a 	mov	r19,r3
   275ac:	002370c0 	call	2370c <__muldf3>
   275b0:	180b883a 	mov	r5,r3
   275b4:	1009883a 	mov	r4,r2
   275b8:	1821883a 	mov	r16,r3
   275bc:	1023883a 	mov	r17,r2
   275c0:	00247200 	call	24720 <__fixdfsi>
   275c4:	1009883a 	mov	r4,r2
   275c8:	1029883a 	mov	r20,r2
   275cc:	00247a00 	call	247a0 <__floatsidf>
   275d0:	8809883a 	mov	r4,r17
   275d4:	800b883a 	mov	r5,r16
   275d8:	100d883a 	mov	r6,r2
   275dc:	180f883a 	mov	r7,r3
   275e0:	0023e240 	call	23e24 <__subdf3>
   275e4:	a5000c04 	addi	r20,r20,48
   275e8:	a80d883a 	mov	r6,r21
   275ec:	980f883a 	mov	r7,r19
   275f0:	1009883a 	mov	r4,r2
   275f4:	180b883a 	mov	r5,r3
   275f8:	95000005 	stb	r20,0(r18)
   275fc:	1021883a 	mov	r16,r2
   27600:	1823883a 	mov	r17,r3
   27604:	00236180 	call	23618 <__ledf2>
   27608:	bdc00044 	addi	r23,r23,1
   2760c:	800d883a 	mov	r6,r16
   27610:	880f883a 	mov	r7,r17
   27614:	0009883a 	mov	r4,zero
   27618:	014ffc34 	movhi	r5,16368
   2761c:	103fcf0e 	bge	r2,zero,2755c <__alt_data_end+0xfffe755c>
   27620:	d8c01317 	ldw	r3,76(sp)
   27624:	d8c00515 	stw	r3,20(sp)
   27628:	d9400917 	ldw	r5,36(sp)
   2762c:	e009883a 	mov	r4,fp
   27630:	002a0ac0 	call	2a0ac <_Bfree>
   27634:	d9000517 	ldw	r4,20(sp)
   27638:	d9802317 	ldw	r6,140(sp)
   2763c:	d9c02517 	ldw	r7,148(sp)
   27640:	b8000005 	stb	zero,0(r23)
   27644:	20800044 	addi	r2,r4,1
   27648:	30800015 	stw	r2,0(r6)
   2764c:	3802aa26 	beq	r7,zero,280f8 <_dtoa_r+0x1178>
   27650:	3dc00015 	stw	r23,0(r7)
   27654:	d8800717 	ldw	r2,28(sp)
   27658:	003e7906 	br	27040 <__alt_data_end+0xfffe7040>
   2765c:	00800434 	movhi	r2,16
   27660:	10bfffc4 	addi	r2,r2,-1
   27664:	88a2703a 	and	r17,r17,r2
   27668:	883e851e 	bne	r17,zero,27080 <__alt_data_end+0xfffe7080>
   2766c:	008000f4 	movhi	r2,3
   27670:	10850604 	addi	r2,r2,5144
   27674:	003e8406 	br	27088 <__alt_data_end+0xfffe7088>
   27678:	10c00204 	addi	r3,r2,8
   2767c:	003e8706 	br	2709c <__alt_data_end+0xfffe709c>
   27680:	01400434 	movhi	r5,16
   27684:	297fffc4 	addi	r5,r5,-1
   27688:	994a703a 	and	r5,r19,r5
   2768c:	9009883a 	mov	r4,r18
   27690:	843f0044 	addi	r16,r16,-1023
   27694:	294ffc34 	orhi	r5,r5,16368
   27698:	dd800217 	ldw	r22,8(sp)
   2769c:	d8001115 	stw	zero,68(sp)
   276a0:	003ea506 	br	27138 <__alt_data_end+0xfffe7138>
   276a4:	008000f4 	movhi	r2,3
   276a8:	1084fd04 	addi	r2,r2,5108
   276ac:	003e6406 	br	27040 <__alt_data_end+0xfffe7040>
   276b0:	e0001115 	stw	zero,68(fp)
   276b4:	000b883a 	mov	r5,zero
   276b8:	e009883a 	mov	r4,fp
   276bc:	002a0040 	call	2a004 <_Balloc>
   276c0:	01bfffc4 	movi	r6,-1
   276c4:	01c00044 	movi	r7,1
   276c8:	d8800715 	stw	r2,28(sp)
   276cc:	d9800c15 	stw	r6,48(sp)
   276d0:	e0801015 	stw	r2,64(fp)
   276d4:	d8000315 	stw	zero,12(sp)
   276d8:	d9c00b15 	stw	r7,44(sp)
   276dc:	d9800615 	stw	r6,24(sp)
   276e0:	d8002215 	stw	zero,136(sp)
   276e4:	d8800117 	ldw	r2,4(sp)
   276e8:	10008916 	blt	r2,zero,27910 <_dtoa_r+0x990>
   276ec:	d9000517 	ldw	r4,20(sp)
   276f0:	00c00384 	movi	r3,14
   276f4:	19008616 	blt	r3,r4,27910 <_dtoa_r+0x990>
   276f8:	200490fa 	slli	r2,r4,3
   276fc:	00c000f4 	movhi	r3,3
   27700:	d9802217 	ldw	r6,136(sp)
   27704:	18c52404 	addi	r3,r3,5264
   27708:	1885883a 	add	r2,r3,r2
   2770c:	14000017 	ldw	r16,0(r2)
   27710:	14400117 	ldw	r17,4(r2)
   27714:	30016316 	blt	r6,zero,27ca4 <_dtoa_r+0xd24>
   27718:	800d883a 	mov	r6,r16
   2771c:	880f883a 	mov	r7,r17
   27720:	9009883a 	mov	r4,r18
   27724:	980b883a 	mov	r5,r19
   27728:	0022bcc0 	call	22bcc <__divdf3>
   2772c:	180b883a 	mov	r5,r3
   27730:	1009883a 	mov	r4,r2
   27734:	00247200 	call	24720 <__fixdfsi>
   27738:	1009883a 	mov	r4,r2
   2773c:	102b883a 	mov	r21,r2
   27740:	00247a00 	call	247a0 <__floatsidf>
   27744:	800d883a 	mov	r6,r16
   27748:	880f883a 	mov	r7,r17
   2774c:	1009883a 	mov	r4,r2
   27750:	180b883a 	mov	r5,r3
   27754:	002370c0 	call	2370c <__muldf3>
   27758:	100d883a 	mov	r6,r2
   2775c:	180f883a 	mov	r7,r3
   27760:	9009883a 	mov	r4,r18
   27764:	980b883a 	mov	r5,r19
   27768:	0023e240 	call	23e24 <__subdf3>
   2776c:	d9c00717 	ldw	r7,28(sp)
   27770:	1009883a 	mov	r4,r2
   27774:	a8800c04 	addi	r2,r21,48
   27778:	38800005 	stb	r2,0(r7)
   2777c:	3dc00044 	addi	r23,r7,1
   27780:	d9c00617 	ldw	r7,24(sp)
   27784:	01800044 	movi	r6,1
   27788:	180b883a 	mov	r5,r3
   2778c:	2005883a 	mov	r2,r4
   27790:	39803826 	beq	r7,r6,27874 <_dtoa_r+0x8f4>
   27794:	000d883a 	mov	r6,zero
   27798:	01d00934 	movhi	r7,16420
   2779c:	002370c0 	call	2370c <__muldf3>
   277a0:	000d883a 	mov	r6,zero
   277a4:	000f883a 	mov	r7,zero
   277a8:	1009883a 	mov	r4,r2
   277ac:	180b883a 	mov	r5,r3
   277b0:	1025883a 	mov	r18,r2
   277b4:	1827883a 	mov	r19,r3
   277b8:	00234b40 	call	234b4 <__eqdf2>
   277bc:	103f9a26 	beq	r2,zero,27628 <__alt_data_end+0xfffe7628>
   277c0:	d9c00617 	ldw	r7,24(sp)
   277c4:	d8c00717 	ldw	r3,28(sp)
   277c8:	b829883a 	mov	r20,r23
   277cc:	38bfffc4 	addi	r2,r7,-1
   277d0:	18ad883a 	add	r22,r3,r2
   277d4:	00000a06 	br	27800 <_dtoa_r+0x880>
   277d8:	002370c0 	call	2370c <__muldf3>
   277dc:	000d883a 	mov	r6,zero
   277e0:	000f883a 	mov	r7,zero
   277e4:	1009883a 	mov	r4,r2
   277e8:	180b883a 	mov	r5,r3
   277ec:	1025883a 	mov	r18,r2
   277f0:	1827883a 	mov	r19,r3
   277f4:	b829883a 	mov	r20,r23
   277f8:	00234b40 	call	234b4 <__eqdf2>
   277fc:	103f8a26 	beq	r2,zero,27628 <__alt_data_end+0xfffe7628>
   27800:	800d883a 	mov	r6,r16
   27804:	880f883a 	mov	r7,r17
   27808:	9009883a 	mov	r4,r18
   2780c:	980b883a 	mov	r5,r19
   27810:	0022bcc0 	call	22bcc <__divdf3>
   27814:	180b883a 	mov	r5,r3
   27818:	1009883a 	mov	r4,r2
   2781c:	00247200 	call	24720 <__fixdfsi>
   27820:	1009883a 	mov	r4,r2
   27824:	102b883a 	mov	r21,r2
   27828:	00247a00 	call	247a0 <__floatsidf>
   2782c:	800d883a 	mov	r6,r16
   27830:	880f883a 	mov	r7,r17
   27834:	1009883a 	mov	r4,r2
   27838:	180b883a 	mov	r5,r3
   2783c:	002370c0 	call	2370c <__muldf3>
   27840:	100d883a 	mov	r6,r2
   27844:	180f883a 	mov	r7,r3
   27848:	9009883a 	mov	r4,r18
   2784c:	980b883a 	mov	r5,r19
   27850:	0023e240 	call	23e24 <__subdf3>
   27854:	aa000c04 	addi	r8,r21,48
   27858:	a2000005 	stb	r8,0(r20)
   2785c:	000d883a 	mov	r6,zero
   27860:	01d00934 	movhi	r7,16420
   27864:	1009883a 	mov	r4,r2
   27868:	180b883a 	mov	r5,r3
   2786c:	a5c00044 	addi	r23,r20,1
   27870:	b53fd91e 	bne	r22,r20,277d8 <__alt_data_end+0xfffe77d8>
   27874:	100d883a 	mov	r6,r2
   27878:	180f883a 	mov	r7,r3
   2787c:	1009883a 	mov	r4,r2
   27880:	180b883a 	mov	r5,r3
   27884:	00223200 	call	22320 <__adddf3>
   27888:	100d883a 	mov	r6,r2
   2788c:	180f883a 	mov	r7,r3
   27890:	8009883a 	mov	r4,r16
   27894:	880b883a 	mov	r5,r17
   27898:	1027883a 	mov	r19,r2
   2789c:	1825883a 	mov	r18,r3
   278a0:	00236180 	call	23618 <__ledf2>
   278a4:	10000816 	blt	r2,zero,278c8 <_dtoa_r+0x948>
   278a8:	980d883a 	mov	r6,r19
   278ac:	900f883a 	mov	r7,r18
   278b0:	8009883a 	mov	r4,r16
   278b4:	880b883a 	mov	r5,r17
   278b8:	00234b40 	call	234b4 <__eqdf2>
   278bc:	103f5a1e 	bne	r2,zero,27628 <__alt_data_end+0xfffe7628>
   278c0:	ad40004c 	andi	r21,r21,1
   278c4:	a83f5826 	beq	r21,zero,27628 <__alt_data_end+0xfffe7628>
   278c8:	bd3fffc3 	ldbu	r20,-1(r23)
   278cc:	b8bfffc4 	addi	r2,r23,-1
   278d0:	1007883a 	mov	r3,r2
   278d4:	01400e44 	movi	r5,57
   278d8:	d9800717 	ldw	r6,28(sp)
   278dc:	00000506 	br	278f4 <_dtoa_r+0x974>
   278e0:	18ffffc4 	addi	r3,r3,-1
   278e4:	11824726 	beq	r2,r6,28204 <_dtoa_r+0x1284>
   278e8:	1d000003 	ldbu	r20,0(r3)
   278ec:	102f883a 	mov	r23,r2
   278f0:	10bfffc4 	addi	r2,r2,-1
   278f4:	a1003fcc 	andi	r4,r20,255
   278f8:	2100201c 	xori	r4,r4,128
   278fc:	213fe004 	addi	r4,r4,-128
   27900:	217ff726 	beq	r4,r5,278e0 <__alt_data_end+0xfffe78e0>
   27904:	a2000044 	addi	r8,r20,1
   27908:	12000005 	stb	r8,0(r2)
   2790c:	003f4606 	br	27628 <__alt_data_end+0xfffe7628>
   27910:	d9000b17 	ldw	r4,44(sp)
   27914:	2000c826 	beq	r4,zero,27c38 <_dtoa_r+0xcb8>
   27918:	d9800317 	ldw	r6,12(sp)
   2791c:	00c00044 	movi	r3,1
   27920:	1980f90e 	bge	r3,r6,27d08 <_dtoa_r+0xd88>
   27924:	d8800617 	ldw	r2,24(sp)
   27928:	d8c00a17 	ldw	r3,40(sp)
   2792c:	157fffc4 	addi	r21,r2,-1
   27930:	1d41f316 	blt	r3,r21,28100 <_dtoa_r+0x1180>
   27934:	1d6bc83a 	sub	r21,r3,r21
   27938:	d9c00617 	ldw	r7,24(sp)
   2793c:	3802aa16 	blt	r7,zero,283e8 <_dtoa_r+0x1468>
   27940:	dd000817 	ldw	r20,32(sp)
   27944:	d8800617 	ldw	r2,24(sp)
   27948:	d8c00817 	ldw	r3,32(sp)
   2794c:	01400044 	movi	r5,1
   27950:	e009883a 	mov	r4,fp
   27954:	1887883a 	add	r3,r3,r2
   27958:	d8c00815 	stw	r3,32(sp)
   2795c:	b0ad883a 	add	r22,r22,r2
   27960:	002a4100 	call	2a410 <__i2b>
   27964:	1023883a 	mov	r17,r2
   27968:	a0000826 	beq	r20,zero,2798c <_dtoa_r+0xa0c>
   2796c:	0580070e 	bge	zero,r22,2798c <_dtoa_r+0xa0c>
   27970:	a005883a 	mov	r2,r20
   27974:	b500b916 	blt	r22,r20,27c5c <_dtoa_r+0xcdc>
   27978:	d9000817 	ldw	r4,32(sp)
   2797c:	a0a9c83a 	sub	r20,r20,r2
   27980:	b0adc83a 	sub	r22,r22,r2
   27984:	2089c83a 	sub	r4,r4,r2
   27988:	d9000815 	stw	r4,32(sp)
   2798c:	d9800a17 	ldw	r6,40(sp)
   27990:	0181810e 	bge	zero,r6,27f98 <_dtoa_r+0x1018>
   27994:	d9c00b17 	ldw	r7,44(sp)
   27998:	3800b326 	beq	r7,zero,27c68 <_dtoa_r+0xce8>
   2799c:	a800b226 	beq	r21,zero,27c68 <_dtoa_r+0xce8>
   279a0:	880b883a 	mov	r5,r17
   279a4:	a80d883a 	mov	r6,r21
   279a8:	e009883a 	mov	r4,fp
   279ac:	002a6440 	call	2a644 <__pow5mult>
   279b0:	d9800917 	ldw	r6,36(sp)
   279b4:	100b883a 	mov	r5,r2
   279b8:	e009883a 	mov	r4,fp
   279bc:	1023883a 	mov	r17,r2
   279c0:	002a44c0 	call	2a44c <__multiply>
   279c4:	1021883a 	mov	r16,r2
   279c8:	d8800a17 	ldw	r2,40(sp)
   279cc:	d9400917 	ldw	r5,36(sp)
   279d0:	e009883a 	mov	r4,fp
   279d4:	1545c83a 	sub	r2,r2,r21
   279d8:	d8800a15 	stw	r2,40(sp)
   279dc:	002a0ac0 	call	2a0ac <_Bfree>
   279e0:	d8c00a17 	ldw	r3,40(sp)
   279e4:	18009f1e 	bne	r3,zero,27c64 <_dtoa_r+0xce4>
   279e8:	05c00044 	movi	r23,1
   279ec:	e009883a 	mov	r4,fp
   279f0:	b80b883a 	mov	r5,r23
   279f4:	002a4100 	call	2a410 <__i2b>
   279f8:	d9000d17 	ldw	r4,52(sp)
   279fc:	102b883a 	mov	r21,r2
   27a00:	2000ce26 	beq	r4,zero,27d3c <_dtoa_r+0xdbc>
   27a04:	200d883a 	mov	r6,r4
   27a08:	100b883a 	mov	r5,r2
   27a0c:	e009883a 	mov	r4,fp
   27a10:	002a6440 	call	2a644 <__pow5mult>
   27a14:	d9800317 	ldw	r6,12(sp)
   27a18:	102b883a 	mov	r21,r2
   27a1c:	b981810e 	bge	r23,r6,28024 <_dtoa_r+0x10a4>
   27a20:	0027883a 	mov	r19,zero
   27a24:	a8800417 	ldw	r2,16(r21)
   27a28:	05c00804 	movi	r23,32
   27a2c:	10800104 	addi	r2,r2,4
   27a30:	1085883a 	add	r2,r2,r2
   27a34:	1085883a 	add	r2,r2,r2
   27a38:	a885883a 	add	r2,r21,r2
   27a3c:	11000017 	ldw	r4,0(r2)
   27a40:	002a2f80 	call	2a2f8 <__hi0bits>
   27a44:	b885c83a 	sub	r2,r23,r2
   27a48:	1585883a 	add	r2,r2,r22
   27a4c:	108007cc 	andi	r2,r2,31
   27a50:	1000b326 	beq	r2,zero,27d20 <_dtoa_r+0xda0>
   27a54:	00c00804 	movi	r3,32
   27a58:	1887c83a 	sub	r3,r3,r2
   27a5c:	01000104 	movi	r4,4
   27a60:	20c2cd0e 	bge	r4,r3,28598 <_dtoa_r+0x1618>
   27a64:	00c00704 	movi	r3,28
   27a68:	1885c83a 	sub	r2,r3,r2
   27a6c:	d8c00817 	ldw	r3,32(sp)
   27a70:	a0a9883a 	add	r20,r20,r2
   27a74:	b0ad883a 	add	r22,r22,r2
   27a78:	1887883a 	add	r3,r3,r2
   27a7c:	d8c00815 	stw	r3,32(sp)
   27a80:	d9800817 	ldw	r6,32(sp)
   27a84:	0180040e 	bge	zero,r6,27a98 <_dtoa_r+0xb18>
   27a88:	800b883a 	mov	r5,r16
   27a8c:	e009883a 	mov	r4,fp
   27a90:	002a7840 	call	2a784 <__lshift>
   27a94:	1021883a 	mov	r16,r2
   27a98:	0580050e 	bge	zero,r22,27ab0 <_dtoa_r+0xb30>
   27a9c:	a80b883a 	mov	r5,r21
   27aa0:	b00d883a 	mov	r6,r22
   27aa4:	e009883a 	mov	r4,fp
   27aa8:	002a7840 	call	2a784 <__lshift>
   27aac:	102b883a 	mov	r21,r2
   27ab0:	d9c00e17 	ldw	r7,56(sp)
   27ab4:	3801211e 	bne	r7,zero,27f3c <_dtoa_r+0xfbc>
   27ab8:	d9800617 	ldw	r6,24(sp)
   27abc:	0181380e 	bge	zero,r6,27fa0 <_dtoa_r+0x1020>
   27ac0:	d8c00b17 	ldw	r3,44(sp)
   27ac4:	1800ab1e 	bne	r3,zero,27d74 <_dtoa_r+0xdf4>
   27ac8:	dc800717 	ldw	r18,28(sp)
   27acc:	dcc00617 	ldw	r19,24(sp)
   27ad0:	9029883a 	mov	r20,r18
   27ad4:	00000206 	br	27ae0 <_dtoa_r+0xb60>
   27ad8:	002a0d40 	call	2a0d4 <__multadd>
   27adc:	1021883a 	mov	r16,r2
   27ae0:	a80b883a 	mov	r5,r21
   27ae4:	8009883a 	mov	r4,r16
   27ae8:	0026d800 	call	26d80 <quorem>
   27aec:	10800c04 	addi	r2,r2,48
   27af0:	90800005 	stb	r2,0(r18)
   27af4:	94800044 	addi	r18,r18,1
   27af8:	9507c83a 	sub	r3,r18,r20
   27afc:	000f883a 	mov	r7,zero
   27b00:	01800284 	movi	r6,10
   27b04:	800b883a 	mov	r5,r16
   27b08:	e009883a 	mov	r4,fp
   27b0c:	1cfff216 	blt	r3,r19,27ad8 <__alt_data_end+0xfffe7ad8>
   27b10:	1011883a 	mov	r8,r2
   27b14:	d8800617 	ldw	r2,24(sp)
   27b18:	0082370e 	bge	zero,r2,283f8 <_dtoa_r+0x1478>
   27b1c:	d9000717 	ldw	r4,28(sp)
   27b20:	0025883a 	mov	r18,zero
   27b24:	20af883a 	add	r23,r4,r2
   27b28:	01800044 	movi	r6,1
   27b2c:	800b883a 	mov	r5,r16
   27b30:	e009883a 	mov	r4,fp
   27b34:	da001715 	stw	r8,92(sp)
   27b38:	002a7840 	call	2a784 <__lshift>
   27b3c:	a80b883a 	mov	r5,r21
   27b40:	1009883a 	mov	r4,r2
   27b44:	d8800915 	stw	r2,36(sp)
   27b48:	002a8cc0 	call	2a8cc <__mcmp>
   27b4c:	da001717 	ldw	r8,92(sp)
   27b50:	0081800e 	bge	zero,r2,28154 <_dtoa_r+0x11d4>
   27b54:	b93fffc3 	ldbu	r4,-1(r23)
   27b58:	b8bfffc4 	addi	r2,r23,-1
   27b5c:	1007883a 	mov	r3,r2
   27b60:	01800e44 	movi	r6,57
   27b64:	d9c00717 	ldw	r7,28(sp)
   27b68:	00000506 	br	27b80 <_dtoa_r+0xc00>
   27b6c:	18ffffc4 	addi	r3,r3,-1
   27b70:	11c12326 	beq	r2,r7,28000 <_dtoa_r+0x1080>
   27b74:	19000003 	ldbu	r4,0(r3)
   27b78:	102f883a 	mov	r23,r2
   27b7c:	10bfffc4 	addi	r2,r2,-1
   27b80:	21403fcc 	andi	r5,r4,255
   27b84:	2940201c 	xori	r5,r5,128
   27b88:	297fe004 	addi	r5,r5,-128
   27b8c:	29bff726 	beq	r5,r6,27b6c <__alt_data_end+0xfffe7b6c>
   27b90:	21000044 	addi	r4,r4,1
   27b94:	11000005 	stb	r4,0(r2)
   27b98:	a80b883a 	mov	r5,r21
   27b9c:	e009883a 	mov	r4,fp
   27ba0:	002a0ac0 	call	2a0ac <_Bfree>
   27ba4:	883ea026 	beq	r17,zero,27628 <__alt_data_end+0xfffe7628>
   27ba8:	90000426 	beq	r18,zero,27bbc <_dtoa_r+0xc3c>
   27bac:	94400326 	beq	r18,r17,27bbc <_dtoa_r+0xc3c>
   27bb0:	900b883a 	mov	r5,r18
   27bb4:	e009883a 	mov	r4,fp
   27bb8:	002a0ac0 	call	2a0ac <_Bfree>
   27bbc:	880b883a 	mov	r5,r17
   27bc0:	e009883a 	mov	r4,fp
   27bc4:	002a0ac0 	call	2a0ac <_Bfree>
   27bc8:	003e9706 	br	27628 <__alt_data_end+0xfffe7628>
   27bcc:	01800044 	movi	r6,1
   27bd0:	d9800e15 	stw	r6,56(sp)
   27bd4:	003d9606 	br	27230 <__alt_data_end+0xfffe7230>
   27bd8:	d8800817 	ldw	r2,32(sp)
   27bdc:	d8c00517 	ldw	r3,20(sp)
   27be0:	d8000d15 	stw	zero,52(sp)
   27be4:	10c5c83a 	sub	r2,r2,r3
   27be8:	00c9c83a 	sub	r4,zero,r3
   27bec:	d8800815 	stw	r2,32(sp)
   27bf0:	d9000a15 	stw	r4,40(sp)
   27bf4:	003d9706 	br	27254 <__alt_data_end+0xfffe7254>
   27bf8:	05adc83a 	sub	r22,zero,r22
   27bfc:	dd800815 	stw	r22,32(sp)
   27c00:	002d883a 	mov	r22,zero
   27c04:	003d8e06 	br	27240 <__alt_data_end+0xfffe7240>
   27c08:	d9000517 	ldw	r4,20(sp)
   27c0c:	00247a00 	call	247a0 <__floatsidf>
   27c10:	100d883a 	mov	r6,r2
   27c14:	180f883a 	mov	r7,r3
   27c18:	a009883a 	mov	r4,r20
   27c1c:	880b883a 	mov	r5,r17
   27c20:	00234b40 	call	234b4 <__eqdf2>
   27c24:	103d7126 	beq	r2,zero,271ec <__alt_data_end+0xfffe71ec>
   27c28:	d9c00517 	ldw	r7,20(sp)
   27c2c:	39ffffc4 	addi	r7,r7,-1
   27c30:	d9c00515 	stw	r7,20(sp)
   27c34:	003d6d06 	br	271ec <__alt_data_end+0xfffe71ec>
   27c38:	dd400a17 	ldw	r21,40(sp)
   27c3c:	dd000817 	ldw	r20,32(sp)
   27c40:	0023883a 	mov	r17,zero
   27c44:	003f4806 	br	27968 <__alt_data_end+0xfffe7968>
   27c48:	10e3c83a 	sub	r17,r2,r3
   27c4c:	9448983a 	sll	r4,r18,r17
   27c50:	003d3206 	br	2711c <__alt_data_end+0xfffe711c>
   27c54:	d8000e15 	stw	zero,56(sp)
   27c58:	003d7506 	br	27230 <__alt_data_end+0xfffe7230>
   27c5c:	b005883a 	mov	r2,r22
   27c60:	003f4506 	br	27978 <__alt_data_end+0xfffe7978>
   27c64:	dc000915 	stw	r16,36(sp)
   27c68:	d9800a17 	ldw	r6,40(sp)
   27c6c:	d9400917 	ldw	r5,36(sp)
   27c70:	e009883a 	mov	r4,fp
   27c74:	002a6440 	call	2a644 <__pow5mult>
   27c78:	1021883a 	mov	r16,r2
   27c7c:	003f5a06 	br	279e8 <__alt_data_end+0xfffe79e8>
   27c80:	01c00044 	movi	r7,1
   27c84:	d9c00b15 	stw	r7,44(sp)
   27c88:	d8802217 	ldw	r2,136(sp)
   27c8c:	0081280e 	bge	zero,r2,28130 <_dtoa_r+0x11b0>
   27c90:	100d883a 	mov	r6,r2
   27c94:	1021883a 	mov	r16,r2
   27c98:	d8800c15 	stw	r2,48(sp)
   27c9c:	d8800615 	stw	r2,24(sp)
   27ca0:	003d8806 	br	272c4 <__alt_data_end+0xfffe72c4>
   27ca4:	d8800617 	ldw	r2,24(sp)
   27ca8:	00be9b16 	blt	zero,r2,27718 <__alt_data_end+0xfffe7718>
   27cac:	10010f1e 	bne	r2,zero,280ec <_dtoa_r+0x116c>
   27cb0:	880b883a 	mov	r5,r17
   27cb4:	000d883a 	mov	r6,zero
   27cb8:	01d00534 	movhi	r7,16404
   27cbc:	8009883a 	mov	r4,r16
   27cc0:	002370c0 	call	2370c <__muldf3>
   27cc4:	900d883a 	mov	r6,r18
   27cc8:	980f883a 	mov	r7,r19
   27ccc:	1009883a 	mov	r4,r2
   27cd0:	180b883a 	mov	r5,r3
   27cd4:	002353c0 	call	2353c <__gedf2>
   27cd8:	002b883a 	mov	r21,zero
   27cdc:	0023883a 	mov	r17,zero
   27ce0:	1000bf16 	blt	r2,zero,27fe0 <_dtoa_r+0x1060>
   27ce4:	d9802217 	ldw	r6,136(sp)
   27ce8:	ddc00717 	ldw	r23,28(sp)
   27cec:	018c303a 	nor	r6,zero,r6
   27cf0:	d9800515 	stw	r6,20(sp)
   27cf4:	a80b883a 	mov	r5,r21
   27cf8:	e009883a 	mov	r4,fp
   27cfc:	002a0ac0 	call	2a0ac <_Bfree>
   27d00:	883e4926 	beq	r17,zero,27628 <__alt_data_end+0xfffe7628>
   27d04:	003fad06 	br	27bbc <__alt_data_end+0xfffe7bbc>
   27d08:	d9c01117 	ldw	r7,68(sp)
   27d0c:	3801bc26 	beq	r7,zero,28400 <_dtoa_r+0x1480>
   27d10:	10810cc4 	addi	r2,r2,1075
   27d14:	dd400a17 	ldw	r21,40(sp)
   27d18:	dd000817 	ldw	r20,32(sp)
   27d1c:	003f0a06 	br	27948 <__alt_data_end+0xfffe7948>
   27d20:	00800704 	movi	r2,28
   27d24:	d9000817 	ldw	r4,32(sp)
   27d28:	a0a9883a 	add	r20,r20,r2
   27d2c:	b0ad883a 	add	r22,r22,r2
   27d30:	2089883a 	add	r4,r4,r2
   27d34:	d9000815 	stw	r4,32(sp)
   27d38:	003f5106 	br	27a80 <__alt_data_end+0xfffe7a80>
   27d3c:	d8c00317 	ldw	r3,12(sp)
   27d40:	b8c1fc0e 	bge	r23,r3,28534 <_dtoa_r+0x15b4>
   27d44:	0027883a 	mov	r19,zero
   27d48:	b805883a 	mov	r2,r23
   27d4c:	003f3e06 	br	27a48 <__alt_data_end+0xfffe7a48>
   27d50:	880b883a 	mov	r5,r17
   27d54:	e009883a 	mov	r4,fp
   27d58:	000f883a 	mov	r7,zero
   27d5c:	01800284 	movi	r6,10
   27d60:	002a0d40 	call	2a0d4 <__multadd>
   27d64:	d9000c17 	ldw	r4,48(sp)
   27d68:	1023883a 	mov	r17,r2
   27d6c:	0102040e 	bge	zero,r4,28580 <_dtoa_r+0x1600>
   27d70:	d9000615 	stw	r4,24(sp)
   27d74:	0500050e 	bge	zero,r20,27d8c <_dtoa_r+0xe0c>
   27d78:	880b883a 	mov	r5,r17
   27d7c:	a00d883a 	mov	r6,r20
   27d80:	e009883a 	mov	r4,fp
   27d84:	002a7840 	call	2a784 <__lshift>
   27d88:	1023883a 	mov	r17,r2
   27d8c:	9801241e 	bne	r19,zero,28220 <_dtoa_r+0x12a0>
   27d90:	8829883a 	mov	r20,r17
   27d94:	d9000617 	ldw	r4,24(sp)
   27d98:	dcc00717 	ldw	r19,28(sp)
   27d9c:	9480004c 	andi	r18,r18,1
   27da0:	20bfffc4 	addi	r2,r4,-1
   27da4:	9885883a 	add	r2,r19,r2
   27da8:	d8800415 	stw	r2,16(sp)
   27dac:	dc800615 	stw	r18,24(sp)
   27db0:	a80b883a 	mov	r5,r21
   27db4:	8009883a 	mov	r4,r16
   27db8:	0026d800 	call	26d80 <quorem>
   27dbc:	880b883a 	mov	r5,r17
   27dc0:	8009883a 	mov	r4,r16
   27dc4:	102f883a 	mov	r23,r2
   27dc8:	002a8cc0 	call	2a8cc <__mcmp>
   27dcc:	a80b883a 	mov	r5,r21
   27dd0:	a00d883a 	mov	r6,r20
   27dd4:	e009883a 	mov	r4,fp
   27dd8:	102d883a 	mov	r22,r2
   27ddc:	002a92c0 	call	2a92c <__mdiff>
   27de0:	1007883a 	mov	r3,r2
   27de4:	10800317 	ldw	r2,12(r2)
   27de8:	bc800c04 	addi	r18,r23,48
   27dec:	180b883a 	mov	r5,r3
   27df0:	10004e1e 	bne	r2,zero,27f2c <_dtoa_r+0xfac>
   27df4:	8009883a 	mov	r4,r16
   27df8:	d8c01615 	stw	r3,88(sp)
   27dfc:	002a8cc0 	call	2a8cc <__mcmp>
   27e00:	d8c01617 	ldw	r3,88(sp)
   27e04:	e009883a 	mov	r4,fp
   27e08:	d8801615 	stw	r2,88(sp)
   27e0c:	180b883a 	mov	r5,r3
   27e10:	002a0ac0 	call	2a0ac <_Bfree>
   27e14:	d8801617 	ldw	r2,88(sp)
   27e18:	1000041e 	bne	r2,zero,27e2c <_dtoa_r+0xeac>
   27e1c:	d9800317 	ldw	r6,12(sp)
   27e20:	3000021e 	bne	r6,zero,27e2c <_dtoa_r+0xeac>
   27e24:	d8c00617 	ldw	r3,24(sp)
   27e28:	18003726 	beq	r3,zero,27f08 <_dtoa_r+0xf88>
   27e2c:	b0002016 	blt	r22,zero,27eb0 <_dtoa_r+0xf30>
   27e30:	b000041e 	bne	r22,zero,27e44 <_dtoa_r+0xec4>
   27e34:	d9000317 	ldw	r4,12(sp)
   27e38:	2000021e 	bne	r4,zero,27e44 <_dtoa_r+0xec4>
   27e3c:	d8c00617 	ldw	r3,24(sp)
   27e40:	18001b26 	beq	r3,zero,27eb0 <_dtoa_r+0xf30>
   27e44:	00810716 	blt	zero,r2,28264 <_dtoa_r+0x12e4>
   27e48:	d8c00417 	ldw	r3,16(sp)
   27e4c:	9d800044 	addi	r22,r19,1
   27e50:	9c800005 	stb	r18,0(r19)
   27e54:	b02f883a 	mov	r23,r22
   27e58:	98c10626 	beq	r19,r3,28274 <_dtoa_r+0x12f4>
   27e5c:	800b883a 	mov	r5,r16
   27e60:	000f883a 	mov	r7,zero
   27e64:	01800284 	movi	r6,10
   27e68:	e009883a 	mov	r4,fp
   27e6c:	002a0d40 	call	2a0d4 <__multadd>
   27e70:	1021883a 	mov	r16,r2
   27e74:	000f883a 	mov	r7,zero
   27e78:	01800284 	movi	r6,10
   27e7c:	880b883a 	mov	r5,r17
   27e80:	e009883a 	mov	r4,fp
   27e84:	8d002526 	beq	r17,r20,27f1c <_dtoa_r+0xf9c>
   27e88:	002a0d40 	call	2a0d4 <__multadd>
   27e8c:	a00b883a 	mov	r5,r20
   27e90:	000f883a 	mov	r7,zero
   27e94:	01800284 	movi	r6,10
   27e98:	e009883a 	mov	r4,fp
   27e9c:	1023883a 	mov	r17,r2
   27ea0:	002a0d40 	call	2a0d4 <__multadd>
   27ea4:	1029883a 	mov	r20,r2
   27ea8:	b027883a 	mov	r19,r22
   27eac:	003fc006 	br	27db0 <__alt_data_end+0xfffe7db0>
   27eb0:	9011883a 	mov	r8,r18
   27eb4:	00800e0e 	bge	zero,r2,27ef0 <_dtoa_r+0xf70>
   27eb8:	800b883a 	mov	r5,r16
   27ebc:	01800044 	movi	r6,1
   27ec0:	e009883a 	mov	r4,fp
   27ec4:	da001715 	stw	r8,92(sp)
   27ec8:	002a7840 	call	2a784 <__lshift>
   27ecc:	a80b883a 	mov	r5,r21
   27ed0:	1009883a 	mov	r4,r2
   27ed4:	1021883a 	mov	r16,r2
   27ed8:	002a8cc0 	call	2a8cc <__mcmp>
   27edc:	da001717 	ldw	r8,92(sp)
   27ee0:	0081960e 	bge	zero,r2,2853c <_dtoa_r+0x15bc>
   27ee4:	00800e44 	movi	r2,57
   27ee8:	40817026 	beq	r8,r2,284ac <_dtoa_r+0x152c>
   27eec:	ba000c44 	addi	r8,r23,49
   27ef0:	8825883a 	mov	r18,r17
   27ef4:	9dc00044 	addi	r23,r19,1
   27ef8:	9a000005 	stb	r8,0(r19)
   27efc:	a023883a 	mov	r17,r20
   27f00:	dc000915 	stw	r16,36(sp)
   27f04:	003f2406 	br	27b98 <__alt_data_end+0xfffe7b98>
   27f08:	00800e44 	movi	r2,57
   27f0c:	9011883a 	mov	r8,r18
   27f10:	90816626 	beq	r18,r2,284ac <_dtoa_r+0x152c>
   27f14:	05bff516 	blt	zero,r22,27eec <__alt_data_end+0xfffe7eec>
   27f18:	003ff506 	br	27ef0 <__alt_data_end+0xfffe7ef0>
   27f1c:	002a0d40 	call	2a0d4 <__multadd>
   27f20:	1023883a 	mov	r17,r2
   27f24:	1029883a 	mov	r20,r2
   27f28:	003fdf06 	br	27ea8 <__alt_data_end+0xfffe7ea8>
   27f2c:	e009883a 	mov	r4,fp
   27f30:	002a0ac0 	call	2a0ac <_Bfree>
   27f34:	00800044 	movi	r2,1
   27f38:	003fbc06 	br	27e2c <__alt_data_end+0xfffe7e2c>
   27f3c:	a80b883a 	mov	r5,r21
   27f40:	8009883a 	mov	r4,r16
   27f44:	002a8cc0 	call	2a8cc <__mcmp>
   27f48:	103edb0e 	bge	r2,zero,27ab8 <__alt_data_end+0xfffe7ab8>
   27f4c:	800b883a 	mov	r5,r16
   27f50:	000f883a 	mov	r7,zero
   27f54:	01800284 	movi	r6,10
   27f58:	e009883a 	mov	r4,fp
   27f5c:	002a0d40 	call	2a0d4 <__multadd>
   27f60:	1021883a 	mov	r16,r2
   27f64:	d8800517 	ldw	r2,20(sp)
   27f68:	d8c00b17 	ldw	r3,44(sp)
   27f6c:	10bfffc4 	addi	r2,r2,-1
   27f70:	d8800515 	stw	r2,20(sp)
   27f74:	183f761e 	bne	r3,zero,27d50 <__alt_data_end+0xfffe7d50>
   27f78:	d9000c17 	ldw	r4,48(sp)
   27f7c:	0101730e 	bge	zero,r4,2854c <_dtoa_r+0x15cc>
   27f80:	d9000615 	stw	r4,24(sp)
   27f84:	003ed006 	br	27ac8 <__alt_data_end+0xfffe7ac8>
   27f88:	00800084 	movi	r2,2
   27f8c:	3081861e 	bne	r6,r2,285a8 <_dtoa_r+0x1628>
   27f90:	d8000b15 	stw	zero,44(sp)
   27f94:	003f3c06 	br	27c88 <__alt_data_end+0xfffe7c88>
   27f98:	dc000917 	ldw	r16,36(sp)
   27f9c:	003e9206 	br	279e8 <__alt_data_end+0xfffe79e8>
   27fa0:	d9c00317 	ldw	r7,12(sp)
   27fa4:	00800084 	movi	r2,2
   27fa8:	11fec50e 	bge	r2,r7,27ac0 <__alt_data_end+0xfffe7ac0>
   27fac:	d9000617 	ldw	r4,24(sp)
   27fb0:	20013c1e 	bne	r4,zero,284a4 <_dtoa_r+0x1524>
   27fb4:	a80b883a 	mov	r5,r21
   27fb8:	000f883a 	mov	r7,zero
   27fbc:	01800144 	movi	r6,5
   27fc0:	e009883a 	mov	r4,fp
   27fc4:	002a0d40 	call	2a0d4 <__multadd>
   27fc8:	100b883a 	mov	r5,r2
   27fcc:	8009883a 	mov	r4,r16
   27fd0:	102b883a 	mov	r21,r2
   27fd4:	002a8cc0 	call	2a8cc <__mcmp>
   27fd8:	dc000915 	stw	r16,36(sp)
   27fdc:	00bf410e 	bge	zero,r2,27ce4 <__alt_data_end+0xfffe7ce4>
   27fe0:	d9c00717 	ldw	r7,28(sp)
   27fe4:	00800c44 	movi	r2,49
   27fe8:	38800005 	stb	r2,0(r7)
   27fec:	d8800517 	ldw	r2,20(sp)
   27ff0:	3dc00044 	addi	r23,r7,1
   27ff4:	10800044 	addi	r2,r2,1
   27ff8:	d8800515 	stw	r2,20(sp)
   27ffc:	003f3d06 	br	27cf4 <__alt_data_end+0xfffe7cf4>
   28000:	d9800517 	ldw	r6,20(sp)
   28004:	d9c00717 	ldw	r7,28(sp)
   28008:	00800c44 	movi	r2,49
   2800c:	31800044 	addi	r6,r6,1
   28010:	d9800515 	stw	r6,20(sp)
   28014:	38800005 	stb	r2,0(r7)
   28018:	003edf06 	br	27b98 <__alt_data_end+0xfffe7b98>
   2801c:	d8000b15 	stw	zero,44(sp)
   28020:	003c9f06 	br	272a0 <__alt_data_end+0xfffe72a0>
   28024:	903e7e1e 	bne	r18,zero,27a20 <__alt_data_end+0xfffe7a20>
   28028:	00800434 	movhi	r2,16
   2802c:	10bfffc4 	addi	r2,r2,-1
   28030:	9884703a 	and	r2,r19,r2
   28034:	1000ea1e 	bne	r2,zero,283e0 <_dtoa_r+0x1460>
   28038:	9cdffc2c 	andhi	r19,r19,32752
   2803c:	9800e826 	beq	r19,zero,283e0 <_dtoa_r+0x1460>
   28040:	d9c00817 	ldw	r7,32(sp)
   28044:	b5800044 	addi	r22,r22,1
   28048:	04c00044 	movi	r19,1
   2804c:	39c00044 	addi	r7,r7,1
   28050:	d9c00815 	stw	r7,32(sp)
   28054:	d8800d17 	ldw	r2,52(sp)
   28058:	103e721e 	bne	r2,zero,27a24 <__alt_data_end+0xfffe7a24>
   2805c:	00800044 	movi	r2,1
   28060:	003e7906 	br	27a48 <__alt_data_end+0xfffe7a48>
   28064:	8009883a 	mov	r4,r16
   28068:	00247a00 	call	247a0 <__floatsidf>
   2806c:	d9800f17 	ldw	r6,60(sp)
   28070:	d9c01017 	ldw	r7,64(sp)
   28074:	1009883a 	mov	r4,r2
   28078:	180b883a 	mov	r5,r3
   2807c:	002370c0 	call	2370c <__muldf3>
   28080:	000d883a 	mov	r6,zero
   28084:	01d00734 	movhi	r7,16412
   28088:	1009883a 	mov	r4,r2
   2808c:	180b883a 	mov	r5,r3
   28090:	00223200 	call	22320 <__adddf3>
   28094:	047f3034 	movhi	r17,64704
   28098:	1021883a 	mov	r16,r2
   2809c:	1c63883a 	add	r17,r3,r17
   280a0:	d9000f17 	ldw	r4,60(sp)
   280a4:	d9401017 	ldw	r5,64(sp)
   280a8:	000d883a 	mov	r6,zero
   280ac:	01d00534 	movhi	r7,16404
   280b0:	0023e240 	call	23e24 <__subdf3>
   280b4:	800d883a 	mov	r6,r16
   280b8:	880f883a 	mov	r7,r17
   280bc:	1009883a 	mov	r4,r2
   280c0:	180b883a 	mov	r5,r3
   280c4:	102b883a 	mov	r21,r2
   280c8:	1829883a 	mov	r20,r3
   280cc:	002353c0 	call	2353c <__gedf2>
   280d0:	00806c16 	blt	zero,r2,28284 <_dtoa_r+0x1304>
   280d4:	89e0003c 	xorhi	r7,r17,32768
   280d8:	800d883a 	mov	r6,r16
   280dc:	a809883a 	mov	r4,r21
   280e0:	a00b883a 	mov	r5,r20
   280e4:	00236180 	call	23618 <__ledf2>
   280e8:	103d7e0e 	bge	r2,zero,276e4 <__alt_data_end+0xfffe76e4>
   280ec:	002b883a 	mov	r21,zero
   280f0:	0023883a 	mov	r17,zero
   280f4:	003efb06 	br	27ce4 <__alt_data_end+0xfffe7ce4>
   280f8:	d8800717 	ldw	r2,28(sp)
   280fc:	003bd006 	br	27040 <__alt_data_end+0xfffe7040>
   28100:	d9000a17 	ldw	r4,40(sp)
   28104:	d9800d17 	ldw	r6,52(sp)
   28108:	dd400a15 	stw	r21,40(sp)
   2810c:	a905c83a 	sub	r2,r21,r4
   28110:	308d883a 	add	r6,r6,r2
   28114:	d9800d15 	stw	r6,52(sp)
   28118:	002b883a 	mov	r21,zero
   2811c:	003e0606 	br	27938 <__alt_data_end+0xfffe7938>
   28120:	9023883a 	mov	r17,r18
   28124:	9829883a 	mov	r20,r19
   28128:	04000084 	movi	r16,2
   2812c:	003c9206 	br	27378 <__alt_data_end+0xfffe7378>
   28130:	04000044 	movi	r16,1
   28134:	dc000c15 	stw	r16,48(sp)
   28138:	dc000615 	stw	r16,24(sp)
   2813c:	dc002215 	stw	r16,136(sp)
   28140:	e0001115 	stw	zero,68(fp)
   28144:	000b883a 	mov	r5,zero
   28148:	003c6906 	br	272f0 <__alt_data_end+0xfffe72f0>
   2814c:	3021883a 	mov	r16,r6
   28150:	003ffb06 	br	28140 <__alt_data_end+0xfffe8140>
   28154:	1000021e 	bne	r2,zero,28160 <_dtoa_r+0x11e0>
   28158:	4200004c 	andi	r8,r8,1
   2815c:	403e7d1e 	bne	r8,zero,27b54 <__alt_data_end+0xfffe7b54>
   28160:	01000c04 	movi	r4,48
   28164:	00000106 	br	2816c <_dtoa_r+0x11ec>
   28168:	102f883a 	mov	r23,r2
   2816c:	b8bfffc4 	addi	r2,r23,-1
   28170:	10c00007 	ldb	r3,0(r2)
   28174:	193ffc26 	beq	r3,r4,28168 <__alt_data_end+0xfffe8168>
   28178:	003e8706 	br	27b98 <__alt_data_end+0xfffe7b98>
   2817c:	d8800517 	ldw	r2,20(sp)
   28180:	00a3c83a 	sub	r17,zero,r2
   28184:	8800a426 	beq	r17,zero,28418 <_dtoa_r+0x1498>
   28188:	888003cc 	andi	r2,r17,15
   2818c:	100490fa 	slli	r2,r2,3
   28190:	00c000f4 	movhi	r3,3
   28194:	18c52404 	addi	r3,r3,5264
   28198:	1885883a 	add	r2,r3,r2
   2819c:	11800017 	ldw	r6,0(r2)
   281a0:	11c00117 	ldw	r7,4(r2)
   281a4:	9009883a 	mov	r4,r18
   281a8:	980b883a 	mov	r5,r19
   281ac:	8823d13a 	srai	r17,r17,4
   281b0:	002370c0 	call	2370c <__muldf3>
   281b4:	d8800f15 	stw	r2,60(sp)
   281b8:	d8c01015 	stw	r3,64(sp)
   281bc:	8800e826 	beq	r17,zero,28560 <_dtoa_r+0x15e0>
   281c0:	050000f4 	movhi	r20,3
   281c4:	a5051a04 	addi	r20,r20,5224
   281c8:	04000084 	movi	r16,2
   281cc:	8980004c 	andi	r6,r17,1
   281d0:	1009883a 	mov	r4,r2
   281d4:	8823d07a 	srai	r17,r17,1
   281d8:	180b883a 	mov	r5,r3
   281dc:	30000426 	beq	r6,zero,281f0 <_dtoa_r+0x1270>
   281e0:	a1800017 	ldw	r6,0(r20)
   281e4:	a1c00117 	ldw	r7,4(r20)
   281e8:	84000044 	addi	r16,r16,1
   281ec:	002370c0 	call	2370c <__muldf3>
   281f0:	a5000204 	addi	r20,r20,8
   281f4:	883ff51e 	bne	r17,zero,281cc <__alt_data_end+0xfffe81cc>
   281f8:	d8800f15 	stw	r2,60(sp)
   281fc:	d8c01015 	stw	r3,64(sp)
   28200:	003c7606 	br	273dc <__alt_data_end+0xfffe73dc>
   28204:	00c00c04 	movi	r3,48
   28208:	10c00005 	stb	r3,0(r2)
   2820c:	d8c00517 	ldw	r3,20(sp)
   28210:	bd3fffc3 	ldbu	r20,-1(r23)
   28214:	18c00044 	addi	r3,r3,1
   28218:	d8c00515 	stw	r3,20(sp)
   2821c:	003db906 	br	27904 <__alt_data_end+0xfffe7904>
   28220:	89400117 	ldw	r5,4(r17)
   28224:	e009883a 	mov	r4,fp
   28228:	002a0040 	call	2a004 <_Balloc>
   2822c:	89800417 	ldw	r6,16(r17)
   28230:	89400304 	addi	r5,r17,12
   28234:	11000304 	addi	r4,r2,12
   28238:	31800084 	addi	r6,r6,2
   2823c:	318d883a 	add	r6,r6,r6
   28240:	318d883a 	add	r6,r6,r6
   28244:	1027883a 	mov	r19,r2
   28248:	0029d940 	call	29d94 <memcpy>
   2824c:	01800044 	movi	r6,1
   28250:	980b883a 	mov	r5,r19
   28254:	e009883a 	mov	r4,fp
   28258:	002a7840 	call	2a784 <__lshift>
   2825c:	1029883a 	mov	r20,r2
   28260:	003ecc06 	br	27d94 <__alt_data_end+0xfffe7d94>
   28264:	00800e44 	movi	r2,57
   28268:	90809026 	beq	r18,r2,284ac <_dtoa_r+0x152c>
   2826c:	92000044 	addi	r8,r18,1
   28270:	003f1f06 	br	27ef0 <__alt_data_end+0xfffe7ef0>
   28274:	9011883a 	mov	r8,r18
   28278:	8825883a 	mov	r18,r17
   2827c:	a023883a 	mov	r17,r20
   28280:	003e2906 	br	27b28 <__alt_data_end+0xfffe7b28>
   28284:	002b883a 	mov	r21,zero
   28288:	0023883a 	mov	r17,zero
   2828c:	003f5406 	br	27fe0 <__alt_data_end+0xfffe7fe0>
   28290:	61bfffc4 	addi	r6,r12,-1
   28294:	300490fa 	slli	r2,r6,3
   28298:	00c000f4 	movhi	r3,3
   2829c:	18c52404 	addi	r3,r3,5264
   282a0:	1885883a 	add	r2,r3,r2
   282a4:	11000017 	ldw	r4,0(r2)
   282a8:	11400117 	ldw	r5,4(r2)
   282ac:	d8800717 	ldw	r2,28(sp)
   282b0:	880f883a 	mov	r7,r17
   282b4:	d9801215 	stw	r6,72(sp)
   282b8:	800d883a 	mov	r6,r16
   282bc:	db001615 	stw	r12,88(sp)
   282c0:	15c00044 	addi	r23,r2,1
   282c4:	002370c0 	call	2370c <__muldf3>
   282c8:	d9401017 	ldw	r5,64(sp)
   282cc:	d9000f17 	ldw	r4,60(sp)
   282d0:	d8c01515 	stw	r3,84(sp)
   282d4:	d8801415 	stw	r2,80(sp)
   282d8:	00247200 	call	24720 <__fixdfsi>
   282dc:	1009883a 	mov	r4,r2
   282e0:	1021883a 	mov	r16,r2
   282e4:	00247a00 	call	247a0 <__floatsidf>
   282e8:	d9000f17 	ldw	r4,60(sp)
   282ec:	d9401017 	ldw	r5,64(sp)
   282f0:	100d883a 	mov	r6,r2
   282f4:	180f883a 	mov	r7,r3
   282f8:	0023e240 	call	23e24 <__subdf3>
   282fc:	1829883a 	mov	r20,r3
   28300:	d8c00717 	ldw	r3,28(sp)
   28304:	84000c04 	addi	r16,r16,48
   28308:	1023883a 	mov	r17,r2
   2830c:	1c000005 	stb	r16,0(r3)
   28310:	db001617 	ldw	r12,88(sp)
   28314:	00800044 	movi	r2,1
   28318:	60802226 	beq	r12,r2,283a4 <_dtoa_r+0x1424>
   2831c:	d9c00717 	ldw	r7,28(sp)
   28320:	8805883a 	mov	r2,r17
   28324:	b82b883a 	mov	r21,r23
   28328:	3b19883a 	add	r12,r7,r12
   2832c:	6023883a 	mov	r17,r12
   28330:	a007883a 	mov	r3,r20
   28334:	dc800f15 	stw	r18,60(sp)
   28338:	000d883a 	mov	r6,zero
   2833c:	01d00934 	movhi	r7,16420
   28340:	1009883a 	mov	r4,r2
   28344:	180b883a 	mov	r5,r3
   28348:	002370c0 	call	2370c <__muldf3>
   2834c:	180b883a 	mov	r5,r3
   28350:	1009883a 	mov	r4,r2
   28354:	1829883a 	mov	r20,r3
   28358:	1025883a 	mov	r18,r2
   2835c:	00247200 	call	24720 <__fixdfsi>
   28360:	1009883a 	mov	r4,r2
   28364:	1021883a 	mov	r16,r2
   28368:	00247a00 	call	247a0 <__floatsidf>
   2836c:	100d883a 	mov	r6,r2
   28370:	180f883a 	mov	r7,r3
   28374:	9009883a 	mov	r4,r18
   28378:	a00b883a 	mov	r5,r20
   2837c:	84000c04 	addi	r16,r16,48
   28380:	0023e240 	call	23e24 <__subdf3>
   28384:	ad400044 	addi	r21,r21,1
   28388:	ac3fffc5 	stb	r16,-1(r21)
   2838c:	ac7fea1e 	bne	r21,r17,28338 <__alt_data_end+0xfffe8338>
   28390:	1023883a 	mov	r17,r2
   28394:	d8801217 	ldw	r2,72(sp)
   28398:	dc800f17 	ldw	r18,60(sp)
   2839c:	1829883a 	mov	r20,r3
   283a0:	b8af883a 	add	r23,r23,r2
   283a4:	d9001417 	ldw	r4,80(sp)
   283a8:	d9401517 	ldw	r5,84(sp)
   283ac:	000d883a 	mov	r6,zero
   283b0:	01cff834 	movhi	r7,16352
   283b4:	00223200 	call	22320 <__adddf3>
   283b8:	880d883a 	mov	r6,r17
   283bc:	a00f883a 	mov	r7,r20
   283c0:	1009883a 	mov	r4,r2
   283c4:	180b883a 	mov	r5,r3
   283c8:	00236180 	call	23618 <__ledf2>
   283cc:	10003e0e 	bge	r2,zero,284c8 <_dtoa_r+0x1548>
   283d0:	d9001317 	ldw	r4,76(sp)
   283d4:	bd3fffc3 	ldbu	r20,-1(r23)
   283d8:	d9000515 	stw	r4,20(sp)
   283dc:	003d3b06 	br	278cc <__alt_data_end+0xfffe78cc>
   283e0:	0027883a 	mov	r19,zero
   283e4:	003f1b06 	br	28054 <__alt_data_end+0xfffe8054>
   283e8:	d8800817 	ldw	r2,32(sp)
   283ec:	11e9c83a 	sub	r20,r2,r7
   283f0:	0005883a 	mov	r2,zero
   283f4:	003d5406 	br	27948 <__alt_data_end+0xfffe7948>
   283f8:	00800044 	movi	r2,1
   283fc:	003dc706 	br	27b1c <__alt_data_end+0xfffe7b1c>
   28400:	d8c00217 	ldw	r3,8(sp)
   28404:	00800d84 	movi	r2,54
   28408:	dd400a17 	ldw	r21,40(sp)
   2840c:	10c5c83a 	sub	r2,r2,r3
   28410:	dd000817 	ldw	r20,32(sp)
   28414:	003d4c06 	br	27948 <__alt_data_end+0xfffe7948>
   28418:	dc800f15 	stw	r18,60(sp)
   2841c:	dcc01015 	stw	r19,64(sp)
   28420:	04000084 	movi	r16,2
   28424:	003bed06 	br	273dc <__alt_data_end+0xfffe73dc>
   28428:	d9000617 	ldw	r4,24(sp)
   2842c:	203f0d26 	beq	r4,zero,28064 <__alt_data_end+0xfffe8064>
   28430:	d9800c17 	ldw	r6,48(sp)
   28434:	01bcab0e 	bge	zero,r6,276e4 <__alt_data_end+0xfffe76e4>
   28438:	d9401017 	ldw	r5,64(sp)
   2843c:	d9000f17 	ldw	r4,60(sp)
   28440:	000d883a 	mov	r6,zero
   28444:	01d00934 	movhi	r7,16420
   28448:	002370c0 	call	2370c <__muldf3>
   2844c:	81000044 	addi	r4,r16,1
   28450:	d8800f15 	stw	r2,60(sp)
   28454:	d8c01015 	stw	r3,64(sp)
   28458:	00247a00 	call	247a0 <__floatsidf>
   2845c:	d9800f17 	ldw	r6,60(sp)
   28460:	d9c01017 	ldw	r7,64(sp)
   28464:	1009883a 	mov	r4,r2
   28468:	180b883a 	mov	r5,r3
   2846c:	002370c0 	call	2370c <__muldf3>
   28470:	01d00734 	movhi	r7,16412
   28474:	000d883a 	mov	r6,zero
   28478:	1009883a 	mov	r4,r2
   2847c:	180b883a 	mov	r5,r3
   28480:	00223200 	call	22320 <__adddf3>
   28484:	d9c00517 	ldw	r7,20(sp)
   28488:	047f3034 	movhi	r17,64704
   2848c:	1021883a 	mov	r16,r2
   28490:	39ffffc4 	addi	r7,r7,-1
   28494:	d9c01315 	stw	r7,76(sp)
   28498:	1c63883a 	add	r17,r3,r17
   2849c:	db000c17 	ldw	r12,48(sp)
   284a0:	003bea06 	br	2744c <__alt_data_end+0xfffe744c>
   284a4:	dc000915 	stw	r16,36(sp)
   284a8:	003e0e06 	br	27ce4 <__alt_data_end+0xfffe7ce4>
   284ac:	01000e44 	movi	r4,57
   284b0:	8825883a 	mov	r18,r17
   284b4:	9dc00044 	addi	r23,r19,1
   284b8:	99000005 	stb	r4,0(r19)
   284bc:	a023883a 	mov	r17,r20
   284c0:	dc000915 	stw	r16,36(sp)
   284c4:	003da406 	br	27b58 <__alt_data_end+0xfffe7b58>
   284c8:	d9801417 	ldw	r6,80(sp)
   284cc:	d9c01517 	ldw	r7,84(sp)
   284d0:	0009883a 	mov	r4,zero
   284d4:	014ff834 	movhi	r5,16352
   284d8:	0023e240 	call	23e24 <__subdf3>
   284dc:	880d883a 	mov	r6,r17
   284e0:	a00f883a 	mov	r7,r20
   284e4:	1009883a 	mov	r4,r2
   284e8:	180b883a 	mov	r5,r3
   284ec:	002353c0 	call	2353c <__gedf2>
   284f0:	00bc7c0e 	bge	zero,r2,276e4 <__alt_data_end+0xfffe76e4>
   284f4:	01000c04 	movi	r4,48
   284f8:	00000106 	br	28500 <_dtoa_r+0x1580>
   284fc:	102f883a 	mov	r23,r2
   28500:	b8bfffc4 	addi	r2,r23,-1
   28504:	10c00007 	ldb	r3,0(r2)
   28508:	193ffc26 	beq	r3,r4,284fc <__alt_data_end+0xfffe84fc>
   2850c:	d9801317 	ldw	r6,76(sp)
   28510:	d9800515 	stw	r6,20(sp)
   28514:	003c4406 	br	27628 <__alt_data_end+0xfffe7628>
   28518:	d9801317 	ldw	r6,76(sp)
   2851c:	d9800515 	stw	r6,20(sp)
   28520:	003cea06 	br	278cc <__alt_data_end+0xfffe78cc>
   28524:	dd800f17 	ldw	r22,60(sp)
   28528:	dcc01017 	ldw	r19,64(sp)
   2852c:	dc801217 	ldw	r18,72(sp)
   28530:	003c6c06 	br	276e4 <__alt_data_end+0xfffe76e4>
   28534:	903e031e 	bne	r18,zero,27d44 <__alt_data_end+0xfffe7d44>
   28538:	003ebb06 	br	28028 <__alt_data_end+0xfffe8028>
   2853c:	103e6c1e 	bne	r2,zero,27ef0 <__alt_data_end+0xfffe7ef0>
   28540:	4080004c 	andi	r2,r8,1
   28544:	103e6a26 	beq	r2,zero,27ef0 <__alt_data_end+0xfffe7ef0>
   28548:	003e6606 	br	27ee4 <__alt_data_end+0xfffe7ee4>
   2854c:	d8c00317 	ldw	r3,12(sp)
   28550:	00800084 	movi	r2,2
   28554:	10c02916 	blt	r2,r3,285fc <_dtoa_r+0x167c>
   28558:	d9000c17 	ldw	r4,48(sp)
   2855c:	003e8806 	br	27f80 <__alt_data_end+0xfffe7f80>
   28560:	04000084 	movi	r16,2
   28564:	003b9d06 	br	273dc <__alt_data_end+0xfffe73dc>
   28568:	d9001317 	ldw	r4,76(sp)
   2856c:	d9000515 	stw	r4,20(sp)
   28570:	003cd606 	br	278cc <__alt_data_end+0xfffe78cc>
   28574:	d8801317 	ldw	r2,76(sp)
   28578:	d8800515 	stw	r2,20(sp)
   2857c:	003c2a06 	br	27628 <__alt_data_end+0xfffe7628>
   28580:	d9800317 	ldw	r6,12(sp)
   28584:	00800084 	movi	r2,2
   28588:	11801516 	blt	r2,r6,285e0 <_dtoa_r+0x1660>
   2858c:	d9c00c17 	ldw	r7,48(sp)
   28590:	d9c00615 	stw	r7,24(sp)
   28594:	003df706 	br	27d74 <__alt_data_end+0xfffe7d74>
   28598:	193d3926 	beq	r3,r4,27a80 <__alt_data_end+0xfffe7a80>
   2859c:	00c00f04 	movi	r3,60
   285a0:	1885c83a 	sub	r2,r3,r2
   285a4:	003ddf06 	br	27d24 <__alt_data_end+0xfffe7d24>
   285a8:	e009883a 	mov	r4,fp
   285ac:	e0001115 	stw	zero,68(fp)
   285b0:	000b883a 	mov	r5,zero
   285b4:	002a0040 	call	2a004 <_Balloc>
   285b8:	d8800715 	stw	r2,28(sp)
   285bc:	d8c00717 	ldw	r3,28(sp)
   285c0:	00bfffc4 	movi	r2,-1
   285c4:	01000044 	movi	r4,1
   285c8:	d8800c15 	stw	r2,48(sp)
   285cc:	e0c01015 	stw	r3,64(fp)
   285d0:	d9000b15 	stw	r4,44(sp)
   285d4:	d8800615 	stw	r2,24(sp)
   285d8:	d8002215 	stw	zero,136(sp)
   285dc:	003c4106 	br	276e4 <__alt_data_end+0xfffe76e4>
   285e0:	d8c00c17 	ldw	r3,48(sp)
   285e4:	d8c00615 	stw	r3,24(sp)
   285e8:	003e7006 	br	27fac <__alt_data_end+0xfffe7fac>
   285ec:	04400044 	movi	r17,1
   285f0:	003b2006 	br	27274 <__alt_data_end+0xfffe7274>
   285f4:	000b883a 	mov	r5,zero
   285f8:	003b3d06 	br	272f0 <__alt_data_end+0xfffe72f0>
   285fc:	d8800c17 	ldw	r2,48(sp)
   28600:	d8800615 	stw	r2,24(sp)
   28604:	003e6906 	br	27fac <__alt_data_end+0xfffe7fac>

00028608 <__sflush_r>:
   28608:	2880030b 	ldhu	r2,12(r5)
   2860c:	defffb04 	addi	sp,sp,-20
   28610:	dcc00315 	stw	r19,12(sp)
   28614:	dc400115 	stw	r17,4(sp)
   28618:	dfc00415 	stw	ra,16(sp)
   2861c:	dc800215 	stw	r18,8(sp)
   28620:	dc000015 	stw	r16,0(sp)
   28624:	10c0020c 	andi	r3,r2,8
   28628:	2823883a 	mov	r17,r5
   2862c:	2027883a 	mov	r19,r4
   28630:	1800311e 	bne	r3,zero,286f8 <__sflush_r+0xf0>
   28634:	28c00117 	ldw	r3,4(r5)
   28638:	10820014 	ori	r2,r2,2048
   2863c:	2880030d 	sth	r2,12(r5)
   28640:	00c04b0e 	bge	zero,r3,28770 <__sflush_r+0x168>
   28644:	8a000a17 	ldw	r8,40(r17)
   28648:	40002326 	beq	r8,zero,286d8 <__sflush_r+0xd0>
   2864c:	9c000017 	ldw	r16,0(r19)
   28650:	10c4000c 	andi	r3,r2,4096
   28654:	98000015 	stw	zero,0(r19)
   28658:	18004826 	beq	r3,zero,2877c <__sflush_r+0x174>
   2865c:	89801417 	ldw	r6,80(r17)
   28660:	10c0010c 	andi	r3,r2,4
   28664:	18000626 	beq	r3,zero,28680 <__sflush_r+0x78>
   28668:	88c00117 	ldw	r3,4(r17)
   2866c:	88800c17 	ldw	r2,48(r17)
   28670:	30cdc83a 	sub	r6,r6,r3
   28674:	10000226 	beq	r2,zero,28680 <__sflush_r+0x78>
   28678:	88800f17 	ldw	r2,60(r17)
   2867c:	308dc83a 	sub	r6,r6,r2
   28680:	89400717 	ldw	r5,28(r17)
   28684:	000f883a 	mov	r7,zero
   28688:	9809883a 	mov	r4,r19
   2868c:	403ee83a 	callr	r8
   28690:	00ffffc4 	movi	r3,-1
   28694:	10c04426 	beq	r2,r3,287a8 <__sflush_r+0x1a0>
   28698:	88c0030b 	ldhu	r3,12(r17)
   2869c:	89000417 	ldw	r4,16(r17)
   286a0:	88000115 	stw	zero,4(r17)
   286a4:	197dffcc 	andi	r5,r3,63487
   286a8:	8940030d 	sth	r5,12(r17)
   286ac:	89000015 	stw	r4,0(r17)
   286b0:	18c4000c 	andi	r3,r3,4096
   286b4:	18002c1e 	bne	r3,zero,28768 <__sflush_r+0x160>
   286b8:	89400c17 	ldw	r5,48(r17)
   286bc:	9c000015 	stw	r16,0(r19)
   286c0:	28000526 	beq	r5,zero,286d8 <__sflush_r+0xd0>
   286c4:	88801004 	addi	r2,r17,64
   286c8:	28800226 	beq	r5,r2,286d4 <__sflush_r+0xcc>
   286cc:	9809883a 	mov	r4,r19
   286d0:	0028d740 	call	28d74 <_free_r>
   286d4:	88000c15 	stw	zero,48(r17)
   286d8:	0005883a 	mov	r2,zero
   286dc:	dfc00417 	ldw	ra,16(sp)
   286e0:	dcc00317 	ldw	r19,12(sp)
   286e4:	dc800217 	ldw	r18,8(sp)
   286e8:	dc400117 	ldw	r17,4(sp)
   286ec:	dc000017 	ldw	r16,0(sp)
   286f0:	dec00504 	addi	sp,sp,20
   286f4:	f800283a 	ret
   286f8:	2c800417 	ldw	r18,16(r5)
   286fc:	903ff626 	beq	r18,zero,286d8 <__alt_data_end+0xfffe86d8>
   28700:	2c000017 	ldw	r16,0(r5)
   28704:	108000cc 	andi	r2,r2,3
   28708:	2c800015 	stw	r18,0(r5)
   2870c:	84a1c83a 	sub	r16,r16,r18
   28710:	1000131e 	bne	r2,zero,28760 <__sflush_r+0x158>
   28714:	28800517 	ldw	r2,20(r5)
   28718:	88800215 	stw	r2,8(r17)
   2871c:	04000316 	blt	zero,r16,2872c <__sflush_r+0x124>
   28720:	003fed06 	br	286d8 <__alt_data_end+0xfffe86d8>
   28724:	90a5883a 	add	r18,r18,r2
   28728:	043feb0e 	bge	zero,r16,286d8 <__alt_data_end+0xfffe86d8>
   2872c:	88800917 	ldw	r2,36(r17)
   28730:	89400717 	ldw	r5,28(r17)
   28734:	800f883a 	mov	r7,r16
   28738:	900d883a 	mov	r6,r18
   2873c:	9809883a 	mov	r4,r19
   28740:	103ee83a 	callr	r2
   28744:	80a1c83a 	sub	r16,r16,r2
   28748:	00bff616 	blt	zero,r2,28724 <__alt_data_end+0xfffe8724>
   2874c:	88c0030b 	ldhu	r3,12(r17)
   28750:	00bfffc4 	movi	r2,-1
   28754:	18c01014 	ori	r3,r3,64
   28758:	88c0030d 	sth	r3,12(r17)
   2875c:	003fdf06 	br	286dc <__alt_data_end+0xfffe86dc>
   28760:	0005883a 	mov	r2,zero
   28764:	003fec06 	br	28718 <__alt_data_end+0xfffe8718>
   28768:	88801415 	stw	r2,80(r17)
   2876c:	003fd206 	br	286b8 <__alt_data_end+0xfffe86b8>
   28770:	28c00f17 	ldw	r3,60(r5)
   28774:	00ffb316 	blt	zero,r3,28644 <__alt_data_end+0xfffe8644>
   28778:	003fd706 	br	286d8 <__alt_data_end+0xfffe86d8>
   2877c:	89400717 	ldw	r5,28(r17)
   28780:	000d883a 	mov	r6,zero
   28784:	01c00044 	movi	r7,1
   28788:	9809883a 	mov	r4,r19
   2878c:	403ee83a 	callr	r8
   28790:	100d883a 	mov	r6,r2
   28794:	00bfffc4 	movi	r2,-1
   28798:	30801426 	beq	r6,r2,287ec <__sflush_r+0x1e4>
   2879c:	8880030b 	ldhu	r2,12(r17)
   287a0:	8a000a17 	ldw	r8,40(r17)
   287a4:	003fae06 	br	28660 <__alt_data_end+0xfffe8660>
   287a8:	98c00017 	ldw	r3,0(r19)
   287ac:	183fba26 	beq	r3,zero,28698 <__alt_data_end+0xfffe8698>
   287b0:	01000744 	movi	r4,29
   287b4:	19000626 	beq	r3,r4,287d0 <__sflush_r+0x1c8>
   287b8:	01000584 	movi	r4,22
   287bc:	19000426 	beq	r3,r4,287d0 <__sflush_r+0x1c8>
   287c0:	88c0030b 	ldhu	r3,12(r17)
   287c4:	18c01014 	ori	r3,r3,64
   287c8:	88c0030d 	sth	r3,12(r17)
   287cc:	003fc306 	br	286dc <__alt_data_end+0xfffe86dc>
   287d0:	8880030b 	ldhu	r2,12(r17)
   287d4:	88c00417 	ldw	r3,16(r17)
   287d8:	88000115 	stw	zero,4(r17)
   287dc:	10bdffcc 	andi	r2,r2,63487
   287e0:	8880030d 	sth	r2,12(r17)
   287e4:	88c00015 	stw	r3,0(r17)
   287e8:	003fb306 	br	286b8 <__alt_data_end+0xfffe86b8>
   287ec:	98800017 	ldw	r2,0(r19)
   287f0:	103fea26 	beq	r2,zero,2879c <__alt_data_end+0xfffe879c>
   287f4:	00c00744 	movi	r3,29
   287f8:	10c00226 	beq	r2,r3,28804 <__sflush_r+0x1fc>
   287fc:	00c00584 	movi	r3,22
   28800:	10c0031e 	bne	r2,r3,28810 <__sflush_r+0x208>
   28804:	9c000015 	stw	r16,0(r19)
   28808:	0005883a 	mov	r2,zero
   2880c:	003fb306 	br	286dc <__alt_data_end+0xfffe86dc>
   28810:	88c0030b 	ldhu	r3,12(r17)
   28814:	3005883a 	mov	r2,r6
   28818:	18c01014 	ori	r3,r3,64
   2881c:	88c0030d 	sth	r3,12(r17)
   28820:	003fae06 	br	286dc <__alt_data_end+0xfffe86dc>

00028824 <_fflush_r>:
   28824:	defffd04 	addi	sp,sp,-12
   28828:	dc000115 	stw	r16,4(sp)
   2882c:	dfc00215 	stw	ra,8(sp)
   28830:	2021883a 	mov	r16,r4
   28834:	20000226 	beq	r4,zero,28840 <_fflush_r+0x1c>
   28838:	20800e17 	ldw	r2,56(r4)
   2883c:	10000c26 	beq	r2,zero,28870 <_fflush_r+0x4c>
   28840:	2880030f 	ldh	r2,12(r5)
   28844:	1000051e 	bne	r2,zero,2885c <_fflush_r+0x38>
   28848:	0005883a 	mov	r2,zero
   2884c:	dfc00217 	ldw	ra,8(sp)
   28850:	dc000117 	ldw	r16,4(sp)
   28854:	dec00304 	addi	sp,sp,12
   28858:	f800283a 	ret
   2885c:	8009883a 	mov	r4,r16
   28860:	dfc00217 	ldw	ra,8(sp)
   28864:	dc000117 	ldw	r16,4(sp)
   28868:	dec00304 	addi	sp,sp,12
   2886c:	00286081 	jmpi	28608 <__sflush_r>
   28870:	d9400015 	stw	r5,0(sp)
   28874:	0028c000 	call	28c00 <__sinit>
   28878:	d9400017 	ldw	r5,0(sp)
   2887c:	003ff006 	br	28840 <__alt_data_end+0xfffe8840>

00028880 <fflush>:
   28880:	20000526 	beq	r4,zero,28898 <fflush+0x18>
   28884:	008000f4 	movhi	r2,3
   28888:	108c1804 	addi	r2,r2,12384
   2888c:	200b883a 	mov	r5,r4
   28890:	11000017 	ldw	r4,0(r2)
   28894:	00288241 	jmpi	28824 <_fflush_r>
   28898:	008000f4 	movhi	r2,3
   2889c:	108c1704 	addi	r2,r2,12380
   288a0:	11000017 	ldw	r4,0(r2)
   288a4:	014000f4 	movhi	r5,3
   288a8:	29620904 	addi	r5,r5,-30684
   288ac:	00291481 	jmpi	29148 <_fwalk_reent>

000288b0 <__fp_unlock>:
   288b0:	0005883a 	mov	r2,zero
   288b4:	f800283a 	ret

000288b8 <_cleanup_r>:
   288b8:	014000f4 	movhi	r5,3
   288bc:	2972b104 	addi	r5,r5,-13628
   288c0:	00291481 	jmpi	29148 <_fwalk_reent>

000288c4 <__sinit.part.1>:
   288c4:	defff704 	addi	sp,sp,-36
   288c8:	00c000f4 	movhi	r3,3
   288cc:	dfc00815 	stw	ra,32(sp)
   288d0:	ddc00715 	stw	r23,28(sp)
   288d4:	dd800615 	stw	r22,24(sp)
   288d8:	dd400515 	stw	r21,20(sp)
   288dc:	dd000415 	stw	r20,16(sp)
   288e0:	dcc00315 	stw	r19,12(sp)
   288e4:	dc800215 	stw	r18,8(sp)
   288e8:	dc400115 	stw	r17,4(sp)
   288ec:	dc000015 	stw	r16,0(sp)
   288f0:	18e22e04 	addi	r3,r3,-30536
   288f4:	24000117 	ldw	r16,4(r4)
   288f8:	20c00f15 	stw	r3,60(r4)
   288fc:	2080bb04 	addi	r2,r4,748
   28900:	00c000c4 	movi	r3,3
   28904:	20c0b915 	stw	r3,740(r4)
   28908:	2080ba15 	stw	r2,744(r4)
   2890c:	2000b815 	stw	zero,736(r4)
   28910:	05c00204 	movi	r23,8
   28914:	00800104 	movi	r2,4
   28918:	2025883a 	mov	r18,r4
   2891c:	b80d883a 	mov	r6,r23
   28920:	81001704 	addi	r4,r16,92
   28924:	000b883a 	mov	r5,zero
   28928:	80000015 	stw	zero,0(r16)
   2892c:	80000115 	stw	zero,4(r16)
   28930:	80000215 	stw	zero,8(r16)
   28934:	8080030d 	sth	r2,12(r16)
   28938:	80001915 	stw	zero,100(r16)
   2893c:	8000038d 	sth	zero,14(r16)
   28940:	80000415 	stw	zero,16(r16)
   28944:	80000515 	stw	zero,20(r16)
   28948:	80000615 	stw	zero,24(r16)
   2894c:	0029edc0 	call	29edc <memset>
   28950:	058000f4 	movhi	r22,3
   28954:	94400217 	ldw	r17,8(r18)
   28958:	054000f4 	movhi	r21,3
   2895c:	050000f4 	movhi	r20,3
   28960:	04c000f4 	movhi	r19,3
   28964:	b5ac1504 	addi	r22,r22,-20396
   28968:	ad6c2c04 	addi	r21,r21,-20304
   2896c:	a52c4b04 	addi	r20,r20,-20180
   28970:	9cec6204 	addi	r19,r19,-20088
   28974:	85800815 	stw	r22,32(r16)
   28978:	85400915 	stw	r21,36(r16)
   2897c:	85000a15 	stw	r20,40(r16)
   28980:	84c00b15 	stw	r19,44(r16)
   28984:	84000715 	stw	r16,28(r16)
   28988:	00800284 	movi	r2,10
   2898c:	8880030d 	sth	r2,12(r17)
   28990:	00800044 	movi	r2,1
   28994:	b80d883a 	mov	r6,r23
   28998:	89001704 	addi	r4,r17,92
   2899c:	000b883a 	mov	r5,zero
   289a0:	88000015 	stw	zero,0(r17)
   289a4:	88000115 	stw	zero,4(r17)
   289a8:	88000215 	stw	zero,8(r17)
   289ac:	88001915 	stw	zero,100(r17)
   289b0:	8880038d 	sth	r2,14(r17)
   289b4:	88000415 	stw	zero,16(r17)
   289b8:	88000515 	stw	zero,20(r17)
   289bc:	88000615 	stw	zero,24(r17)
   289c0:	0029edc0 	call	29edc <memset>
   289c4:	94000317 	ldw	r16,12(r18)
   289c8:	00800484 	movi	r2,18
   289cc:	8c400715 	stw	r17,28(r17)
   289d0:	8d800815 	stw	r22,32(r17)
   289d4:	8d400915 	stw	r21,36(r17)
   289d8:	8d000a15 	stw	r20,40(r17)
   289dc:	8cc00b15 	stw	r19,44(r17)
   289e0:	8080030d 	sth	r2,12(r16)
   289e4:	00800084 	movi	r2,2
   289e8:	80000015 	stw	zero,0(r16)
   289ec:	80000115 	stw	zero,4(r16)
   289f0:	80000215 	stw	zero,8(r16)
   289f4:	80001915 	stw	zero,100(r16)
   289f8:	8080038d 	sth	r2,14(r16)
   289fc:	80000415 	stw	zero,16(r16)
   28a00:	80000515 	stw	zero,20(r16)
   28a04:	80000615 	stw	zero,24(r16)
   28a08:	b80d883a 	mov	r6,r23
   28a0c:	000b883a 	mov	r5,zero
   28a10:	81001704 	addi	r4,r16,92
   28a14:	0029edc0 	call	29edc <memset>
   28a18:	00800044 	movi	r2,1
   28a1c:	84000715 	stw	r16,28(r16)
   28a20:	85800815 	stw	r22,32(r16)
   28a24:	85400915 	stw	r21,36(r16)
   28a28:	85000a15 	stw	r20,40(r16)
   28a2c:	84c00b15 	stw	r19,44(r16)
   28a30:	90800e15 	stw	r2,56(r18)
   28a34:	dfc00817 	ldw	ra,32(sp)
   28a38:	ddc00717 	ldw	r23,28(sp)
   28a3c:	dd800617 	ldw	r22,24(sp)
   28a40:	dd400517 	ldw	r21,20(sp)
   28a44:	dd000417 	ldw	r20,16(sp)
   28a48:	dcc00317 	ldw	r19,12(sp)
   28a4c:	dc800217 	ldw	r18,8(sp)
   28a50:	dc400117 	ldw	r17,4(sp)
   28a54:	dc000017 	ldw	r16,0(sp)
   28a58:	dec00904 	addi	sp,sp,36
   28a5c:	f800283a 	ret

00028a60 <__fp_lock>:
   28a60:	0005883a 	mov	r2,zero
   28a64:	f800283a 	ret

00028a68 <__sfmoreglue>:
   28a68:	defffc04 	addi	sp,sp,-16
   28a6c:	dc400115 	stw	r17,4(sp)
   28a70:	2c7fffc4 	addi	r17,r5,-1
   28a74:	8c401a24 	muli	r17,r17,104
   28a78:	dc800215 	stw	r18,8(sp)
   28a7c:	2825883a 	mov	r18,r5
   28a80:	89401d04 	addi	r5,r17,116
   28a84:	dc000015 	stw	r16,0(sp)
   28a88:	dfc00315 	stw	ra,12(sp)
   28a8c:	00294a40 	call	294a4 <_malloc_r>
   28a90:	1021883a 	mov	r16,r2
   28a94:	10000726 	beq	r2,zero,28ab4 <__sfmoreglue+0x4c>
   28a98:	11000304 	addi	r4,r2,12
   28a9c:	10000015 	stw	zero,0(r2)
   28aa0:	14800115 	stw	r18,4(r2)
   28aa4:	11000215 	stw	r4,8(r2)
   28aa8:	89801a04 	addi	r6,r17,104
   28aac:	000b883a 	mov	r5,zero
   28ab0:	0029edc0 	call	29edc <memset>
   28ab4:	8005883a 	mov	r2,r16
   28ab8:	dfc00317 	ldw	ra,12(sp)
   28abc:	dc800217 	ldw	r18,8(sp)
   28ac0:	dc400117 	ldw	r17,4(sp)
   28ac4:	dc000017 	ldw	r16,0(sp)
   28ac8:	dec00404 	addi	sp,sp,16
   28acc:	f800283a 	ret

00028ad0 <__sfp>:
   28ad0:	defffb04 	addi	sp,sp,-20
   28ad4:	dc000015 	stw	r16,0(sp)
   28ad8:	040000f4 	movhi	r16,3
   28adc:	840c1704 	addi	r16,r16,12380
   28ae0:	dcc00315 	stw	r19,12(sp)
   28ae4:	2027883a 	mov	r19,r4
   28ae8:	81000017 	ldw	r4,0(r16)
   28aec:	dfc00415 	stw	ra,16(sp)
   28af0:	dc800215 	stw	r18,8(sp)
   28af4:	20800e17 	ldw	r2,56(r4)
   28af8:	dc400115 	stw	r17,4(sp)
   28afc:	1000021e 	bne	r2,zero,28b08 <__sfp+0x38>
   28b00:	00288c40 	call	288c4 <__sinit.part.1>
   28b04:	81000017 	ldw	r4,0(r16)
   28b08:	2480b804 	addi	r18,r4,736
   28b0c:	047fffc4 	movi	r17,-1
   28b10:	91000117 	ldw	r4,4(r18)
   28b14:	94000217 	ldw	r16,8(r18)
   28b18:	213fffc4 	addi	r4,r4,-1
   28b1c:	20000a16 	blt	r4,zero,28b48 <__sfp+0x78>
   28b20:	8080030f 	ldh	r2,12(r16)
   28b24:	10000c26 	beq	r2,zero,28b58 <__sfp+0x88>
   28b28:	80c01d04 	addi	r3,r16,116
   28b2c:	00000206 	br	28b38 <__sfp+0x68>
   28b30:	18bfe60f 	ldh	r2,-104(r3)
   28b34:	10000826 	beq	r2,zero,28b58 <__sfp+0x88>
   28b38:	213fffc4 	addi	r4,r4,-1
   28b3c:	1c3ffd04 	addi	r16,r3,-12
   28b40:	18c01a04 	addi	r3,r3,104
   28b44:	247ffa1e 	bne	r4,r17,28b30 <__alt_data_end+0xfffe8b30>
   28b48:	90800017 	ldw	r2,0(r18)
   28b4c:	10001d26 	beq	r2,zero,28bc4 <__sfp+0xf4>
   28b50:	1025883a 	mov	r18,r2
   28b54:	003fee06 	br	28b10 <__alt_data_end+0xfffe8b10>
   28b58:	00bfffc4 	movi	r2,-1
   28b5c:	8080038d 	sth	r2,14(r16)
   28b60:	00800044 	movi	r2,1
   28b64:	8080030d 	sth	r2,12(r16)
   28b68:	80001915 	stw	zero,100(r16)
   28b6c:	80000015 	stw	zero,0(r16)
   28b70:	80000215 	stw	zero,8(r16)
   28b74:	80000115 	stw	zero,4(r16)
   28b78:	80000415 	stw	zero,16(r16)
   28b7c:	80000515 	stw	zero,20(r16)
   28b80:	80000615 	stw	zero,24(r16)
   28b84:	01800204 	movi	r6,8
   28b88:	000b883a 	mov	r5,zero
   28b8c:	81001704 	addi	r4,r16,92
   28b90:	0029edc0 	call	29edc <memset>
   28b94:	8005883a 	mov	r2,r16
   28b98:	80000c15 	stw	zero,48(r16)
   28b9c:	80000d15 	stw	zero,52(r16)
   28ba0:	80001115 	stw	zero,68(r16)
   28ba4:	80001215 	stw	zero,72(r16)
   28ba8:	dfc00417 	ldw	ra,16(sp)
   28bac:	dcc00317 	ldw	r19,12(sp)
   28bb0:	dc800217 	ldw	r18,8(sp)
   28bb4:	dc400117 	ldw	r17,4(sp)
   28bb8:	dc000017 	ldw	r16,0(sp)
   28bbc:	dec00504 	addi	sp,sp,20
   28bc0:	f800283a 	ret
   28bc4:	01400104 	movi	r5,4
   28bc8:	9809883a 	mov	r4,r19
   28bcc:	0028a680 	call	28a68 <__sfmoreglue>
   28bd0:	90800015 	stw	r2,0(r18)
   28bd4:	103fde1e 	bne	r2,zero,28b50 <__alt_data_end+0xfffe8b50>
   28bd8:	00800304 	movi	r2,12
   28bdc:	98800015 	stw	r2,0(r19)
   28be0:	0005883a 	mov	r2,zero
   28be4:	003ff006 	br	28ba8 <__alt_data_end+0xfffe8ba8>

00028be8 <_cleanup>:
   28be8:	008000f4 	movhi	r2,3
   28bec:	108c1704 	addi	r2,r2,12380
   28bf0:	11000017 	ldw	r4,0(r2)
   28bf4:	014000f4 	movhi	r5,3
   28bf8:	2972b104 	addi	r5,r5,-13628
   28bfc:	00291481 	jmpi	29148 <_fwalk_reent>

00028c00 <__sinit>:
   28c00:	20800e17 	ldw	r2,56(r4)
   28c04:	10000126 	beq	r2,zero,28c0c <__sinit+0xc>
   28c08:	f800283a 	ret
   28c0c:	00288c41 	jmpi	288c4 <__sinit.part.1>

00028c10 <__sfp_lock_acquire>:
   28c10:	f800283a 	ret

00028c14 <__sfp_lock_release>:
   28c14:	f800283a 	ret

00028c18 <__sinit_lock_acquire>:
   28c18:	f800283a 	ret

00028c1c <__sinit_lock_release>:
   28c1c:	f800283a 	ret

00028c20 <__fp_lock_all>:
   28c20:	008000f4 	movhi	r2,3
   28c24:	108c1804 	addi	r2,r2,12384
   28c28:	11000017 	ldw	r4,0(r2)
   28c2c:	014000f4 	movhi	r5,3
   28c30:	29629804 	addi	r5,r5,-30112
   28c34:	00290841 	jmpi	29084 <_fwalk>

00028c38 <__fp_unlock_all>:
   28c38:	008000f4 	movhi	r2,3
   28c3c:	108c1804 	addi	r2,r2,12384
   28c40:	11000017 	ldw	r4,0(r2)
   28c44:	014000f4 	movhi	r5,3
   28c48:	29622c04 	addi	r5,r5,-30544
   28c4c:	00290841 	jmpi	29084 <_fwalk>

00028c50 <_malloc_trim_r>:
   28c50:	defffb04 	addi	sp,sp,-20
   28c54:	dcc00315 	stw	r19,12(sp)
   28c58:	04c000f4 	movhi	r19,3
   28c5c:	dc800215 	stw	r18,8(sp)
   28c60:	dc400115 	stw	r17,4(sp)
   28c64:	dc000015 	stw	r16,0(sp)
   28c68:	dfc00415 	stw	ra,16(sp)
   28c6c:	2821883a 	mov	r16,r5
   28c70:	9cc69204 	addi	r19,r19,6728
   28c74:	2025883a 	mov	r18,r4
   28c78:	002eed00 	call	2eed0 <__malloc_lock>
   28c7c:	98800217 	ldw	r2,8(r19)
   28c80:	14400117 	ldw	r17,4(r2)
   28c84:	00bfff04 	movi	r2,-4
   28c88:	88a2703a 	and	r17,r17,r2
   28c8c:	8c21c83a 	sub	r16,r17,r16
   28c90:	8403fbc4 	addi	r16,r16,4079
   28c94:	8020d33a 	srli	r16,r16,12
   28c98:	0083ffc4 	movi	r2,4095
   28c9c:	843fffc4 	addi	r16,r16,-1
   28ca0:	8020933a 	slli	r16,r16,12
   28ca4:	1400060e 	bge	r2,r16,28cc0 <_malloc_trim_r+0x70>
   28ca8:	000b883a 	mov	r5,zero
   28cac:	9009883a 	mov	r4,r18
   28cb0:	002b0000 	call	2b000 <_sbrk_r>
   28cb4:	98c00217 	ldw	r3,8(r19)
   28cb8:	1c47883a 	add	r3,r3,r17
   28cbc:	10c00a26 	beq	r2,r3,28ce8 <_malloc_trim_r+0x98>
   28cc0:	9009883a 	mov	r4,r18
   28cc4:	002eef40 	call	2eef4 <__malloc_unlock>
   28cc8:	0005883a 	mov	r2,zero
   28ccc:	dfc00417 	ldw	ra,16(sp)
   28cd0:	dcc00317 	ldw	r19,12(sp)
   28cd4:	dc800217 	ldw	r18,8(sp)
   28cd8:	dc400117 	ldw	r17,4(sp)
   28cdc:	dc000017 	ldw	r16,0(sp)
   28ce0:	dec00504 	addi	sp,sp,20
   28ce4:	f800283a 	ret
   28ce8:	040bc83a 	sub	r5,zero,r16
   28cec:	9009883a 	mov	r4,r18
   28cf0:	002b0000 	call	2b000 <_sbrk_r>
   28cf4:	00ffffc4 	movi	r3,-1
   28cf8:	10c00d26 	beq	r2,r3,28d30 <_malloc_trim_r+0xe0>
   28cfc:	00c000f4 	movhi	r3,3
   28d00:	18d2f104 	addi	r3,r3,19396
   28d04:	18800017 	ldw	r2,0(r3)
   28d08:	99000217 	ldw	r4,8(r19)
   28d0c:	8c23c83a 	sub	r17,r17,r16
   28d10:	8c400054 	ori	r17,r17,1
   28d14:	1421c83a 	sub	r16,r2,r16
   28d18:	24400115 	stw	r17,4(r4)
   28d1c:	9009883a 	mov	r4,r18
   28d20:	1c000015 	stw	r16,0(r3)
   28d24:	002eef40 	call	2eef4 <__malloc_unlock>
   28d28:	00800044 	movi	r2,1
   28d2c:	003fe706 	br	28ccc <__alt_data_end+0xfffe8ccc>
   28d30:	000b883a 	mov	r5,zero
   28d34:	9009883a 	mov	r4,r18
   28d38:	002b0000 	call	2b000 <_sbrk_r>
   28d3c:	99000217 	ldw	r4,8(r19)
   28d40:	014003c4 	movi	r5,15
   28d44:	1107c83a 	sub	r3,r2,r4
   28d48:	28ffdd0e 	bge	r5,r3,28cc0 <__alt_data_end+0xfffe8cc0>
   28d4c:	014000f4 	movhi	r5,3
   28d50:	294c1a04 	addi	r5,r5,12392
   28d54:	29400017 	ldw	r5,0(r5)
   28d58:	18c00054 	ori	r3,r3,1
   28d5c:	20c00115 	stw	r3,4(r4)
   28d60:	00c000f4 	movhi	r3,3
   28d64:	1145c83a 	sub	r2,r2,r5
   28d68:	18d2f104 	addi	r3,r3,19396
   28d6c:	18800015 	stw	r2,0(r3)
   28d70:	003fd306 	br	28cc0 <__alt_data_end+0xfffe8cc0>

00028d74 <_free_r>:
   28d74:	28004126 	beq	r5,zero,28e7c <_free_r+0x108>
   28d78:	defffd04 	addi	sp,sp,-12
   28d7c:	dc400115 	stw	r17,4(sp)
   28d80:	dc000015 	stw	r16,0(sp)
   28d84:	2023883a 	mov	r17,r4
   28d88:	2821883a 	mov	r16,r5
   28d8c:	dfc00215 	stw	ra,8(sp)
   28d90:	002eed00 	call	2eed0 <__malloc_lock>
   28d94:	81ffff17 	ldw	r7,-4(r16)
   28d98:	00bfff84 	movi	r2,-2
   28d9c:	010000f4 	movhi	r4,3
   28da0:	81bffe04 	addi	r6,r16,-8
   28da4:	3884703a 	and	r2,r7,r2
   28da8:	21069204 	addi	r4,r4,6728
   28dac:	308b883a 	add	r5,r6,r2
   28db0:	2a400117 	ldw	r9,4(r5)
   28db4:	22000217 	ldw	r8,8(r4)
   28db8:	00ffff04 	movi	r3,-4
   28dbc:	48c6703a 	and	r3,r9,r3
   28dc0:	2a005726 	beq	r5,r8,28f20 <_free_r+0x1ac>
   28dc4:	28c00115 	stw	r3,4(r5)
   28dc8:	39c0004c 	andi	r7,r7,1
   28dcc:	3800091e 	bne	r7,zero,28df4 <_free_r+0x80>
   28dd0:	823ffe17 	ldw	r8,-8(r16)
   28dd4:	22400204 	addi	r9,r4,8
   28dd8:	320dc83a 	sub	r6,r6,r8
   28ddc:	31c00217 	ldw	r7,8(r6)
   28de0:	1205883a 	add	r2,r2,r8
   28de4:	3a406526 	beq	r7,r9,28f7c <_free_r+0x208>
   28de8:	32000317 	ldw	r8,12(r6)
   28dec:	3a000315 	stw	r8,12(r7)
   28df0:	41c00215 	stw	r7,8(r8)
   28df4:	28cf883a 	add	r7,r5,r3
   28df8:	39c00117 	ldw	r7,4(r7)
   28dfc:	39c0004c 	andi	r7,r7,1
   28e00:	38003a26 	beq	r7,zero,28eec <_free_r+0x178>
   28e04:	10c00054 	ori	r3,r2,1
   28e08:	30c00115 	stw	r3,4(r6)
   28e0c:	3087883a 	add	r3,r6,r2
   28e10:	18800015 	stw	r2,0(r3)
   28e14:	00c07fc4 	movi	r3,511
   28e18:	18801936 	bltu	r3,r2,28e80 <_free_r+0x10c>
   28e1c:	1004d0fa 	srli	r2,r2,3
   28e20:	01c00044 	movi	r7,1
   28e24:	21400117 	ldw	r5,4(r4)
   28e28:	10c00044 	addi	r3,r2,1
   28e2c:	18c7883a 	add	r3,r3,r3
   28e30:	1005d0ba 	srai	r2,r2,2
   28e34:	18c7883a 	add	r3,r3,r3
   28e38:	18c7883a 	add	r3,r3,r3
   28e3c:	1907883a 	add	r3,r3,r4
   28e40:	3884983a 	sll	r2,r7,r2
   28e44:	19c00017 	ldw	r7,0(r3)
   28e48:	1a3ffe04 	addi	r8,r3,-8
   28e4c:	1144b03a 	or	r2,r2,r5
   28e50:	32000315 	stw	r8,12(r6)
   28e54:	31c00215 	stw	r7,8(r6)
   28e58:	20800115 	stw	r2,4(r4)
   28e5c:	19800015 	stw	r6,0(r3)
   28e60:	39800315 	stw	r6,12(r7)
   28e64:	8809883a 	mov	r4,r17
   28e68:	dfc00217 	ldw	ra,8(sp)
   28e6c:	dc400117 	ldw	r17,4(sp)
   28e70:	dc000017 	ldw	r16,0(sp)
   28e74:	dec00304 	addi	sp,sp,12
   28e78:	002eef41 	jmpi	2eef4 <__malloc_unlock>
   28e7c:	f800283a 	ret
   28e80:	100ad27a 	srli	r5,r2,9
   28e84:	00c00104 	movi	r3,4
   28e88:	19404a36 	bltu	r3,r5,28fb4 <_free_r+0x240>
   28e8c:	100ad1ba 	srli	r5,r2,6
   28e90:	28c00e44 	addi	r3,r5,57
   28e94:	18c7883a 	add	r3,r3,r3
   28e98:	29400e04 	addi	r5,r5,56
   28e9c:	18c7883a 	add	r3,r3,r3
   28ea0:	18c7883a 	add	r3,r3,r3
   28ea4:	1909883a 	add	r4,r3,r4
   28ea8:	20c00017 	ldw	r3,0(r4)
   28eac:	01c000f4 	movhi	r7,3
   28eb0:	213ffe04 	addi	r4,r4,-8
   28eb4:	39c69204 	addi	r7,r7,6728
   28eb8:	20c04426 	beq	r4,r3,28fcc <_free_r+0x258>
   28ebc:	01ffff04 	movi	r7,-4
   28ec0:	19400117 	ldw	r5,4(r3)
   28ec4:	29ca703a 	and	r5,r5,r7
   28ec8:	1140022e 	bgeu	r2,r5,28ed4 <_free_r+0x160>
   28ecc:	18c00217 	ldw	r3,8(r3)
   28ed0:	20fffb1e 	bne	r4,r3,28ec0 <__alt_data_end+0xfffe8ec0>
   28ed4:	19000317 	ldw	r4,12(r3)
   28ed8:	31000315 	stw	r4,12(r6)
   28edc:	30c00215 	stw	r3,8(r6)
   28ee0:	21800215 	stw	r6,8(r4)
   28ee4:	19800315 	stw	r6,12(r3)
   28ee8:	003fde06 	br	28e64 <__alt_data_end+0xfffe8e64>
   28eec:	29c00217 	ldw	r7,8(r5)
   28ef0:	10c5883a 	add	r2,r2,r3
   28ef4:	00c000f4 	movhi	r3,3
   28ef8:	18c69404 	addi	r3,r3,6736
   28efc:	38c03b26 	beq	r7,r3,28fec <_free_r+0x278>
   28f00:	2a000317 	ldw	r8,12(r5)
   28f04:	11400054 	ori	r5,r2,1
   28f08:	3087883a 	add	r3,r6,r2
   28f0c:	3a000315 	stw	r8,12(r7)
   28f10:	41c00215 	stw	r7,8(r8)
   28f14:	31400115 	stw	r5,4(r6)
   28f18:	18800015 	stw	r2,0(r3)
   28f1c:	003fbd06 	br	28e14 <__alt_data_end+0xfffe8e14>
   28f20:	39c0004c 	andi	r7,r7,1
   28f24:	10c5883a 	add	r2,r2,r3
   28f28:	3800071e 	bne	r7,zero,28f48 <_free_r+0x1d4>
   28f2c:	81fffe17 	ldw	r7,-8(r16)
   28f30:	31cdc83a 	sub	r6,r6,r7
   28f34:	30c00317 	ldw	r3,12(r6)
   28f38:	31400217 	ldw	r5,8(r6)
   28f3c:	11c5883a 	add	r2,r2,r7
   28f40:	28c00315 	stw	r3,12(r5)
   28f44:	19400215 	stw	r5,8(r3)
   28f48:	10c00054 	ori	r3,r2,1
   28f4c:	30c00115 	stw	r3,4(r6)
   28f50:	00c000f4 	movhi	r3,3
   28f54:	18cc1b04 	addi	r3,r3,12396
   28f58:	18c00017 	ldw	r3,0(r3)
   28f5c:	21800215 	stw	r6,8(r4)
   28f60:	10ffc036 	bltu	r2,r3,28e64 <__alt_data_end+0xfffe8e64>
   28f64:	008000f4 	movhi	r2,3
   28f68:	1092e804 	addi	r2,r2,19360
   28f6c:	11400017 	ldw	r5,0(r2)
   28f70:	8809883a 	mov	r4,r17
   28f74:	0028c500 	call	28c50 <_malloc_trim_r>
   28f78:	003fba06 	br	28e64 <__alt_data_end+0xfffe8e64>
   28f7c:	28c9883a 	add	r4,r5,r3
   28f80:	21000117 	ldw	r4,4(r4)
   28f84:	2100004c 	andi	r4,r4,1
   28f88:	2000391e 	bne	r4,zero,29070 <_free_r+0x2fc>
   28f8c:	29c00217 	ldw	r7,8(r5)
   28f90:	29000317 	ldw	r4,12(r5)
   28f94:	1885883a 	add	r2,r3,r2
   28f98:	10c00054 	ori	r3,r2,1
   28f9c:	39000315 	stw	r4,12(r7)
   28fa0:	21c00215 	stw	r7,8(r4)
   28fa4:	30c00115 	stw	r3,4(r6)
   28fa8:	308d883a 	add	r6,r6,r2
   28fac:	30800015 	stw	r2,0(r6)
   28fb0:	003fac06 	br	28e64 <__alt_data_end+0xfffe8e64>
   28fb4:	00c00504 	movi	r3,20
   28fb8:	19401536 	bltu	r3,r5,29010 <_free_r+0x29c>
   28fbc:	28c01704 	addi	r3,r5,92
   28fc0:	18c7883a 	add	r3,r3,r3
   28fc4:	294016c4 	addi	r5,r5,91
   28fc8:	003fb406 	br	28e9c <__alt_data_end+0xfffe8e9c>
   28fcc:	280bd0ba 	srai	r5,r5,2
   28fd0:	00c00044 	movi	r3,1
   28fd4:	38800117 	ldw	r2,4(r7)
   28fd8:	194a983a 	sll	r5,r3,r5
   28fdc:	2007883a 	mov	r3,r4
   28fe0:	2884b03a 	or	r2,r5,r2
   28fe4:	38800115 	stw	r2,4(r7)
   28fe8:	003fbb06 	br	28ed8 <__alt_data_end+0xfffe8ed8>
   28fec:	21800515 	stw	r6,20(r4)
   28ff0:	21800415 	stw	r6,16(r4)
   28ff4:	10c00054 	ori	r3,r2,1
   28ff8:	31c00315 	stw	r7,12(r6)
   28ffc:	31c00215 	stw	r7,8(r6)
   29000:	30c00115 	stw	r3,4(r6)
   29004:	308d883a 	add	r6,r6,r2
   29008:	30800015 	stw	r2,0(r6)
   2900c:	003f9506 	br	28e64 <__alt_data_end+0xfffe8e64>
   29010:	00c01504 	movi	r3,84
   29014:	19400536 	bltu	r3,r5,2902c <_free_r+0x2b8>
   29018:	100ad33a 	srli	r5,r2,12
   2901c:	28c01bc4 	addi	r3,r5,111
   29020:	18c7883a 	add	r3,r3,r3
   29024:	29401b84 	addi	r5,r5,110
   29028:	003f9c06 	br	28e9c <__alt_data_end+0xfffe8e9c>
   2902c:	00c05504 	movi	r3,340
   29030:	19400536 	bltu	r3,r5,29048 <_free_r+0x2d4>
   29034:	100ad3fa 	srli	r5,r2,15
   29038:	28c01e04 	addi	r3,r5,120
   2903c:	18c7883a 	add	r3,r3,r3
   29040:	29401dc4 	addi	r5,r5,119
   29044:	003f9506 	br	28e9c <__alt_data_end+0xfffe8e9c>
   29048:	00c15504 	movi	r3,1364
   2904c:	19400536 	bltu	r3,r5,29064 <_free_r+0x2f0>
   29050:	100ad4ba 	srli	r5,r2,18
   29054:	28c01f44 	addi	r3,r5,125
   29058:	18c7883a 	add	r3,r3,r3
   2905c:	29401f04 	addi	r5,r5,124
   29060:	003f8e06 	br	28e9c <__alt_data_end+0xfffe8e9c>
   29064:	00c03f84 	movi	r3,254
   29068:	01401f84 	movi	r5,126
   2906c:	003f8b06 	br	28e9c <__alt_data_end+0xfffe8e9c>
   29070:	10c00054 	ori	r3,r2,1
   29074:	30c00115 	stw	r3,4(r6)
   29078:	308d883a 	add	r6,r6,r2
   2907c:	30800015 	stw	r2,0(r6)
   29080:	003f7806 	br	28e64 <__alt_data_end+0xfffe8e64>

00029084 <_fwalk>:
   29084:	defff704 	addi	sp,sp,-36
   29088:	dd000415 	stw	r20,16(sp)
   2908c:	dfc00815 	stw	ra,32(sp)
   29090:	ddc00715 	stw	r23,28(sp)
   29094:	dd800615 	stw	r22,24(sp)
   29098:	dd400515 	stw	r21,20(sp)
   2909c:	dcc00315 	stw	r19,12(sp)
   290a0:	dc800215 	stw	r18,8(sp)
   290a4:	dc400115 	stw	r17,4(sp)
   290a8:	dc000015 	stw	r16,0(sp)
   290ac:	2500b804 	addi	r20,r4,736
   290b0:	a0002326 	beq	r20,zero,29140 <_fwalk+0xbc>
   290b4:	282b883a 	mov	r21,r5
   290b8:	002f883a 	mov	r23,zero
   290bc:	05800044 	movi	r22,1
   290c0:	04ffffc4 	movi	r19,-1
   290c4:	a4400117 	ldw	r17,4(r20)
   290c8:	a4800217 	ldw	r18,8(r20)
   290cc:	8c7fffc4 	addi	r17,r17,-1
   290d0:	88000d16 	blt	r17,zero,29108 <_fwalk+0x84>
   290d4:	94000304 	addi	r16,r18,12
   290d8:	94800384 	addi	r18,r18,14
   290dc:	8080000b 	ldhu	r2,0(r16)
   290e0:	8c7fffc4 	addi	r17,r17,-1
   290e4:	813ffd04 	addi	r4,r16,-12
   290e8:	b080042e 	bgeu	r22,r2,290fc <_fwalk+0x78>
   290ec:	9080000f 	ldh	r2,0(r18)
   290f0:	14c00226 	beq	r2,r19,290fc <_fwalk+0x78>
   290f4:	a83ee83a 	callr	r21
   290f8:	b8aeb03a 	or	r23,r23,r2
   290fc:	84001a04 	addi	r16,r16,104
   29100:	94801a04 	addi	r18,r18,104
   29104:	8cfff51e 	bne	r17,r19,290dc <__alt_data_end+0xfffe90dc>
   29108:	a5000017 	ldw	r20,0(r20)
   2910c:	a03fed1e 	bne	r20,zero,290c4 <__alt_data_end+0xfffe90c4>
   29110:	b805883a 	mov	r2,r23
   29114:	dfc00817 	ldw	ra,32(sp)
   29118:	ddc00717 	ldw	r23,28(sp)
   2911c:	dd800617 	ldw	r22,24(sp)
   29120:	dd400517 	ldw	r21,20(sp)
   29124:	dd000417 	ldw	r20,16(sp)
   29128:	dcc00317 	ldw	r19,12(sp)
   2912c:	dc800217 	ldw	r18,8(sp)
   29130:	dc400117 	ldw	r17,4(sp)
   29134:	dc000017 	ldw	r16,0(sp)
   29138:	dec00904 	addi	sp,sp,36
   2913c:	f800283a 	ret
   29140:	002f883a 	mov	r23,zero
   29144:	003ff206 	br	29110 <__alt_data_end+0xfffe9110>

00029148 <_fwalk_reent>:
   29148:	defff704 	addi	sp,sp,-36
   2914c:	dd000415 	stw	r20,16(sp)
   29150:	dfc00815 	stw	ra,32(sp)
   29154:	ddc00715 	stw	r23,28(sp)
   29158:	dd800615 	stw	r22,24(sp)
   2915c:	dd400515 	stw	r21,20(sp)
   29160:	dcc00315 	stw	r19,12(sp)
   29164:	dc800215 	stw	r18,8(sp)
   29168:	dc400115 	stw	r17,4(sp)
   2916c:	dc000015 	stw	r16,0(sp)
   29170:	2500b804 	addi	r20,r4,736
   29174:	a0002326 	beq	r20,zero,29204 <_fwalk_reent+0xbc>
   29178:	282b883a 	mov	r21,r5
   2917c:	2027883a 	mov	r19,r4
   29180:	002f883a 	mov	r23,zero
   29184:	05800044 	movi	r22,1
   29188:	04bfffc4 	movi	r18,-1
   2918c:	a4400117 	ldw	r17,4(r20)
   29190:	a4000217 	ldw	r16,8(r20)
   29194:	8c7fffc4 	addi	r17,r17,-1
   29198:	88000c16 	blt	r17,zero,291cc <_fwalk_reent+0x84>
   2919c:	84000304 	addi	r16,r16,12
   291a0:	8080000b 	ldhu	r2,0(r16)
   291a4:	8c7fffc4 	addi	r17,r17,-1
   291a8:	817ffd04 	addi	r5,r16,-12
   291ac:	b080052e 	bgeu	r22,r2,291c4 <_fwalk_reent+0x7c>
   291b0:	8080008f 	ldh	r2,2(r16)
   291b4:	9809883a 	mov	r4,r19
   291b8:	14800226 	beq	r2,r18,291c4 <_fwalk_reent+0x7c>
   291bc:	a83ee83a 	callr	r21
   291c0:	b8aeb03a 	or	r23,r23,r2
   291c4:	84001a04 	addi	r16,r16,104
   291c8:	8cbff51e 	bne	r17,r18,291a0 <__alt_data_end+0xfffe91a0>
   291cc:	a5000017 	ldw	r20,0(r20)
   291d0:	a03fee1e 	bne	r20,zero,2918c <__alt_data_end+0xfffe918c>
   291d4:	b805883a 	mov	r2,r23
   291d8:	dfc00817 	ldw	ra,32(sp)
   291dc:	ddc00717 	ldw	r23,28(sp)
   291e0:	dd800617 	ldw	r22,24(sp)
   291e4:	dd400517 	ldw	r21,20(sp)
   291e8:	dd000417 	ldw	r20,16(sp)
   291ec:	dcc00317 	ldw	r19,12(sp)
   291f0:	dc800217 	ldw	r18,8(sp)
   291f4:	dc400117 	ldw	r17,4(sp)
   291f8:	dc000017 	ldw	r16,0(sp)
   291fc:	dec00904 	addi	sp,sp,36
   29200:	f800283a 	ret
   29204:	002f883a 	mov	r23,zero
   29208:	003ff206 	br	291d4 <__alt_data_end+0xfffe91d4>

0002920c <_setlocale_r>:
   2920c:	30001b26 	beq	r6,zero,2927c <_setlocale_r+0x70>
   29210:	014000f4 	movhi	r5,3
   29214:	defffe04 	addi	sp,sp,-8
   29218:	29450a04 	addi	r5,r5,5160
   2921c:	3009883a 	mov	r4,r6
   29220:	dc000015 	stw	r16,0(sp)
   29224:	dfc00115 	stw	ra,4(sp)
   29228:	3021883a 	mov	r16,r6
   2922c:	002b1900 	call	2b190 <strcmp>
   29230:	1000061e 	bne	r2,zero,2924c <_setlocale_r+0x40>
   29234:	008000f4 	movhi	r2,3
   29238:	1084ec04 	addi	r2,r2,5040
   2923c:	dfc00117 	ldw	ra,4(sp)
   29240:	dc000017 	ldw	r16,0(sp)
   29244:	dec00204 	addi	sp,sp,8
   29248:	f800283a 	ret
   2924c:	014000f4 	movhi	r5,3
   29250:	2944ec04 	addi	r5,r5,5040
   29254:	8009883a 	mov	r4,r16
   29258:	002b1900 	call	2b190 <strcmp>
   2925c:	103ff526 	beq	r2,zero,29234 <__alt_data_end+0xfffe9234>
   29260:	014000f4 	movhi	r5,3
   29264:	2944f504 	addi	r5,r5,5076
   29268:	8009883a 	mov	r4,r16
   2926c:	002b1900 	call	2b190 <strcmp>
   29270:	103ff026 	beq	r2,zero,29234 <__alt_data_end+0xfffe9234>
   29274:	0005883a 	mov	r2,zero
   29278:	003ff006 	br	2923c <__alt_data_end+0xfffe923c>
   2927c:	008000f4 	movhi	r2,3
   29280:	1084ec04 	addi	r2,r2,5040
   29284:	f800283a 	ret

00029288 <__locale_charset>:
   29288:	008000f4 	movhi	r2,3
   2928c:	10867c04 	addi	r2,r2,6640
   29290:	f800283a 	ret

00029294 <__locale_mb_cur_max>:
   29294:	008000f4 	movhi	r2,3
   29298:	108c1904 	addi	r2,r2,12388
   2929c:	10800017 	ldw	r2,0(r2)
   292a0:	f800283a 	ret

000292a4 <__locale_msgcharset>:
   292a4:	008000f4 	movhi	r2,3
   292a8:	10867404 	addi	r2,r2,6608
   292ac:	f800283a 	ret

000292b0 <__locale_cjk_lang>:
   292b0:	0005883a 	mov	r2,zero
   292b4:	f800283a 	ret

000292b8 <_localeconv_r>:
   292b8:	008000f4 	movhi	r2,3
   292bc:	10868404 	addi	r2,r2,6672
   292c0:	f800283a 	ret

000292c4 <setlocale>:
   292c4:	008000f4 	movhi	r2,3
   292c8:	108c1804 	addi	r2,r2,12384
   292cc:	280d883a 	mov	r6,r5
   292d0:	200b883a 	mov	r5,r4
   292d4:	11000017 	ldw	r4,0(r2)
   292d8:	002920c1 	jmpi	2920c <_setlocale_r>

000292dc <localeconv>:
   292dc:	008000f4 	movhi	r2,3
   292e0:	10868404 	addi	r2,r2,6672
   292e4:	f800283a 	ret

000292e8 <__smakebuf_r>:
   292e8:	2880030b 	ldhu	r2,12(r5)
   292ec:	10c0008c 	andi	r3,r2,2
   292f0:	1800411e 	bne	r3,zero,293f8 <__smakebuf_r+0x110>
   292f4:	deffec04 	addi	sp,sp,-80
   292f8:	dc000f15 	stw	r16,60(sp)
   292fc:	2821883a 	mov	r16,r5
   29300:	2940038f 	ldh	r5,14(r5)
   29304:	dc401015 	stw	r17,64(sp)
   29308:	dfc01315 	stw	ra,76(sp)
   2930c:	dcc01215 	stw	r19,72(sp)
   29310:	dc801115 	stw	r18,68(sp)
   29314:	2023883a 	mov	r17,r4
   29318:	28001c16 	blt	r5,zero,2938c <__smakebuf_r+0xa4>
   2931c:	d80d883a 	mov	r6,sp
   29320:	002cdd00 	call	2cdd0 <_fstat_r>
   29324:	10001816 	blt	r2,zero,29388 <__smakebuf_r+0xa0>
   29328:	d8800117 	ldw	r2,4(sp)
   2932c:	00e00014 	movui	r3,32768
   29330:	10bc000c 	andi	r2,r2,61440
   29334:	14c80020 	cmpeqi	r19,r2,8192
   29338:	10c03726 	beq	r2,r3,29418 <__smakebuf_r+0x130>
   2933c:	80c0030b 	ldhu	r3,12(r16)
   29340:	18c20014 	ori	r3,r3,2048
   29344:	80c0030d 	sth	r3,12(r16)
   29348:	00c80004 	movi	r3,8192
   2934c:	10c0521e 	bne	r2,r3,29498 <__smakebuf_r+0x1b0>
   29350:	8140038f 	ldh	r5,14(r16)
   29354:	8809883a 	mov	r4,r17
   29358:	002d2e80 	call	2d2e8 <_isatty_r>
   2935c:	10004c26 	beq	r2,zero,29490 <__smakebuf_r+0x1a8>
   29360:	8080030b 	ldhu	r2,12(r16)
   29364:	80c010c4 	addi	r3,r16,67
   29368:	80c00015 	stw	r3,0(r16)
   2936c:	10800054 	ori	r2,r2,1
   29370:	8080030d 	sth	r2,12(r16)
   29374:	00800044 	movi	r2,1
   29378:	80c00415 	stw	r3,16(r16)
   2937c:	80800515 	stw	r2,20(r16)
   29380:	04810004 	movi	r18,1024
   29384:	00000706 	br	293a4 <__smakebuf_r+0xbc>
   29388:	8080030b 	ldhu	r2,12(r16)
   2938c:	10c0200c 	andi	r3,r2,128
   29390:	18001f1e 	bne	r3,zero,29410 <__smakebuf_r+0x128>
   29394:	04810004 	movi	r18,1024
   29398:	10820014 	ori	r2,r2,2048
   2939c:	8080030d 	sth	r2,12(r16)
   293a0:	0027883a 	mov	r19,zero
   293a4:	900b883a 	mov	r5,r18
   293a8:	8809883a 	mov	r4,r17
   293ac:	00294a40 	call	294a4 <_malloc_r>
   293b0:	10002c26 	beq	r2,zero,29464 <__smakebuf_r+0x17c>
   293b4:	80c0030b 	ldhu	r3,12(r16)
   293b8:	010000f4 	movhi	r4,3
   293bc:	21222e04 	addi	r4,r4,-30536
   293c0:	89000f15 	stw	r4,60(r17)
   293c4:	18c02014 	ori	r3,r3,128
   293c8:	80c0030d 	sth	r3,12(r16)
   293cc:	80800015 	stw	r2,0(r16)
   293d0:	80800415 	stw	r2,16(r16)
   293d4:	84800515 	stw	r18,20(r16)
   293d8:	98001a1e 	bne	r19,zero,29444 <__smakebuf_r+0x15c>
   293dc:	dfc01317 	ldw	ra,76(sp)
   293e0:	dcc01217 	ldw	r19,72(sp)
   293e4:	dc801117 	ldw	r18,68(sp)
   293e8:	dc401017 	ldw	r17,64(sp)
   293ec:	dc000f17 	ldw	r16,60(sp)
   293f0:	dec01404 	addi	sp,sp,80
   293f4:	f800283a 	ret
   293f8:	288010c4 	addi	r2,r5,67
   293fc:	28800015 	stw	r2,0(r5)
   29400:	28800415 	stw	r2,16(r5)
   29404:	00800044 	movi	r2,1
   29408:	28800515 	stw	r2,20(r5)
   2940c:	f800283a 	ret
   29410:	04801004 	movi	r18,64
   29414:	003fe006 	br	29398 <__alt_data_end+0xfffe9398>
   29418:	81000a17 	ldw	r4,40(r16)
   2941c:	00c000f4 	movhi	r3,3
   29420:	18ec4b04 	addi	r3,r3,-20180
   29424:	20ffc51e 	bne	r4,r3,2933c <__alt_data_end+0xfffe933c>
   29428:	8080030b 	ldhu	r2,12(r16)
   2942c:	04810004 	movi	r18,1024
   29430:	84801315 	stw	r18,76(r16)
   29434:	1484b03a 	or	r2,r2,r18
   29438:	8080030d 	sth	r2,12(r16)
   2943c:	0027883a 	mov	r19,zero
   29440:	003fd806 	br	293a4 <__alt_data_end+0xfffe93a4>
   29444:	8140038f 	ldh	r5,14(r16)
   29448:	8809883a 	mov	r4,r17
   2944c:	002d2e80 	call	2d2e8 <_isatty_r>
   29450:	103fe226 	beq	r2,zero,293dc <__alt_data_end+0xfffe93dc>
   29454:	8080030b 	ldhu	r2,12(r16)
   29458:	10800054 	ori	r2,r2,1
   2945c:	8080030d 	sth	r2,12(r16)
   29460:	003fde06 	br	293dc <__alt_data_end+0xfffe93dc>
   29464:	8080030b 	ldhu	r2,12(r16)
   29468:	10c0800c 	andi	r3,r2,512
   2946c:	183fdb1e 	bne	r3,zero,293dc <__alt_data_end+0xfffe93dc>
   29470:	10800094 	ori	r2,r2,2
   29474:	80c010c4 	addi	r3,r16,67
   29478:	8080030d 	sth	r2,12(r16)
   2947c:	00800044 	movi	r2,1
   29480:	80c00015 	stw	r3,0(r16)
   29484:	80c00415 	stw	r3,16(r16)
   29488:	80800515 	stw	r2,20(r16)
   2948c:	003fd306 	br	293dc <__alt_data_end+0xfffe93dc>
   29490:	04810004 	movi	r18,1024
   29494:	003fc306 	br	293a4 <__alt_data_end+0xfffe93a4>
   29498:	0027883a 	mov	r19,zero
   2949c:	04810004 	movi	r18,1024
   294a0:	003fc006 	br	293a4 <__alt_data_end+0xfffe93a4>

000294a4 <_malloc_r>:
   294a4:	defff504 	addi	sp,sp,-44
   294a8:	dc800315 	stw	r18,12(sp)
   294ac:	dfc00a15 	stw	ra,40(sp)
   294b0:	df000915 	stw	fp,36(sp)
   294b4:	ddc00815 	stw	r23,32(sp)
   294b8:	dd800715 	stw	r22,28(sp)
   294bc:	dd400615 	stw	r21,24(sp)
   294c0:	dd000515 	stw	r20,20(sp)
   294c4:	dcc00415 	stw	r19,16(sp)
   294c8:	dc400215 	stw	r17,8(sp)
   294cc:	dc000115 	stw	r16,4(sp)
   294d0:	288002c4 	addi	r2,r5,11
   294d4:	00c00584 	movi	r3,22
   294d8:	2025883a 	mov	r18,r4
   294dc:	18807f2e 	bgeu	r3,r2,296dc <_malloc_r+0x238>
   294e0:	047ffe04 	movi	r17,-8
   294e4:	1462703a 	and	r17,r2,r17
   294e8:	8800a316 	blt	r17,zero,29778 <_malloc_r+0x2d4>
   294ec:	8940a236 	bltu	r17,r5,29778 <_malloc_r+0x2d4>
   294f0:	002eed00 	call	2eed0 <__malloc_lock>
   294f4:	00807dc4 	movi	r2,503
   294f8:	1441e92e 	bgeu	r2,r17,29ca0 <_malloc_r+0x7fc>
   294fc:	8804d27a 	srli	r2,r17,9
   29500:	1000a126 	beq	r2,zero,29788 <_malloc_r+0x2e4>
   29504:	00c00104 	movi	r3,4
   29508:	18811e36 	bltu	r3,r2,29984 <_malloc_r+0x4e0>
   2950c:	8804d1ba 	srli	r2,r17,6
   29510:	12000e44 	addi	r8,r2,57
   29514:	11c00e04 	addi	r7,r2,56
   29518:	4209883a 	add	r4,r8,r8
   2951c:	04c000f4 	movhi	r19,3
   29520:	2109883a 	add	r4,r4,r4
   29524:	9cc69204 	addi	r19,r19,6728
   29528:	2109883a 	add	r4,r4,r4
   2952c:	9909883a 	add	r4,r19,r4
   29530:	24000117 	ldw	r16,4(r4)
   29534:	213ffe04 	addi	r4,r4,-8
   29538:	24009726 	beq	r4,r16,29798 <_malloc_r+0x2f4>
   2953c:	80800117 	ldw	r2,4(r16)
   29540:	01bfff04 	movi	r6,-4
   29544:	014003c4 	movi	r5,15
   29548:	1184703a 	and	r2,r2,r6
   2954c:	1447c83a 	sub	r3,r2,r17
   29550:	28c00716 	blt	r5,r3,29570 <_malloc_r+0xcc>
   29554:	1800920e 	bge	r3,zero,297a0 <_malloc_r+0x2fc>
   29558:	84000317 	ldw	r16,12(r16)
   2955c:	24008e26 	beq	r4,r16,29798 <_malloc_r+0x2f4>
   29560:	80800117 	ldw	r2,4(r16)
   29564:	1184703a 	and	r2,r2,r6
   29568:	1447c83a 	sub	r3,r2,r17
   2956c:	28fff90e 	bge	r5,r3,29554 <__alt_data_end+0xfffe9554>
   29570:	3809883a 	mov	r4,r7
   29574:	018000f4 	movhi	r6,3
   29578:	9c000417 	ldw	r16,16(r19)
   2957c:	31869204 	addi	r6,r6,6728
   29580:	32000204 	addi	r8,r6,8
   29584:	82013426 	beq	r16,r8,29a58 <_malloc_r+0x5b4>
   29588:	80c00117 	ldw	r3,4(r16)
   2958c:	00bfff04 	movi	r2,-4
   29590:	188e703a 	and	r7,r3,r2
   29594:	3c45c83a 	sub	r2,r7,r17
   29598:	00c003c4 	movi	r3,15
   2959c:	18811f16 	blt	r3,r2,29a1c <_malloc_r+0x578>
   295a0:	32000515 	stw	r8,20(r6)
   295a4:	32000415 	stw	r8,16(r6)
   295a8:	10007f0e 	bge	r2,zero,297a8 <_malloc_r+0x304>
   295ac:	00807fc4 	movi	r2,511
   295b0:	11c0fd36 	bltu	r2,r7,299a8 <_malloc_r+0x504>
   295b4:	3806d0fa 	srli	r3,r7,3
   295b8:	01c00044 	movi	r7,1
   295bc:	30800117 	ldw	r2,4(r6)
   295c0:	19400044 	addi	r5,r3,1
   295c4:	294b883a 	add	r5,r5,r5
   295c8:	1807d0ba 	srai	r3,r3,2
   295cc:	294b883a 	add	r5,r5,r5
   295d0:	294b883a 	add	r5,r5,r5
   295d4:	298b883a 	add	r5,r5,r6
   295d8:	38c6983a 	sll	r3,r7,r3
   295dc:	29c00017 	ldw	r7,0(r5)
   295e0:	2a7ffe04 	addi	r9,r5,-8
   295e4:	1886b03a 	or	r3,r3,r2
   295e8:	82400315 	stw	r9,12(r16)
   295ec:	81c00215 	stw	r7,8(r16)
   295f0:	30c00115 	stw	r3,4(r6)
   295f4:	2c000015 	stw	r16,0(r5)
   295f8:	3c000315 	stw	r16,12(r7)
   295fc:	2005d0ba 	srai	r2,r4,2
   29600:	01400044 	movi	r5,1
   29604:	288a983a 	sll	r5,r5,r2
   29608:	19406f36 	bltu	r3,r5,297c8 <_malloc_r+0x324>
   2960c:	28c4703a 	and	r2,r5,r3
   29610:	10000a1e 	bne	r2,zero,2963c <_malloc_r+0x198>
   29614:	00bfff04 	movi	r2,-4
   29618:	294b883a 	add	r5,r5,r5
   2961c:	2088703a 	and	r4,r4,r2
   29620:	28c4703a 	and	r2,r5,r3
   29624:	21000104 	addi	r4,r4,4
   29628:	1000041e 	bne	r2,zero,2963c <_malloc_r+0x198>
   2962c:	294b883a 	add	r5,r5,r5
   29630:	28c4703a 	and	r2,r5,r3
   29634:	21000104 	addi	r4,r4,4
   29638:	103ffc26 	beq	r2,zero,2962c <__alt_data_end+0xfffe962c>
   2963c:	02bfff04 	movi	r10,-4
   29640:	024003c4 	movi	r9,15
   29644:	21800044 	addi	r6,r4,1
   29648:	318d883a 	add	r6,r6,r6
   2964c:	318d883a 	add	r6,r6,r6
   29650:	318d883a 	add	r6,r6,r6
   29654:	998d883a 	add	r6,r19,r6
   29658:	333ffe04 	addi	r12,r6,-8
   2965c:	2017883a 	mov	r11,r4
   29660:	31800104 	addi	r6,r6,4
   29664:	34000017 	ldw	r16,0(r6)
   29668:	31fffd04 	addi	r7,r6,-12
   2966c:	81c0041e 	bne	r16,r7,29680 <_malloc_r+0x1dc>
   29670:	0000fb06 	br	29a60 <_malloc_r+0x5bc>
   29674:	1801030e 	bge	r3,zero,29a84 <_malloc_r+0x5e0>
   29678:	84000317 	ldw	r16,12(r16)
   2967c:	81c0f826 	beq	r16,r7,29a60 <_malloc_r+0x5bc>
   29680:	80800117 	ldw	r2,4(r16)
   29684:	1284703a 	and	r2,r2,r10
   29688:	1447c83a 	sub	r3,r2,r17
   2968c:	48fff90e 	bge	r9,r3,29674 <__alt_data_end+0xfffe9674>
   29690:	80800317 	ldw	r2,12(r16)
   29694:	81000217 	ldw	r4,8(r16)
   29698:	89400054 	ori	r5,r17,1
   2969c:	81400115 	stw	r5,4(r16)
   296a0:	20800315 	stw	r2,12(r4)
   296a4:	11000215 	stw	r4,8(r2)
   296a8:	8463883a 	add	r17,r16,r17
   296ac:	9c400515 	stw	r17,20(r19)
   296b0:	9c400415 	stw	r17,16(r19)
   296b4:	18800054 	ori	r2,r3,1
   296b8:	88800115 	stw	r2,4(r17)
   296bc:	8a000315 	stw	r8,12(r17)
   296c0:	8a000215 	stw	r8,8(r17)
   296c4:	88e3883a 	add	r17,r17,r3
   296c8:	88c00015 	stw	r3,0(r17)
   296cc:	9009883a 	mov	r4,r18
   296d0:	002eef40 	call	2eef4 <__malloc_unlock>
   296d4:	80800204 	addi	r2,r16,8
   296d8:	00001b06 	br	29748 <_malloc_r+0x2a4>
   296dc:	04400404 	movi	r17,16
   296e0:	89402536 	bltu	r17,r5,29778 <_malloc_r+0x2d4>
   296e4:	002eed00 	call	2eed0 <__malloc_lock>
   296e8:	00800184 	movi	r2,6
   296ec:	01000084 	movi	r4,2
   296f0:	04c000f4 	movhi	r19,3
   296f4:	1085883a 	add	r2,r2,r2
   296f8:	9cc69204 	addi	r19,r19,6728
   296fc:	1085883a 	add	r2,r2,r2
   29700:	9885883a 	add	r2,r19,r2
   29704:	14000117 	ldw	r16,4(r2)
   29708:	10fffe04 	addi	r3,r2,-8
   2970c:	80c0d926 	beq	r16,r3,29a74 <_malloc_r+0x5d0>
   29710:	80c00117 	ldw	r3,4(r16)
   29714:	81000317 	ldw	r4,12(r16)
   29718:	00bfff04 	movi	r2,-4
   2971c:	1884703a 	and	r2,r3,r2
   29720:	81400217 	ldw	r5,8(r16)
   29724:	8085883a 	add	r2,r16,r2
   29728:	10c00117 	ldw	r3,4(r2)
   2972c:	29000315 	stw	r4,12(r5)
   29730:	21400215 	stw	r5,8(r4)
   29734:	18c00054 	ori	r3,r3,1
   29738:	10c00115 	stw	r3,4(r2)
   2973c:	9009883a 	mov	r4,r18
   29740:	002eef40 	call	2eef4 <__malloc_unlock>
   29744:	80800204 	addi	r2,r16,8
   29748:	dfc00a17 	ldw	ra,40(sp)
   2974c:	df000917 	ldw	fp,36(sp)
   29750:	ddc00817 	ldw	r23,32(sp)
   29754:	dd800717 	ldw	r22,28(sp)
   29758:	dd400617 	ldw	r21,24(sp)
   2975c:	dd000517 	ldw	r20,20(sp)
   29760:	dcc00417 	ldw	r19,16(sp)
   29764:	dc800317 	ldw	r18,12(sp)
   29768:	dc400217 	ldw	r17,8(sp)
   2976c:	dc000117 	ldw	r16,4(sp)
   29770:	dec00b04 	addi	sp,sp,44
   29774:	f800283a 	ret
   29778:	00800304 	movi	r2,12
   2977c:	90800015 	stw	r2,0(r18)
   29780:	0005883a 	mov	r2,zero
   29784:	003ff006 	br	29748 <__alt_data_end+0xfffe9748>
   29788:	01002004 	movi	r4,128
   2978c:	02001004 	movi	r8,64
   29790:	01c00fc4 	movi	r7,63
   29794:	003f6106 	br	2951c <__alt_data_end+0xfffe951c>
   29798:	4009883a 	mov	r4,r8
   2979c:	003f7506 	br	29574 <__alt_data_end+0xfffe9574>
   297a0:	81000317 	ldw	r4,12(r16)
   297a4:	003fde06 	br	29720 <__alt_data_end+0xfffe9720>
   297a8:	81c5883a 	add	r2,r16,r7
   297ac:	11400117 	ldw	r5,4(r2)
   297b0:	9009883a 	mov	r4,r18
   297b4:	29400054 	ori	r5,r5,1
   297b8:	11400115 	stw	r5,4(r2)
   297bc:	002eef40 	call	2eef4 <__malloc_unlock>
   297c0:	80800204 	addi	r2,r16,8
   297c4:	003fe006 	br	29748 <__alt_data_end+0xfffe9748>
   297c8:	9c000217 	ldw	r16,8(r19)
   297cc:	00bfff04 	movi	r2,-4
   297d0:	85800117 	ldw	r22,4(r16)
   297d4:	b0ac703a 	and	r22,r22,r2
   297d8:	b4400336 	bltu	r22,r17,297e8 <_malloc_r+0x344>
   297dc:	b445c83a 	sub	r2,r22,r17
   297e0:	00c003c4 	movi	r3,15
   297e4:	18805d16 	blt	r3,r2,2995c <_malloc_r+0x4b8>
   297e8:	05c000f4 	movhi	r23,3
   297ec:	008000f4 	movhi	r2,3
   297f0:	1092e804 	addi	r2,r2,19360
   297f4:	bdcc1a04 	addi	r23,r23,12392
   297f8:	15400017 	ldw	r21,0(r2)
   297fc:	b8c00017 	ldw	r3,0(r23)
   29800:	00bfffc4 	movi	r2,-1
   29804:	858d883a 	add	r6,r16,r22
   29808:	8d6b883a 	add	r21,r17,r21
   2980c:	1880ea26 	beq	r3,r2,29bb8 <_malloc_r+0x714>
   29810:	ad4403c4 	addi	r21,r21,4111
   29814:	00bc0004 	movi	r2,-4096
   29818:	a8aa703a 	and	r21,r21,r2
   2981c:	a80b883a 	mov	r5,r21
   29820:	9009883a 	mov	r4,r18
   29824:	d9800015 	stw	r6,0(sp)
   29828:	002b0000 	call	2b000 <_sbrk_r>
   2982c:	1029883a 	mov	r20,r2
   29830:	00bfffc4 	movi	r2,-1
   29834:	d9800017 	ldw	r6,0(sp)
   29838:	a080e826 	beq	r20,r2,29bdc <_malloc_r+0x738>
   2983c:	a180a636 	bltu	r20,r6,29ad8 <_malloc_r+0x634>
   29840:	070000f4 	movhi	fp,3
   29844:	e712f104 	addi	fp,fp,19396
   29848:	e0800017 	ldw	r2,0(fp)
   2984c:	a887883a 	add	r3,r21,r2
   29850:	e0c00015 	stw	r3,0(fp)
   29854:	3500e626 	beq	r6,r20,29bf0 <_malloc_r+0x74c>
   29858:	b9000017 	ldw	r4,0(r23)
   2985c:	00bfffc4 	movi	r2,-1
   29860:	2080ee26 	beq	r4,r2,29c1c <_malloc_r+0x778>
   29864:	a185c83a 	sub	r2,r20,r6
   29868:	10c5883a 	add	r2,r2,r3
   2986c:	e0800015 	stw	r2,0(fp)
   29870:	a0c001cc 	andi	r3,r20,7
   29874:	1800bc26 	beq	r3,zero,29b68 <_malloc_r+0x6c4>
   29878:	a0e9c83a 	sub	r20,r20,r3
   2987c:	00840204 	movi	r2,4104
   29880:	a5000204 	addi	r20,r20,8
   29884:	10c7c83a 	sub	r3,r2,r3
   29888:	a545883a 	add	r2,r20,r21
   2988c:	1083ffcc 	andi	r2,r2,4095
   29890:	18abc83a 	sub	r21,r3,r2
   29894:	a80b883a 	mov	r5,r21
   29898:	9009883a 	mov	r4,r18
   2989c:	002b0000 	call	2b000 <_sbrk_r>
   298a0:	00ffffc4 	movi	r3,-1
   298a4:	10c0e126 	beq	r2,r3,29c2c <_malloc_r+0x788>
   298a8:	1505c83a 	sub	r2,r2,r20
   298ac:	1545883a 	add	r2,r2,r21
   298b0:	10800054 	ori	r2,r2,1
   298b4:	e0c00017 	ldw	r3,0(fp)
   298b8:	9d000215 	stw	r20,8(r19)
   298bc:	a0800115 	stw	r2,4(r20)
   298c0:	a8c7883a 	add	r3,r21,r3
   298c4:	e0c00015 	stw	r3,0(fp)
   298c8:	84c00e26 	beq	r16,r19,29904 <_malloc_r+0x460>
   298cc:	018003c4 	movi	r6,15
   298d0:	3580a72e 	bgeu	r6,r22,29b70 <_malloc_r+0x6cc>
   298d4:	81400117 	ldw	r5,4(r16)
   298d8:	013ffe04 	movi	r4,-8
   298dc:	b0bffd04 	addi	r2,r22,-12
   298e0:	1104703a 	and	r2,r2,r4
   298e4:	2900004c 	andi	r4,r5,1
   298e8:	2088b03a 	or	r4,r4,r2
   298ec:	81000115 	stw	r4,4(r16)
   298f0:	01400144 	movi	r5,5
   298f4:	8089883a 	add	r4,r16,r2
   298f8:	21400115 	stw	r5,4(r4)
   298fc:	21400215 	stw	r5,8(r4)
   29900:	3080cd36 	bltu	r6,r2,29c38 <_malloc_r+0x794>
   29904:	008000f4 	movhi	r2,3
   29908:	1092e704 	addi	r2,r2,19356
   2990c:	11000017 	ldw	r4,0(r2)
   29910:	20c0012e 	bgeu	r4,r3,29918 <_malloc_r+0x474>
   29914:	10c00015 	stw	r3,0(r2)
   29918:	008000f4 	movhi	r2,3
   2991c:	1092e604 	addi	r2,r2,19352
   29920:	11000017 	ldw	r4,0(r2)
   29924:	9c000217 	ldw	r16,8(r19)
   29928:	20c0012e 	bgeu	r4,r3,29930 <_malloc_r+0x48c>
   2992c:	10c00015 	stw	r3,0(r2)
   29930:	80c00117 	ldw	r3,4(r16)
   29934:	00bfff04 	movi	r2,-4
   29938:	1886703a 	and	r3,r3,r2
   2993c:	1c45c83a 	sub	r2,r3,r17
   29940:	1c400236 	bltu	r3,r17,2994c <_malloc_r+0x4a8>
   29944:	00c003c4 	movi	r3,15
   29948:	18800416 	blt	r3,r2,2995c <_malloc_r+0x4b8>
   2994c:	9009883a 	mov	r4,r18
   29950:	002eef40 	call	2eef4 <__malloc_unlock>
   29954:	0005883a 	mov	r2,zero
   29958:	003f7b06 	br	29748 <__alt_data_end+0xfffe9748>
   2995c:	88c00054 	ori	r3,r17,1
   29960:	80c00115 	stw	r3,4(r16)
   29964:	8463883a 	add	r17,r16,r17
   29968:	10800054 	ori	r2,r2,1
   2996c:	9c400215 	stw	r17,8(r19)
   29970:	88800115 	stw	r2,4(r17)
   29974:	9009883a 	mov	r4,r18
   29978:	002eef40 	call	2eef4 <__malloc_unlock>
   2997c:	80800204 	addi	r2,r16,8
   29980:	003f7106 	br	29748 <__alt_data_end+0xfffe9748>
   29984:	00c00504 	movi	r3,20
   29988:	18804a2e 	bgeu	r3,r2,29ab4 <_malloc_r+0x610>
   2998c:	00c01504 	movi	r3,84
   29990:	18806e36 	bltu	r3,r2,29b4c <_malloc_r+0x6a8>
   29994:	8804d33a 	srli	r2,r17,12
   29998:	12001bc4 	addi	r8,r2,111
   2999c:	11c01b84 	addi	r7,r2,110
   299a0:	4209883a 	add	r4,r8,r8
   299a4:	003edd06 	br	2951c <__alt_data_end+0xfffe951c>
   299a8:	3804d27a 	srli	r2,r7,9
   299ac:	00c00104 	movi	r3,4
   299b0:	1880442e 	bgeu	r3,r2,29ac4 <_malloc_r+0x620>
   299b4:	00c00504 	movi	r3,20
   299b8:	18808136 	bltu	r3,r2,29bc0 <_malloc_r+0x71c>
   299bc:	11401704 	addi	r5,r2,92
   299c0:	10c016c4 	addi	r3,r2,91
   299c4:	294b883a 	add	r5,r5,r5
   299c8:	294b883a 	add	r5,r5,r5
   299cc:	294b883a 	add	r5,r5,r5
   299d0:	994b883a 	add	r5,r19,r5
   299d4:	28800017 	ldw	r2,0(r5)
   299d8:	018000f4 	movhi	r6,3
   299dc:	297ffe04 	addi	r5,r5,-8
   299e0:	31869204 	addi	r6,r6,6728
   299e4:	28806526 	beq	r5,r2,29b7c <_malloc_r+0x6d8>
   299e8:	01bfff04 	movi	r6,-4
   299ec:	10c00117 	ldw	r3,4(r2)
   299f0:	1986703a 	and	r3,r3,r6
   299f4:	38c0022e 	bgeu	r7,r3,29a00 <_malloc_r+0x55c>
   299f8:	10800217 	ldw	r2,8(r2)
   299fc:	28bffb1e 	bne	r5,r2,299ec <__alt_data_end+0xfffe99ec>
   29a00:	11400317 	ldw	r5,12(r2)
   29a04:	98c00117 	ldw	r3,4(r19)
   29a08:	81400315 	stw	r5,12(r16)
   29a0c:	80800215 	stw	r2,8(r16)
   29a10:	2c000215 	stw	r16,8(r5)
   29a14:	14000315 	stw	r16,12(r2)
   29a18:	003ef806 	br	295fc <__alt_data_end+0xfffe95fc>
   29a1c:	88c00054 	ori	r3,r17,1
   29a20:	80c00115 	stw	r3,4(r16)
   29a24:	8463883a 	add	r17,r16,r17
   29a28:	34400515 	stw	r17,20(r6)
   29a2c:	34400415 	stw	r17,16(r6)
   29a30:	10c00054 	ori	r3,r2,1
   29a34:	8a000315 	stw	r8,12(r17)
   29a38:	8a000215 	stw	r8,8(r17)
   29a3c:	88c00115 	stw	r3,4(r17)
   29a40:	88a3883a 	add	r17,r17,r2
   29a44:	88800015 	stw	r2,0(r17)
   29a48:	9009883a 	mov	r4,r18
   29a4c:	002eef40 	call	2eef4 <__malloc_unlock>
   29a50:	80800204 	addi	r2,r16,8
   29a54:	003f3c06 	br	29748 <__alt_data_end+0xfffe9748>
   29a58:	30c00117 	ldw	r3,4(r6)
   29a5c:	003ee706 	br	295fc <__alt_data_end+0xfffe95fc>
   29a60:	5ac00044 	addi	r11,r11,1
   29a64:	588000cc 	andi	r2,r11,3
   29a68:	31800204 	addi	r6,r6,8
   29a6c:	103efd1e 	bne	r2,zero,29664 <__alt_data_end+0xfffe9664>
   29a70:	00002406 	br	29b04 <_malloc_r+0x660>
   29a74:	14000317 	ldw	r16,12(r2)
   29a78:	143f251e 	bne	r2,r16,29710 <__alt_data_end+0xfffe9710>
   29a7c:	21000084 	addi	r4,r4,2
   29a80:	003ebc06 	br	29574 <__alt_data_end+0xfffe9574>
   29a84:	8085883a 	add	r2,r16,r2
   29a88:	10c00117 	ldw	r3,4(r2)
   29a8c:	81000317 	ldw	r4,12(r16)
   29a90:	81400217 	ldw	r5,8(r16)
   29a94:	18c00054 	ori	r3,r3,1
   29a98:	10c00115 	stw	r3,4(r2)
   29a9c:	29000315 	stw	r4,12(r5)
   29aa0:	21400215 	stw	r5,8(r4)
   29aa4:	9009883a 	mov	r4,r18
   29aa8:	002eef40 	call	2eef4 <__malloc_unlock>
   29aac:	80800204 	addi	r2,r16,8
   29ab0:	003f2506 	br	29748 <__alt_data_end+0xfffe9748>
   29ab4:	12001704 	addi	r8,r2,92
   29ab8:	11c016c4 	addi	r7,r2,91
   29abc:	4209883a 	add	r4,r8,r8
   29ac0:	003e9606 	br	2951c <__alt_data_end+0xfffe951c>
   29ac4:	3804d1ba 	srli	r2,r7,6
   29ac8:	11400e44 	addi	r5,r2,57
   29acc:	10c00e04 	addi	r3,r2,56
   29ad0:	294b883a 	add	r5,r5,r5
   29ad4:	003fbc06 	br	299c8 <__alt_data_end+0xfffe99c8>
   29ad8:	84ff5926 	beq	r16,r19,29840 <__alt_data_end+0xfffe9840>
   29adc:	008000f4 	movhi	r2,3
   29ae0:	10869204 	addi	r2,r2,6728
   29ae4:	14000217 	ldw	r16,8(r2)
   29ae8:	00bfff04 	movi	r2,-4
   29aec:	80c00117 	ldw	r3,4(r16)
   29af0:	1886703a 	and	r3,r3,r2
   29af4:	003f9106 	br	2993c <__alt_data_end+0xfffe993c>
   29af8:	60800217 	ldw	r2,8(r12)
   29afc:	213fffc4 	addi	r4,r4,-1
   29b00:	1300651e 	bne	r2,r12,29c98 <_malloc_r+0x7f4>
   29b04:	208000cc 	andi	r2,r4,3
   29b08:	633ffe04 	addi	r12,r12,-8
   29b0c:	103ffa1e 	bne	r2,zero,29af8 <__alt_data_end+0xfffe9af8>
   29b10:	98800117 	ldw	r2,4(r19)
   29b14:	0146303a 	nor	r3,zero,r5
   29b18:	1884703a 	and	r2,r3,r2
   29b1c:	98800115 	stw	r2,4(r19)
   29b20:	294b883a 	add	r5,r5,r5
   29b24:	117f2836 	bltu	r2,r5,297c8 <__alt_data_end+0xfffe97c8>
   29b28:	283f2726 	beq	r5,zero,297c8 <__alt_data_end+0xfffe97c8>
   29b2c:	2886703a 	and	r3,r5,r2
   29b30:	5809883a 	mov	r4,r11
   29b34:	183ec31e 	bne	r3,zero,29644 <__alt_data_end+0xfffe9644>
   29b38:	294b883a 	add	r5,r5,r5
   29b3c:	2886703a 	and	r3,r5,r2
   29b40:	21000104 	addi	r4,r4,4
   29b44:	183ffc26 	beq	r3,zero,29b38 <__alt_data_end+0xfffe9b38>
   29b48:	003ebe06 	br	29644 <__alt_data_end+0xfffe9644>
   29b4c:	00c05504 	movi	r3,340
   29b50:	18801236 	bltu	r3,r2,29b9c <_malloc_r+0x6f8>
   29b54:	8804d3fa 	srli	r2,r17,15
   29b58:	12001e04 	addi	r8,r2,120
   29b5c:	11c01dc4 	addi	r7,r2,119
   29b60:	4209883a 	add	r4,r8,r8
   29b64:	003e6d06 	br	2951c <__alt_data_end+0xfffe951c>
   29b68:	00c40004 	movi	r3,4096
   29b6c:	003f4606 	br	29888 <__alt_data_end+0xfffe9888>
   29b70:	00800044 	movi	r2,1
   29b74:	a0800115 	stw	r2,4(r20)
   29b78:	003f7406 	br	2994c <__alt_data_end+0xfffe994c>
   29b7c:	1805d0ba 	srai	r2,r3,2
   29b80:	01c00044 	movi	r7,1
   29b84:	30c00117 	ldw	r3,4(r6)
   29b88:	388e983a 	sll	r7,r7,r2
   29b8c:	2805883a 	mov	r2,r5
   29b90:	38c6b03a 	or	r3,r7,r3
   29b94:	30c00115 	stw	r3,4(r6)
   29b98:	003f9b06 	br	29a08 <__alt_data_end+0xfffe9a08>
   29b9c:	00c15504 	movi	r3,1364
   29ba0:	18801a36 	bltu	r3,r2,29c0c <_malloc_r+0x768>
   29ba4:	8804d4ba 	srli	r2,r17,18
   29ba8:	12001f44 	addi	r8,r2,125
   29bac:	11c01f04 	addi	r7,r2,124
   29bb0:	4209883a 	add	r4,r8,r8
   29bb4:	003e5906 	br	2951c <__alt_data_end+0xfffe951c>
   29bb8:	ad400404 	addi	r21,r21,16
   29bbc:	003f1706 	br	2981c <__alt_data_end+0xfffe981c>
   29bc0:	00c01504 	movi	r3,84
   29bc4:	18802336 	bltu	r3,r2,29c54 <_malloc_r+0x7b0>
   29bc8:	3804d33a 	srli	r2,r7,12
   29bcc:	11401bc4 	addi	r5,r2,111
   29bd0:	10c01b84 	addi	r3,r2,110
   29bd4:	294b883a 	add	r5,r5,r5
   29bd8:	003f7b06 	br	299c8 <__alt_data_end+0xfffe99c8>
   29bdc:	9c000217 	ldw	r16,8(r19)
   29be0:	00bfff04 	movi	r2,-4
   29be4:	80c00117 	ldw	r3,4(r16)
   29be8:	1886703a 	and	r3,r3,r2
   29bec:	003f5306 	br	2993c <__alt_data_end+0xfffe993c>
   29bf0:	3083ffcc 	andi	r2,r6,4095
   29bf4:	103f181e 	bne	r2,zero,29858 <__alt_data_end+0xfffe9858>
   29bf8:	99000217 	ldw	r4,8(r19)
   29bfc:	b545883a 	add	r2,r22,r21
   29c00:	10800054 	ori	r2,r2,1
   29c04:	20800115 	stw	r2,4(r4)
   29c08:	003f3e06 	br	29904 <__alt_data_end+0xfffe9904>
   29c0c:	01003f84 	movi	r4,254
   29c10:	02001fc4 	movi	r8,127
   29c14:	01c01f84 	movi	r7,126
   29c18:	003e4006 	br	2951c <__alt_data_end+0xfffe951c>
   29c1c:	008000f4 	movhi	r2,3
   29c20:	108c1a04 	addi	r2,r2,12392
   29c24:	15000015 	stw	r20,0(r2)
   29c28:	003f1106 	br	29870 <__alt_data_end+0xfffe9870>
   29c2c:	00800044 	movi	r2,1
   29c30:	002b883a 	mov	r21,zero
   29c34:	003f1f06 	br	298b4 <__alt_data_end+0xfffe98b4>
   29c38:	81400204 	addi	r5,r16,8
   29c3c:	9009883a 	mov	r4,r18
   29c40:	0028d740 	call	28d74 <_free_r>
   29c44:	008000f4 	movhi	r2,3
   29c48:	1092f104 	addi	r2,r2,19396
   29c4c:	10c00017 	ldw	r3,0(r2)
   29c50:	003f2c06 	br	29904 <__alt_data_end+0xfffe9904>
   29c54:	00c05504 	movi	r3,340
   29c58:	18800536 	bltu	r3,r2,29c70 <_malloc_r+0x7cc>
   29c5c:	3804d3fa 	srli	r2,r7,15
   29c60:	11401e04 	addi	r5,r2,120
   29c64:	10c01dc4 	addi	r3,r2,119
   29c68:	294b883a 	add	r5,r5,r5
   29c6c:	003f5606 	br	299c8 <__alt_data_end+0xfffe99c8>
   29c70:	00c15504 	movi	r3,1364
   29c74:	18800536 	bltu	r3,r2,29c8c <_malloc_r+0x7e8>
   29c78:	3804d4ba 	srli	r2,r7,18
   29c7c:	11401f44 	addi	r5,r2,125
   29c80:	10c01f04 	addi	r3,r2,124
   29c84:	294b883a 	add	r5,r5,r5
   29c88:	003f4f06 	br	299c8 <__alt_data_end+0xfffe99c8>
   29c8c:	01403f84 	movi	r5,254
   29c90:	00c01f84 	movi	r3,126
   29c94:	003f4c06 	br	299c8 <__alt_data_end+0xfffe99c8>
   29c98:	98800117 	ldw	r2,4(r19)
   29c9c:	003fa006 	br	29b20 <__alt_data_end+0xfffe9b20>
   29ca0:	8808d0fa 	srli	r4,r17,3
   29ca4:	20800044 	addi	r2,r4,1
   29ca8:	1085883a 	add	r2,r2,r2
   29cac:	003e9006 	br	296f0 <__alt_data_end+0xfffe96f0>

00029cb0 <memchr>:
   29cb0:	208000cc 	andi	r2,r4,3
   29cb4:	280f883a 	mov	r7,r5
   29cb8:	10003426 	beq	r2,zero,29d8c <memchr+0xdc>
   29cbc:	30bfffc4 	addi	r2,r6,-1
   29cc0:	30001a26 	beq	r6,zero,29d2c <memchr+0x7c>
   29cc4:	20c00003 	ldbu	r3,0(r4)
   29cc8:	29803fcc 	andi	r6,r5,255
   29ccc:	30c0051e 	bne	r6,r3,29ce4 <memchr+0x34>
   29cd0:	00001806 	br	29d34 <memchr+0x84>
   29cd4:	10001526 	beq	r2,zero,29d2c <memchr+0x7c>
   29cd8:	20c00003 	ldbu	r3,0(r4)
   29cdc:	10bfffc4 	addi	r2,r2,-1
   29ce0:	30c01426 	beq	r6,r3,29d34 <memchr+0x84>
   29ce4:	21000044 	addi	r4,r4,1
   29ce8:	20c000cc 	andi	r3,r4,3
   29cec:	183ff91e 	bne	r3,zero,29cd4 <__alt_data_end+0xfffe9cd4>
   29cf0:	020000c4 	movi	r8,3
   29cf4:	40801136 	bltu	r8,r2,29d3c <memchr+0x8c>
   29cf8:	10000c26 	beq	r2,zero,29d2c <memchr+0x7c>
   29cfc:	20c00003 	ldbu	r3,0(r4)
   29d00:	29403fcc 	andi	r5,r5,255
   29d04:	28c00b26 	beq	r5,r3,29d34 <memchr+0x84>
   29d08:	20c00044 	addi	r3,r4,1
   29d0c:	39803fcc 	andi	r6,r7,255
   29d10:	2089883a 	add	r4,r4,r2
   29d14:	00000306 	br	29d24 <memchr+0x74>
   29d18:	18c00044 	addi	r3,r3,1
   29d1c:	197fffc3 	ldbu	r5,-1(r3)
   29d20:	31400526 	beq	r6,r5,29d38 <memchr+0x88>
   29d24:	1805883a 	mov	r2,r3
   29d28:	20fffb1e 	bne	r4,r3,29d18 <__alt_data_end+0xfffe9d18>
   29d2c:	0005883a 	mov	r2,zero
   29d30:	f800283a 	ret
   29d34:	2005883a 	mov	r2,r4
   29d38:	f800283a 	ret
   29d3c:	28c03fcc 	andi	r3,r5,255
   29d40:	1812923a 	slli	r9,r3,8
   29d44:	02ffbff4 	movhi	r11,65279
   29d48:	02a02074 	movhi	r10,32897
   29d4c:	48d2b03a 	or	r9,r9,r3
   29d50:	4806943a 	slli	r3,r9,16
   29d54:	5affbfc4 	addi	r11,r11,-257
   29d58:	52a02004 	addi	r10,r10,-32640
   29d5c:	48d2b03a 	or	r9,r9,r3
   29d60:	20c00017 	ldw	r3,0(r4)
   29d64:	48c6f03a 	xor	r3,r9,r3
   29d68:	1acd883a 	add	r6,r3,r11
   29d6c:	00c6303a 	nor	r3,zero,r3
   29d70:	30c6703a 	and	r3,r6,r3
   29d74:	1a86703a 	and	r3,r3,r10
   29d78:	183fe01e 	bne	r3,zero,29cfc <__alt_data_end+0xfffe9cfc>
   29d7c:	10bfff04 	addi	r2,r2,-4
   29d80:	21000104 	addi	r4,r4,4
   29d84:	40bff636 	bltu	r8,r2,29d60 <__alt_data_end+0xfffe9d60>
   29d88:	003fdb06 	br	29cf8 <__alt_data_end+0xfffe9cf8>
   29d8c:	3005883a 	mov	r2,r6
   29d90:	003fd706 	br	29cf0 <__alt_data_end+0xfffe9cf0>

00029d94 <memcpy>:
   29d94:	defffd04 	addi	sp,sp,-12
   29d98:	dfc00215 	stw	ra,8(sp)
   29d9c:	dc400115 	stw	r17,4(sp)
   29da0:	dc000015 	stw	r16,0(sp)
   29da4:	00c003c4 	movi	r3,15
   29da8:	2005883a 	mov	r2,r4
   29dac:	1980452e 	bgeu	r3,r6,29ec4 <memcpy+0x130>
   29db0:	2906b03a 	or	r3,r5,r4
   29db4:	18c000cc 	andi	r3,r3,3
   29db8:	1800441e 	bne	r3,zero,29ecc <memcpy+0x138>
   29dbc:	347ffc04 	addi	r17,r6,-16
   29dc0:	8822d13a 	srli	r17,r17,4
   29dc4:	28c00104 	addi	r3,r5,4
   29dc8:	23400104 	addi	r13,r4,4
   29dcc:	8820913a 	slli	r16,r17,4
   29dd0:	2b000204 	addi	r12,r5,8
   29dd4:	22c00204 	addi	r11,r4,8
   29dd8:	84000504 	addi	r16,r16,20
   29ddc:	2a800304 	addi	r10,r5,12
   29de0:	22400304 	addi	r9,r4,12
   29de4:	2c21883a 	add	r16,r5,r16
   29de8:	2811883a 	mov	r8,r5
   29dec:	200f883a 	mov	r7,r4
   29df0:	41000017 	ldw	r4,0(r8)
   29df4:	1fc00017 	ldw	ra,0(r3)
   29df8:	63c00017 	ldw	r15,0(r12)
   29dfc:	39000015 	stw	r4,0(r7)
   29e00:	53800017 	ldw	r14,0(r10)
   29e04:	6fc00015 	stw	ra,0(r13)
   29e08:	5bc00015 	stw	r15,0(r11)
   29e0c:	4b800015 	stw	r14,0(r9)
   29e10:	18c00404 	addi	r3,r3,16
   29e14:	39c00404 	addi	r7,r7,16
   29e18:	42000404 	addi	r8,r8,16
   29e1c:	6b400404 	addi	r13,r13,16
   29e20:	63000404 	addi	r12,r12,16
   29e24:	5ac00404 	addi	r11,r11,16
   29e28:	52800404 	addi	r10,r10,16
   29e2c:	4a400404 	addi	r9,r9,16
   29e30:	1c3fef1e 	bne	r3,r16,29df0 <__alt_data_end+0xfffe9df0>
   29e34:	89c00044 	addi	r7,r17,1
   29e38:	380e913a 	slli	r7,r7,4
   29e3c:	310003cc 	andi	r4,r6,15
   29e40:	02c000c4 	movi	r11,3
   29e44:	11c7883a 	add	r3,r2,r7
   29e48:	29cb883a 	add	r5,r5,r7
   29e4c:	5900212e 	bgeu	r11,r4,29ed4 <memcpy+0x140>
   29e50:	1813883a 	mov	r9,r3
   29e54:	2811883a 	mov	r8,r5
   29e58:	200f883a 	mov	r7,r4
   29e5c:	42800017 	ldw	r10,0(r8)
   29e60:	4a400104 	addi	r9,r9,4
   29e64:	39ffff04 	addi	r7,r7,-4
   29e68:	4abfff15 	stw	r10,-4(r9)
   29e6c:	42000104 	addi	r8,r8,4
   29e70:	59fffa36 	bltu	r11,r7,29e5c <__alt_data_end+0xfffe9e5c>
   29e74:	213fff04 	addi	r4,r4,-4
   29e78:	2008d0ba 	srli	r4,r4,2
   29e7c:	318000cc 	andi	r6,r6,3
   29e80:	21000044 	addi	r4,r4,1
   29e84:	2109883a 	add	r4,r4,r4
   29e88:	2109883a 	add	r4,r4,r4
   29e8c:	1907883a 	add	r3,r3,r4
   29e90:	290b883a 	add	r5,r5,r4
   29e94:	30000626 	beq	r6,zero,29eb0 <memcpy+0x11c>
   29e98:	198d883a 	add	r6,r3,r6
   29e9c:	29c00003 	ldbu	r7,0(r5)
   29ea0:	18c00044 	addi	r3,r3,1
   29ea4:	29400044 	addi	r5,r5,1
   29ea8:	19ffffc5 	stb	r7,-1(r3)
   29eac:	19bffb1e 	bne	r3,r6,29e9c <__alt_data_end+0xfffe9e9c>
   29eb0:	dfc00217 	ldw	ra,8(sp)
   29eb4:	dc400117 	ldw	r17,4(sp)
   29eb8:	dc000017 	ldw	r16,0(sp)
   29ebc:	dec00304 	addi	sp,sp,12
   29ec0:	f800283a 	ret
   29ec4:	2007883a 	mov	r3,r4
   29ec8:	003ff206 	br	29e94 <__alt_data_end+0xfffe9e94>
   29ecc:	2007883a 	mov	r3,r4
   29ed0:	003ff106 	br	29e98 <__alt_data_end+0xfffe9e98>
   29ed4:	200d883a 	mov	r6,r4
   29ed8:	003fee06 	br	29e94 <__alt_data_end+0xfffe9e94>

00029edc <memset>:
   29edc:	20c000cc 	andi	r3,r4,3
   29ee0:	2005883a 	mov	r2,r4
   29ee4:	18004426 	beq	r3,zero,29ff8 <memset+0x11c>
   29ee8:	31ffffc4 	addi	r7,r6,-1
   29eec:	30004026 	beq	r6,zero,29ff0 <memset+0x114>
   29ef0:	2813883a 	mov	r9,r5
   29ef4:	200d883a 	mov	r6,r4
   29ef8:	2007883a 	mov	r3,r4
   29efc:	00000406 	br	29f10 <memset+0x34>
   29f00:	3a3fffc4 	addi	r8,r7,-1
   29f04:	31800044 	addi	r6,r6,1
   29f08:	38003926 	beq	r7,zero,29ff0 <memset+0x114>
   29f0c:	400f883a 	mov	r7,r8
   29f10:	18c00044 	addi	r3,r3,1
   29f14:	32400005 	stb	r9,0(r6)
   29f18:	1a0000cc 	andi	r8,r3,3
   29f1c:	403ff81e 	bne	r8,zero,29f00 <__alt_data_end+0xfffe9f00>
   29f20:	010000c4 	movi	r4,3
   29f24:	21c02d2e 	bgeu	r4,r7,29fdc <memset+0x100>
   29f28:	29003fcc 	andi	r4,r5,255
   29f2c:	200c923a 	slli	r6,r4,8
   29f30:	3108b03a 	or	r4,r6,r4
   29f34:	200c943a 	slli	r6,r4,16
   29f38:	218cb03a 	or	r6,r4,r6
   29f3c:	010003c4 	movi	r4,15
   29f40:	21c0182e 	bgeu	r4,r7,29fa4 <memset+0xc8>
   29f44:	3b3ffc04 	addi	r12,r7,-16
   29f48:	6018d13a 	srli	r12,r12,4
   29f4c:	1a000104 	addi	r8,r3,4
   29f50:	1ac00204 	addi	r11,r3,8
   29f54:	6008913a 	slli	r4,r12,4
   29f58:	1a800304 	addi	r10,r3,12
   29f5c:	1813883a 	mov	r9,r3
   29f60:	21000504 	addi	r4,r4,20
   29f64:	1909883a 	add	r4,r3,r4
   29f68:	49800015 	stw	r6,0(r9)
   29f6c:	41800015 	stw	r6,0(r8)
   29f70:	59800015 	stw	r6,0(r11)
   29f74:	51800015 	stw	r6,0(r10)
   29f78:	42000404 	addi	r8,r8,16
   29f7c:	4a400404 	addi	r9,r9,16
   29f80:	5ac00404 	addi	r11,r11,16
   29f84:	52800404 	addi	r10,r10,16
   29f88:	413ff71e 	bne	r8,r4,29f68 <__alt_data_end+0xfffe9f68>
   29f8c:	63000044 	addi	r12,r12,1
   29f90:	6018913a 	slli	r12,r12,4
   29f94:	39c003cc 	andi	r7,r7,15
   29f98:	010000c4 	movi	r4,3
   29f9c:	1b07883a 	add	r3,r3,r12
   29fa0:	21c00e2e 	bgeu	r4,r7,29fdc <memset+0x100>
   29fa4:	1813883a 	mov	r9,r3
   29fa8:	3811883a 	mov	r8,r7
   29fac:	010000c4 	movi	r4,3
   29fb0:	49800015 	stw	r6,0(r9)
   29fb4:	423fff04 	addi	r8,r8,-4
   29fb8:	4a400104 	addi	r9,r9,4
   29fbc:	223ffc36 	bltu	r4,r8,29fb0 <__alt_data_end+0xfffe9fb0>
   29fc0:	393fff04 	addi	r4,r7,-4
   29fc4:	2008d0ba 	srli	r4,r4,2
   29fc8:	39c000cc 	andi	r7,r7,3
   29fcc:	21000044 	addi	r4,r4,1
   29fd0:	2109883a 	add	r4,r4,r4
   29fd4:	2109883a 	add	r4,r4,r4
   29fd8:	1907883a 	add	r3,r3,r4
   29fdc:	38000526 	beq	r7,zero,29ff4 <memset+0x118>
   29fe0:	19cf883a 	add	r7,r3,r7
   29fe4:	19400005 	stb	r5,0(r3)
   29fe8:	18c00044 	addi	r3,r3,1
   29fec:	38fffd1e 	bne	r7,r3,29fe4 <__alt_data_end+0xfffe9fe4>
   29ff0:	f800283a 	ret
   29ff4:	f800283a 	ret
   29ff8:	2007883a 	mov	r3,r4
   29ffc:	300f883a 	mov	r7,r6
   2a000:	003fc706 	br	29f20 <__alt_data_end+0xfffe9f20>

0002a004 <_Balloc>:
   2a004:	20801317 	ldw	r2,76(r4)
   2a008:	defffc04 	addi	sp,sp,-16
   2a00c:	dc400115 	stw	r17,4(sp)
   2a010:	dc000015 	stw	r16,0(sp)
   2a014:	dfc00315 	stw	ra,12(sp)
   2a018:	dc800215 	stw	r18,8(sp)
   2a01c:	2023883a 	mov	r17,r4
   2a020:	2821883a 	mov	r16,r5
   2a024:	10000f26 	beq	r2,zero,2a064 <_Balloc+0x60>
   2a028:	8407883a 	add	r3,r16,r16
   2a02c:	18c7883a 	add	r3,r3,r3
   2a030:	10c7883a 	add	r3,r2,r3
   2a034:	18800017 	ldw	r2,0(r3)
   2a038:	10001126 	beq	r2,zero,2a080 <_Balloc+0x7c>
   2a03c:	11000017 	ldw	r4,0(r2)
   2a040:	19000015 	stw	r4,0(r3)
   2a044:	10000415 	stw	zero,16(r2)
   2a048:	10000315 	stw	zero,12(r2)
   2a04c:	dfc00317 	ldw	ra,12(sp)
   2a050:	dc800217 	ldw	r18,8(sp)
   2a054:	dc400117 	ldw	r17,4(sp)
   2a058:	dc000017 	ldw	r16,0(sp)
   2a05c:	dec00404 	addi	sp,sp,16
   2a060:	f800283a 	ret
   2a064:	01800844 	movi	r6,33
   2a068:	01400104 	movi	r5,4
   2a06c:	002ca000 	call	2ca00 <_calloc_r>
   2a070:	88801315 	stw	r2,76(r17)
   2a074:	103fec1e 	bne	r2,zero,2a028 <__alt_data_end+0xfffea028>
   2a078:	0005883a 	mov	r2,zero
   2a07c:	003ff306 	br	2a04c <__alt_data_end+0xfffea04c>
   2a080:	01400044 	movi	r5,1
   2a084:	2c24983a 	sll	r18,r5,r16
   2a088:	8809883a 	mov	r4,r17
   2a08c:	91800144 	addi	r6,r18,5
   2a090:	318d883a 	add	r6,r6,r6
   2a094:	318d883a 	add	r6,r6,r6
   2a098:	002ca000 	call	2ca00 <_calloc_r>
   2a09c:	103ff626 	beq	r2,zero,2a078 <__alt_data_end+0xfffea078>
   2a0a0:	14000115 	stw	r16,4(r2)
   2a0a4:	14800215 	stw	r18,8(r2)
   2a0a8:	003fe606 	br	2a044 <__alt_data_end+0xfffea044>

0002a0ac <_Bfree>:
   2a0ac:	28000826 	beq	r5,zero,2a0d0 <_Bfree+0x24>
   2a0b0:	28c00117 	ldw	r3,4(r5)
   2a0b4:	20801317 	ldw	r2,76(r4)
   2a0b8:	18c7883a 	add	r3,r3,r3
   2a0bc:	18c7883a 	add	r3,r3,r3
   2a0c0:	10c5883a 	add	r2,r2,r3
   2a0c4:	10c00017 	ldw	r3,0(r2)
   2a0c8:	28c00015 	stw	r3,0(r5)
   2a0cc:	11400015 	stw	r5,0(r2)
   2a0d0:	f800283a 	ret

0002a0d4 <__multadd>:
   2a0d4:	defffa04 	addi	sp,sp,-24
   2a0d8:	dc800315 	stw	r18,12(sp)
   2a0dc:	dc400215 	stw	r17,8(sp)
   2a0e0:	dc000115 	stw	r16,4(sp)
   2a0e4:	2823883a 	mov	r17,r5
   2a0e8:	2c000417 	ldw	r16,16(r5)
   2a0ec:	dfc00515 	stw	ra,20(sp)
   2a0f0:	dcc00415 	stw	r19,16(sp)
   2a0f4:	2025883a 	mov	r18,r4
   2a0f8:	29400504 	addi	r5,r5,20
   2a0fc:	0011883a 	mov	r8,zero
   2a100:	28c00017 	ldw	r3,0(r5)
   2a104:	29400104 	addi	r5,r5,4
   2a108:	42000044 	addi	r8,r8,1
   2a10c:	18bfffcc 	andi	r2,r3,65535
   2a110:	1185383a 	mul	r2,r2,r6
   2a114:	1806d43a 	srli	r3,r3,16
   2a118:	11cf883a 	add	r7,r2,r7
   2a11c:	3808d43a 	srli	r4,r7,16
   2a120:	1987383a 	mul	r3,r3,r6
   2a124:	38bfffcc 	andi	r2,r7,65535
   2a128:	1907883a 	add	r3,r3,r4
   2a12c:	1808943a 	slli	r4,r3,16
   2a130:	180ed43a 	srli	r7,r3,16
   2a134:	2085883a 	add	r2,r4,r2
   2a138:	28bfff15 	stw	r2,-4(r5)
   2a13c:	443ff016 	blt	r8,r16,2a100 <__alt_data_end+0xfffea100>
   2a140:	38000926 	beq	r7,zero,2a168 <__multadd+0x94>
   2a144:	88800217 	ldw	r2,8(r17)
   2a148:	80800f0e 	bge	r16,r2,2a188 <__multadd+0xb4>
   2a14c:	80800144 	addi	r2,r16,5
   2a150:	1085883a 	add	r2,r2,r2
   2a154:	1085883a 	add	r2,r2,r2
   2a158:	8885883a 	add	r2,r17,r2
   2a15c:	11c00015 	stw	r7,0(r2)
   2a160:	84000044 	addi	r16,r16,1
   2a164:	8c000415 	stw	r16,16(r17)
   2a168:	8805883a 	mov	r2,r17
   2a16c:	dfc00517 	ldw	ra,20(sp)
   2a170:	dcc00417 	ldw	r19,16(sp)
   2a174:	dc800317 	ldw	r18,12(sp)
   2a178:	dc400217 	ldw	r17,8(sp)
   2a17c:	dc000117 	ldw	r16,4(sp)
   2a180:	dec00604 	addi	sp,sp,24
   2a184:	f800283a 	ret
   2a188:	89400117 	ldw	r5,4(r17)
   2a18c:	9009883a 	mov	r4,r18
   2a190:	d9c00015 	stw	r7,0(sp)
   2a194:	29400044 	addi	r5,r5,1
   2a198:	002a0040 	call	2a004 <_Balloc>
   2a19c:	89800417 	ldw	r6,16(r17)
   2a1a0:	89400304 	addi	r5,r17,12
   2a1a4:	11000304 	addi	r4,r2,12
   2a1a8:	31800084 	addi	r6,r6,2
   2a1ac:	318d883a 	add	r6,r6,r6
   2a1b0:	318d883a 	add	r6,r6,r6
   2a1b4:	1027883a 	mov	r19,r2
   2a1b8:	0029d940 	call	29d94 <memcpy>
   2a1bc:	d9c00017 	ldw	r7,0(sp)
   2a1c0:	88000a26 	beq	r17,zero,2a1ec <__multadd+0x118>
   2a1c4:	88c00117 	ldw	r3,4(r17)
   2a1c8:	90801317 	ldw	r2,76(r18)
   2a1cc:	18c7883a 	add	r3,r3,r3
   2a1d0:	18c7883a 	add	r3,r3,r3
   2a1d4:	10c5883a 	add	r2,r2,r3
   2a1d8:	10c00017 	ldw	r3,0(r2)
   2a1dc:	88c00015 	stw	r3,0(r17)
   2a1e0:	14400015 	stw	r17,0(r2)
   2a1e4:	9823883a 	mov	r17,r19
   2a1e8:	003fd806 	br	2a14c <__alt_data_end+0xfffea14c>
   2a1ec:	9823883a 	mov	r17,r19
   2a1f0:	003fd606 	br	2a14c <__alt_data_end+0xfffea14c>

0002a1f4 <__s2b>:
   2a1f4:	defff904 	addi	sp,sp,-28
   2a1f8:	dc400115 	stw	r17,4(sp)
   2a1fc:	dc000015 	stw	r16,0(sp)
   2a200:	2023883a 	mov	r17,r4
   2a204:	2821883a 	mov	r16,r5
   2a208:	39000204 	addi	r4,r7,8
   2a20c:	01400244 	movi	r5,9
   2a210:	dcc00315 	stw	r19,12(sp)
   2a214:	dc800215 	stw	r18,8(sp)
   2a218:	dfc00615 	stw	ra,24(sp)
   2a21c:	dd400515 	stw	r21,20(sp)
   2a220:	dd000415 	stw	r20,16(sp)
   2a224:	3825883a 	mov	r18,r7
   2a228:	3027883a 	mov	r19,r6
   2a22c:	002216c0 	call	2216c <__divsi3>
   2a230:	00c00044 	movi	r3,1
   2a234:	000b883a 	mov	r5,zero
   2a238:	1880030e 	bge	r3,r2,2a248 <__s2b+0x54>
   2a23c:	18c7883a 	add	r3,r3,r3
   2a240:	29400044 	addi	r5,r5,1
   2a244:	18bffd16 	blt	r3,r2,2a23c <__alt_data_end+0xfffea23c>
   2a248:	8809883a 	mov	r4,r17
   2a24c:	002a0040 	call	2a004 <_Balloc>
   2a250:	d8c00717 	ldw	r3,28(sp)
   2a254:	10c00515 	stw	r3,20(r2)
   2a258:	00c00044 	movi	r3,1
   2a25c:	10c00415 	stw	r3,16(r2)
   2a260:	00c00244 	movi	r3,9
   2a264:	1cc0210e 	bge	r3,r19,2a2ec <__s2b+0xf8>
   2a268:	80eb883a 	add	r21,r16,r3
   2a26c:	a829883a 	mov	r20,r21
   2a270:	84e1883a 	add	r16,r16,r19
   2a274:	a1c00007 	ldb	r7,0(r20)
   2a278:	01800284 	movi	r6,10
   2a27c:	a5000044 	addi	r20,r20,1
   2a280:	100b883a 	mov	r5,r2
   2a284:	39fff404 	addi	r7,r7,-48
   2a288:	8809883a 	mov	r4,r17
   2a28c:	002a0d40 	call	2a0d4 <__multadd>
   2a290:	a43ff81e 	bne	r20,r16,2a274 <__alt_data_end+0xfffea274>
   2a294:	ace1883a 	add	r16,r21,r19
   2a298:	843ffe04 	addi	r16,r16,-8
   2a29c:	9c800a0e 	bge	r19,r18,2a2c8 <__s2b+0xd4>
   2a2a0:	94e5c83a 	sub	r18,r18,r19
   2a2a4:	84a5883a 	add	r18,r16,r18
   2a2a8:	81c00007 	ldb	r7,0(r16)
   2a2ac:	01800284 	movi	r6,10
   2a2b0:	84000044 	addi	r16,r16,1
   2a2b4:	100b883a 	mov	r5,r2
   2a2b8:	39fff404 	addi	r7,r7,-48
   2a2bc:	8809883a 	mov	r4,r17
   2a2c0:	002a0d40 	call	2a0d4 <__multadd>
   2a2c4:	84bff81e 	bne	r16,r18,2a2a8 <__alt_data_end+0xfffea2a8>
   2a2c8:	dfc00617 	ldw	ra,24(sp)
   2a2cc:	dd400517 	ldw	r21,20(sp)
   2a2d0:	dd000417 	ldw	r20,16(sp)
   2a2d4:	dcc00317 	ldw	r19,12(sp)
   2a2d8:	dc800217 	ldw	r18,8(sp)
   2a2dc:	dc400117 	ldw	r17,4(sp)
   2a2e0:	dc000017 	ldw	r16,0(sp)
   2a2e4:	dec00704 	addi	sp,sp,28
   2a2e8:	f800283a 	ret
   2a2ec:	84000284 	addi	r16,r16,10
   2a2f0:	1827883a 	mov	r19,r3
   2a2f4:	003fe906 	br	2a29c <__alt_data_end+0xfffea29c>

0002a2f8 <__hi0bits>:
   2a2f8:	20bfffec 	andhi	r2,r4,65535
   2a2fc:	1000141e 	bne	r2,zero,2a350 <__hi0bits+0x58>
   2a300:	2008943a 	slli	r4,r4,16
   2a304:	00800404 	movi	r2,16
   2a308:	20ffc02c 	andhi	r3,r4,65280
   2a30c:	1800021e 	bne	r3,zero,2a318 <__hi0bits+0x20>
   2a310:	2008923a 	slli	r4,r4,8
   2a314:	10800204 	addi	r2,r2,8
   2a318:	20fc002c 	andhi	r3,r4,61440
   2a31c:	1800021e 	bne	r3,zero,2a328 <__hi0bits+0x30>
   2a320:	2008913a 	slli	r4,r4,4
   2a324:	10800104 	addi	r2,r2,4
   2a328:	20f0002c 	andhi	r3,r4,49152
   2a32c:	1800031e 	bne	r3,zero,2a33c <__hi0bits+0x44>
   2a330:	2109883a 	add	r4,r4,r4
   2a334:	10800084 	addi	r2,r2,2
   2a338:	2109883a 	add	r4,r4,r4
   2a33c:	20000316 	blt	r4,zero,2a34c <__hi0bits+0x54>
   2a340:	2110002c 	andhi	r4,r4,16384
   2a344:	2000041e 	bne	r4,zero,2a358 <__hi0bits+0x60>
   2a348:	00800804 	movi	r2,32
   2a34c:	f800283a 	ret
   2a350:	0005883a 	mov	r2,zero
   2a354:	003fec06 	br	2a308 <__alt_data_end+0xfffea308>
   2a358:	10800044 	addi	r2,r2,1
   2a35c:	f800283a 	ret

0002a360 <__lo0bits>:
   2a360:	20c00017 	ldw	r3,0(r4)
   2a364:	188001cc 	andi	r2,r3,7
   2a368:	10000826 	beq	r2,zero,2a38c <__lo0bits+0x2c>
   2a36c:	1880004c 	andi	r2,r3,1
   2a370:	1000211e 	bne	r2,zero,2a3f8 <__lo0bits+0x98>
   2a374:	1880008c 	andi	r2,r3,2
   2a378:	1000211e 	bne	r2,zero,2a400 <__lo0bits+0xa0>
   2a37c:	1806d0ba 	srli	r3,r3,2
   2a380:	00800084 	movi	r2,2
   2a384:	20c00015 	stw	r3,0(r4)
   2a388:	f800283a 	ret
   2a38c:	18bfffcc 	andi	r2,r3,65535
   2a390:	10001326 	beq	r2,zero,2a3e0 <__lo0bits+0x80>
   2a394:	0005883a 	mov	r2,zero
   2a398:	19403fcc 	andi	r5,r3,255
   2a39c:	2800021e 	bne	r5,zero,2a3a8 <__lo0bits+0x48>
   2a3a0:	1806d23a 	srli	r3,r3,8
   2a3a4:	10800204 	addi	r2,r2,8
   2a3a8:	194003cc 	andi	r5,r3,15
   2a3ac:	2800021e 	bne	r5,zero,2a3b8 <__lo0bits+0x58>
   2a3b0:	1806d13a 	srli	r3,r3,4
   2a3b4:	10800104 	addi	r2,r2,4
   2a3b8:	194000cc 	andi	r5,r3,3
   2a3bc:	2800021e 	bne	r5,zero,2a3c8 <__lo0bits+0x68>
   2a3c0:	1806d0ba 	srli	r3,r3,2
   2a3c4:	10800084 	addi	r2,r2,2
   2a3c8:	1940004c 	andi	r5,r3,1
   2a3cc:	2800081e 	bne	r5,zero,2a3f0 <__lo0bits+0x90>
   2a3d0:	1806d07a 	srli	r3,r3,1
   2a3d4:	1800051e 	bne	r3,zero,2a3ec <__lo0bits+0x8c>
   2a3d8:	00800804 	movi	r2,32
   2a3dc:	f800283a 	ret
   2a3e0:	1806d43a 	srli	r3,r3,16
   2a3e4:	00800404 	movi	r2,16
   2a3e8:	003feb06 	br	2a398 <__alt_data_end+0xfffea398>
   2a3ec:	10800044 	addi	r2,r2,1
   2a3f0:	20c00015 	stw	r3,0(r4)
   2a3f4:	f800283a 	ret
   2a3f8:	0005883a 	mov	r2,zero
   2a3fc:	f800283a 	ret
   2a400:	1806d07a 	srli	r3,r3,1
   2a404:	00800044 	movi	r2,1
   2a408:	20c00015 	stw	r3,0(r4)
   2a40c:	f800283a 	ret

0002a410 <__i2b>:
   2a410:	defffd04 	addi	sp,sp,-12
   2a414:	dc000015 	stw	r16,0(sp)
   2a418:	04000044 	movi	r16,1
   2a41c:	dc400115 	stw	r17,4(sp)
   2a420:	2823883a 	mov	r17,r5
   2a424:	800b883a 	mov	r5,r16
   2a428:	dfc00215 	stw	ra,8(sp)
   2a42c:	002a0040 	call	2a004 <_Balloc>
   2a430:	14400515 	stw	r17,20(r2)
   2a434:	14000415 	stw	r16,16(r2)
   2a438:	dfc00217 	ldw	ra,8(sp)
   2a43c:	dc400117 	ldw	r17,4(sp)
   2a440:	dc000017 	ldw	r16,0(sp)
   2a444:	dec00304 	addi	sp,sp,12
   2a448:	f800283a 	ret

0002a44c <__multiply>:
   2a44c:	defffa04 	addi	sp,sp,-24
   2a450:	dcc00315 	stw	r19,12(sp)
   2a454:	dc800215 	stw	r18,8(sp)
   2a458:	34c00417 	ldw	r19,16(r6)
   2a45c:	2c800417 	ldw	r18,16(r5)
   2a460:	dd000415 	stw	r20,16(sp)
   2a464:	dc400115 	stw	r17,4(sp)
   2a468:	dfc00515 	stw	ra,20(sp)
   2a46c:	dc000015 	stw	r16,0(sp)
   2a470:	2829883a 	mov	r20,r5
   2a474:	3023883a 	mov	r17,r6
   2a478:	94c0050e 	bge	r18,r19,2a490 <__multiply+0x44>
   2a47c:	9007883a 	mov	r3,r18
   2a480:	3029883a 	mov	r20,r6
   2a484:	9825883a 	mov	r18,r19
   2a488:	2823883a 	mov	r17,r5
   2a48c:	1827883a 	mov	r19,r3
   2a490:	a0800217 	ldw	r2,8(r20)
   2a494:	94e1883a 	add	r16,r18,r19
   2a498:	a1400117 	ldw	r5,4(r20)
   2a49c:	1400010e 	bge	r2,r16,2a4a4 <__multiply+0x58>
   2a4a0:	29400044 	addi	r5,r5,1
   2a4a4:	002a0040 	call	2a004 <_Balloc>
   2a4a8:	8415883a 	add	r10,r16,r16
   2a4ac:	12c00504 	addi	r11,r2,20
   2a4b0:	5295883a 	add	r10,r10,r10
   2a4b4:	5a95883a 	add	r10,r11,r10
   2a4b8:	5807883a 	mov	r3,r11
   2a4bc:	5a80032e 	bgeu	r11,r10,2a4cc <__multiply+0x80>
   2a4c0:	18000015 	stw	zero,0(r3)
   2a4c4:	18c00104 	addi	r3,r3,4
   2a4c8:	1abffd36 	bltu	r3,r10,2a4c0 <__alt_data_end+0xfffea4c0>
   2a4cc:	9ce7883a 	add	r19,r19,r19
   2a4d0:	94a5883a 	add	r18,r18,r18
   2a4d4:	89800504 	addi	r6,r17,20
   2a4d8:	9ce7883a 	add	r19,r19,r19
   2a4dc:	a3400504 	addi	r13,r20,20
   2a4e0:	94a5883a 	add	r18,r18,r18
   2a4e4:	34d9883a 	add	r12,r6,r19
   2a4e8:	6c93883a 	add	r9,r13,r18
   2a4ec:	3300422e 	bgeu	r6,r12,2a5f8 <__multiply+0x1ac>
   2a4f0:	37c00017 	ldw	ra,0(r6)
   2a4f4:	fbffffcc 	andi	r15,ra,65535
   2a4f8:	78001b26 	beq	r15,zero,2a568 <__multiply+0x11c>
   2a4fc:	5811883a 	mov	r8,r11
   2a500:	681d883a 	mov	r14,r13
   2a504:	000f883a 	mov	r7,zero
   2a508:	71000017 	ldw	r4,0(r14)
   2a50c:	40c00017 	ldw	r3,0(r8)
   2a510:	73800104 	addi	r14,r14,4
   2a514:	217fffcc 	andi	r5,r4,65535
   2a518:	2bcb383a 	mul	r5,r5,r15
   2a51c:	2008d43a 	srli	r4,r4,16
   2a520:	1c7fffcc 	andi	r17,r3,65535
   2a524:	2c4b883a 	add	r5,r5,r17
   2a528:	29cb883a 	add	r5,r5,r7
   2a52c:	23c9383a 	mul	r4,r4,r15
   2a530:	1806d43a 	srli	r3,r3,16
   2a534:	280ed43a 	srli	r7,r5,16
   2a538:	297fffcc 	andi	r5,r5,65535
   2a53c:	20c7883a 	add	r3,r4,r3
   2a540:	19c7883a 	add	r3,r3,r7
   2a544:	1808943a 	slli	r4,r3,16
   2a548:	4023883a 	mov	r17,r8
   2a54c:	180ed43a 	srli	r7,r3,16
   2a550:	214ab03a 	or	r5,r4,r5
   2a554:	41400015 	stw	r5,0(r8)
   2a558:	42000104 	addi	r8,r8,4
   2a55c:	727fea36 	bltu	r14,r9,2a508 <__alt_data_end+0xfffea508>
   2a560:	89c00115 	stw	r7,4(r17)
   2a564:	37c00017 	ldw	ra,0(r6)
   2a568:	f83ed43a 	srli	ra,ra,16
   2a56c:	f8001f26 	beq	ra,zero,2a5ec <__multiply+0x1a0>
   2a570:	58c00017 	ldw	r3,0(r11)
   2a574:	681d883a 	mov	r14,r13
   2a578:	581f883a 	mov	r15,r11
   2a57c:	1811883a 	mov	r8,r3
   2a580:	5825883a 	mov	r18,r11
   2a584:	000f883a 	mov	r7,zero
   2a588:	00000106 	br	2a590 <__multiply+0x144>
   2a58c:	8825883a 	mov	r18,r17
   2a590:	7140000b 	ldhu	r5,0(r14)
   2a594:	4010d43a 	srli	r8,r8,16
   2a598:	193fffcc 	andi	r4,r3,65535
   2a59c:	2fcb383a 	mul	r5,r5,ra
   2a5a0:	7bc00104 	addi	r15,r15,4
   2a5a4:	73800104 	addi	r14,r14,4
   2a5a8:	2a0b883a 	add	r5,r5,r8
   2a5ac:	29cb883a 	add	r5,r5,r7
   2a5b0:	2806943a 	slli	r3,r5,16
   2a5b4:	94400104 	addi	r17,r18,4
   2a5b8:	280ad43a 	srli	r5,r5,16
   2a5bc:	1908b03a 	or	r4,r3,r4
   2a5c0:	793fff15 	stw	r4,-4(r15)
   2a5c4:	70ffff17 	ldw	r3,-4(r14)
   2a5c8:	8a000017 	ldw	r8,0(r17)
   2a5cc:	1806d43a 	srli	r3,r3,16
   2a5d0:	413fffcc 	andi	r4,r8,65535
   2a5d4:	1fc7383a 	mul	r3,r3,ra
   2a5d8:	1907883a 	add	r3,r3,r4
   2a5dc:	1947883a 	add	r3,r3,r5
   2a5e0:	180ed43a 	srli	r7,r3,16
   2a5e4:	727fe936 	bltu	r14,r9,2a58c <__alt_data_end+0xfffea58c>
   2a5e8:	90c00115 	stw	r3,4(r18)
   2a5ec:	31800104 	addi	r6,r6,4
   2a5f0:	5ac00104 	addi	r11,r11,4
   2a5f4:	333fbe36 	bltu	r6,r12,2a4f0 <__alt_data_end+0xfffea4f0>
   2a5f8:	0400090e 	bge	zero,r16,2a620 <__multiply+0x1d4>
   2a5fc:	50ffff17 	ldw	r3,-4(r10)
   2a600:	52bfff04 	addi	r10,r10,-4
   2a604:	18000326 	beq	r3,zero,2a614 <__multiply+0x1c8>
   2a608:	00000506 	br	2a620 <__multiply+0x1d4>
   2a60c:	50c00017 	ldw	r3,0(r10)
   2a610:	1800031e 	bne	r3,zero,2a620 <__multiply+0x1d4>
   2a614:	843fffc4 	addi	r16,r16,-1
   2a618:	52bfff04 	addi	r10,r10,-4
   2a61c:	803ffb1e 	bne	r16,zero,2a60c <__alt_data_end+0xfffea60c>
   2a620:	14000415 	stw	r16,16(r2)
   2a624:	dfc00517 	ldw	ra,20(sp)
   2a628:	dd000417 	ldw	r20,16(sp)
   2a62c:	dcc00317 	ldw	r19,12(sp)
   2a630:	dc800217 	ldw	r18,8(sp)
   2a634:	dc400117 	ldw	r17,4(sp)
   2a638:	dc000017 	ldw	r16,0(sp)
   2a63c:	dec00604 	addi	sp,sp,24
   2a640:	f800283a 	ret

0002a644 <__pow5mult>:
   2a644:	defffa04 	addi	sp,sp,-24
   2a648:	dcc00315 	stw	r19,12(sp)
   2a64c:	dc000015 	stw	r16,0(sp)
   2a650:	dfc00515 	stw	ra,20(sp)
   2a654:	dd000415 	stw	r20,16(sp)
   2a658:	dc800215 	stw	r18,8(sp)
   2a65c:	dc400115 	stw	r17,4(sp)
   2a660:	308000cc 	andi	r2,r6,3
   2a664:	3021883a 	mov	r16,r6
   2a668:	2027883a 	mov	r19,r4
   2a66c:	10002f1e 	bne	r2,zero,2a72c <__pow5mult+0xe8>
   2a670:	2825883a 	mov	r18,r5
   2a674:	8021d0ba 	srai	r16,r16,2
   2a678:	80001a26 	beq	r16,zero,2a6e4 <__pow5mult+0xa0>
   2a67c:	9c401217 	ldw	r17,72(r19)
   2a680:	8800061e 	bne	r17,zero,2a69c <__pow5mult+0x58>
   2a684:	00003406 	br	2a758 <__pow5mult+0x114>
   2a688:	8021d07a 	srai	r16,r16,1
   2a68c:	80001526 	beq	r16,zero,2a6e4 <__pow5mult+0xa0>
   2a690:	88800017 	ldw	r2,0(r17)
   2a694:	10001c26 	beq	r2,zero,2a708 <__pow5mult+0xc4>
   2a698:	1023883a 	mov	r17,r2
   2a69c:	8080004c 	andi	r2,r16,1
   2a6a0:	103ff926 	beq	r2,zero,2a688 <__alt_data_end+0xfffea688>
   2a6a4:	880d883a 	mov	r6,r17
   2a6a8:	900b883a 	mov	r5,r18
   2a6ac:	9809883a 	mov	r4,r19
   2a6b0:	002a44c0 	call	2a44c <__multiply>
   2a6b4:	90001b26 	beq	r18,zero,2a724 <__pow5mult+0xe0>
   2a6b8:	91000117 	ldw	r4,4(r18)
   2a6bc:	98c01317 	ldw	r3,76(r19)
   2a6c0:	8021d07a 	srai	r16,r16,1
   2a6c4:	2109883a 	add	r4,r4,r4
   2a6c8:	2109883a 	add	r4,r4,r4
   2a6cc:	1907883a 	add	r3,r3,r4
   2a6d0:	19000017 	ldw	r4,0(r3)
   2a6d4:	91000015 	stw	r4,0(r18)
   2a6d8:	1c800015 	stw	r18,0(r3)
   2a6dc:	1025883a 	mov	r18,r2
   2a6e0:	803feb1e 	bne	r16,zero,2a690 <__alt_data_end+0xfffea690>
   2a6e4:	9005883a 	mov	r2,r18
   2a6e8:	dfc00517 	ldw	ra,20(sp)
   2a6ec:	dd000417 	ldw	r20,16(sp)
   2a6f0:	dcc00317 	ldw	r19,12(sp)
   2a6f4:	dc800217 	ldw	r18,8(sp)
   2a6f8:	dc400117 	ldw	r17,4(sp)
   2a6fc:	dc000017 	ldw	r16,0(sp)
   2a700:	dec00604 	addi	sp,sp,24
   2a704:	f800283a 	ret
   2a708:	880d883a 	mov	r6,r17
   2a70c:	880b883a 	mov	r5,r17
   2a710:	9809883a 	mov	r4,r19
   2a714:	002a44c0 	call	2a44c <__multiply>
   2a718:	88800015 	stw	r2,0(r17)
   2a71c:	10000015 	stw	zero,0(r2)
   2a720:	003fdd06 	br	2a698 <__alt_data_end+0xfffea698>
   2a724:	1025883a 	mov	r18,r2
   2a728:	003fd706 	br	2a688 <__alt_data_end+0xfffea688>
   2a72c:	10bfffc4 	addi	r2,r2,-1
   2a730:	1085883a 	add	r2,r2,r2
   2a734:	00c000f4 	movhi	r3,3
   2a738:	18c50d04 	addi	r3,r3,5172
   2a73c:	1085883a 	add	r2,r2,r2
   2a740:	1885883a 	add	r2,r3,r2
   2a744:	11800017 	ldw	r6,0(r2)
   2a748:	000f883a 	mov	r7,zero
   2a74c:	002a0d40 	call	2a0d4 <__multadd>
   2a750:	1025883a 	mov	r18,r2
   2a754:	003fc706 	br	2a674 <__alt_data_end+0xfffea674>
   2a758:	05000044 	movi	r20,1
   2a75c:	a00b883a 	mov	r5,r20
   2a760:	9809883a 	mov	r4,r19
   2a764:	002a0040 	call	2a004 <_Balloc>
   2a768:	1023883a 	mov	r17,r2
   2a76c:	00809c44 	movi	r2,625
   2a770:	88800515 	stw	r2,20(r17)
   2a774:	8d000415 	stw	r20,16(r17)
   2a778:	9c401215 	stw	r17,72(r19)
   2a77c:	88000015 	stw	zero,0(r17)
   2a780:	003fc606 	br	2a69c <__alt_data_end+0xfffea69c>

0002a784 <__lshift>:
   2a784:	defff904 	addi	sp,sp,-28
   2a788:	dd400515 	stw	r21,20(sp)
   2a78c:	dcc00315 	stw	r19,12(sp)
   2a790:	302bd17a 	srai	r21,r6,5
   2a794:	2cc00417 	ldw	r19,16(r5)
   2a798:	28800217 	ldw	r2,8(r5)
   2a79c:	dd000415 	stw	r20,16(sp)
   2a7a0:	ace7883a 	add	r19,r21,r19
   2a7a4:	dc800215 	stw	r18,8(sp)
   2a7a8:	dc400115 	stw	r17,4(sp)
   2a7ac:	dc000015 	stw	r16,0(sp)
   2a7b0:	dfc00615 	stw	ra,24(sp)
   2a7b4:	9c000044 	addi	r16,r19,1
   2a7b8:	2823883a 	mov	r17,r5
   2a7bc:	3029883a 	mov	r20,r6
   2a7c0:	2025883a 	mov	r18,r4
   2a7c4:	29400117 	ldw	r5,4(r5)
   2a7c8:	1400030e 	bge	r2,r16,2a7d8 <__lshift+0x54>
   2a7cc:	1085883a 	add	r2,r2,r2
   2a7d0:	29400044 	addi	r5,r5,1
   2a7d4:	143ffd16 	blt	r2,r16,2a7cc <__alt_data_end+0xfffea7cc>
   2a7d8:	9009883a 	mov	r4,r18
   2a7dc:	002a0040 	call	2a004 <_Balloc>
   2a7e0:	10c00504 	addi	r3,r2,20
   2a7e4:	0540070e 	bge	zero,r21,2a804 <__lshift+0x80>
   2a7e8:	ad6b883a 	add	r21,r21,r21
   2a7ec:	ad6b883a 	add	r21,r21,r21
   2a7f0:	1809883a 	mov	r4,r3
   2a7f4:	1d47883a 	add	r3,r3,r21
   2a7f8:	20000015 	stw	zero,0(r4)
   2a7fc:	21000104 	addi	r4,r4,4
   2a800:	193ffd1e 	bne	r3,r4,2a7f8 <__alt_data_end+0xfffea7f8>
   2a804:	8a000417 	ldw	r8,16(r17)
   2a808:	89000504 	addi	r4,r17,20
   2a80c:	a18007cc 	andi	r6,r20,31
   2a810:	4211883a 	add	r8,r8,r8
   2a814:	4211883a 	add	r8,r8,r8
   2a818:	2211883a 	add	r8,r4,r8
   2a81c:	30002326 	beq	r6,zero,2a8ac <__lshift+0x128>
   2a820:	02400804 	movi	r9,32
   2a824:	4993c83a 	sub	r9,r9,r6
   2a828:	000b883a 	mov	r5,zero
   2a82c:	21c00017 	ldw	r7,0(r4)
   2a830:	1815883a 	mov	r10,r3
   2a834:	18c00104 	addi	r3,r3,4
   2a838:	398e983a 	sll	r7,r7,r6
   2a83c:	21000104 	addi	r4,r4,4
   2a840:	394ab03a 	or	r5,r7,r5
   2a844:	197fff15 	stw	r5,-4(r3)
   2a848:	217fff17 	ldw	r5,-4(r4)
   2a84c:	2a4ad83a 	srl	r5,r5,r9
   2a850:	223ff636 	bltu	r4,r8,2a82c <__alt_data_end+0xfffea82c>
   2a854:	51400115 	stw	r5,4(r10)
   2a858:	28001a1e 	bne	r5,zero,2a8c4 <__lshift+0x140>
   2a85c:	843fffc4 	addi	r16,r16,-1
   2a860:	14000415 	stw	r16,16(r2)
   2a864:	88000826 	beq	r17,zero,2a888 <__lshift+0x104>
   2a868:	89000117 	ldw	r4,4(r17)
   2a86c:	90c01317 	ldw	r3,76(r18)
   2a870:	2109883a 	add	r4,r4,r4
   2a874:	2109883a 	add	r4,r4,r4
   2a878:	1907883a 	add	r3,r3,r4
   2a87c:	19000017 	ldw	r4,0(r3)
   2a880:	89000015 	stw	r4,0(r17)
   2a884:	1c400015 	stw	r17,0(r3)
   2a888:	dfc00617 	ldw	ra,24(sp)
   2a88c:	dd400517 	ldw	r21,20(sp)
   2a890:	dd000417 	ldw	r20,16(sp)
   2a894:	dcc00317 	ldw	r19,12(sp)
   2a898:	dc800217 	ldw	r18,8(sp)
   2a89c:	dc400117 	ldw	r17,4(sp)
   2a8a0:	dc000017 	ldw	r16,0(sp)
   2a8a4:	dec00704 	addi	sp,sp,28
   2a8a8:	f800283a 	ret
   2a8ac:	21400017 	ldw	r5,0(r4)
   2a8b0:	18c00104 	addi	r3,r3,4
   2a8b4:	21000104 	addi	r4,r4,4
   2a8b8:	197fff15 	stw	r5,-4(r3)
   2a8bc:	223ffb36 	bltu	r4,r8,2a8ac <__alt_data_end+0xfffea8ac>
   2a8c0:	003fe606 	br	2a85c <__alt_data_end+0xfffea85c>
   2a8c4:	9c000084 	addi	r16,r19,2
   2a8c8:	003fe406 	br	2a85c <__alt_data_end+0xfffea85c>

0002a8cc <__mcmp>:
   2a8cc:	20800417 	ldw	r2,16(r4)
   2a8d0:	28c00417 	ldw	r3,16(r5)
   2a8d4:	10c5c83a 	sub	r2,r2,r3
   2a8d8:	1000111e 	bne	r2,zero,2a920 <__mcmp+0x54>
   2a8dc:	18c7883a 	add	r3,r3,r3
   2a8e0:	18c7883a 	add	r3,r3,r3
   2a8e4:	21000504 	addi	r4,r4,20
   2a8e8:	29400504 	addi	r5,r5,20
   2a8ec:	20c5883a 	add	r2,r4,r3
   2a8f0:	28cb883a 	add	r5,r5,r3
   2a8f4:	00000106 	br	2a8fc <__mcmp+0x30>
   2a8f8:	20800a2e 	bgeu	r4,r2,2a924 <__mcmp+0x58>
   2a8fc:	10bfff04 	addi	r2,r2,-4
   2a900:	297fff04 	addi	r5,r5,-4
   2a904:	11800017 	ldw	r6,0(r2)
   2a908:	28c00017 	ldw	r3,0(r5)
   2a90c:	30fffa26 	beq	r6,r3,2a8f8 <__alt_data_end+0xfffea8f8>
   2a910:	30c00236 	bltu	r6,r3,2a91c <__mcmp+0x50>
   2a914:	00800044 	movi	r2,1
   2a918:	f800283a 	ret
   2a91c:	00bfffc4 	movi	r2,-1
   2a920:	f800283a 	ret
   2a924:	0005883a 	mov	r2,zero
   2a928:	f800283a 	ret

0002a92c <__mdiff>:
   2a92c:	28c00417 	ldw	r3,16(r5)
   2a930:	30800417 	ldw	r2,16(r6)
   2a934:	defffa04 	addi	sp,sp,-24
   2a938:	dcc00315 	stw	r19,12(sp)
   2a93c:	dc800215 	stw	r18,8(sp)
   2a940:	dfc00515 	stw	ra,20(sp)
   2a944:	dd000415 	stw	r20,16(sp)
   2a948:	dc400115 	stw	r17,4(sp)
   2a94c:	dc000015 	stw	r16,0(sp)
   2a950:	1887c83a 	sub	r3,r3,r2
   2a954:	2825883a 	mov	r18,r5
   2a958:	3027883a 	mov	r19,r6
   2a95c:	1800141e 	bne	r3,zero,2a9b0 <__mdiff+0x84>
   2a960:	1085883a 	add	r2,r2,r2
   2a964:	1085883a 	add	r2,r2,r2
   2a968:	2a000504 	addi	r8,r5,20
   2a96c:	34000504 	addi	r16,r6,20
   2a970:	4087883a 	add	r3,r8,r2
   2a974:	8085883a 	add	r2,r16,r2
   2a978:	00000106 	br	2a980 <__mdiff+0x54>
   2a97c:	40c0592e 	bgeu	r8,r3,2aae4 <__mdiff+0x1b8>
   2a980:	18ffff04 	addi	r3,r3,-4
   2a984:	10bfff04 	addi	r2,r2,-4
   2a988:	19c00017 	ldw	r7,0(r3)
   2a98c:	11400017 	ldw	r5,0(r2)
   2a990:	397ffa26 	beq	r7,r5,2a97c <__alt_data_end+0xfffea97c>
   2a994:	3940592e 	bgeu	r7,r5,2aafc <__mdiff+0x1d0>
   2a998:	9005883a 	mov	r2,r18
   2a99c:	4023883a 	mov	r17,r8
   2a9a0:	9825883a 	mov	r18,r19
   2a9a4:	05000044 	movi	r20,1
   2a9a8:	1027883a 	mov	r19,r2
   2a9ac:	00000406 	br	2a9c0 <__mdiff+0x94>
   2a9b0:	18005616 	blt	r3,zero,2ab0c <__mdiff+0x1e0>
   2a9b4:	34400504 	addi	r17,r6,20
   2a9b8:	2c000504 	addi	r16,r5,20
   2a9bc:	0029883a 	mov	r20,zero
   2a9c0:	91400117 	ldw	r5,4(r18)
   2a9c4:	002a0040 	call	2a004 <_Balloc>
   2a9c8:	92400417 	ldw	r9,16(r18)
   2a9cc:	9b000417 	ldw	r12,16(r19)
   2a9d0:	12c00504 	addi	r11,r2,20
   2a9d4:	4a51883a 	add	r8,r9,r9
   2a9d8:	6319883a 	add	r12,r12,r12
   2a9dc:	4211883a 	add	r8,r8,r8
   2a9e0:	6319883a 	add	r12,r12,r12
   2a9e4:	15000315 	stw	r20,12(r2)
   2a9e8:	8211883a 	add	r8,r16,r8
   2a9ec:	8b19883a 	add	r12,r17,r12
   2a9f0:	0007883a 	mov	r3,zero
   2a9f4:	81400017 	ldw	r5,0(r16)
   2a9f8:	89c00017 	ldw	r7,0(r17)
   2a9fc:	59800104 	addi	r6,r11,4
   2aa00:	293fffcc 	andi	r4,r5,65535
   2aa04:	20c7883a 	add	r3,r4,r3
   2aa08:	393fffcc 	andi	r4,r7,65535
   2aa0c:	1909c83a 	sub	r4,r3,r4
   2aa10:	280ad43a 	srli	r5,r5,16
   2aa14:	380ed43a 	srli	r7,r7,16
   2aa18:	2007d43a 	srai	r3,r4,16
   2aa1c:	213fffcc 	andi	r4,r4,65535
   2aa20:	29cbc83a 	sub	r5,r5,r7
   2aa24:	28c7883a 	add	r3,r5,r3
   2aa28:	180a943a 	slli	r5,r3,16
   2aa2c:	8c400104 	addi	r17,r17,4
   2aa30:	84000104 	addi	r16,r16,4
   2aa34:	2908b03a 	or	r4,r5,r4
   2aa38:	59000015 	stw	r4,0(r11)
   2aa3c:	1807d43a 	srai	r3,r3,16
   2aa40:	3015883a 	mov	r10,r6
   2aa44:	3017883a 	mov	r11,r6
   2aa48:	8b3fea36 	bltu	r17,r12,2a9f4 <__alt_data_end+0xfffea9f4>
   2aa4c:	8200162e 	bgeu	r16,r8,2aaa8 <__mdiff+0x17c>
   2aa50:	8017883a 	mov	r11,r16
   2aa54:	59400017 	ldw	r5,0(r11)
   2aa58:	31800104 	addi	r6,r6,4
   2aa5c:	5ac00104 	addi	r11,r11,4
   2aa60:	293fffcc 	andi	r4,r5,65535
   2aa64:	20c7883a 	add	r3,r4,r3
   2aa68:	280ed43a 	srli	r7,r5,16
   2aa6c:	180bd43a 	srai	r5,r3,16
   2aa70:	193fffcc 	andi	r4,r3,65535
   2aa74:	3947883a 	add	r3,r7,r5
   2aa78:	180a943a 	slli	r5,r3,16
   2aa7c:	1807d43a 	srai	r3,r3,16
   2aa80:	2908b03a 	or	r4,r5,r4
   2aa84:	313fff15 	stw	r4,-4(r6)
   2aa88:	5a3ff236 	bltu	r11,r8,2aa54 <__alt_data_end+0xfffeaa54>
   2aa8c:	0406303a 	nor	r3,zero,r16
   2aa90:	1a07883a 	add	r3,r3,r8
   2aa94:	1806d0ba 	srli	r3,r3,2
   2aa98:	18c00044 	addi	r3,r3,1
   2aa9c:	18c7883a 	add	r3,r3,r3
   2aaa0:	18c7883a 	add	r3,r3,r3
   2aaa4:	50d5883a 	add	r10,r10,r3
   2aaa8:	50ffff04 	addi	r3,r10,-4
   2aaac:	2000041e 	bne	r4,zero,2aac0 <__mdiff+0x194>
   2aab0:	18ffff04 	addi	r3,r3,-4
   2aab4:	19000017 	ldw	r4,0(r3)
   2aab8:	4a7fffc4 	addi	r9,r9,-1
   2aabc:	203ffc26 	beq	r4,zero,2aab0 <__alt_data_end+0xfffeaab0>
   2aac0:	12400415 	stw	r9,16(r2)
   2aac4:	dfc00517 	ldw	ra,20(sp)
   2aac8:	dd000417 	ldw	r20,16(sp)
   2aacc:	dcc00317 	ldw	r19,12(sp)
   2aad0:	dc800217 	ldw	r18,8(sp)
   2aad4:	dc400117 	ldw	r17,4(sp)
   2aad8:	dc000017 	ldw	r16,0(sp)
   2aadc:	dec00604 	addi	sp,sp,24
   2aae0:	f800283a 	ret
   2aae4:	000b883a 	mov	r5,zero
   2aae8:	002a0040 	call	2a004 <_Balloc>
   2aaec:	00c00044 	movi	r3,1
   2aaf0:	10c00415 	stw	r3,16(r2)
   2aaf4:	10000515 	stw	zero,20(r2)
   2aaf8:	003ff206 	br	2aac4 <__alt_data_end+0xfffeaac4>
   2aafc:	8023883a 	mov	r17,r16
   2ab00:	0029883a 	mov	r20,zero
   2ab04:	4021883a 	mov	r16,r8
   2ab08:	003fad06 	br	2a9c0 <__alt_data_end+0xfffea9c0>
   2ab0c:	9005883a 	mov	r2,r18
   2ab10:	94400504 	addi	r17,r18,20
   2ab14:	9c000504 	addi	r16,r19,20
   2ab18:	9825883a 	mov	r18,r19
   2ab1c:	05000044 	movi	r20,1
   2ab20:	1027883a 	mov	r19,r2
   2ab24:	003fa606 	br	2a9c0 <__alt_data_end+0xfffea9c0>

0002ab28 <__ulp>:
   2ab28:	295ffc2c 	andhi	r5,r5,32752
   2ab2c:	00bf3034 	movhi	r2,64704
   2ab30:	2887883a 	add	r3,r5,r2
   2ab34:	00c0020e 	bge	zero,r3,2ab40 <__ulp+0x18>
   2ab38:	0005883a 	mov	r2,zero
   2ab3c:	f800283a 	ret
   2ab40:	00c7c83a 	sub	r3,zero,r3
   2ab44:	1807d53a 	srai	r3,r3,20
   2ab48:	008004c4 	movi	r2,19
   2ab4c:	10c00b0e 	bge	r2,r3,2ab7c <__ulp+0x54>
   2ab50:	18bffb04 	addi	r2,r3,-20
   2ab54:	01000784 	movi	r4,30
   2ab58:	0007883a 	mov	r3,zero
   2ab5c:	20800516 	blt	r4,r2,2ab74 <__ulp+0x4c>
   2ab60:	010007c4 	movi	r4,31
   2ab64:	2089c83a 	sub	r4,r4,r2
   2ab68:	00800044 	movi	r2,1
   2ab6c:	1104983a 	sll	r2,r2,r4
   2ab70:	f800283a 	ret
   2ab74:	00800044 	movi	r2,1
   2ab78:	f800283a 	ret
   2ab7c:	01400234 	movhi	r5,8
   2ab80:	28c7d83a 	sra	r3,r5,r3
   2ab84:	0005883a 	mov	r2,zero
   2ab88:	f800283a 	ret

0002ab8c <__b2d>:
   2ab8c:	defffa04 	addi	sp,sp,-24
   2ab90:	dc000015 	stw	r16,0(sp)
   2ab94:	24000417 	ldw	r16,16(r4)
   2ab98:	dc400115 	stw	r17,4(sp)
   2ab9c:	24400504 	addi	r17,r4,20
   2aba0:	8421883a 	add	r16,r16,r16
   2aba4:	8421883a 	add	r16,r16,r16
   2aba8:	8c21883a 	add	r16,r17,r16
   2abac:	dc800215 	stw	r18,8(sp)
   2abb0:	84bfff17 	ldw	r18,-4(r16)
   2abb4:	dd000415 	stw	r20,16(sp)
   2abb8:	dcc00315 	stw	r19,12(sp)
   2abbc:	9009883a 	mov	r4,r18
   2abc0:	2829883a 	mov	r20,r5
   2abc4:	dfc00515 	stw	ra,20(sp)
   2abc8:	002a2f80 	call	2a2f8 <__hi0bits>
   2abcc:	00c00804 	movi	r3,32
   2abd0:	1889c83a 	sub	r4,r3,r2
   2abd4:	a1000015 	stw	r4,0(r20)
   2abd8:	01000284 	movi	r4,10
   2abdc:	84ffff04 	addi	r19,r16,-4
   2abe0:	20801216 	blt	r4,r2,2ac2c <__b2d+0xa0>
   2abe4:	018002c4 	movi	r6,11
   2abe8:	308dc83a 	sub	r6,r6,r2
   2abec:	9186d83a 	srl	r3,r18,r6
   2abf0:	18cffc34 	orhi	r3,r3,16368
   2abf4:	8cc0212e 	bgeu	r17,r19,2ac7c <__b2d+0xf0>
   2abf8:	813ffe17 	ldw	r4,-8(r16)
   2abfc:	218cd83a 	srl	r6,r4,r6
   2ac00:	10800544 	addi	r2,r2,21
   2ac04:	9084983a 	sll	r2,r18,r2
   2ac08:	1184b03a 	or	r2,r2,r6
   2ac0c:	dfc00517 	ldw	ra,20(sp)
   2ac10:	dd000417 	ldw	r20,16(sp)
   2ac14:	dcc00317 	ldw	r19,12(sp)
   2ac18:	dc800217 	ldw	r18,8(sp)
   2ac1c:	dc400117 	ldw	r17,4(sp)
   2ac20:	dc000017 	ldw	r16,0(sp)
   2ac24:	dec00604 	addi	sp,sp,24
   2ac28:	f800283a 	ret
   2ac2c:	8cc00f2e 	bgeu	r17,r19,2ac6c <__b2d+0xe0>
   2ac30:	117ffd44 	addi	r5,r2,-11
   2ac34:	80bffe17 	ldw	r2,-8(r16)
   2ac38:	28000e26 	beq	r5,zero,2ac74 <__b2d+0xe8>
   2ac3c:	1949c83a 	sub	r4,r3,r5
   2ac40:	9164983a 	sll	r18,r18,r5
   2ac44:	1106d83a 	srl	r3,r2,r4
   2ac48:	81bffe04 	addi	r6,r16,-8
   2ac4c:	948ffc34 	orhi	r18,r18,16368
   2ac50:	90c6b03a 	or	r3,r18,r3
   2ac54:	89800e2e 	bgeu	r17,r6,2ac90 <__b2d+0x104>
   2ac58:	81bffd17 	ldw	r6,-12(r16)
   2ac5c:	1144983a 	sll	r2,r2,r5
   2ac60:	310ad83a 	srl	r5,r6,r4
   2ac64:	2884b03a 	or	r2,r5,r2
   2ac68:	003fe806 	br	2ac0c <__alt_data_end+0xfffeac0c>
   2ac6c:	10bffd44 	addi	r2,r2,-11
   2ac70:	1000041e 	bne	r2,zero,2ac84 <__b2d+0xf8>
   2ac74:	90cffc34 	orhi	r3,r18,16368
   2ac78:	003fe406 	br	2ac0c <__alt_data_end+0xfffeac0c>
   2ac7c:	000d883a 	mov	r6,zero
   2ac80:	003fdf06 	br	2ac00 <__alt_data_end+0xfffeac00>
   2ac84:	90a4983a 	sll	r18,r18,r2
   2ac88:	0005883a 	mov	r2,zero
   2ac8c:	003ff906 	br	2ac74 <__alt_data_end+0xfffeac74>
   2ac90:	1144983a 	sll	r2,r2,r5
   2ac94:	003fdd06 	br	2ac0c <__alt_data_end+0xfffeac0c>

0002ac98 <__d2b>:
   2ac98:	defff804 	addi	sp,sp,-32
   2ac9c:	dc000215 	stw	r16,8(sp)
   2aca0:	3021883a 	mov	r16,r6
   2aca4:	dc400315 	stw	r17,12(sp)
   2aca8:	8022907a 	slli	r17,r16,1
   2acac:	dd000615 	stw	r20,24(sp)
   2acb0:	2829883a 	mov	r20,r5
   2acb4:	01400044 	movi	r5,1
   2acb8:	dcc00515 	stw	r19,20(sp)
   2acbc:	dc800415 	stw	r18,16(sp)
   2acc0:	dfc00715 	stw	ra,28(sp)
   2acc4:	3825883a 	mov	r18,r7
   2acc8:	8822d57a 	srli	r17,r17,21
   2accc:	002a0040 	call	2a004 <_Balloc>
   2acd0:	1027883a 	mov	r19,r2
   2acd4:	00800434 	movhi	r2,16
   2acd8:	10bfffc4 	addi	r2,r2,-1
   2acdc:	808c703a 	and	r6,r16,r2
   2ace0:	88000126 	beq	r17,zero,2ace8 <__d2b+0x50>
   2ace4:	31800434 	orhi	r6,r6,16
   2ace8:	d9800015 	stw	r6,0(sp)
   2acec:	a0002426 	beq	r20,zero,2ad80 <__d2b+0xe8>
   2acf0:	d9000104 	addi	r4,sp,4
   2acf4:	dd000115 	stw	r20,4(sp)
   2acf8:	002a3600 	call	2a360 <__lo0bits>
   2acfc:	d8c00017 	ldw	r3,0(sp)
   2ad00:	10002f1e 	bne	r2,zero,2adc0 <__d2b+0x128>
   2ad04:	d9000117 	ldw	r4,4(sp)
   2ad08:	99000515 	stw	r4,20(r19)
   2ad0c:	1821003a 	cmpeq	r16,r3,zero
   2ad10:	01000084 	movi	r4,2
   2ad14:	2421c83a 	sub	r16,r4,r16
   2ad18:	98c00615 	stw	r3,24(r19)
   2ad1c:	9c000415 	stw	r16,16(r19)
   2ad20:	88001f1e 	bne	r17,zero,2ada0 <__d2b+0x108>
   2ad24:	10bef384 	addi	r2,r2,-1074
   2ad28:	90800015 	stw	r2,0(r18)
   2ad2c:	00900034 	movhi	r2,16384
   2ad30:	10bfffc4 	addi	r2,r2,-1
   2ad34:	8085883a 	add	r2,r16,r2
   2ad38:	1085883a 	add	r2,r2,r2
   2ad3c:	1085883a 	add	r2,r2,r2
   2ad40:	9885883a 	add	r2,r19,r2
   2ad44:	11000517 	ldw	r4,20(r2)
   2ad48:	8020917a 	slli	r16,r16,5
   2ad4c:	002a2f80 	call	2a2f8 <__hi0bits>
   2ad50:	d8c00817 	ldw	r3,32(sp)
   2ad54:	8085c83a 	sub	r2,r16,r2
   2ad58:	18800015 	stw	r2,0(r3)
   2ad5c:	9805883a 	mov	r2,r19
   2ad60:	dfc00717 	ldw	ra,28(sp)
   2ad64:	dd000617 	ldw	r20,24(sp)
   2ad68:	dcc00517 	ldw	r19,20(sp)
   2ad6c:	dc800417 	ldw	r18,16(sp)
   2ad70:	dc400317 	ldw	r17,12(sp)
   2ad74:	dc000217 	ldw	r16,8(sp)
   2ad78:	dec00804 	addi	sp,sp,32
   2ad7c:	f800283a 	ret
   2ad80:	d809883a 	mov	r4,sp
   2ad84:	002a3600 	call	2a360 <__lo0bits>
   2ad88:	d8c00017 	ldw	r3,0(sp)
   2ad8c:	04000044 	movi	r16,1
   2ad90:	9c000415 	stw	r16,16(r19)
   2ad94:	98c00515 	stw	r3,20(r19)
   2ad98:	10800804 	addi	r2,r2,32
   2ad9c:	883fe126 	beq	r17,zero,2ad24 <__alt_data_end+0xfffead24>
   2ada0:	00c00d44 	movi	r3,53
   2ada4:	8c7ef344 	addi	r17,r17,-1075
   2ada8:	88a3883a 	add	r17,r17,r2
   2adac:	1885c83a 	sub	r2,r3,r2
   2adb0:	d8c00817 	ldw	r3,32(sp)
   2adb4:	94400015 	stw	r17,0(r18)
   2adb8:	18800015 	stw	r2,0(r3)
   2adbc:	003fe706 	br	2ad5c <__alt_data_end+0xfffead5c>
   2adc0:	01000804 	movi	r4,32
   2adc4:	2089c83a 	sub	r4,r4,r2
   2adc8:	1908983a 	sll	r4,r3,r4
   2adcc:	d9400117 	ldw	r5,4(sp)
   2add0:	1886d83a 	srl	r3,r3,r2
   2add4:	2148b03a 	or	r4,r4,r5
   2add8:	99000515 	stw	r4,20(r19)
   2addc:	d8c00015 	stw	r3,0(sp)
   2ade0:	003fca06 	br	2ad0c <__alt_data_end+0xfffead0c>

0002ade4 <__ratio>:
   2ade4:	defff904 	addi	sp,sp,-28
   2ade8:	dc400315 	stw	r17,12(sp)
   2adec:	2823883a 	mov	r17,r5
   2adf0:	d9400104 	addi	r5,sp,4
   2adf4:	dfc00615 	stw	ra,24(sp)
   2adf8:	dcc00515 	stw	r19,20(sp)
   2adfc:	dc800415 	stw	r18,16(sp)
   2ae00:	2027883a 	mov	r19,r4
   2ae04:	dc000215 	stw	r16,8(sp)
   2ae08:	002ab8c0 	call	2ab8c <__b2d>
   2ae0c:	d80b883a 	mov	r5,sp
   2ae10:	8809883a 	mov	r4,r17
   2ae14:	1025883a 	mov	r18,r2
   2ae18:	1821883a 	mov	r16,r3
   2ae1c:	002ab8c0 	call	2ab8c <__b2d>
   2ae20:	8a000417 	ldw	r8,16(r17)
   2ae24:	99000417 	ldw	r4,16(r19)
   2ae28:	d9400117 	ldw	r5,4(sp)
   2ae2c:	2209c83a 	sub	r4,r4,r8
   2ae30:	2010917a 	slli	r8,r4,5
   2ae34:	d9000017 	ldw	r4,0(sp)
   2ae38:	2909c83a 	sub	r4,r5,r4
   2ae3c:	4109883a 	add	r4,r8,r4
   2ae40:	01000e0e 	bge	zero,r4,2ae7c <__ratio+0x98>
   2ae44:	2008953a 	slli	r4,r4,20
   2ae48:	2421883a 	add	r16,r4,r16
   2ae4c:	100d883a 	mov	r6,r2
   2ae50:	180f883a 	mov	r7,r3
   2ae54:	9009883a 	mov	r4,r18
   2ae58:	800b883a 	mov	r5,r16
   2ae5c:	0022bcc0 	call	22bcc <__divdf3>
   2ae60:	dfc00617 	ldw	ra,24(sp)
   2ae64:	dcc00517 	ldw	r19,20(sp)
   2ae68:	dc800417 	ldw	r18,16(sp)
   2ae6c:	dc400317 	ldw	r17,12(sp)
   2ae70:	dc000217 	ldw	r16,8(sp)
   2ae74:	dec00704 	addi	sp,sp,28
   2ae78:	f800283a 	ret
   2ae7c:	2008953a 	slli	r4,r4,20
   2ae80:	1907c83a 	sub	r3,r3,r4
   2ae84:	003ff106 	br	2ae4c <__alt_data_end+0xfffeae4c>

0002ae88 <_mprec_log10>:
   2ae88:	defffe04 	addi	sp,sp,-8
   2ae8c:	dc000015 	stw	r16,0(sp)
   2ae90:	dfc00115 	stw	ra,4(sp)
   2ae94:	008005c4 	movi	r2,23
   2ae98:	2021883a 	mov	r16,r4
   2ae9c:	11000d0e 	bge	r2,r4,2aed4 <_mprec_log10+0x4c>
   2aea0:	0005883a 	mov	r2,zero
   2aea4:	00cffc34 	movhi	r3,16368
   2aea8:	843fffc4 	addi	r16,r16,-1
   2aeac:	000d883a 	mov	r6,zero
   2aeb0:	01d00934 	movhi	r7,16420
   2aeb4:	1009883a 	mov	r4,r2
   2aeb8:	180b883a 	mov	r5,r3
   2aebc:	002370c0 	call	2370c <__muldf3>
   2aec0:	803ff91e 	bne	r16,zero,2aea8 <__alt_data_end+0xfffeaea8>
   2aec4:	dfc00117 	ldw	ra,4(sp)
   2aec8:	dc000017 	ldw	r16,0(sp)
   2aecc:	dec00204 	addi	sp,sp,8
   2aed0:	f800283a 	ret
   2aed4:	202090fa 	slli	r16,r4,3
   2aed8:	008000f4 	movhi	r2,3
   2aedc:	10852404 	addi	r2,r2,5264
   2aee0:	1421883a 	add	r16,r2,r16
   2aee4:	80800017 	ldw	r2,0(r16)
   2aee8:	80c00117 	ldw	r3,4(r16)
   2aeec:	dfc00117 	ldw	ra,4(sp)
   2aef0:	dc000017 	ldw	r16,0(sp)
   2aef4:	dec00204 	addi	sp,sp,8
   2aef8:	f800283a 	ret

0002aefc <__copybits>:
   2aefc:	297fffc4 	addi	r5,r5,-1
   2af00:	280fd17a 	srai	r7,r5,5
   2af04:	30c00417 	ldw	r3,16(r6)
   2af08:	30800504 	addi	r2,r6,20
   2af0c:	39c00044 	addi	r7,r7,1
   2af10:	18c7883a 	add	r3,r3,r3
   2af14:	39cf883a 	add	r7,r7,r7
   2af18:	18c7883a 	add	r3,r3,r3
   2af1c:	39cf883a 	add	r7,r7,r7
   2af20:	10c7883a 	add	r3,r2,r3
   2af24:	21cf883a 	add	r7,r4,r7
   2af28:	10c00d2e 	bgeu	r2,r3,2af60 <__copybits+0x64>
   2af2c:	200b883a 	mov	r5,r4
   2af30:	12000017 	ldw	r8,0(r2)
   2af34:	29400104 	addi	r5,r5,4
   2af38:	10800104 	addi	r2,r2,4
   2af3c:	2a3fff15 	stw	r8,-4(r5)
   2af40:	10fffb36 	bltu	r2,r3,2af30 <__alt_data_end+0xfffeaf30>
   2af44:	1985c83a 	sub	r2,r3,r6
   2af48:	10bffac4 	addi	r2,r2,-21
   2af4c:	1004d0ba 	srli	r2,r2,2
   2af50:	10800044 	addi	r2,r2,1
   2af54:	1085883a 	add	r2,r2,r2
   2af58:	1085883a 	add	r2,r2,r2
   2af5c:	2089883a 	add	r4,r4,r2
   2af60:	21c0032e 	bgeu	r4,r7,2af70 <__copybits+0x74>
   2af64:	20000015 	stw	zero,0(r4)
   2af68:	21000104 	addi	r4,r4,4
   2af6c:	21fffd36 	bltu	r4,r7,2af64 <__alt_data_end+0xfffeaf64>
   2af70:	f800283a 	ret

0002af74 <__any_on>:
   2af74:	20c00417 	ldw	r3,16(r4)
   2af78:	2805d17a 	srai	r2,r5,5
   2af7c:	21000504 	addi	r4,r4,20
   2af80:	18800d0e 	bge	r3,r2,2afb8 <__any_on+0x44>
   2af84:	18c7883a 	add	r3,r3,r3
   2af88:	18c7883a 	add	r3,r3,r3
   2af8c:	20c7883a 	add	r3,r4,r3
   2af90:	20c0192e 	bgeu	r4,r3,2aff8 <__any_on+0x84>
   2af94:	18bfff17 	ldw	r2,-4(r3)
   2af98:	18ffff04 	addi	r3,r3,-4
   2af9c:	1000041e 	bne	r2,zero,2afb0 <__any_on+0x3c>
   2afa0:	20c0142e 	bgeu	r4,r3,2aff4 <__any_on+0x80>
   2afa4:	18ffff04 	addi	r3,r3,-4
   2afa8:	19400017 	ldw	r5,0(r3)
   2afac:	283ffc26 	beq	r5,zero,2afa0 <__alt_data_end+0xfffeafa0>
   2afb0:	00800044 	movi	r2,1
   2afb4:	f800283a 	ret
   2afb8:	10c00a0e 	bge	r2,r3,2afe4 <__any_on+0x70>
   2afbc:	1085883a 	add	r2,r2,r2
   2afc0:	1085883a 	add	r2,r2,r2
   2afc4:	294007cc 	andi	r5,r5,31
   2afc8:	2087883a 	add	r3,r4,r2
   2afcc:	283ff026 	beq	r5,zero,2af90 <__alt_data_end+0xfffeaf90>
   2afd0:	19800017 	ldw	r6,0(r3)
   2afd4:	3144d83a 	srl	r2,r6,r5
   2afd8:	114a983a 	sll	r5,r2,r5
   2afdc:	317ff41e 	bne	r6,r5,2afb0 <__alt_data_end+0xfffeafb0>
   2afe0:	003feb06 	br	2af90 <__alt_data_end+0xfffeaf90>
   2afe4:	1085883a 	add	r2,r2,r2
   2afe8:	1085883a 	add	r2,r2,r2
   2afec:	2087883a 	add	r3,r4,r2
   2aff0:	003fe706 	br	2af90 <__alt_data_end+0xfffeaf90>
   2aff4:	f800283a 	ret
   2aff8:	0005883a 	mov	r2,zero
   2affc:	f800283a 	ret

0002b000 <_sbrk_r>:
   2b000:	defffd04 	addi	sp,sp,-12
   2b004:	dc000015 	stw	r16,0(sp)
   2b008:	040000f4 	movhi	r16,3
   2b00c:	dc400115 	stw	r17,4(sp)
   2b010:	8412e904 	addi	r16,r16,19364
   2b014:	2023883a 	mov	r17,r4
   2b018:	2809883a 	mov	r4,r5
   2b01c:	dfc00215 	stw	ra,8(sp)
   2b020:	80000015 	stw	zero,0(r16)
   2b024:	002f0b40 	call	2f0b4 <sbrk>
   2b028:	00ffffc4 	movi	r3,-1
   2b02c:	10c00526 	beq	r2,r3,2b044 <_sbrk_r+0x44>
   2b030:	dfc00217 	ldw	ra,8(sp)
   2b034:	dc400117 	ldw	r17,4(sp)
   2b038:	dc000017 	ldw	r16,0(sp)
   2b03c:	dec00304 	addi	sp,sp,12
   2b040:	f800283a 	ret
   2b044:	80c00017 	ldw	r3,0(r16)
   2b048:	183ff926 	beq	r3,zero,2b030 <__alt_data_end+0xfffeb030>
   2b04c:	88c00015 	stw	r3,0(r17)
   2b050:	003ff706 	br	2b030 <__alt_data_end+0xfffeb030>

0002b054 <__sread>:
   2b054:	defffe04 	addi	sp,sp,-8
   2b058:	dc000015 	stw	r16,0(sp)
   2b05c:	2821883a 	mov	r16,r5
   2b060:	2940038f 	ldh	r5,14(r5)
   2b064:	dfc00115 	stw	ra,4(sp)
   2b068:	002d4f80 	call	2d4f8 <_read_r>
   2b06c:	10000716 	blt	r2,zero,2b08c <__sread+0x38>
   2b070:	80c01417 	ldw	r3,80(r16)
   2b074:	1887883a 	add	r3,r3,r2
   2b078:	80c01415 	stw	r3,80(r16)
   2b07c:	dfc00117 	ldw	ra,4(sp)
   2b080:	dc000017 	ldw	r16,0(sp)
   2b084:	dec00204 	addi	sp,sp,8
   2b088:	f800283a 	ret
   2b08c:	80c0030b 	ldhu	r3,12(r16)
   2b090:	18fbffcc 	andi	r3,r3,61439
   2b094:	80c0030d 	sth	r3,12(r16)
   2b098:	dfc00117 	ldw	ra,4(sp)
   2b09c:	dc000017 	ldw	r16,0(sp)
   2b0a0:	dec00204 	addi	sp,sp,8
   2b0a4:	f800283a 	ret

0002b0a8 <__seofread>:
   2b0a8:	0005883a 	mov	r2,zero
   2b0ac:	f800283a 	ret

0002b0b0 <__swrite>:
   2b0b0:	2880030b 	ldhu	r2,12(r5)
   2b0b4:	defffb04 	addi	sp,sp,-20
   2b0b8:	dcc00315 	stw	r19,12(sp)
   2b0bc:	dc800215 	stw	r18,8(sp)
   2b0c0:	dc400115 	stw	r17,4(sp)
   2b0c4:	dc000015 	stw	r16,0(sp)
   2b0c8:	dfc00415 	stw	ra,16(sp)
   2b0cc:	10c0400c 	andi	r3,r2,256
   2b0d0:	2821883a 	mov	r16,r5
   2b0d4:	2023883a 	mov	r17,r4
   2b0d8:	3025883a 	mov	r18,r6
   2b0dc:	3827883a 	mov	r19,r7
   2b0e0:	18000526 	beq	r3,zero,2b0f8 <__swrite+0x48>
   2b0e4:	2940038f 	ldh	r5,14(r5)
   2b0e8:	01c00084 	movi	r7,2
   2b0ec:	000d883a 	mov	r6,zero
   2b0f0:	002d33c0 	call	2d33c <_lseek_r>
   2b0f4:	8080030b 	ldhu	r2,12(r16)
   2b0f8:	8140038f 	ldh	r5,14(r16)
   2b0fc:	10bbffcc 	andi	r2,r2,61439
   2b100:	980f883a 	mov	r7,r19
   2b104:	900d883a 	mov	r6,r18
   2b108:	8809883a 	mov	r4,r17
   2b10c:	8080030d 	sth	r2,12(r16)
   2b110:	dfc00417 	ldw	ra,16(sp)
   2b114:	dcc00317 	ldw	r19,12(sp)
   2b118:	dc800217 	ldw	r18,8(sp)
   2b11c:	dc400117 	ldw	r17,4(sp)
   2b120:	dc000017 	ldw	r16,0(sp)
   2b124:	dec00504 	addi	sp,sp,20
   2b128:	002c94c1 	jmpi	2c94c <_write_r>

0002b12c <__sseek>:
   2b12c:	defffe04 	addi	sp,sp,-8
   2b130:	dc000015 	stw	r16,0(sp)
   2b134:	2821883a 	mov	r16,r5
   2b138:	2940038f 	ldh	r5,14(r5)
   2b13c:	dfc00115 	stw	ra,4(sp)
   2b140:	002d33c0 	call	2d33c <_lseek_r>
   2b144:	00ffffc4 	movi	r3,-1
   2b148:	10c00826 	beq	r2,r3,2b16c <__sseek+0x40>
   2b14c:	80c0030b 	ldhu	r3,12(r16)
   2b150:	80801415 	stw	r2,80(r16)
   2b154:	18c40014 	ori	r3,r3,4096
   2b158:	80c0030d 	sth	r3,12(r16)
   2b15c:	dfc00117 	ldw	ra,4(sp)
   2b160:	dc000017 	ldw	r16,0(sp)
   2b164:	dec00204 	addi	sp,sp,8
   2b168:	f800283a 	ret
   2b16c:	80c0030b 	ldhu	r3,12(r16)
   2b170:	18fbffcc 	andi	r3,r3,61439
   2b174:	80c0030d 	sth	r3,12(r16)
   2b178:	dfc00117 	ldw	ra,4(sp)
   2b17c:	dc000017 	ldw	r16,0(sp)
   2b180:	dec00204 	addi	sp,sp,8
   2b184:	f800283a 	ret

0002b188 <__sclose>:
   2b188:	2940038f 	ldh	r5,14(r5)
   2b18c:	002c9ac1 	jmpi	2c9ac <_close_r>

0002b190 <strcmp>:
   2b190:	2144b03a 	or	r2,r4,r5
   2b194:	108000cc 	andi	r2,r2,3
   2b198:	1000171e 	bne	r2,zero,2b1f8 <strcmp+0x68>
   2b19c:	20800017 	ldw	r2,0(r4)
   2b1a0:	28c00017 	ldw	r3,0(r5)
   2b1a4:	10c0141e 	bne	r2,r3,2b1f8 <strcmp+0x68>
   2b1a8:	027fbff4 	movhi	r9,65279
   2b1ac:	4a7fbfc4 	addi	r9,r9,-257
   2b1b0:	0086303a 	nor	r3,zero,r2
   2b1b4:	02202074 	movhi	r8,32897
   2b1b8:	1245883a 	add	r2,r2,r9
   2b1bc:	42202004 	addi	r8,r8,-32640
   2b1c0:	10c4703a 	and	r2,r2,r3
   2b1c4:	1204703a 	and	r2,r2,r8
   2b1c8:	10000226 	beq	r2,zero,2b1d4 <strcmp+0x44>
   2b1cc:	00002306 	br	2b25c <strcmp+0xcc>
   2b1d0:	1000221e 	bne	r2,zero,2b25c <strcmp+0xcc>
   2b1d4:	21000104 	addi	r4,r4,4
   2b1d8:	20c00017 	ldw	r3,0(r4)
   2b1dc:	29400104 	addi	r5,r5,4
   2b1e0:	29800017 	ldw	r6,0(r5)
   2b1e4:	1a4f883a 	add	r7,r3,r9
   2b1e8:	00c4303a 	nor	r2,zero,r3
   2b1ec:	3884703a 	and	r2,r7,r2
   2b1f0:	1204703a 	and	r2,r2,r8
   2b1f4:	19bff626 	beq	r3,r6,2b1d0 <__alt_data_end+0xfffeb1d0>
   2b1f8:	20800003 	ldbu	r2,0(r4)
   2b1fc:	10c03fcc 	andi	r3,r2,255
   2b200:	18c0201c 	xori	r3,r3,128
   2b204:	18ffe004 	addi	r3,r3,-128
   2b208:	18000c26 	beq	r3,zero,2b23c <strcmp+0xac>
   2b20c:	29800007 	ldb	r6,0(r5)
   2b210:	19800326 	beq	r3,r6,2b220 <strcmp+0x90>
   2b214:	00001306 	br	2b264 <strcmp+0xd4>
   2b218:	29800007 	ldb	r6,0(r5)
   2b21c:	11800b1e 	bne	r2,r6,2b24c <strcmp+0xbc>
   2b220:	21000044 	addi	r4,r4,1
   2b224:	20c00003 	ldbu	r3,0(r4)
   2b228:	29400044 	addi	r5,r5,1
   2b22c:	18803fcc 	andi	r2,r3,255
   2b230:	1080201c 	xori	r2,r2,128
   2b234:	10bfe004 	addi	r2,r2,-128
   2b238:	103ff71e 	bne	r2,zero,2b218 <__alt_data_end+0xfffeb218>
   2b23c:	0007883a 	mov	r3,zero
   2b240:	28800003 	ldbu	r2,0(r5)
   2b244:	1885c83a 	sub	r2,r3,r2
   2b248:	f800283a 	ret
   2b24c:	28800003 	ldbu	r2,0(r5)
   2b250:	18c03fcc 	andi	r3,r3,255
   2b254:	1885c83a 	sub	r2,r3,r2
   2b258:	f800283a 	ret
   2b25c:	0005883a 	mov	r2,zero
   2b260:	f800283a 	ret
   2b264:	10c03fcc 	andi	r3,r2,255
   2b268:	003ff506 	br	2b240 <__alt_data_end+0xfffeb240>

0002b26c <strlen>:
   2b26c:	208000cc 	andi	r2,r4,3
   2b270:	10002026 	beq	r2,zero,2b2f4 <strlen+0x88>
   2b274:	20800007 	ldb	r2,0(r4)
   2b278:	10002026 	beq	r2,zero,2b2fc <strlen+0x90>
   2b27c:	2005883a 	mov	r2,r4
   2b280:	00000206 	br	2b28c <strlen+0x20>
   2b284:	10c00007 	ldb	r3,0(r2)
   2b288:	18001826 	beq	r3,zero,2b2ec <strlen+0x80>
   2b28c:	10800044 	addi	r2,r2,1
   2b290:	10c000cc 	andi	r3,r2,3
   2b294:	183ffb1e 	bne	r3,zero,2b284 <__alt_data_end+0xfffeb284>
   2b298:	10c00017 	ldw	r3,0(r2)
   2b29c:	01ffbff4 	movhi	r7,65279
   2b2a0:	39ffbfc4 	addi	r7,r7,-257
   2b2a4:	00ca303a 	nor	r5,zero,r3
   2b2a8:	01a02074 	movhi	r6,32897
   2b2ac:	19c7883a 	add	r3,r3,r7
   2b2b0:	31a02004 	addi	r6,r6,-32640
   2b2b4:	1946703a 	and	r3,r3,r5
   2b2b8:	1986703a 	and	r3,r3,r6
   2b2bc:	1800091e 	bne	r3,zero,2b2e4 <strlen+0x78>
   2b2c0:	10800104 	addi	r2,r2,4
   2b2c4:	10c00017 	ldw	r3,0(r2)
   2b2c8:	19cb883a 	add	r5,r3,r7
   2b2cc:	00c6303a 	nor	r3,zero,r3
   2b2d0:	28c6703a 	and	r3,r5,r3
   2b2d4:	1986703a 	and	r3,r3,r6
   2b2d8:	183ff926 	beq	r3,zero,2b2c0 <__alt_data_end+0xfffeb2c0>
   2b2dc:	00000106 	br	2b2e4 <strlen+0x78>
   2b2e0:	10800044 	addi	r2,r2,1
   2b2e4:	10c00007 	ldb	r3,0(r2)
   2b2e8:	183ffd1e 	bne	r3,zero,2b2e0 <__alt_data_end+0xfffeb2e0>
   2b2ec:	1105c83a 	sub	r2,r2,r4
   2b2f0:	f800283a 	ret
   2b2f4:	2005883a 	mov	r2,r4
   2b2f8:	003fe706 	br	2b298 <__alt_data_end+0xfffeb298>
   2b2fc:	0005883a 	mov	r2,zero
   2b300:	f800283a 	ret

0002b304 <__sprint_r.part.0>:
   2b304:	28801917 	ldw	r2,100(r5)
   2b308:	defff604 	addi	sp,sp,-40
   2b30c:	dd400515 	stw	r21,20(sp)
   2b310:	dfc00915 	stw	ra,36(sp)
   2b314:	df000815 	stw	fp,32(sp)
   2b318:	ddc00715 	stw	r23,28(sp)
   2b31c:	dd800615 	stw	r22,24(sp)
   2b320:	dd000415 	stw	r20,16(sp)
   2b324:	dcc00315 	stw	r19,12(sp)
   2b328:	dc800215 	stw	r18,8(sp)
   2b32c:	dc400115 	stw	r17,4(sp)
   2b330:	dc000015 	stw	r16,0(sp)
   2b334:	1088000c 	andi	r2,r2,8192
   2b338:	302b883a 	mov	r21,r6
   2b33c:	10002e26 	beq	r2,zero,2b3f8 <__sprint_r.part.0+0xf4>
   2b340:	30800217 	ldw	r2,8(r6)
   2b344:	35800017 	ldw	r22,0(r6)
   2b348:	10002926 	beq	r2,zero,2b3f0 <__sprint_r.part.0+0xec>
   2b34c:	2827883a 	mov	r19,r5
   2b350:	2029883a 	mov	r20,r4
   2b354:	b5c00104 	addi	r23,r22,4
   2b358:	04bfffc4 	movi	r18,-1
   2b35c:	bc400017 	ldw	r17,0(r23)
   2b360:	b4000017 	ldw	r16,0(r22)
   2b364:	0039883a 	mov	fp,zero
   2b368:	8822d0ba 	srli	r17,r17,2
   2b36c:	8800031e 	bne	r17,zero,2b37c <__sprint_r.part.0+0x78>
   2b370:	00001806 	br	2b3d4 <__sprint_r.part.0+0xd0>
   2b374:	84000104 	addi	r16,r16,4
   2b378:	8f001526 	beq	r17,fp,2b3d0 <__sprint_r.part.0+0xcc>
   2b37c:	81400017 	ldw	r5,0(r16)
   2b380:	980d883a 	mov	r6,r19
   2b384:	a009883a 	mov	r4,r20
   2b388:	002cd2c0 	call	2cd2c <_fputwc_r>
   2b38c:	e7000044 	addi	fp,fp,1
   2b390:	14bff81e 	bne	r2,r18,2b374 <__alt_data_end+0xfffeb374>
   2b394:	9005883a 	mov	r2,r18
   2b398:	a8000215 	stw	zero,8(r21)
   2b39c:	a8000115 	stw	zero,4(r21)
   2b3a0:	dfc00917 	ldw	ra,36(sp)
   2b3a4:	df000817 	ldw	fp,32(sp)
   2b3a8:	ddc00717 	ldw	r23,28(sp)
   2b3ac:	dd800617 	ldw	r22,24(sp)
   2b3b0:	dd400517 	ldw	r21,20(sp)
   2b3b4:	dd000417 	ldw	r20,16(sp)
   2b3b8:	dcc00317 	ldw	r19,12(sp)
   2b3bc:	dc800217 	ldw	r18,8(sp)
   2b3c0:	dc400117 	ldw	r17,4(sp)
   2b3c4:	dc000017 	ldw	r16,0(sp)
   2b3c8:	dec00a04 	addi	sp,sp,40
   2b3cc:	f800283a 	ret
   2b3d0:	a8800217 	ldw	r2,8(r21)
   2b3d4:	8c63883a 	add	r17,r17,r17
   2b3d8:	8c63883a 	add	r17,r17,r17
   2b3dc:	1445c83a 	sub	r2,r2,r17
   2b3e0:	a8800215 	stw	r2,8(r21)
   2b3e4:	b5800204 	addi	r22,r22,8
   2b3e8:	bdc00204 	addi	r23,r23,8
   2b3ec:	103fdb1e 	bne	r2,zero,2b35c <__alt_data_end+0xfffeb35c>
   2b3f0:	0005883a 	mov	r2,zero
   2b3f4:	003fe806 	br	2b398 <__alt_data_end+0xfffeb398>
   2b3f8:	002ce2c0 	call	2ce2c <__sfvwrite_r>
   2b3fc:	003fe606 	br	2b398 <__alt_data_end+0xfffeb398>

0002b400 <__sprint_r>:
   2b400:	30c00217 	ldw	r3,8(r6)
   2b404:	18000126 	beq	r3,zero,2b40c <__sprint_r+0xc>
   2b408:	002b3041 	jmpi	2b304 <__sprint_r.part.0>
   2b40c:	30000115 	stw	zero,4(r6)
   2b410:	0005883a 	mov	r2,zero
   2b414:	f800283a 	ret

0002b418 <___vfiprintf_internal_r>:
   2b418:	deffc904 	addi	sp,sp,-220
   2b41c:	df003515 	stw	fp,212(sp)
   2b420:	dd003115 	stw	r20,196(sp)
   2b424:	dfc03615 	stw	ra,216(sp)
   2b428:	ddc03415 	stw	r23,208(sp)
   2b42c:	dd803315 	stw	r22,204(sp)
   2b430:	dd403215 	stw	r21,200(sp)
   2b434:	dcc03015 	stw	r19,192(sp)
   2b438:	dc802f15 	stw	r18,188(sp)
   2b43c:	dc402e15 	stw	r17,184(sp)
   2b440:	dc002d15 	stw	r16,180(sp)
   2b444:	d9002015 	stw	r4,128(sp)
   2b448:	d9c02215 	stw	r7,136(sp)
   2b44c:	2829883a 	mov	r20,r5
   2b450:	3039883a 	mov	fp,r6
   2b454:	20000226 	beq	r4,zero,2b460 <___vfiprintf_internal_r+0x48>
   2b458:	20800e17 	ldw	r2,56(r4)
   2b45c:	1000cf26 	beq	r2,zero,2b79c <___vfiprintf_internal_r+0x384>
   2b460:	a080030b 	ldhu	r2,12(r20)
   2b464:	10c8000c 	andi	r3,r2,8192
   2b468:	1800061e 	bne	r3,zero,2b484 <___vfiprintf_internal_r+0x6c>
   2b46c:	a1001917 	ldw	r4,100(r20)
   2b470:	00f7ffc4 	movi	r3,-8193
   2b474:	10880014 	ori	r2,r2,8192
   2b478:	20c6703a 	and	r3,r4,r3
   2b47c:	a080030d 	sth	r2,12(r20)
   2b480:	a0c01915 	stw	r3,100(r20)
   2b484:	10c0020c 	andi	r3,r2,8
   2b488:	1800a926 	beq	r3,zero,2b730 <___vfiprintf_internal_r+0x318>
   2b48c:	a0c00417 	ldw	r3,16(r20)
   2b490:	1800a726 	beq	r3,zero,2b730 <___vfiprintf_internal_r+0x318>
   2b494:	1080068c 	andi	r2,r2,26
   2b498:	00c00284 	movi	r3,10
   2b49c:	10c0ac26 	beq	r2,r3,2b750 <___vfiprintf_internal_r+0x338>
   2b4a0:	da801a04 	addi	r10,sp,104
   2b4a4:	da801e15 	stw	r10,120(sp)
   2b4a8:	d8801e17 	ldw	r2,120(sp)
   2b4ac:	da8019c4 	addi	r10,sp,103
   2b4b0:	058000f4 	movhi	r22,3
   2b4b4:	05c000f4 	movhi	r23,3
   2b4b8:	da801f15 	stw	r10,124(sp)
   2b4bc:	1295c83a 	sub	r10,r2,r10
   2b4c0:	b5855a04 	addi	r22,r22,5480
   2b4c4:	bdc55604 	addi	r23,r23,5464
   2b4c8:	dec01a15 	stw	sp,104(sp)
   2b4cc:	d8001c15 	stw	zero,112(sp)
   2b4d0:	d8001b15 	stw	zero,108(sp)
   2b4d4:	d8002615 	stw	zero,152(sp)
   2b4d8:	d8002315 	stw	zero,140(sp)
   2b4dc:	da802715 	stw	r10,156(sp)
   2b4e0:	d811883a 	mov	r8,sp
   2b4e4:	dd002115 	stw	r20,132(sp)
   2b4e8:	e021883a 	mov	r16,fp
   2b4ec:	80800007 	ldb	r2,0(r16)
   2b4f0:	1003ea26 	beq	r2,zero,2c49c <___vfiprintf_internal_r+0x1084>
   2b4f4:	00c00944 	movi	r3,37
   2b4f8:	8025883a 	mov	r18,r16
   2b4fc:	10c0021e 	bne	r2,r3,2b508 <___vfiprintf_internal_r+0xf0>
   2b500:	00001606 	br	2b55c <___vfiprintf_internal_r+0x144>
   2b504:	10c00326 	beq	r2,r3,2b514 <___vfiprintf_internal_r+0xfc>
   2b508:	94800044 	addi	r18,r18,1
   2b50c:	90800007 	ldb	r2,0(r18)
   2b510:	103ffc1e 	bne	r2,zero,2b504 <__alt_data_end+0xfffeb504>
   2b514:	9423c83a 	sub	r17,r18,r16
   2b518:	88001026 	beq	r17,zero,2b55c <___vfiprintf_internal_r+0x144>
   2b51c:	d8c01c17 	ldw	r3,112(sp)
   2b520:	d8801b17 	ldw	r2,108(sp)
   2b524:	44000015 	stw	r16,0(r8)
   2b528:	88c7883a 	add	r3,r17,r3
   2b52c:	10800044 	addi	r2,r2,1
   2b530:	44400115 	stw	r17,4(r8)
   2b534:	d8c01c15 	stw	r3,112(sp)
   2b538:	d8801b15 	stw	r2,108(sp)
   2b53c:	010001c4 	movi	r4,7
   2b540:	2080760e 	bge	r4,r2,2b71c <___vfiprintf_internal_r+0x304>
   2b544:	1803821e 	bne	r3,zero,2c350 <___vfiprintf_internal_r+0xf38>
   2b548:	da802317 	ldw	r10,140(sp)
   2b54c:	d8001b15 	stw	zero,108(sp)
   2b550:	d811883a 	mov	r8,sp
   2b554:	5455883a 	add	r10,r10,r17
   2b558:	da802315 	stw	r10,140(sp)
   2b55c:	90800007 	ldb	r2,0(r18)
   2b560:	10044626 	beq	r2,zero,2c67c <___vfiprintf_internal_r+0x1264>
   2b564:	90c00047 	ldb	r3,1(r18)
   2b568:	94000044 	addi	r16,r18,1
   2b56c:	d8001d85 	stb	zero,118(sp)
   2b570:	0009883a 	mov	r4,zero
   2b574:	000f883a 	mov	r7,zero
   2b578:	027fffc4 	movi	r9,-1
   2b57c:	0023883a 	mov	r17,zero
   2b580:	0029883a 	mov	r20,zero
   2b584:	01401604 	movi	r5,88
   2b588:	01800244 	movi	r6,9
   2b58c:	03400a84 	movi	r13,42
   2b590:	03001b04 	movi	r12,108
   2b594:	84000044 	addi	r16,r16,1
   2b598:	18bff804 	addi	r2,r3,-32
   2b59c:	28827336 	bltu	r5,r2,2bf6c <___vfiprintf_internal_r+0xb54>
   2b5a0:	100490ba 	slli	r2,r2,2
   2b5a4:	028000f4 	movhi	r10,3
   2b5a8:	52ad6e04 	addi	r10,r10,-19016
   2b5ac:	1285883a 	add	r2,r2,r10
   2b5b0:	10800017 	ldw	r2,0(r2)
   2b5b4:	1000683a 	jmp	r2
   2b5b8:	0002bca0 	cmpeqi	zero,zero,2802
   2b5bc:	0002bf6c 	andhi	zero,zero,2813
   2b5c0:	0002bf6c 	andhi	zero,zero,2813
   2b5c4:	0002bcc0 	call	2bcc <__alt_mem_onchip_memory2_0-0x1d434>
   2b5c8:	0002bf6c 	andhi	zero,zero,2813
   2b5cc:	0002bf6c 	andhi	zero,zero,2813
   2b5d0:	0002bf6c 	andhi	zero,zero,2813
   2b5d4:	0002bf6c 	andhi	zero,zero,2813
   2b5d8:	0002bf6c 	andhi	zero,zero,2813
   2b5dc:	0002bf6c 	andhi	zero,zero,2813
   2b5e0:	0002bea8 	cmpgeui	zero,zero,2810
   2b5e4:	0002bec4 	movi	zero,2811
   2b5e8:	0002bf6c 	andhi	zero,zero,2813
   2b5ec:	0002b7ac 	andhi	zero,zero,2782
   2b5f0:	0002bed4 	movui	zero,2811
   2b5f4:	0002bf6c 	andhi	zero,zero,2813
   2b5f8:	0002bccc 	andi	zero,zero,2803
   2b5fc:	0002bcd8 	cmpnei	zero,zero,2803
   2b600:	0002bcd8 	cmpnei	zero,zero,2803
   2b604:	0002bcd8 	cmpnei	zero,zero,2803
   2b608:	0002bcd8 	cmpnei	zero,zero,2803
   2b60c:	0002bcd8 	cmpnei	zero,zero,2803
   2b610:	0002bcd8 	cmpnei	zero,zero,2803
   2b614:	0002bcd8 	cmpnei	zero,zero,2803
   2b618:	0002bcd8 	cmpnei	zero,zero,2803
   2b61c:	0002bcd8 	cmpnei	zero,zero,2803
   2b620:	0002bf6c 	andhi	zero,zero,2813
   2b624:	0002bf6c 	andhi	zero,zero,2813
   2b628:	0002bf6c 	andhi	zero,zero,2813
   2b62c:	0002bf6c 	andhi	zero,zero,2813
   2b630:	0002bf6c 	andhi	zero,zero,2813
   2b634:	0002bf6c 	andhi	zero,zero,2813
   2b638:	0002bf6c 	andhi	zero,zero,2813
   2b63c:	0002bf6c 	andhi	zero,zero,2813
   2b640:	0002bf6c 	andhi	zero,zero,2813
   2b644:	0002bf6c 	andhi	zero,zero,2813
   2b648:	0002bd04 	movi	zero,2804
   2b64c:	0002bf6c 	andhi	zero,zero,2813
   2b650:	0002bf6c 	andhi	zero,zero,2813
   2b654:	0002bf6c 	andhi	zero,zero,2813
   2b658:	0002bf6c 	andhi	zero,zero,2813
   2b65c:	0002bf6c 	andhi	zero,zero,2813
   2b660:	0002bf6c 	andhi	zero,zero,2813
   2b664:	0002bf6c 	andhi	zero,zero,2813
   2b668:	0002bf6c 	andhi	zero,zero,2813
   2b66c:	0002bf6c 	andhi	zero,zero,2813
   2b670:	0002bf6c 	andhi	zero,zero,2813
   2b674:	0002bd3c 	xorhi	zero,zero,2804
   2b678:	0002bf6c 	andhi	zero,zero,2813
   2b67c:	0002bf6c 	andhi	zero,zero,2813
   2b680:	0002bf6c 	andhi	zero,zero,2813
   2b684:	0002bf6c 	andhi	zero,zero,2813
   2b688:	0002bf6c 	andhi	zero,zero,2813
   2b68c:	0002bd94 	movui	zero,2806
   2b690:	0002bf6c 	andhi	zero,zero,2813
   2b694:	0002bf6c 	andhi	zero,zero,2813
   2b698:	0002be04 	movi	zero,2808
   2b69c:	0002bf6c 	andhi	zero,zero,2813
   2b6a0:	0002bf6c 	andhi	zero,zero,2813
   2b6a4:	0002bf6c 	andhi	zero,zero,2813
   2b6a8:	0002bf6c 	andhi	zero,zero,2813
   2b6ac:	0002bf6c 	andhi	zero,zero,2813
   2b6b0:	0002bf6c 	andhi	zero,zero,2813
   2b6b4:	0002bf6c 	andhi	zero,zero,2813
   2b6b8:	0002bf6c 	andhi	zero,zero,2813
   2b6bc:	0002bf6c 	andhi	zero,zero,2813
   2b6c0:	0002bf6c 	andhi	zero,zero,2813
   2b6c4:	0002bbb0 	cmpltui	zero,zero,2798
   2b6c8:	0002bbdc 	xori	zero,zero,2799
   2b6cc:	0002bf6c 	andhi	zero,zero,2813
   2b6d0:	0002bf6c 	andhi	zero,zero,2813
   2b6d4:	0002bf6c 	andhi	zero,zero,2813
   2b6d8:	0002bf14 	movui	zero,2812
   2b6dc:	0002bbdc 	xori	zero,zero,2799
   2b6e0:	0002bf6c 	andhi	zero,zero,2813
   2b6e4:	0002bf6c 	andhi	zero,zero,2813
   2b6e8:	0002ba70 	cmpltui	zero,zero,2793
   2b6ec:	0002bf6c 	andhi	zero,zero,2813
   2b6f0:	0002ba80 	call	2ba8 <__alt_mem_onchip_memory2_0-0x1d458>
   2b6f4:	0002babc 	xorhi	zero,zero,2794
   2b6f8:	0002b7b8 	rdprs	zero,zero,2782
   2b6fc:	0002ba64 	muli	zero,zero,2793
   2b700:	0002bf6c 	andhi	zero,zero,2813
   2b704:	0002be40 	call	2be4 <__alt_mem_onchip_memory2_0-0x1d41c>
   2b708:	0002bf6c 	andhi	zero,zero,2813
   2b70c:	0002be98 	cmpnei	zero,zero,2810
   2b710:	0002bf6c 	andhi	zero,zero,2813
   2b714:	0002bf6c 	andhi	zero,zero,2813
   2b718:	0002bb5c 	xori	zero,zero,2797
   2b71c:	42000204 	addi	r8,r8,8
   2b720:	da802317 	ldw	r10,140(sp)
   2b724:	5455883a 	add	r10,r10,r17
   2b728:	da802315 	stw	r10,140(sp)
   2b72c:	003f8b06 	br	2b55c <__alt_data_end+0xfffeb55c>
   2b730:	d9002017 	ldw	r4,128(sp)
   2b734:	a00b883a 	mov	r5,r20
   2b738:	0026c2c0 	call	26c2c <__swsetup_r>
   2b73c:	1003b11e 	bne	r2,zero,2c604 <___vfiprintf_internal_r+0x11ec>
   2b740:	a080030b 	ldhu	r2,12(r20)
   2b744:	00c00284 	movi	r3,10
   2b748:	1080068c 	andi	r2,r2,26
   2b74c:	10ff541e 	bne	r2,r3,2b4a0 <__alt_data_end+0xfffeb4a0>
   2b750:	a080038f 	ldh	r2,14(r20)
   2b754:	103f5216 	blt	r2,zero,2b4a0 <__alt_data_end+0xfffeb4a0>
   2b758:	d9c02217 	ldw	r7,136(sp)
   2b75c:	d9002017 	ldw	r4,128(sp)
   2b760:	e00d883a 	mov	r6,fp
   2b764:	a00b883a 	mov	r5,r20
   2b768:	002c8900 	call	2c890 <__sbprintf>
   2b76c:	dfc03617 	ldw	ra,216(sp)
   2b770:	df003517 	ldw	fp,212(sp)
   2b774:	ddc03417 	ldw	r23,208(sp)
   2b778:	dd803317 	ldw	r22,204(sp)
   2b77c:	dd403217 	ldw	r21,200(sp)
   2b780:	dd003117 	ldw	r20,196(sp)
   2b784:	dcc03017 	ldw	r19,192(sp)
   2b788:	dc802f17 	ldw	r18,188(sp)
   2b78c:	dc402e17 	ldw	r17,184(sp)
   2b790:	dc002d17 	ldw	r16,180(sp)
   2b794:	dec03704 	addi	sp,sp,220
   2b798:	f800283a 	ret
   2b79c:	0028c000 	call	28c00 <__sinit>
   2b7a0:	003f2f06 	br	2b460 <__alt_data_end+0xfffeb460>
   2b7a4:	0463c83a 	sub	r17,zero,r17
   2b7a8:	d8802215 	stw	r2,136(sp)
   2b7ac:	a5000114 	ori	r20,r20,4
   2b7b0:	80c00007 	ldb	r3,0(r16)
   2b7b4:	003f7706 	br	2b594 <__alt_data_end+0xfffeb594>
   2b7b8:	00800c04 	movi	r2,48
   2b7bc:	da802217 	ldw	r10,136(sp)
   2b7c0:	d8801d05 	stb	r2,116(sp)
   2b7c4:	00801e04 	movi	r2,120
   2b7c8:	d8801d45 	stb	r2,117(sp)
   2b7cc:	d8001d85 	stb	zero,118(sp)
   2b7d0:	50c00104 	addi	r3,r10,4
   2b7d4:	54800017 	ldw	r18,0(r10)
   2b7d8:	0027883a 	mov	r19,zero
   2b7dc:	a0800094 	ori	r2,r20,2
   2b7e0:	48030b16 	blt	r9,zero,2c410 <___vfiprintf_internal_r+0xff8>
   2b7e4:	00bfdfc4 	movi	r2,-129
   2b7e8:	a096703a 	and	r11,r20,r2
   2b7ec:	d8c02215 	stw	r3,136(sp)
   2b7f0:	5d000094 	ori	r20,r11,2
   2b7f4:	90032b1e 	bne	r18,zero,2c4a4 <___vfiprintf_internal_r+0x108c>
   2b7f8:	008000f4 	movhi	r2,3
   2b7fc:	1084f604 	addi	r2,r2,5080
   2b800:	d8802615 	stw	r2,152(sp)
   2b804:	0039883a 	mov	fp,zero
   2b808:	48017b1e 	bne	r9,zero,2bdf8 <___vfiprintf_internal_r+0x9e0>
   2b80c:	0013883a 	mov	r9,zero
   2b810:	0027883a 	mov	r19,zero
   2b814:	dd401a04 	addi	r21,sp,104
   2b818:	4825883a 	mov	r18,r9
   2b81c:	4cc0010e 	bge	r9,r19,2b824 <___vfiprintf_internal_r+0x40c>
   2b820:	9825883a 	mov	r18,r19
   2b824:	e7003fcc 	andi	fp,fp,255
   2b828:	e700201c 	xori	fp,fp,128
   2b82c:	e73fe004 	addi	fp,fp,-128
   2b830:	e0000126 	beq	fp,zero,2b838 <___vfiprintf_internal_r+0x420>
   2b834:	94800044 	addi	r18,r18,1
   2b838:	a380008c 	andi	r14,r20,2
   2b83c:	70000126 	beq	r14,zero,2b844 <___vfiprintf_internal_r+0x42c>
   2b840:	94800084 	addi	r18,r18,2
   2b844:	a700210c 	andi	fp,r20,132
   2b848:	e001df1e 	bne	fp,zero,2bfc8 <___vfiprintf_internal_r+0xbb0>
   2b84c:	8c87c83a 	sub	r3,r17,r18
   2b850:	00c1dd0e 	bge	zero,r3,2bfc8 <___vfiprintf_internal_r+0xbb0>
   2b854:	01c00404 	movi	r7,16
   2b858:	d8801c17 	ldw	r2,112(sp)
   2b85c:	38c3ad0e 	bge	r7,r3,2c714 <___vfiprintf_internal_r+0x12fc>
   2b860:	028000f4 	movhi	r10,3
   2b864:	52855a04 	addi	r10,r10,5480
   2b868:	dc002915 	stw	r16,164(sp)
   2b86c:	d9801b17 	ldw	r6,108(sp)
   2b870:	da802415 	stw	r10,144(sp)
   2b874:	03c001c4 	movi	r15,7
   2b878:	da402515 	stw	r9,148(sp)
   2b87c:	db802815 	stw	r14,160(sp)
   2b880:	1821883a 	mov	r16,r3
   2b884:	00000506 	br	2b89c <___vfiprintf_internal_r+0x484>
   2b888:	31400084 	addi	r5,r6,2
   2b88c:	42000204 	addi	r8,r8,8
   2b890:	200d883a 	mov	r6,r4
   2b894:	843ffc04 	addi	r16,r16,-16
   2b898:	3c000d0e 	bge	r7,r16,2b8d0 <___vfiprintf_internal_r+0x4b8>
   2b89c:	10800404 	addi	r2,r2,16
   2b8a0:	31000044 	addi	r4,r6,1
   2b8a4:	45800015 	stw	r22,0(r8)
   2b8a8:	41c00115 	stw	r7,4(r8)
   2b8ac:	d8801c15 	stw	r2,112(sp)
   2b8b0:	d9001b15 	stw	r4,108(sp)
   2b8b4:	793ff40e 	bge	r15,r4,2b888 <__alt_data_end+0xfffeb888>
   2b8b8:	1001b51e 	bne	r2,zero,2bf90 <___vfiprintf_internal_r+0xb78>
   2b8bc:	843ffc04 	addi	r16,r16,-16
   2b8c0:	000d883a 	mov	r6,zero
   2b8c4:	01400044 	movi	r5,1
   2b8c8:	d811883a 	mov	r8,sp
   2b8cc:	3c3ff316 	blt	r7,r16,2b89c <__alt_data_end+0xfffeb89c>
   2b8d0:	8007883a 	mov	r3,r16
   2b8d4:	da402517 	ldw	r9,148(sp)
   2b8d8:	db802817 	ldw	r14,160(sp)
   2b8dc:	dc002917 	ldw	r16,164(sp)
   2b8e0:	da802417 	ldw	r10,144(sp)
   2b8e4:	1885883a 	add	r2,r3,r2
   2b8e8:	40c00115 	stw	r3,4(r8)
   2b8ec:	42800015 	stw	r10,0(r8)
   2b8f0:	d8801c15 	stw	r2,112(sp)
   2b8f4:	d9401b15 	stw	r5,108(sp)
   2b8f8:	00c001c4 	movi	r3,7
   2b8fc:	19426016 	blt	r3,r5,2c280 <___vfiprintf_internal_r+0xe68>
   2b900:	d8c01d87 	ldb	r3,118(sp)
   2b904:	42000204 	addi	r8,r8,8
   2b908:	29000044 	addi	r4,r5,1
   2b90c:	1801b31e 	bne	r3,zero,2bfdc <___vfiprintf_internal_r+0xbc4>
   2b910:	7001c026 	beq	r14,zero,2c014 <___vfiprintf_internal_r+0xbfc>
   2b914:	d8c01d04 	addi	r3,sp,116
   2b918:	10800084 	addi	r2,r2,2
   2b91c:	40c00015 	stw	r3,0(r8)
   2b920:	00c00084 	movi	r3,2
   2b924:	40c00115 	stw	r3,4(r8)
   2b928:	d8801c15 	stw	r2,112(sp)
   2b92c:	d9001b15 	stw	r4,108(sp)
   2b930:	00c001c4 	movi	r3,7
   2b934:	1902650e 	bge	r3,r4,2c2cc <___vfiprintf_internal_r+0xeb4>
   2b938:	10029a1e 	bne	r2,zero,2c3a4 <___vfiprintf_internal_r+0xf8c>
   2b93c:	00c02004 	movi	r3,128
   2b940:	01000044 	movi	r4,1
   2b944:	000b883a 	mov	r5,zero
   2b948:	d811883a 	mov	r8,sp
   2b94c:	e0c1b31e 	bne	fp,r3,2c01c <___vfiprintf_internal_r+0xc04>
   2b950:	8cb9c83a 	sub	fp,r17,r18
   2b954:	0701b10e 	bge	zero,fp,2c01c <___vfiprintf_internal_r+0xc04>
   2b958:	01c00404 	movi	r7,16
   2b95c:	3f03890e 	bge	r7,fp,2c784 <___vfiprintf_internal_r+0x136c>
   2b960:	00c000f4 	movhi	r3,3
   2b964:	18c55604 	addi	r3,r3,5464
   2b968:	d8c02415 	stw	r3,144(sp)
   2b96c:	8007883a 	mov	r3,r16
   2b970:	034001c4 	movi	r13,7
   2b974:	e021883a 	mov	r16,fp
   2b978:	da402515 	stw	r9,148(sp)
   2b97c:	1839883a 	mov	fp,r3
   2b980:	00000506 	br	2b998 <___vfiprintf_internal_r+0x580>
   2b984:	29800084 	addi	r6,r5,2
   2b988:	42000204 	addi	r8,r8,8
   2b98c:	180b883a 	mov	r5,r3
   2b990:	843ffc04 	addi	r16,r16,-16
   2b994:	3c000d0e 	bge	r7,r16,2b9cc <___vfiprintf_internal_r+0x5b4>
   2b998:	10800404 	addi	r2,r2,16
   2b99c:	28c00044 	addi	r3,r5,1
   2b9a0:	45c00015 	stw	r23,0(r8)
   2b9a4:	41c00115 	stw	r7,4(r8)
   2b9a8:	d8801c15 	stw	r2,112(sp)
   2b9ac:	d8c01b15 	stw	r3,108(sp)
   2b9b0:	68fff40e 	bge	r13,r3,2b984 <__alt_data_end+0xfffeb984>
   2b9b4:	1002241e 	bne	r2,zero,2c248 <___vfiprintf_internal_r+0xe30>
   2b9b8:	843ffc04 	addi	r16,r16,-16
   2b9bc:	01800044 	movi	r6,1
   2b9c0:	000b883a 	mov	r5,zero
   2b9c4:	d811883a 	mov	r8,sp
   2b9c8:	3c3ff316 	blt	r7,r16,2b998 <__alt_data_end+0xfffeb998>
   2b9cc:	da402517 	ldw	r9,148(sp)
   2b9d0:	e007883a 	mov	r3,fp
   2b9d4:	8039883a 	mov	fp,r16
   2b9d8:	1821883a 	mov	r16,r3
   2b9dc:	d8c02417 	ldw	r3,144(sp)
   2b9e0:	1705883a 	add	r2,r2,fp
   2b9e4:	47000115 	stw	fp,4(r8)
   2b9e8:	40c00015 	stw	r3,0(r8)
   2b9ec:	d8801c15 	stw	r2,112(sp)
   2b9f0:	d9801b15 	stw	r6,108(sp)
   2b9f4:	00c001c4 	movi	r3,7
   2b9f8:	19827616 	blt	r3,r6,2c3d4 <___vfiprintf_internal_r+0xfbc>
   2b9fc:	4cf9c83a 	sub	fp,r9,r19
   2ba00:	42000204 	addi	r8,r8,8
   2ba04:	31000044 	addi	r4,r6,1
   2ba08:	300b883a 	mov	r5,r6
   2ba0c:	07018516 	blt	zero,fp,2c024 <___vfiprintf_internal_r+0xc0c>
   2ba10:	9885883a 	add	r2,r19,r2
   2ba14:	45400015 	stw	r21,0(r8)
   2ba18:	44c00115 	stw	r19,4(r8)
   2ba1c:	d8801c15 	stw	r2,112(sp)
   2ba20:	d9001b15 	stw	r4,108(sp)
   2ba24:	00c001c4 	movi	r3,7
   2ba28:	1901dd0e 	bge	r3,r4,2c1a0 <___vfiprintf_internal_r+0xd88>
   2ba2c:	1002401e 	bne	r2,zero,2c330 <___vfiprintf_internal_r+0xf18>
   2ba30:	d8001b15 	stw	zero,108(sp)
   2ba34:	a2c0010c 	andi	r11,r20,4
   2ba38:	58000226 	beq	r11,zero,2ba44 <___vfiprintf_internal_r+0x62c>
   2ba3c:	8ca7c83a 	sub	r19,r17,r18
   2ba40:	04c2f216 	blt	zero,r19,2c60c <___vfiprintf_internal_r+0x11f4>
   2ba44:	8c80010e 	bge	r17,r18,2ba4c <___vfiprintf_internal_r+0x634>
   2ba48:	9023883a 	mov	r17,r18
   2ba4c:	da802317 	ldw	r10,140(sp)
   2ba50:	5455883a 	add	r10,r10,r17
   2ba54:	da802315 	stw	r10,140(sp)
   2ba58:	d8001b15 	stw	zero,108(sp)
   2ba5c:	d811883a 	mov	r8,sp
   2ba60:	003ea206 	br	2b4ec <__alt_data_end+0xfffeb4ec>
   2ba64:	a5000814 	ori	r20,r20,32
   2ba68:	80c00007 	ldb	r3,0(r16)
   2ba6c:	003ec906 	br	2b594 <__alt_data_end+0xfffeb594>
   2ba70:	80c00007 	ldb	r3,0(r16)
   2ba74:	1b030926 	beq	r3,r12,2c69c <___vfiprintf_internal_r+0x1284>
   2ba78:	a5000414 	ori	r20,r20,16
   2ba7c:	003ec506 	br	2b594 <__alt_data_end+0xfffeb594>
   2ba80:	21003fcc 	andi	r4,r4,255
   2ba84:	20035e1e 	bne	r4,zero,2c800 <___vfiprintf_internal_r+0x13e8>
   2ba88:	a080080c 	andi	r2,r20,32
   2ba8c:	1002a526 	beq	r2,zero,2c524 <___vfiprintf_internal_r+0x110c>
   2ba90:	da802217 	ldw	r10,136(sp)
   2ba94:	50800017 	ldw	r2,0(r10)
   2ba98:	da802317 	ldw	r10,140(sp)
   2ba9c:	5007d7fa 	srai	r3,r10,31
   2baa0:	da802217 	ldw	r10,136(sp)
   2baa4:	10c00115 	stw	r3,4(r2)
   2baa8:	52800104 	addi	r10,r10,4
   2baac:	da802215 	stw	r10,136(sp)
   2bab0:	da802317 	ldw	r10,140(sp)
   2bab4:	12800015 	stw	r10,0(r2)
   2bab8:	003e8c06 	br	2b4ec <__alt_data_end+0xfffeb4ec>
   2babc:	21003fcc 	andi	r4,r4,255
   2bac0:	2003511e 	bne	r4,zero,2c808 <___vfiprintf_internal_r+0x13f0>
   2bac4:	a080080c 	andi	r2,r20,32
   2bac8:	1000a126 	beq	r2,zero,2bd50 <___vfiprintf_internal_r+0x938>
   2bacc:	da802217 	ldw	r10,136(sp)
   2bad0:	d8001d85 	stb	zero,118(sp)
   2bad4:	50800204 	addi	r2,r10,8
   2bad8:	54800017 	ldw	r18,0(r10)
   2badc:	54c00117 	ldw	r19,4(r10)
   2bae0:	4802b416 	blt	r9,zero,2c5b4 <___vfiprintf_internal_r+0x119c>
   2bae4:	013fdfc4 	movi	r4,-129
   2bae8:	94c6b03a 	or	r3,r18,r19
   2baec:	d8802215 	stw	r2,136(sp)
   2baf0:	a128703a 	and	r20,r20,r4
   2baf4:	1800a226 	beq	r3,zero,2bd80 <___vfiprintf_internal_r+0x968>
   2baf8:	0039883a 	mov	fp,zero
   2bafc:	dd401a04 	addi	r21,sp,104
   2bb00:	9006d0fa 	srli	r3,r18,3
   2bb04:	9808977a 	slli	r4,r19,29
   2bb08:	9826d0fa 	srli	r19,r19,3
   2bb0c:	948001cc 	andi	r18,r18,7
   2bb10:	90800c04 	addi	r2,r18,48
   2bb14:	ad7fffc4 	addi	r21,r21,-1
   2bb18:	20e4b03a 	or	r18,r4,r3
   2bb1c:	a8800005 	stb	r2,0(r21)
   2bb20:	94c6b03a 	or	r3,r18,r19
   2bb24:	183ff61e 	bne	r3,zero,2bb00 <__alt_data_end+0xfffebb00>
   2bb28:	a0c0004c 	andi	r3,r20,1
   2bb2c:	18005926 	beq	r3,zero,2bc94 <___vfiprintf_internal_r+0x87c>
   2bb30:	10803fcc 	andi	r2,r2,255
   2bb34:	1080201c 	xori	r2,r2,128
   2bb38:	10bfe004 	addi	r2,r2,-128
   2bb3c:	00c00c04 	movi	r3,48
   2bb40:	10c05426 	beq	r2,r3,2bc94 <___vfiprintf_internal_r+0x87c>
   2bb44:	da801e17 	ldw	r10,120(sp)
   2bb48:	a8bfffc4 	addi	r2,r21,-1
   2bb4c:	a8ffffc5 	stb	r3,-1(r21)
   2bb50:	50a7c83a 	sub	r19,r10,r2
   2bb54:	102b883a 	mov	r21,r2
   2bb58:	003f2f06 	br	2b818 <__alt_data_end+0xfffeb818>
   2bb5c:	21003fcc 	andi	r4,r4,255
   2bb60:	2003421e 	bne	r4,zero,2c86c <___vfiprintf_internal_r+0x1454>
   2bb64:	008000f4 	movhi	r2,3
   2bb68:	1084f604 	addi	r2,r2,5080
   2bb6c:	d8802615 	stw	r2,152(sp)
   2bb70:	a080080c 	andi	r2,r20,32
   2bb74:	1000aa26 	beq	r2,zero,2be20 <___vfiprintf_internal_r+0xa08>
   2bb78:	da802217 	ldw	r10,136(sp)
   2bb7c:	54800017 	ldw	r18,0(r10)
   2bb80:	54c00117 	ldw	r19,4(r10)
   2bb84:	52800204 	addi	r10,r10,8
   2bb88:	da802215 	stw	r10,136(sp)
   2bb8c:	a080004c 	andi	r2,r20,1
   2bb90:	1001d226 	beq	r2,zero,2c2dc <___vfiprintf_internal_r+0xec4>
   2bb94:	94c4b03a 	or	r2,r18,r19
   2bb98:	1002351e 	bne	r2,zero,2c470 <___vfiprintf_internal_r+0x1058>
   2bb9c:	d8001d85 	stb	zero,118(sp)
   2bba0:	48022216 	blt	r9,zero,2c42c <___vfiprintf_internal_r+0x1014>
   2bba4:	00bfdfc4 	movi	r2,-129
   2bba8:	a0a8703a 	and	r20,r20,r2
   2bbac:	003f1506 	br	2b804 <__alt_data_end+0xfffeb804>
   2bbb0:	da802217 	ldw	r10,136(sp)
   2bbb4:	04800044 	movi	r18,1
   2bbb8:	d8001d85 	stb	zero,118(sp)
   2bbbc:	50800017 	ldw	r2,0(r10)
   2bbc0:	52800104 	addi	r10,r10,4
   2bbc4:	da802215 	stw	r10,136(sp)
   2bbc8:	d8801005 	stb	r2,64(sp)
   2bbcc:	9027883a 	mov	r19,r18
   2bbd0:	dd401004 	addi	r21,sp,64
   2bbd4:	0013883a 	mov	r9,zero
   2bbd8:	003f1706 	br	2b838 <__alt_data_end+0xfffeb838>
   2bbdc:	21003fcc 	andi	r4,r4,255
   2bbe0:	2003201e 	bne	r4,zero,2c864 <___vfiprintf_internal_r+0x144c>
   2bbe4:	a080080c 	andi	r2,r20,32
   2bbe8:	10004b26 	beq	r2,zero,2bd18 <___vfiprintf_internal_r+0x900>
   2bbec:	da802217 	ldw	r10,136(sp)
   2bbf0:	50800117 	ldw	r2,4(r10)
   2bbf4:	54800017 	ldw	r18,0(r10)
   2bbf8:	52800204 	addi	r10,r10,8
   2bbfc:	da802215 	stw	r10,136(sp)
   2bc00:	1027883a 	mov	r19,r2
   2bc04:	10022c16 	blt	r2,zero,2c4b8 <___vfiprintf_internal_r+0x10a0>
   2bc08:	df001d83 	ldbu	fp,118(sp)
   2bc0c:	48007216 	blt	r9,zero,2bdd8 <___vfiprintf_internal_r+0x9c0>
   2bc10:	00ffdfc4 	movi	r3,-129
   2bc14:	94c4b03a 	or	r2,r18,r19
   2bc18:	a0e8703a 	and	r20,r20,r3
   2bc1c:	1000cc26 	beq	r2,zero,2bf50 <___vfiprintf_internal_r+0xb38>
   2bc20:	98021026 	beq	r19,zero,2c464 <___vfiprintf_internal_r+0x104c>
   2bc24:	dc402415 	stw	r17,144(sp)
   2bc28:	dc002515 	stw	r16,148(sp)
   2bc2c:	9823883a 	mov	r17,r19
   2bc30:	9021883a 	mov	r16,r18
   2bc34:	dd401a04 	addi	r21,sp,104
   2bc38:	4825883a 	mov	r18,r9
   2bc3c:	4027883a 	mov	r19,r8
   2bc40:	8009883a 	mov	r4,r16
   2bc44:	880b883a 	mov	r5,r17
   2bc48:	01800284 	movi	r6,10
   2bc4c:	000f883a 	mov	r7,zero
   2bc50:	002e3740 	call	2e374 <__umoddi3>
   2bc54:	10800c04 	addi	r2,r2,48
   2bc58:	ad7fffc4 	addi	r21,r21,-1
   2bc5c:	8009883a 	mov	r4,r16
   2bc60:	880b883a 	mov	r5,r17
   2bc64:	a8800005 	stb	r2,0(r21)
   2bc68:	01800284 	movi	r6,10
   2bc6c:	000f883a 	mov	r7,zero
   2bc70:	002ddfc0 	call	2ddfc <__udivdi3>
   2bc74:	1021883a 	mov	r16,r2
   2bc78:	10c4b03a 	or	r2,r2,r3
   2bc7c:	1823883a 	mov	r17,r3
   2bc80:	103fef1e 	bne	r2,zero,2bc40 <__alt_data_end+0xfffebc40>
   2bc84:	dc402417 	ldw	r17,144(sp)
   2bc88:	dc002517 	ldw	r16,148(sp)
   2bc8c:	9013883a 	mov	r9,r18
   2bc90:	9811883a 	mov	r8,r19
   2bc94:	da801e17 	ldw	r10,120(sp)
   2bc98:	5567c83a 	sub	r19,r10,r21
   2bc9c:	003ede06 	br	2b818 <__alt_data_end+0xfffeb818>
   2bca0:	38803fcc 	andi	r2,r7,255
   2bca4:	1080201c 	xori	r2,r2,128
   2bca8:	10bfe004 	addi	r2,r2,-128
   2bcac:	1002371e 	bne	r2,zero,2c58c <___vfiprintf_internal_r+0x1174>
   2bcb0:	01000044 	movi	r4,1
   2bcb4:	01c00804 	movi	r7,32
   2bcb8:	80c00007 	ldb	r3,0(r16)
   2bcbc:	003e3506 	br	2b594 <__alt_data_end+0xfffeb594>
   2bcc0:	a5000054 	ori	r20,r20,1
   2bcc4:	80c00007 	ldb	r3,0(r16)
   2bcc8:	003e3206 	br	2b594 <__alt_data_end+0xfffeb594>
   2bccc:	a5002014 	ori	r20,r20,128
   2bcd0:	80c00007 	ldb	r3,0(r16)
   2bcd4:	003e2f06 	br	2b594 <__alt_data_end+0xfffeb594>
   2bcd8:	8015883a 	mov	r10,r16
   2bcdc:	0023883a 	mov	r17,zero
   2bce0:	18bff404 	addi	r2,r3,-48
   2bce4:	50c00007 	ldb	r3,0(r10)
   2bce8:	8c4002a4 	muli	r17,r17,10
   2bcec:	84000044 	addi	r16,r16,1
   2bcf0:	8015883a 	mov	r10,r16
   2bcf4:	1463883a 	add	r17,r2,r17
   2bcf8:	18bff404 	addi	r2,r3,-48
   2bcfc:	30bff92e 	bgeu	r6,r2,2bce4 <__alt_data_end+0xfffebce4>
   2bd00:	003e2506 	br	2b598 <__alt_data_end+0xfffeb598>
   2bd04:	21003fcc 	andi	r4,r4,255
   2bd08:	2002d41e 	bne	r4,zero,2c85c <___vfiprintf_internal_r+0x1444>
   2bd0c:	a5000414 	ori	r20,r20,16
   2bd10:	a080080c 	andi	r2,r20,32
   2bd14:	103fb51e 	bne	r2,zero,2bbec <__alt_data_end+0xfffebbec>
   2bd18:	a080040c 	andi	r2,r20,16
   2bd1c:	1001f826 	beq	r2,zero,2c500 <___vfiprintf_internal_r+0x10e8>
   2bd20:	da802217 	ldw	r10,136(sp)
   2bd24:	54800017 	ldw	r18,0(r10)
   2bd28:	52800104 	addi	r10,r10,4
   2bd2c:	da802215 	stw	r10,136(sp)
   2bd30:	9027d7fa 	srai	r19,r18,31
   2bd34:	9805883a 	mov	r2,r19
   2bd38:	003fb206 	br	2bc04 <__alt_data_end+0xfffebc04>
   2bd3c:	21003fcc 	andi	r4,r4,255
   2bd40:	2002c41e 	bne	r4,zero,2c854 <___vfiprintf_internal_r+0x143c>
   2bd44:	a5000414 	ori	r20,r20,16
   2bd48:	a080080c 	andi	r2,r20,32
   2bd4c:	103f5f1e 	bne	r2,zero,2bacc <__alt_data_end+0xfffebacc>
   2bd50:	a080040c 	andi	r2,r20,16
   2bd54:	10020f26 	beq	r2,zero,2c594 <___vfiprintf_internal_r+0x117c>
   2bd58:	da802217 	ldw	r10,136(sp)
   2bd5c:	d8001d85 	stb	zero,118(sp)
   2bd60:	0027883a 	mov	r19,zero
   2bd64:	50800104 	addi	r2,r10,4
   2bd68:	54800017 	ldw	r18,0(r10)
   2bd6c:	48021116 	blt	r9,zero,2c5b4 <___vfiprintf_internal_r+0x119c>
   2bd70:	00ffdfc4 	movi	r3,-129
   2bd74:	d8802215 	stw	r2,136(sp)
   2bd78:	a0e8703a 	and	r20,r20,r3
   2bd7c:	903f5e1e 	bne	r18,zero,2baf8 <__alt_data_end+0xfffebaf8>
   2bd80:	0039883a 	mov	fp,zero
   2bd84:	4802a626 	beq	r9,zero,2c820 <___vfiprintf_internal_r+0x1408>
   2bd88:	0025883a 	mov	r18,zero
   2bd8c:	0027883a 	mov	r19,zero
   2bd90:	003f5a06 	br	2bafc <__alt_data_end+0xfffebafc>
   2bd94:	21003fcc 	andi	r4,r4,255
   2bd98:	20029f1e 	bne	r4,zero,2c818 <___vfiprintf_internal_r+0x1400>
   2bd9c:	a5000414 	ori	r20,r20,16
   2bda0:	a080080c 	andi	r2,r20,32
   2bda4:	10005e1e 	bne	r2,zero,2bf20 <___vfiprintf_internal_r+0xb08>
   2bda8:	a080040c 	andi	r2,r20,16
   2bdac:	1001a21e 	bne	r2,zero,2c438 <___vfiprintf_internal_r+0x1020>
   2bdb0:	a080100c 	andi	r2,r20,64
   2bdb4:	d8001d85 	stb	zero,118(sp)
   2bdb8:	da802217 	ldw	r10,136(sp)
   2bdbc:	1002231e 	bne	r2,zero,2c64c <___vfiprintf_internal_r+0x1234>
   2bdc0:	50800104 	addi	r2,r10,4
   2bdc4:	54800017 	ldw	r18,0(r10)
   2bdc8:	0027883a 	mov	r19,zero
   2bdcc:	4801a00e 	bge	r9,zero,2c450 <___vfiprintf_internal_r+0x1038>
   2bdd0:	d8802215 	stw	r2,136(sp)
   2bdd4:	0039883a 	mov	fp,zero
   2bdd8:	94c4b03a 	or	r2,r18,r19
   2bddc:	103f901e 	bne	r2,zero,2bc20 <__alt_data_end+0xfffebc20>
   2bde0:	00800044 	movi	r2,1
   2bde4:	10803fcc 	andi	r2,r2,255
   2bde8:	00c00044 	movi	r3,1
   2bdec:	10c05926 	beq	r2,r3,2bf54 <___vfiprintf_internal_r+0xb3c>
   2bdf0:	00c00084 	movi	r3,2
   2bdf4:	10ffe41e 	bne	r2,r3,2bd88 <__alt_data_end+0xfffebd88>
   2bdf8:	0025883a 	mov	r18,zero
   2bdfc:	0027883a 	mov	r19,zero
   2be00:	00013d06 	br	2c2f8 <___vfiprintf_internal_r+0xee0>
   2be04:	21003fcc 	andi	r4,r4,255
   2be08:	2002811e 	bne	r4,zero,2c810 <___vfiprintf_internal_r+0x13f8>
   2be0c:	008000f4 	movhi	r2,3
   2be10:	1084f104 	addi	r2,r2,5060
   2be14:	d8802615 	stw	r2,152(sp)
   2be18:	a080080c 	andi	r2,r20,32
   2be1c:	103f561e 	bne	r2,zero,2bb78 <__alt_data_end+0xfffebb78>
   2be20:	a080040c 	andi	r2,r20,16
   2be24:	1001d126 	beq	r2,zero,2c56c <___vfiprintf_internal_r+0x1154>
   2be28:	da802217 	ldw	r10,136(sp)
   2be2c:	0027883a 	mov	r19,zero
   2be30:	54800017 	ldw	r18,0(r10)
   2be34:	52800104 	addi	r10,r10,4
   2be38:	da802215 	stw	r10,136(sp)
   2be3c:	003f5306 	br	2bb8c <__alt_data_end+0xfffebb8c>
   2be40:	da802217 	ldw	r10,136(sp)
   2be44:	d8001d85 	stb	zero,118(sp)
   2be48:	55400017 	ldw	r21,0(r10)
   2be4c:	50c00104 	addi	r3,r10,4
   2be50:	a8024226 	beq	r21,zero,2c75c <___vfiprintf_internal_r+0x1344>
   2be54:	48021816 	blt	r9,zero,2c6b8 <___vfiprintf_internal_r+0x12a0>
   2be58:	480d883a 	mov	r6,r9
   2be5c:	000b883a 	mov	r5,zero
   2be60:	a809883a 	mov	r4,r21
   2be64:	d8c02a15 	stw	r3,168(sp)
   2be68:	da002b15 	stw	r8,172(sp)
   2be6c:	da402c15 	stw	r9,176(sp)
   2be70:	0029cb00 	call	29cb0 <memchr>
   2be74:	d8c02a17 	ldw	r3,168(sp)
   2be78:	da002b17 	ldw	r8,172(sp)
   2be7c:	da402c17 	ldw	r9,176(sp)
   2be80:	10024826 	beq	r2,zero,2c7a4 <___vfiprintf_internal_r+0x138c>
   2be84:	1567c83a 	sub	r19,r2,r21
   2be88:	df001d83 	ldbu	fp,118(sp)
   2be8c:	d8c02215 	stw	r3,136(sp)
   2be90:	0013883a 	mov	r9,zero
   2be94:	003e6006 	br	2b818 <__alt_data_end+0xfffeb818>
   2be98:	21003fcc 	andi	r4,r4,255
   2be9c:	203fc026 	beq	r4,zero,2bda0 <__alt_data_end+0xfffebda0>
   2bea0:	d9c01d85 	stb	r7,118(sp)
   2bea4:	003fbe06 	br	2bda0 <__alt_data_end+0xfffebda0>
   2bea8:	da802217 	ldw	r10,136(sp)
   2beac:	54400017 	ldw	r17,0(r10)
   2beb0:	50800104 	addi	r2,r10,4
   2beb4:	883e3b16 	blt	r17,zero,2b7a4 <__alt_data_end+0xfffeb7a4>
   2beb8:	d8802215 	stw	r2,136(sp)
   2bebc:	80c00007 	ldb	r3,0(r16)
   2bec0:	003db406 	br	2b594 <__alt_data_end+0xfffeb594>
   2bec4:	01000044 	movi	r4,1
   2bec8:	01c00ac4 	movi	r7,43
   2becc:	80c00007 	ldb	r3,0(r16)
   2bed0:	003db006 	br	2b594 <__alt_data_end+0xfffeb594>
   2bed4:	80c00007 	ldb	r3,0(r16)
   2bed8:	82800044 	addi	r10,r16,1
   2bedc:	1b423c26 	beq	r3,r13,2c7d0 <___vfiprintf_internal_r+0x13b8>
   2bee0:	18bff404 	addi	r2,r3,-48
   2bee4:	0013883a 	mov	r9,zero
   2bee8:	30822b36 	bltu	r6,r2,2c798 <___vfiprintf_internal_r+0x1380>
   2beec:	50c00007 	ldb	r3,0(r10)
   2bef0:	4a4002a4 	muli	r9,r9,10
   2bef4:	54000044 	addi	r16,r10,1
   2bef8:	8015883a 	mov	r10,r16
   2befc:	4893883a 	add	r9,r9,r2
   2bf00:	18bff404 	addi	r2,r3,-48
   2bf04:	30bff92e 	bgeu	r6,r2,2beec <__alt_data_end+0xfffebeec>
   2bf08:	483da30e 	bge	r9,zero,2b598 <__alt_data_end+0xfffeb598>
   2bf0c:	027fffc4 	movi	r9,-1
   2bf10:	003da106 	br	2b598 <__alt_data_end+0xfffeb598>
   2bf14:	a5001014 	ori	r20,r20,64
   2bf18:	80c00007 	ldb	r3,0(r16)
   2bf1c:	003d9d06 	br	2b594 <__alt_data_end+0xfffeb594>
   2bf20:	da802217 	ldw	r10,136(sp)
   2bf24:	d8001d85 	stb	zero,118(sp)
   2bf28:	50c00204 	addi	r3,r10,8
   2bf2c:	54800017 	ldw	r18,0(r10)
   2bf30:	54c00117 	ldw	r19,4(r10)
   2bf34:	4801ca16 	blt	r9,zero,2c660 <___vfiprintf_internal_r+0x1248>
   2bf38:	013fdfc4 	movi	r4,-129
   2bf3c:	94c4b03a 	or	r2,r18,r19
   2bf40:	d8c02215 	stw	r3,136(sp)
   2bf44:	a128703a 	and	r20,r20,r4
   2bf48:	0039883a 	mov	fp,zero
   2bf4c:	103f341e 	bne	r2,zero,2bc20 <__alt_data_end+0xfffebc20>
   2bf50:	483e2e26 	beq	r9,zero,2b80c <__alt_data_end+0xfffeb80c>
   2bf54:	0025883a 	mov	r18,zero
   2bf58:	94800c04 	addi	r18,r18,48
   2bf5c:	dc8019c5 	stb	r18,103(sp)
   2bf60:	dcc02717 	ldw	r19,156(sp)
   2bf64:	dd4019c4 	addi	r21,sp,103
   2bf68:	003e2b06 	br	2b818 <__alt_data_end+0xfffeb818>
   2bf6c:	21003fcc 	andi	r4,r4,255
   2bf70:	2002361e 	bne	r4,zero,2c84c <___vfiprintf_internal_r+0x1434>
   2bf74:	1801c126 	beq	r3,zero,2c67c <___vfiprintf_internal_r+0x1264>
   2bf78:	04800044 	movi	r18,1
   2bf7c:	d8c01005 	stb	r3,64(sp)
   2bf80:	d8001d85 	stb	zero,118(sp)
   2bf84:	9027883a 	mov	r19,r18
   2bf88:	dd401004 	addi	r21,sp,64
   2bf8c:	003f1106 	br	2bbd4 <__alt_data_end+0xfffebbd4>
   2bf90:	d9402117 	ldw	r5,132(sp)
   2bf94:	d9002017 	ldw	r4,128(sp)
   2bf98:	d9801a04 	addi	r6,sp,104
   2bf9c:	d9c02b15 	stw	r7,172(sp)
   2bfa0:	dbc02a15 	stw	r15,168(sp)
   2bfa4:	002b3040 	call	2b304 <__sprint_r.part.0>
   2bfa8:	d9c02b17 	ldw	r7,172(sp)
   2bfac:	dbc02a17 	ldw	r15,168(sp)
   2bfb0:	10006d1e 	bne	r2,zero,2c168 <___vfiprintf_internal_r+0xd50>
   2bfb4:	d9801b17 	ldw	r6,108(sp)
   2bfb8:	d8801c17 	ldw	r2,112(sp)
   2bfbc:	d811883a 	mov	r8,sp
   2bfc0:	31400044 	addi	r5,r6,1
   2bfc4:	003e3306 	br	2b894 <__alt_data_end+0xfffeb894>
   2bfc8:	d9401b17 	ldw	r5,108(sp)
   2bfcc:	d8801c17 	ldw	r2,112(sp)
   2bfd0:	29000044 	addi	r4,r5,1
   2bfd4:	d8c01d87 	ldb	r3,118(sp)
   2bfd8:	183e4d26 	beq	r3,zero,2b910 <__alt_data_end+0xfffeb910>
   2bfdc:	00c00044 	movi	r3,1
   2bfe0:	d9401d84 	addi	r5,sp,118
   2bfe4:	10c5883a 	add	r2,r2,r3
   2bfe8:	41400015 	stw	r5,0(r8)
   2bfec:	40c00115 	stw	r3,4(r8)
   2bff0:	d8801c15 	stw	r2,112(sp)
   2bff4:	d9001b15 	stw	r4,108(sp)
   2bff8:	014001c4 	movi	r5,7
   2bffc:	2900a90e 	bge	r5,r4,2c2a4 <___vfiprintf_internal_r+0xe8c>
   2c000:	1000da1e 	bne	r2,zero,2c36c <___vfiprintf_internal_r+0xf54>
   2c004:	7000ab1e 	bne	r14,zero,2c2b4 <___vfiprintf_internal_r+0xe9c>
   2c008:	000b883a 	mov	r5,zero
   2c00c:	1809883a 	mov	r4,r3
   2c010:	d811883a 	mov	r8,sp
   2c014:	00c02004 	movi	r3,128
   2c018:	e0fe4d26 	beq	fp,r3,2b950 <__alt_data_end+0xfffeb950>
   2c01c:	4cf9c83a 	sub	fp,r9,r19
   2c020:	073e7b0e 	bge	zero,fp,2ba10 <__alt_data_end+0xfffeba10>
   2c024:	01c00404 	movi	r7,16
   2c028:	3f01900e 	bge	r7,fp,2c66c <___vfiprintf_internal_r+0x1254>
   2c02c:	00c000f4 	movhi	r3,3
   2c030:	18c55604 	addi	r3,r3,5464
   2c034:	d8c02415 	stw	r3,144(sp)
   2c038:	034001c4 	movi	r13,7
   2c03c:	00000506 	br	2c054 <___vfiprintf_internal_r+0xc3c>
   2c040:	29000084 	addi	r4,r5,2
   2c044:	42000204 	addi	r8,r8,8
   2c048:	180b883a 	mov	r5,r3
   2c04c:	e73ffc04 	addi	fp,fp,-16
   2c050:	3f000d0e 	bge	r7,fp,2c088 <___vfiprintf_internal_r+0xc70>
   2c054:	10800404 	addi	r2,r2,16
   2c058:	28c00044 	addi	r3,r5,1
   2c05c:	45c00015 	stw	r23,0(r8)
   2c060:	41c00115 	stw	r7,4(r8)
   2c064:	d8801c15 	stw	r2,112(sp)
   2c068:	d8c01b15 	stw	r3,108(sp)
   2c06c:	68fff40e 	bge	r13,r3,2c040 <__alt_data_end+0xfffec040>
   2c070:	1000101e 	bne	r2,zero,2c0b4 <___vfiprintf_internal_r+0xc9c>
   2c074:	e73ffc04 	addi	fp,fp,-16
   2c078:	01000044 	movi	r4,1
   2c07c:	000b883a 	mov	r5,zero
   2c080:	d811883a 	mov	r8,sp
   2c084:	3f3ff316 	blt	r7,fp,2c054 <__alt_data_end+0xfffec054>
   2c088:	da802417 	ldw	r10,144(sp)
   2c08c:	1705883a 	add	r2,r2,fp
   2c090:	47000115 	stw	fp,4(r8)
   2c094:	42800015 	stw	r10,0(r8)
   2c098:	d8801c15 	stw	r2,112(sp)
   2c09c:	d9001b15 	stw	r4,108(sp)
   2c0a0:	00c001c4 	movi	r3,7
   2c0a4:	19003616 	blt	r3,r4,2c180 <___vfiprintf_internal_r+0xd68>
   2c0a8:	42000204 	addi	r8,r8,8
   2c0ac:	21000044 	addi	r4,r4,1
   2c0b0:	003e5706 	br	2ba10 <__alt_data_end+0xfffeba10>
   2c0b4:	d9402117 	ldw	r5,132(sp)
   2c0b8:	d9002017 	ldw	r4,128(sp)
   2c0bc:	d9801a04 	addi	r6,sp,104
   2c0c0:	d9c02b15 	stw	r7,172(sp)
   2c0c4:	db402a15 	stw	r13,168(sp)
   2c0c8:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c0cc:	d9c02b17 	ldw	r7,172(sp)
   2c0d0:	db402a17 	ldw	r13,168(sp)
   2c0d4:	1000241e 	bne	r2,zero,2c168 <___vfiprintf_internal_r+0xd50>
   2c0d8:	d9401b17 	ldw	r5,108(sp)
   2c0dc:	d8801c17 	ldw	r2,112(sp)
   2c0e0:	d811883a 	mov	r8,sp
   2c0e4:	29000044 	addi	r4,r5,1
   2c0e8:	003fd806 	br	2c04c <__alt_data_end+0xfffec04c>
   2c0ec:	d9401b17 	ldw	r5,108(sp)
   2c0f0:	00c000f4 	movhi	r3,3
   2c0f4:	18c55a04 	addi	r3,r3,5480
   2c0f8:	d8c02415 	stw	r3,144(sp)
   2c0fc:	29400044 	addi	r5,r5,1
   2c100:	d8c02417 	ldw	r3,144(sp)
   2c104:	14c5883a 	add	r2,r2,r19
   2c108:	44c00115 	stw	r19,4(r8)
   2c10c:	40c00015 	stw	r3,0(r8)
   2c110:	d8801c15 	stw	r2,112(sp)
   2c114:	d9401b15 	stw	r5,108(sp)
   2c118:	00c001c4 	movi	r3,7
   2c11c:	1940070e 	bge	r3,r5,2c13c <___vfiprintf_internal_r+0xd24>
   2c120:	103e4826 	beq	r2,zero,2ba44 <__alt_data_end+0xfffeba44>
   2c124:	d9402117 	ldw	r5,132(sp)
   2c128:	d9002017 	ldw	r4,128(sp)
   2c12c:	d9801a04 	addi	r6,sp,104
   2c130:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c134:	10000c1e 	bne	r2,zero,2c168 <___vfiprintf_internal_r+0xd50>
   2c138:	d8801c17 	ldw	r2,112(sp)
   2c13c:	8c80010e 	bge	r17,r18,2c144 <___vfiprintf_internal_r+0xd2c>
   2c140:	9023883a 	mov	r17,r18
   2c144:	da802317 	ldw	r10,140(sp)
   2c148:	5455883a 	add	r10,r10,r17
   2c14c:	da802315 	stw	r10,140(sp)
   2c150:	103e4126 	beq	r2,zero,2ba58 <__alt_data_end+0xfffeba58>
   2c154:	d9402117 	ldw	r5,132(sp)
   2c158:	d9002017 	ldw	r4,128(sp)
   2c15c:	d9801a04 	addi	r6,sp,104
   2c160:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c164:	103e3c26 	beq	r2,zero,2ba58 <__alt_data_end+0xfffeba58>
   2c168:	dd002117 	ldw	r20,132(sp)
   2c16c:	a080030b 	ldhu	r2,12(r20)
   2c170:	1080100c 	andi	r2,r2,64
   2c174:	1001231e 	bne	r2,zero,2c604 <___vfiprintf_internal_r+0x11ec>
   2c178:	d8802317 	ldw	r2,140(sp)
   2c17c:	003d7b06 	br	2b76c <__alt_data_end+0xfffeb76c>
   2c180:	1000991e 	bne	r2,zero,2c3e8 <___vfiprintf_internal_r+0xfd0>
   2c184:	00c00044 	movi	r3,1
   2c188:	9805883a 	mov	r2,r19
   2c18c:	dd400015 	stw	r21,0(sp)
   2c190:	dcc00115 	stw	r19,4(sp)
   2c194:	dcc01c15 	stw	r19,112(sp)
   2c198:	d8c01b15 	stw	r3,108(sp)
   2c19c:	d811883a 	mov	r8,sp
   2c1a0:	42000204 	addi	r8,r8,8
   2c1a4:	a2c0010c 	andi	r11,r20,4
   2c1a8:	583fe426 	beq	r11,zero,2c13c <__alt_data_end+0xfffec13c>
   2c1ac:	8ca7c83a 	sub	r19,r17,r18
   2c1b0:	04ffe20e 	bge	zero,r19,2c13c <__alt_data_end+0xfffec13c>
   2c1b4:	01c00404 	movi	r7,16
   2c1b8:	3cffcc0e 	bge	r7,r19,2c0ec <__alt_data_end+0xfffec0ec>
   2c1bc:	028000f4 	movhi	r10,3
   2c1c0:	52855a04 	addi	r10,r10,5480
   2c1c4:	d9001b17 	ldw	r4,108(sp)
   2c1c8:	da802415 	stw	r10,144(sp)
   2c1cc:	382b883a 	mov	r21,r7
   2c1d0:	050001c4 	movi	r20,7
   2c1d4:	df002017 	ldw	fp,128(sp)
   2c1d8:	00000506 	br	2c1f0 <___vfiprintf_internal_r+0xdd8>
   2c1dc:	21400084 	addi	r5,r4,2
   2c1e0:	42000204 	addi	r8,r8,8
   2c1e4:	1809883a 	mov	r4,r3
   2c1e8:	9cfffc04 	addi	r19,r19,-16
   2c1ec:	acffc40e 	bge	r21,r19,2c100 <__alt_data_end+0xfffec100>
   2c1f0:	10800404 	addi	r2,r2,16
   2c1f4:	20c00044 	addi	r3,r4,1
   2c1f8:	45800015 	stw	r22,0(r8)
   2c1fc:	45400115 	stw	r21,4(r8)
   2c200:	d8801c15 	stw	r2,112(sp)
   2c204:	d8c01b15 	stw	r3,108(sp)
   2c208:	a0fff40e 	bge	r20,r3,2c1dc <__alt_data_end+0xfffec1dc>
   2c20c:	1000041e 	bne	r2,zero,2c220 <___vfiprintf_internal_r+0xe08>
   2c210:	01400044 	movi	r5,1
   2c214:	0009883a 	mov	r4,zero
   2c218:	d811883a 	mov	r8,sp
   2c21c:	003ff206 	br	2c1e8 <__alt_data_end+0xfffec1e8>
   2c220:	d9402117 	ldw	r5,132(sp)
   2c224:	d9801a04 	addi	r6,sp,104
   2c228:	e009883a 	mov	r4,fp
   2c22c:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c230:	103fcd1e 	bne	r2,zero,2c168 <__alt_data_end+0xfffec168>
   2c234:	d9001b17 	ldw	r4,108(sp)
   2c238:	d8801c17 	ldw	r2,112(sp)
   2c23c:	d811883a 	mov	r8,sp
   2c240:	21400044 	addi	r5,r4,1
   2c244:	003fe806 	br	2c1e8 <__alt_data_end+0xfffec1e8>
   2c248:	d9402117 	ldw	r5,132(sp)
   2c24c:	d9002017 	ldw	r4,128(sp)
   2c250:	d9801a04 	addi	r6,sp,104
   2c254:	d9c02b15 	stw	r7,172(sp)
   2c258:	db402a15 	stw	r13,168(sp)
   2c25c:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c260:	d9c02b17 	ldw	r7,172(sp)
   2c264:	db402a17 	ldw	r13,168(sp)
   2c268:	103fbf1e 	bne	r2,zero,2c168 <__alt_data_end+0xfffec168>
   2c26c:	d9401b17 	ldw	r5,108(sp)
   2c270:	d8801c17 	ldw	r2,112(sp)
   2c274:	d811883a 	mov	r8,sp
   2c278:	29800044 	addi	r6,r5,1
   2c27c:	003dc406 	br	2b990 <__alt_data_end+0xfffeb990>
   2c280:	1000d21e 	bne	r2,zero,2c5cc <___vfiprintf_internal_r+0x11b4>
   2c284:	d8c01d87 	ldb	r3,118(sp)
   2c288:	18009526 	beq	r3,zero,2c4e0 <___vfiprintf_internal_r+0x10c8>
   2c28c:	00800044 	movi	r2,1
   2c290:	d8c01d84 	addi	r3,sp,118
   2c294:	1009883a 	mov	r4,r2
   2c298:	d8c00015 	stw	r3,0(sp)
   2c29c:	d8800115 	stw	r2,4(sp)
   2c2a0:	d811883a 	mov	r8,sp
   2c2a4:	200b883a 	mov	r5,r4
   2c2a8:	42000204 	addi	r8,r8,8
   2c2ac:	21000044 	addi	r4,r4,1
   2c2b0:	003d9706 	br	2b910 <__alt_data_end+0xfffeb910>
   2c2b4:	d9001d04 	addi	r4,sp,116
   2c2b8:	00800084 	movi	r2,2
   2c2bc:	d9000015 	stw	r4,0(sp)
   2c2c0:	d8800115 	stw	r2,4(sp)
   2c2c4:	1809883a 	mov	r4,r3
   2c2c8:	d811883a 	mov	r8,sp
   2c2cc:	200b883a 	mov	r5,r4
   2c2d0:	42000204 	addi	r8,r8,8
   2c2d4:	21000044 	addi	r4,r4,1
   2c2d8:	003f4e06 	br	2c014 <__alt_data_end+0xfffec014>
   2c2dc:	d8001d85 	stb	zero,118(sp)
   2c2e0:	48005016 	blt	r9,zero,2c424 <___vfiprintf_internal_r+0x100c>
   2c2e4:	00ffdfc4 	movi	r3,-129
   2c2e8:	94c4b03a 	or	r2,r18,r19
   2c2ec:	a0e8703a 	and	r20,r20,r3
   2c2f0:	103d4426 	beq	r2,zero,2b804 <__alt_data_end+0xfffeb804>
   2c2f4:	0039883a 	mov	fp,zero
   2c2f8:	d9002617 	ldw	r4,152(sp)
   2c2fc:	dd401a04 	addi	r21,sp,104
   2c300:	908003cc 	andi	r2,r18,15
   2c304:	9806973a 	slli	r3,r19,28
   2c308:	2085883a 	add	r2,r4,r2
   2c30c:	9024d13a 	srli	r18,r18,4
   2c310:	10800003 	ldbu	r2,0(r2)
   2c314:	9826d13a 	srli	r19,r19,4
   2c318:	ad7fffc4 	addi	r21,r21,-1
   2c31c:	1ca4b03a 	or	r18,r3,r18
   2c320:	a8800005 	stb	r2,0(r21)
   2c324:	94c4b03a 	or	r2,r18,r19
   2c328:	103ff51e 	bne	r2,zero,2c300 <__alt_data_end+0xfffec300>
   2c32c:	003e5906 	br	2bc94 <__alt_data_end+0xfffebc94>
   2c330:	d9402117 	ldw	r5,132(sp)
   2c334:	d9002017 	ldw	r4,128(sp)
   2c338:	d9801a04 	addi	r6,sp,104
   2c33c:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c340:	103f891e 	bne	r2,zero,2c168 <__alt_data_end+0xfffec168>
   2c344:	d8801c17 	ldw	r2,112(sp)
   2c348:	d811883a 	mov	r8,sp
   2c34c:	003f9506 	br	2c1a4 <__alt_data_end+0xfffec1a4>
   2c350:	d9402117 	ldw	r5,132(sp)
   2c354:	d9002017 	ldw	r4,128(sp)
   2c358:	d9801a04 	addi	r6,sp,104
   2c35c:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c360:	103f811e 	bne	r2,zero,2c168 <__alt_data_end+0xfffec168>
   2c364:	d811883a 	mov	r8,sp
   2c368:	003ced06 	br	2b720 <__alt_data_end+0xfffeb720>
   2c36c:	d9402117 	ldw	r5,132(sp)
   2c370:	d9002017 	ldw	r4,128(sp)
   2c374:	d9801a04 	addi	r6,sp,104
   2c378:	da402c15 	stw	r9,176(sp)
   2c37c:	db802a15 	stw	r14,168(sp)
   2c380:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c384:	da402c17 	ldw	r9,176(sp)
   2c388:	db802a17 	ldw	r14,168(sp)
   2c38c:	103f761e 	bne	r2,zero,2c168 <__alt_data_end+0xfffec168>
   2c390:	d9401b17 	ldw	r5,108(sp)
   2c394:	d8801c17 	ldw	r2,112(sp)
   2c398:	d811883a 	mov	r8,sp
   2c39c:	29000044 	addi	r4,r5,1
   2c3a0:	003d5b06 	br	2b910 <__alt_data_end+0xfffeb910>
   2c3a4:	d9402117 	ldw	r5,132(sp)
   2c3a8:	d9002017 	ldw	r4,128(sp)
   2c3ac:	d9801a04 	addi	r6,sp,104
   2c3b0:	da402c15 	stw	r9,176(sp)
   2c3b4:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c3b8:	da402c17 	ldw	r9,176(sp)
   2c3bc:	103f6a1e 	bne	r2,zero,2c168 <__alt_data_end+0xfffec168>
   2c3c0:	d9401b17 	ldw	r5,108(sp)
   2c3c4:	d8801c17 	ldw	r2,112(sp)
   2c3c8:	d811883a 	mov	r8,sp
   2c3cc:	29000044 	addi	r4,r5,1
   2c3d0:	003f1006 	br	2c014 <__alt_data_end+0xfffec014>
   2c3d4:	1000c31e 	bne	r2,zero,2c6e4 <___vfiprintf_internal_r+0x12cc>
   2c3d8:	01000044 	movi	r4,1
   2c3dc:	000b883a 	mov	r5,zero
   2c3e0:	d811883a 	mov	r8,sp
   2c3e4:	003f0d06 	br	2c01c <__alt_data_end+0xfffec01c>
   2c3e8:	d9402117 	ldw	r5,132(sp)
   2c3ec:	d9002017 	ldw	r4,128(sp)
   2c3f0:	d9801a04 	addi	r6,sp,104
   2c3f4:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c3f8:	103f5b1e 	bne	r2,zero,2c168 <__alt_data_end+0xfffec168>
   2c3fc:	d9001b17 	ldw	r4,108(sp)
   2c400:	d8801c17 	ldw	r2,112(sp)
   2c404:	d811883a 	mov	r8,sp
   2c408:	21000044 	addi	r4,r4,1
   2c40c:	003d8006 	br	2ba10 <__alt_data_end+0xfffeba10>
   2c410:	010000f4 	movhi	r4,3
   2c414:	2104f604 	addi	r4,r4,5080
   2c418:	d9002615 	stw	r4,152(sp)
   2c41c:	d8c02215 	stw	r3,136(sp)
   2c420:	1029883a 	mov	r20,r2
   2c424:	94c4b03a 	or	r2,r18,r19
   2c428:	103fb21e 	bne	r2,zero,2c2f4 <__alt_data_end+0xfffec2f4>
   2c42c:	0039883a 	mov	fp,zero
   2c430:	00800084 	movi	r2,2
   2c434:	003e6b06 	br	2bde4 <__alt_data_end+0xfffebde4>
   2c438:	da802217 	ldw	r10,136(sp)
   2c43c:	d8001d85 	stb	zero,118(sp)
   2c440:	0027883a 	mov	r19,zero
   2c444:	50800104 	addi	r2,r10,4
   2c448:	54800017 	ldw	r18,0(r10)
   2c44c:	483e6016 	blt	r9,zero,2bdd0 <__alt_data_end+0xfffebdd0>
   2c450:	00ffdfc4 	movi	r3,-129
   2c454:	d8802215 	stw	r2,136(sp)
   2c458:	a0e8703a 	and	r20,r20,r3
   2c45c:	0039883a 	mov	fp,zero
   2c460:	903ebb26 	beq	r18,zero,2bf50 <__alt_data_end+0xfffebf50>
   2c464:	00800244 	movi	r2,9
   2c468:	14bdee36 	bltu	r2,r18,2bc24 <__alt_data_end+0xfffebc24>
   2c46c:	003eba06 	br	2bf58 <__alt_data_end+0xfffebf58>
   2c470:	00800c04 	movi	r2,48
   2c474:	d8c01d45 	stb	r3,117(sp)
   2c478:	d8801d05 	stb	r2,116(sp)
   2c47c:	d8001d85 	stb	zero,118(sp)
   2c480:	a0c00094 	ori	r3,r20,2
   2c484:	4800a916 	blt	r9,zero,2c72c <___vfiprintf_internal_r+0x1314>
   2c488:	00bfdfc4 	movi	r2,-129
   2c48c:	a096703a 	and	r11,r20,r2
   2c490:	5d000094 	ori	r20,r11,2
   2c494:	0039883a 	mov	fp,zero
   2c498:	003f9706 	br	2c2f8 <__alt_data_end+0xfffec2f8>
   2c49c:	8025883a 	mov	r18,r16
   2c4a0:	003c2e06 	br	2b55c <__alt_data_end+0xfffeb55c>
   2c4a4:	008000f4 	movhi	r2,3
   2c4a8:	1084f604 	addi	r2,r2,5080
   2c4ac:	0039883a 	mov	fp,zero
   2c4b0:	d8802615 	stw	r2,152(sp)
   2c4b4:	003f9006 	br	2c2f8 <__alt_data_end+0xfffec2f8>
   2c4b8:	04a5c83a 	sub	r18,zero,r18
   2c4bc:	07000b44 	movi	fp,45
   2c4c0:	9004c03a 	cmpne	r2,r18,zero
   2c4c4:	04e7c83a 	sub	r19,zero,r19
   2c4c8:	df001d85 	stb	fp,118(sp)
   2c4cc:	98a7c83a 	sub	r19,r19,r2
   2c4d0:	48009f16 	blt	r9,zero,2c750 <___vfiprintf_internal_r+0x1338>
   2c4d4:	00bfdfc4 	movi	r2,-129
   2c4d8:	a0a8703a 	and	r20,r20,r2
   2c4dc:	003dd006 	br	2bc20 <__alt_data_end+0xfffebc20>
   2c4e0:	70004c26 	beq	r14,zero,2c614 <___vfiprintf_internal_r+0x11fc>
   2c4e4:	00800084 	movi	r2,2
   2c4e8:	d8c01d04 	addi	r3,sp,116
   2c4ec:	d8c00015 	stw	r3,0(sp)
   2c4f0:	d8800115 	stw	r2,4(sp)
   2c4f4:	01000044 	movi	r4,1
   2c4f8:	d811883a 	mov	r8,sp
   2c4fc:	003f7306 	br	2c2cc <__alt_data_end+0xfffec2cc>
   2c500:	a080100c 	andi	r2,r20,64
   2c504:	da802217 	ldw	r10,136(sp)
   2c508:	103e0626 	beq	r2,zero,2bd24 <__alt_data_end+0xfffebd24>
   2c50c:	5480000f 	ldh	r18,0(r10)
   2c510:	52800104 	addi	r10,r10,4
   2c514:	da802215 	stw	r10,136(sp)
   2c518:	9027d7fa 	srai	r19,r18,31
   2c51c:	9805883a 	mov	r2,r19
   2c520:	003db806 	br	2bc04 <__alt_data_end+0xfffebc04>
   2c524:	a080040c 	andi	r2,r20,16
   2c528:	1000091e 	bne	r2,zero,2c550 <___vfiprintf_internal_r+0x1138>
   2c52c:	a2c0100c 	andi	r11,r20,64
   2c530:	58000726 	beq	r11,zero,2c550 <___vfiprintf_internal_r+0x1138>
   2c534:	da802217 	ldw	r10,136(sp)
   2c538:	50800017 	ldw	r2,0(r10)
   2c53c:	52800104 	addi	r10,r10,4
   2c540:	da802215 	stw	r10,136(sp)
   2c544:	da802317 	ldw	r10,140(sp)
   2c548:	1280000d 	sth	r10,0(r2)
   2c54c:	003be706 	br	2b4ec <__alt_data_end+0xfffeb4ec>
   2c550:	da802217 	ldw	r10,136(sp)
   2c554:	50800017 	ldw	r2,0(r10)
   2c558:	52800104 	addi	r10,r10,4
   2c55c:	da802215 	stw	r10,136(sp)
   2c560:	da802317 	ldw	r10,140(sp)
   2c564:	12800015 	stw	r10,0(r2)
   2c568:	003be006 	br	2b4ec <__alt_data_end+0xfffeb4ec>
   2c56c:	a080100c 	andi	r2,r20,64
   2c570:	da802217 	ldw	r10,136(sp)
   2c574:	10003026 	beq	r2,zero,2c638 <___vfiprintf_internal_r+0x1220>
   2c578:	5480000b 	ldhu	r18,0(r10)
   2c57c:	52800104 	addi	r10,r10,4
   2c580:	0027883a 	mov	r19,zero
   2c584:	da802215 	stw	r10,136(sp)
   2c588:	003d8006 	br	2bb8c <__alt_data_end+0xfffebb8c>
   2c58c:	80c00007 	ldb	r3,0(r16)
   2c590:	003c0006 	br	2b594 <__alt_data_end+0xfffeb594>
   2c594:	a080100c 	andi	r2,r20,64
   2c598:	d8001d85 	stb	zero,118(sp)
   2c59c:	da802217 	ldw	r10,136(sp)
   2c5a0:	1000201e 	bne	r2,zero,2c624 <___vfiprintf_internal_r+0x120c>
   2c5a4:	50800104 	addi	r2,r10,4
   2c5a8:	54800017 	ldw	r18,0(r10)
   2c5ac:	0027883a 	mov	r19,zero
   2c5b0:	483def0e 	bge	r9,zero,2bd70 <__alt_data_end+0xfffebd70>
   2c5b4:	94c6b03a 	or	r3,r18,r19
   2c5b8:	d8802215 	stw	r2,136(sp)
   2c5bc:	183d4e1e 	bne	r3,zero,2baf8 <__alt_data_end+0xfffebaf8>
   2c5c0:	0039883a 	mov	fp,zero
   2c5c4:	0005883a 	mov	r2,zero
   2c5c8:	003e0606 	br	2bde4 <__alt_data_end+0xfffebde4>
   2c5cc:	d9402117 	ldw	r5,132(sp)
   2c5d0:	d9002017 	ldw	r4,128(sp)
   2c5d4:	d9801a04 	addi	r6,sp,104
   2c5d8:	da402c15 	stw	r9,176(sp)
   2c5dc:	db802a15 	stw	r14,168(sp)
   2c5e0:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c5e4:	da402c17 	ldw	r9,176(sp)
   2c5e8:	db802a17 	ldw	r14,168(sp)
   2c5ec:	103ede1e 	bne	r2,zero,2c168 <__alt_data_end+0xfffec168>
   2c5f0:	d9401b17 	ldw	r5,108(sp)
   2c5f4:	d8801c17 	ldw	r2,112(sp)
   2c5f8:	d811883a 	mov	r8,sp
   2c5fc:	29000044 	addi	r4,r5,1
   2c600:	003e7406 	br	2bfd4 <__alt_data_end+0xfffebfd4>
   2c604:	00bfffc4 	movi	r2,-1
   2c608:	003c5806 	br	2b76c <__alt_data_end+0xfffeb76c>
   2c60c:	d811883a 	mov	r8,sp
   2c610:	003ee806 	br	2c1b4 <__alt_data_end+0xfffec1b4>
   2c614:	000b883a 	mov	r5,zero
   2c618:	01000044 	movi	r4,1
   2c61c:	d811883a 	mov	r8,sp
   2c620:	003e7c06 	br	2c014 <__alt_data_end+0xfffec014>
   2c624:	50800104 	addi	r2,r10,4
   2c628:	5480000b 	ldhu	r18,0(r10)
   2c62c:	0027883a 	mov	r19,zero
   2c630:	483dcf0e 	bge	r9,zero,2bd70 <__alt_data_end+0xfffebd70>
   2c634:	003fdf06 	br	2c5b4 <__alt_data_end+0xfffec5b4>
   2c638:	54800017 	ldw	r18,0(r10)
   2c63c:	52800104 	addi	r10,r10,4
   2c640:	0027883a 	mov	r19,zero
   2c644:	da802215 	stw	r10,136(sp)
   2c648:	003d5006 	br	2bb8c <__alt_data_end+0xfffebb8c>
   2c64c:	50800104 	addi	r2,r10,4
   2c650:	5480000b 	ldhu	r18,0(r10)
   2c654:	0027883a 	mov	r19,zero
   2c658:	483f7d0e 	bge	r9,zero,2c450 <__alt_data_end+0xfffec450>
   2c65c:	003ddc06 	br	2bdd0 <__alt_data_end+0xfffebdd0>
   2c660:	d8c02215 	stw	r3,136(sp)
   2c664:	0039883a 	mov	fp,zero
   2c668:	003ddb06 	br	2bdd8 <__alt_data_end+0xfffebdd8>
   2c66c:	028000f4 	movhi	r10,3
   2c670:	52855604 	addi	r10,r10,5464
   2c674:	da802415 	stw	r10,144(sp)
   2c678:	003e8306 	br	2c088 <__alt_data_end+0xfffec088>
   2c67c:	d8801c17 	ldw	r2,112(sp)
   2c680:	dd002117 	ldw	r20,132(sp)
   2c684:	103eb926 	beq	r2,zero,2c16c <__alt_data_end+0xfffec16c>
   2c688:	d9002017 	ldw	r4,128(sp)
   2c68c:	d9801a04 	addi	r6,sp,104
   2c690:	a00b883a 	mov	r5,r20
   2c694:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c698:	003eb406 	br	2c16c <__alt_data_end+0xfffec16c>
   2c69c:	80c00043 	ldbu	r3,1(r16)
   2c6a0:	a5000814 	ori	r20,r20,32
   2c6a4:	84000044 	addi	r16,r16,1
   2c6a8:	18c03fcc 	andi	r3,r3,255
   2c6ac:	18c0201c 	xori	r3,r3,128
   2c6b0:	18ffe004 	addi	r3,r3,-128
   2c6b4:	003bb706 	br	2b594 <__alt_data_end+0xfffeb594>
   2c6b8:	a809883a 	mov	r4,r21
   2c6bc:	d8c02a15 	stw	r3,168(sp)
   2c6c0:	da002b15 	stw	r8,172(sp)
   2c6c4:	002b26c0 	call	2b26c <strlen>
   2c6c8:	d8c02a17 	ldw	r3,168(sp)
   2c6cc:	1027883a 	mov	r19,r2
   2c6d0:	df001d83 	ldbu	fp,118(sp)
   2c6d4:	d8c02215 	stw	r3,136(sp)
   2c6d8:	0013883a 	mov	r9,zero
   2c6dc:	da002b17 	ldw	r8,172(sp)
   2c6e0:	003c4d06 	br	2b818 <__alt_data_end+0xfffeb818>
   2c6e4:	d9402117 	ldw	r5,132(sp)
   2c6e8:	d9002017 	ldw	r4,128(sp)
   2c6ec:	d9801a04 	addi	r6,sp,104
   2c6f0:	da402c15 	stw	r9,176(sp)
   2c6f4:	002b3040 	call	2b304 <__sprint_r.part.0>
   2c6f8:	da402c17 	ldw	r9,176(sp)
   2c6fc:	103e9a1e 	bne	r2,zero,2c168 <__alt_data_end+0xfffec168>
   2c700:	d9401b17 	ldw	r5,108(sp)
   2c704:	d8801c17 	ldw	r2,112(sp)
   2c708:	d811883a 	mov	r8,sp
   2c70c:	29000044 	addi	r4,r5,1
   2c710:	003e4206 	br	2c01c <__alt_data_end+0xfffec01c>
   2c714:	d9401b17 	ldw	r5,108(sp)
   2c718:	010000f4 	movhi	r4,3
   2c71c:	21055a04 	addi	r4,r4,5480
   2c720:	d9002415 	stw	r4,144(sp)
   2c724:	29400044 	addi	r5,r5,1
   2c728:	003c6d06 	br	2b8e0 <__alt_data_end+0xfffeb8e0>
   2c72c:	0039883a 	mov	fp,zero
   2c730:	00800084 	movi	r2,2
   2c734:	10803fcc 	andi	r2,r2,255
   2c738:	01000044 	movi	r4,1
   2c73c:	11001e26 	beq	r2,r4,2c7b8 <___vfiprintf_internal_r+0x13a0>
   2c740:	01000084 	movi	r4,2
   2c744:	11001e1e 	bne	r2,r4,2c7c0 <___vfiprintf_internal_r+0x13a8>
   2c748:	1829883a 	mov	r20,r3
   2c74c:	003eea06 	br	2c2f8 <__alt_data_end+0xfffec2f8>
   2c750:	a007883a 	mov	r3,r20
   2c754:	00800044 	movi	r2,1
   2c758:	003ff606 	br	2c734 <__alt_data_end+0xfffec734>
   2c75c:	00800184 	movi	r2,6
   2c760:	1240012e 	bgeu	r2,r9,2c768 <___vfiprintf_internal_r+0x1350>
   2c764:	1013883a 	mov	r9,r2
   2c768:	4827883a 	mov	r19,r9
   2c76c:	4825883a 	mov	r18,r9
   2c770:	48001516 	blt	r9,zero,2c7c8 <___vfiprintf_internal_r+0x13b0>
   2c774:	054000f4 	movhi	r21,3
   2c778:	d8c02215 	stw	r3,136(sp)
   2c77c:	ad44fb04 	addi	r21,r21,5100
   2c780:	003d1406 	br	2bbd4 <__alt_data_end+0xfffebbd4>
   2c784:	028000f4 	movhi	r10,3
   2c788:	52855604 	addi	r10,r10,5464
   2c78c:	da802415 	stw	r10,144(sp)
   2c790:	200d883a 	mov	r6,r4
   2c794:	003c9106 	br	2b9dc <__alt_data_end+0xfffeb9dc>
   2c798:	5021883a 	mov	r16,r10
   2c79c:	0013883a 	mov	r9,zero
   2c7a0:	003b7d06 	br	2b598 <__alt_data_end+0xfffeb598>
   2c7a4:	4827883a 	mov	r19,r9
   2c7a8:	df001d83 	ldbu	fp,118(sp)
   2c7ac:	d8c02215 	stw	r3,136(sp)
   2c7b0:	0013883a 	mov	r9,zero
   2c7b4:	003c1806 	br	2b818 <__alt_data_end+0xfffeb818>
   2c7b8:	1829883a 	mov	r20,r3
   2c7bc:	003d1806 	br	2bc20 <__alt_data_end+0xfffebc20>
   2c7c0:	1829883a 	mov	r20,r3
   2c7c4:	003ccd06 	br	2bafc <__alt_data_end+0xfffebafc>
   2c7c8:	0025883a 	mov	r18,zero
   2c7cc:	003fe906 	br	2c774 <__alt_data_end+0xfffec774>
   2c7d0:	d8802217 	ldw	r2,136(sp)
   2c7d4:	80c00043 	ldbu	r3,1(r16)
   2c7d8:	5021883a 	mov	r16,r10
   2c7dc:	12400017 	ldw	r9,0(r2)
   2c7e0:	10800104 	addi	r2,r2,4
   2c7e4:	d8802215 	stw	r2,136(sp)
   2c7e8:	483faf0e 	bge	r9,zero,2c6a8 <__alt_data_end+0xfffec6a8>
   2c7ec:	18c03fcc 	andi	r3,r3,255
   2c7f0:	18c0201c 	xori	r3,r3,128
   2c7f4:	027fffc4 	movi	r9,-1
   2c7f8:	18ffe004 	addi	r3,r3,-128
   2c7fc:	003b6506 	br	2b594 <__alt_data_end+0xfffeb594>
   2c800:	d9c01d85 	stb	r7,118(sp)
   2c804:	003ca006 	br	2ba88 <__alt_data_end+0xfffeba88>
   2c808:	d9c01d85 	stb	r7,118(sp)
   2c80c:	003cad06 	br	2bac4 <__alt_data_end+0xfffebac4>
   2c810:	d9c01d85 	stb	r7,118(sp)
   2c814:	003d7d06 	br	2be0c <__alt_data_end+0xfffebe0c>
   2c818:	d9c01d85 	stb	r7,118(sp)
   2c81c:	003d5f06 	br	2bd9c <__alt_data_end+0xfffebd9c>
   2c820:	a080004c 	andi	r2,r20,1
   2c824:	0039883a 	mov	fp,zero
   2c828:	10000526 	beq	r2,zero,2c840 <___vfiprintf_internal_r+0x1428>
   2c82c:	00800c04 	movi	r2,48
   2c830:	d88019c5 	stb	r2,103(sp)
   2c834:	dcc02717 	ldw	r19,156(sp)
   2c838:	dd4019c4 	addi	r21,sp,103
   2c83c:	003bf606 	br	2b818 <__alt_data_end+0xfffeb818>
   2c840:	0027883a 	mov	r19,zero
   2c844:	dd401a04 	addi	r21,sp,104
   2c848:	003bf306 	br	2b818 <__alt_data_end+0xfffeb818>
   2c84c:	d9c01d85 	stb	r7,118(sp)
   2c850:	003dc806 	br	2bf74 <__alt_data_end+0xfffebf74>
   2c854:	d9c01d85 	stb	r7,118(sp)
   2c858:	003d3a06 	br	2bd44 <__alt_data_end+0xfffebd44>
   2c85c:	d9c01d85 	stb	r7,118(sp)
   2c860:	003d2a06 	br	2bd0c <__alt_data_end+0xfffebd0c>
   2c864:	d9c01d85 	stb	r7,118(sp)
   2c868:	003cde06 	br	2bbe4 <__alt_data_end+0xfffebbe4>
   2c86c:	d9c01d85 	stb	r7,118(sp)
   2c870:	003cbc06 	br	2bb64 <__alt_data_end+0xfffebb64>

0002c874 <__vfiprintf_internal>:
   2c874:	008000f4 	movhi	r2,3
   2c878:	108c1804 	addi	r2,r2,12384
   2c87c:	300f883a 	mov	r7,r6
   2c880:	280d883a 	mov	r6,r5
   2c884:	200b883a 	mov	r5,r4
   2c888:	11000017 	ldw	r4,0(r2)
   2c88c:	002b4181 	jmpi	2b418 <___vfiprintf_internal_r>

0002c890 <__sbprintf>:
   2c890:	2880030b 	ldhu	r2,12(r5)
   2c894:	2ac01917 	ldw	r11,100(r5)
   2c898:	2a80038b 	ldhu	r10,14(r5)
   2c89c:	2a400717 	ldw	r9,28(r5)
   2c8a0:	2a000917 	ldw	r8,36(r5)
   2c8a4:	defee204 	addi	sp,sp,-1144
   2c8a8:	00c10004 	movi	r3,1024
   2c8ac:	dc011a15 	stw	r16,1128(sp)
   2c8b0:	10bfff4c 	andi	r2,r2,65533
   2c8b4:	2821883a 	mov	r16,r5
   2c8b8:	d8cb883a 	add	r5,sp,r3
   2c8bc:	dc811c15 	stw	r18,1136(sp)
   2c8c0:	dc411b15 	stw	r17,1132(sp)
   2c8c4:	dfc11d15 	stw	ra,1140(sp)
   2c8c8:	2025883a 	mov	r18,r4
   2c8cc:	d881030d 	sth	r2,1036(sp)
   2c8d0:	dac11915 	stw	r11,1124(sp)
   2c8d4:	da81038d 	sth	r10,1038(sp)
   2c8d8:	da410715 	stw	r9,1052(sp)
   2c8dc:	da010915 	stw	r8,1060(sp)
   2c8e0:	dec10015 	stw	sp,1024(sp)
   2c8e4:	dec10415 	stw	sp,1040(sp)
   2c8e8:	d8c10215 	stw	r3,1032(sp)
   2c8ec:	d8c10515 	stw	r3,1044(sp)
   2c8f0:	d8010615 	stw	zero,1048(sp)
   2c8f4:	002b4180 	call	2b418 <___vfiprintf_internal_r>
   2c8f8:	1023883a 	mov	r17,r2
   2c8fc:	10000416 	blt	r2,zero,2c910 <__sbprintf+0x80>
   2c900:	d9410004 	addi	r5,sp,1024
   2c904:	9009883a 	mov	r4,r18
   2c908:	00288240 	call	28824 <_fflush_r>
   2c90c:	10000d1e 	bne	r2,zero,2c944 <__sbprintf+0xb4>
   2c910:	d881030b 	ldhu	r2,1036(sp)
   2c914:	1080100c 	andi	r2,r2,64
   2c918:	10000326 	beq	r2,zero,2c928 <__sbprintf+0x98>
   2c91c:	8080030b 	ldhu	r2,12(r16)
   2c920:	10801014 	ori	r2,r2,64
   2c924:	8080030d 	sth	r2,12(r16)
   2c928:	8805883a 	mov	r2,r17
   2c92c:	dfc11d17 	ldw	ra,1140(sp)
   2c930:	dc811c17 	ldw	r18,1136(sp)
   2c934:	dc411b17 	ldw	r17,1132(sp)
   2c938:	dc011a17 	ldw	r16,1128(sp)
   2c93c:	dec11e04 	addi	sp,sp,1144
   2c940:	f800283a 	ret
   2c944:	047fffc4 	movi	r17,-1
   2c948:	003ff106 	br	2c910 <__alt_data_end+0xfffec910>

0002c94c <_write_r>:
   2c94c:	defffd04 	addi	sp,sp,-12
   2c950:	2805883a 	mov	r2,r5
   2c954:	dc000015 	stw	r16,0(sp)
   2c958:	040000f4 	movhi	r16,3
   2c95c:	dc400115 	stw	r17,4(sp)
   2c960:	300b883a 	mov	r5,r6
   2c964:	8412e904 	addi	r16,r16,19364
   2c968:	2023883a 	mov	r17,r4
   2c96c:	380d883a 	mov	r6,r7
   2c970:	1009883a 	mov	r4,r2
   2c974:	dfc00215 	stw	ra,8(sp)
   2c978:	80000015 	stw	zero,0(r16)
   2c97c:	002f1d00 	call	2f1d0 <write>
   2c980:	00ffffc4 	movi	r3,-1
   2c984:	10c00526 	beq	r2,r3,2c99c <_write_r+0x50>
   2c988:	dfc00217 	ldw	ra,8(sp)
   2c98c:	dc400117 	ldw	r17,4(sp)
   2c990:	dc000017 	ldw	r16,0(sp)
   2c994:	dec00304 	addi	sp,sp,12
   2c998:	f800283a 	ret
   2c99c:	80c00017 	ldw	r3,0(r16)
   2c9a0:	183ff926 	beq	r3,zero,2c988 <__alt_data_end+0xfffec988>
   2c9a4:	88c00015 	stw	r3,0(r17)
   2c9a8:	003ff706 	br	2c988 <__alt_data_end+0xfffec988>

0002c9ac <_close_r>:
   2c9ac:	defffd04 	addi	sp,sp,-12
   2c9b0:	dc000015 	stw	r16,0(sp)
   2c9b4:	040000f4 	movhi	r16,3
   2c9b8:	dc400115 	stw	r17,4(sp)
   2c9bc:	8412e904 	addi	r16,r16,19364
   2c9c0:	2023883a 	mov	r17,r4
   2c9c4:	2809883a 	mov	r4,r5
   2c9c8:	dfc00215 	stw	ra,8(sp)
   2c9cc:	80000015 	stw	zero,0(r16)
   2c9d0:	002e9900 	call	2e990 <close>
   2c9d4:	00ffffc4 	movi	r3,-1
   2c9d8:	10c00526 	beq	r2,r3,2c9f0 <_close_r+0x44>
   2c9dc:	dfc00217 	ldw	ra,8(sp)
   2c9e0:	dc400117 	ldw	r17,4(sp)
   2c9e4:	dc000017 	ldw	r16,0(sp)
   2c9e8:	dec00304 	addi	sp,sp,12
   2c9ec:	f800283a 	ret
   2c9f0:	80c00017 	ldw	r3,0(r16)
   2c9f4:	183ff926 	beq	r3,zero,2c9dc <__alt_data_end+0xfffec9dc>
   2c9f8:	88c00015 	stw	r3,0(r17)
   2c9fc:	003ff706 	br	2c9dc <__alt_data_end+0xfffec9dc>

0002ca00 <_calloc_r>:
   2ca00:	298b383a 	mul	r5,r5,r6
   2ca04:	defffe04 	addi	sp,sp,-8
   2ca08:	dfc00115 	stw	ra,4(sp)
   2ca0c:	dc000015 	stw	r16,0(sp)
   2ca10:	00294a40 	call	294a4 <_malloc_r>
   2ca14:	10002926 	beq	r2,zero,2cabc <_calloc_r+0xbc>
   2ca18:	11bfff17 	ldw	r6,-4(r2)
   2ca1c:	1021883a 	mov	r16,r2
   2ca20:	00bfff04 	movi	r2,-4
   2ca24:	308c703a 	and	r6,r6,r2
   2ca28:	00c00904 	movi	r3,36
   2ca2c:	308d883a 	add	r6,r6,r2
   2ca30:	19801636 	bltu	r3,r6,2ca8c <_calloc_r+0x8c>
   2ca34:	008004c4 	movi	r2,19
   2ca38:	11800b2e 	bgeu	r2,r6,2ca68 <_calloc_r+0x68>
   2ca3c:	80000015 	stw	zero,0(r16)
   2ca40:	80000115 	stw	zero,4(r16)
   2ca44:	008006c4 	movi	r2,27
   2ca48:	11801a2e 	bgeu	r2,r6,2cab4 <_calloc_r+0xb4>
   2ca4c:	80000215 	stw	zero,8(r16)
   2ca50:	80000315 	stw	zero,12(r16)
   2ca54:	30c0151e 	bne	r6,r3,2caac <_calloc_r+0xac>
   2ca58:	80000415 	stw	zero,16(r16)
   2ca5c:	80800604 	addi	r2,r16,24
   2ca60:	80000515 	stw	zero,20(r16)
   2ca64:	00000106 	br	2ca6c <_calloc_r+0x6c>
   2ca68:	8005883a 	mov	r2,r16
   2ca6c:	10000015 	stw	zero,0(r2)
   2ca70:	10000115 	stw	zero,4(r2)
   2ca74:	10000215 	stw	zero,8(r2)
   2ca78:	8005883a 	mov	r2,r16
   2ca7c:	dfc00117 	ldw	ra,4(sp)
   2ca80:	dc000017 	ldw	r16,0(sp)
   2ca84:	dec00204 	addi	sp,sp,8
   2ca88:	f800283a 	ret
   2ca8c:	000b883a 	mov	r5,zero
   2ca90:	8009883a 	mov	r4,r16
   2ca94:	0029edc0 	call	29edc <memset>
   2ca98:	8005883a 	mov	r2,r16
   2ca9c:	dfc00117 	ldw	ra,4(sp)
   2caa0:	dc000017 	ldw	r16,0(sp)
   2caa4:	dec00204 	addi	sp,sp,8
   2caa8:	f800283a 	ret
   2caac:	80800404 	addi	r2,r16,16
   2cab0:	003fee06 	br	2ca6c <__alt_data_end+0xfffeca6c>
   2cab4:	80800204 	addi	r2,r16,8
   2cab8:	003fec06 	br	2ca6c <__alt_data_end+0xfffeca6c>
   2cabc:	0005883a 	mov	r2,zero
   2cac0:	003fee06 	br	2ca7c <__alt_data_end+0xfffeca7c>

0002cac4 <_fclose_r>:
   2cac4:	28003926 	beq	r5,zero,2cbac <_fclose_r+0xe8>
   2cac8:	defffc04 	addi	sp,sp,-16
   2cacc:	dc400115 	stw	r17,4(sp)
   2cad0:	dc000015 	stw	r16,0(sp)
   2cad4:	dfc00315 	stw	ra,12(sp)
   2cad8:	dc800215 	stw	r18,8(sp)
   2cadc:	2023883a 	mov	r17,r4
   2cae0:	2821883a 	mov	r16,r5
   2cae4:	20000226 	beq	r4,zero,2caf0 <_fclose_r+0x2c>
   2cae8:	20800e17 	ldw	r2,56(r4)
   2caec:	10002726 	beq	r2,zero,2cb8c <_fclose_r+0xc8>
   2caf0:	8080030f 	ldh	r2,12(r16)
   2caf4:	1000071e 	bne	r2,zero,2cb14 <_fclose_r+0x50>
   2caf8:	0005883a 	mov	r2,zero
   2cafc:	dfc00317 	ldw	ra,12(sp)
   2cb00:	dc800217 	ldw	r18,8(sp)
   2cb04:	dc400117 	ldw	r17,4(sp)
   2cb08:	dc000017 	ldw	r16,0(sp)
   2cb0c:	dec00404 	addi	sp,sp,16
   2cb10:	f800283a 	ret
   2cb14:	800b883a 	mov	r5,r16
   2cb18:	8809883a 	mov	r4,r17
   2cb1c:	00286080 	call	28608 <__sflush_r>
   2cb20:	1025883a 	mov	r18,r2
   2cb24:	80800b17 	ldw	r2,44(r16)
   2cb28:	10000426 	beq	r2,zero,2cb3c <_fclose_r+0x78>
   2cb2c:	81400717 	ldw	r5,28(r16)
   2cb30:	8809883a 	mov	r4,r17
   2cb34:	103ee83a 	callr	r2
   2cb38:	10001616 	blt	r2,zero,2cb94 <_fclose_r+0xd0>
   2cb3c:	8080030b 	ldhu	r2,12(r16)
   2cb40:	1080200c 	andi	r2,r2,128
   2cb44:	1000151e 	bne	r2,zero,2cb9c <_fclose_r+0xd8>
   2cb48:	81400c17 	ldw	r5,48(r16)
   2cb4c:	28000526 	beq	r5,zero,2cb64 <_fclose_r+0xa0>
   2cb50:	80801004 	addi	r2,r16,64
   2cb54:	28800226 	beq	r5,r2,2cb60 <_fclose_r+0x9c>
   2cb58:	8809883a 	mov	r4,r17
   2cb5c:	0028d740 	call	28d74 <_free_r>
   2cb60:	80000c15 	stw	zero,48(r16)
   2cb64:	81401117 	ldw	r5,68(r16)
   2cb68:	28000326 	beq	r5,zero,2cb78 <_fclose_r+0xb4>
   2cb6c:	8809883a 	mov	r4,r17
   2cb70:	0028d740 	call	28d74 <_free_r>
   2cb74:	80001115 	stw	zero,68(r16)
   2cb78:	0028c100 	call	28c10 <__sfp_lock_acquire>
   2cb7c:	8000030d 	sth	zero,12(r16)
   2cb80:	0028c140 	call	28c14 <__sfp_lock_release>
   2cb84:	9005883a 	mov	r2,r18
   2cb88:	003fdc06 	br	2cafc <__alt_data_end+0xfffecafc>
   2cb8c:	0028c000 	call	28c00 <__sinit>
   2cb90:	003fd706 	br	2caf0 <__alt_data_end+0xfffecaf0>
   2cb94:	04bfffc4 	movi	r18,-1
   2cb98:	003fe806 	br	2cb3c <__alt_data_end+0xfffecb3c>
   2cb9c:	81400417 	ldw	r5,16(r16)
   2cba0:	8809883a 	mov	r4,r17
   2cba4:	0028d740 	call	28d74 <_free_r>
   2cba8:	003fe706 	br	2cb48 <__alt_data_end+0xfffecb48>
   2cbac:	0005883a 	mov	r2,zero
   2cbb0:	f800283a 	ret

0002cbb4 <fclose>:
   2cbb4:	008000f4 	movhi	r2,3
   2cbb8:	108c1804 	addi	r2,r2,12384
   2cbbc:	200b883a 	mov	r5,r4
   2cbc0:	11000017 	ldw	r4,0(r2)
   2cbc4:	002cac41 	jmpi	2cac4 <_fclose_r>

0002cbc8 <__fputwc>:
   2cbc8:	defff804 	addi	sp,sp,-32
   2cbcc:	dcc00415 	stw	r19,16(sp)
   2cbd0:	dc800315 	stw	r18,12(sp)
   2cbd4:	dc000115 	stw	r16,4(sp)
   2cbd8:	dfc00715 	stw	ra,28(sp)
   2cbdc:	dd400615 	stw	r21,24(sp)
   2cbe0:	dd000515 	stw	r20,20(sp)
   2cbe4:	dc400215 	stw	r17,8(sp)
   2cbe8:	2027883a 	mov	r19,r4
   2cbec:	2825883a 	mov	r18,r5
   2cbf0:	3021883a 	mov	r16,r6
   2cbf4:	00292940 	call	29294 <__locale_mb_cur_max>
   2cbf8:	00c00044 	movi	r3,1
   2cbfc:	10c03e26 	beq	r2,r3,2ccf8 <__fputwc+0x130>
   2cc00:	81c01704 	addi	r7,r16,92
   2cc04:	900d883a 	mov	r6,r18
   2cc08:	d80b883a 	mov	r5,sp
   2cc0c:	9809883a 	mov	r4,r19
   2cc10:	002dc140 	call	2dc14 <_wcrtomb_r>
   2cc14:	1029883a 	mov	r20,r2
   2cc18:	00bfffc4 	movi	r2,-1
   2cc1c:	a0802026 	beq	r20,r2,2cca0 <__fputwc+0xd8>
   2cc20:	d9400003 	ldbu	r5,0(sp)
   2cc24:	a0001c26 	beq	r20,zero,2cc98 <__fputwc+0xd0>
   2cc28:	0023883a 	mov	r17,zero
   2cc2c:	05400284 	movi	r21,10
   2cc30:	00000906 	br	2cc58 <__fputwc+0x90>
   2cc34:	80800017 	ldw	r2,0(r16)
   2cc38:	11400005 	stb	r5,0(r2)
   2cc3c:	80c00017 	ldw	r3,0(r16)
   2cc40:	18c00044 	addi	r3,r3,1
   2cc44:	80c00015 	stw	r3,0(r16)
   2cc48:	8c400044 	addi	r17,r17,1
   2cc4c:	dc45883a 	add	r2,sp,r17
   2cc50:	8d00112e 	bgeu	r17,r20,2cc98 <__fputwc+0xd0>
   2cc54:	11400003 	ldbu	r5,0(r2)
   2cc58:	80c00217 	ldw	r3,8(r16)
   2cc5c:	18ffffc4 	addi	r3,r3,-1
   2cc60:	80c00215 	stw	r3,8(r16)
   2cc64:	183ff30e 	bge	r3,zero,2cc34 <__alt_data_end+0xfffecc34>
   2cc68:	80800617 	ldw	r2,24(r16)
   2cc6c:	18801916 	blt	r3,r2,2ccd4 <__fputwc+0x10c>
   2cc70:	80800017 	ldw	r2,0(r16)
   2cc74:	11400005 	stb	r5,0(r2)
   2cc78:	80800017 	ldw	r2,0(r16)
   2cc7c:	10c00003 	ldbu	r3,0(r2)
   2cc80:	10800044 	addi	r2,r2,1
   2cc84:	1d402326 	beq	r3,r21,2cd14 <__fputwc+0x14c>
   2cc88:	80800015 	stw	r2,0(r16)
   2cc8c:	8c400044 	addi	r17,r17,1
   2cc90:	dc45883a 	add	r2,sp,r17
   2cc94:	8d3fef36 	bltu	r17,r20,2cc54 <__alt_data_end+0xfffecc54>
   2cc98:	9005883a 	mov	r2,r18
   2cc9c:	00000406 	br	2ccb0 <__fputwc+0xe8>
   2cca0:	80c0030b 	ldhu	r3,12(r16)
   2cca4:	a005883a 	mov	r2,r20
   2cca8:	18c01014 	ori	r3,r3,64
   2ccac:	80c0030d 	sth	r3,12(r16)
   2ccb0:	dfc00717 	ldw	ra,28(sp)
   2ccb4:	dd400617 	ldw	r21,24(sp)
   2ccb8:	dd000517 	ldw	r20,20(sp)
   2ccbc:	dcc00417 	ldw	r19,16(sp)
   2ccc0:	dc800317 	ldw	r18,12(sp)
   2ccc4:	dc400217 	ldw	r17,8(sp)
   2ccc8:	dc000117 	ldw	r16,4(sp)
   2cccc:	dec00804 	addi	sp,sp,32
   2ccd0:	f800283a 	ret
   2ccd4:	800d883a 	mov	r6,r16
   2ccd8:	29403fcc 	andi	r5,r5,255
   2ccdc:	9809883a 	mov	r4,r19
   2cce0:	002dabc0 	call	2dabc <__swbuf_r>
   2cce4:	10bfffe0 	cmpeqi	r2,r2,-1
   2cce8:	10803fcc 	andi	r2,r2,255
   2ccec:	103fd626 	beq	r2,zero,2cc48 <__alt_data_end+0xfffecc48>
   2ccf0:	00bfffc4 	movi	r2,-1
   2ccf4:	003fee06 	br	2ccb0 <__alt_data_end+0xfffeccb0>
   2ccf8:	90ffffc4 	addi	r3,r18,-1
   2ccfc:	01003f84 	movi	r4,254
   2cd00:	20ffbf36 	bltu	r4,r3,2cc00 <__alt_data_end+0xfffecc00>
   2cd04:	900b883a 	mov	r5,r18
   2cd08:	dc800005 	stb	r18,0(sp)
   2cd0c:	1029883a 	mov	r20,r2
   2cd10:	003fc506 	br	2cc28 <__alt_data_end+0xfffecc28>
   2cd14:	800d883a 	mov	r6,r16
   2cd18:	a80b883a 	mov	r5,r21
   2cd1c:	9809883a 	mov	r4,r19
   2cd20:	002dabc0 	call	2dabc <__swbuf_r>
   2cd24:	10bfffe0 	cmpeqi	r2,r2,-1
   2cd28:	003fef06 	br	2cce8 <__alt_data_end+0xfffecce8>

0002cd2c <_fputwc_r>:
   2cd2c:	3080030b 	ldhu	r2,12(r6)
   2cd30:	10c8000c 	andi	r3,r2,8192
   2cd34:	1800051e 	bne	r3,zero,2cd4c <_fputwc_r+0x20>
   2cd38:	30c01917 	ldw	r3,100(r6)
   2cd3c:	10880014 	ori	r2,r2,8192
   2cd40:	3080030d 	sth	r2,12(r6)
   2cd44:	18880014 	ori	r2,r3,8192
   2cd48:	30801915 	stw	r2,100(r6)
   2cd4c:	002cbc81 	jmpi	2cbc8 <__fputwc>

0002cd50 <fputwc>:
   2cd50:	008000f4 	movhi	r2,3
   2cd54:	defffc04 	addi	sp,sp,-16
   2cd58:	108c1804 	addi	r2,r2,12384
   2cd5c:	dc000115 	stw	r16,4(sp)
   2cd60:	14000017 	ldw	r16,0(r2)
   2cd64:	dc400215 	stw	r17,8(sp)
   2cd68:	dfc00315 	stw	ra,12(sp)
   2cd6c:	2023883a 	mov	r17,r4
   2cd70:	80000226 	beq	r16,zero,2cd7c <fputwc+0x2c>
   2cd74:	80800e17 	ldw	r2,56(r16)
   2cd78:	10001026 	beq	r2,zero,2cdbc <fputwc+0x6c>
   2cd7c:	2880030b 	ldhu	r2,12(r5)
   2cd80:	10c8000c 	andi	r3,r2,8192
   2cd84:	1800051e 	bne	r3,zero,2cd9c <fputwc+0x4c>
   2cd88:	28c01917 	ldw	r3,100(r5)
   2cd8c:	10880014 	ori	r2,r2,8192
   2cd90:	2880030d 	sth	r2,12(r5)
   2cd94:	18880014 	ori	r2,r3,8192
   2cd98:	28801915 	stw	r2,100(r5)
   2cd9c:	280d883a 	mov	r6,r5
   2cda0:	8009883a 	mov	r4,r16
   2cda4:	880b883a 	mov	r5,r17
   2cda8:	dfc00317 	ldw	ra,12(sp)
   2cdac:	dc400217 	ldw	r17,8(sp)
   2cdb0:	dc000117 	ldw	r16,4(sp)
   2cdb4:	dec00404 	addi	sp,sp,16
   2cdb8:	002cbc81 	jmpi	2cbc8 <__fputwc>
   2cdbc:	8009883a 	mov	r4,r16
   2cdc0:	d9400015 	stw	r5,0(sp)
   2cdc4:	0028c000 	call	28c00 <__sinit>
   2cdc8:	d9400017 	ldw	r5,0(sp)
   2cdcc:	003feb06 	br	2cd7c <__alt_data_end+0xfffecd7c>

0002cdd0 <_fstat_r>:
   2cdd0:	defffd04 	addi	sp,sp,-12
   2cdd4:	2805883a 	mov	r2,r5
   2cdd8:	dc000015 	stw	r16,0(sp)
   2cddc:	040000f4 	movhi	r16,3
   2cde0:	dc400115 	stw	r17,4(sp)
   2cde4:	8412e904 	addi	r16,r16,19364
   2cde8:	2023883a 	mov	r17,r4
   2cdec:	300b883a 	mov	r5,r6
   2cdf0:	1009883a 	mov	r4,r2
   2cdf4:	dfc00215 	stw	ra,8(sp)
   2cdf8:	80000015 	stw	zero,0(r16)
   2cdfc:	002eac80 	call	2eac8 <fstat>
   2ce00:	00ffffc4 	movi	r3,-1
   2ce04:	10c00526 	beq	r2,r3,2ce1c <_fstat_r+0x4c>
   2ce08:	dfc00217 	ldw	ra,8(sp)
   2ce0c:	dc400117 	ldw	r17,4(sp)
   2ce10:	dc000017 	ldw	r16,0(sp)
   2ce14:	dec00304 	addi	sp,sp,12
   2ce18:	f800283a 	ret
   2ce1c:	80c00017 	ldw	r3,0(r16)
   2ce20:	183ff926 	beq	r3,zero,2ce08 <__alt_data_end+0xfffece08>
   2ce24:	88c00015 	stw	r3,0(r17)
   2ce28:	003ff706 	br	2ce08 <__alt_data_end+0xfffece08>

0002ce2c <__sfvwrite_r>:
   2ce2c:	30800217 	ldw	r2,8(r6)
   2ce30:	10006726 	beq	r2,zero,2cfd0 <__sfvwrite_r+0x1a4>
   2ce34:	28c0030b 	ldhu	r3,12(r5)
   2ce38:	defff404 	addi	sp,sp,-48
   2ce3c:	dd400715 	stw	r21,28(sp)
   2ce40:	dd000615 	stw	r20,24(sp)
   2ce44:	dc000215 	stw	r16,8(sp)
   2ce48:	dfc00b15 	stw	ra,44(sp)
   2ce4c:	df000a15 	stw	fp,40(sp)
   2ce50:	ddc00915 	stw	r23,36(sp)
   2ce54:	dd800815 	stw	r22,32(sp)
   2ce58:	dcc00515 	stw	r19,20(sp)
   2ce5c:	dc800415 	stw	r18,16(sp)
   2ce60:	dc400315 	stw	r17,12(sp)
   2ce64:	1880020c 	andi	r2,r3,8
   2ce68:	2821883a 	mov	r16,r5
   2ce6c:	202b883a 	mov	r21,r4
   2ce70:	3029883a 	mov	r20,r6
   2ce74:	10002726 	beq	r2,zero,2cf14 <__sfvwrite_r+0xe8>
   2ce78:	28800417 	ldw	r2,16(r5)
   2ce7c:	10002526 	beq	r2,zero,2cf14 <__sfvwrite_r+0xe8>
   2ce80:	1880008c 	andi	r2,r3,2
   2ce84:	a4400017 	ldw	r17,0(r20)
   2ce88:	10002a26 	beq	r2,zero,2cf34 <__sfvwrite_r+0x108>
   2ce8c:	05a00034 	movhi	r22,32768
   2ce90:	0027883a 	mov	r19,zero
   2ce94:	0025883a 	mov	r18,zero
   2ce98:	b5bf0004 	addi	r22,r22,-1024
   2ce9c:	980d883a 	mov	r6,r19
   2cea0:	a809883a 	mov	r4,r21
   2cea4:	90004626 	beq	r18,zero,2cfc0 <__sfvwrite_r+0x194>
   2cea8:	900f883a 	mov	r7,r18
   2ceac:	b480022e 	bgeu	r22,r18,2ceb8 <__sfvwrite_r+0x8c>
   2ceb0:	01e00034 	movhi	r7,32768
   2ceb4:	39ff0004 	addi	r7,r7,-1024
   2ceb8:	80800917 	ldw	r2,36(r16)
   2cebc:	81400717 	ldw	r5,28(r16)
   2cec0:	103ee83a 	callr	r2
   2cec4:	0080570e 	bge	zero,r2,2d024 <__sfvwrite_r+0x1f8>
   2cec8:	a0c00217 	ldw	r3,8(r20)
   2cecc:	98a7883a 	add	r19,r19,r2
   2ced0:	90a5c83a 	sub	r18,r18,r2
   2ced4:	1885c83a 	sub	r2,r3,r2
   2ced8:	a0800215 	stw	r2,8(r20)
   2cedc:	103fef1e 	bne	r2,zero,2ce9c <__alt_data_end+0xfffece9c>
   2cee0:	0005883a 	mov	r2,zero
   2cee4:	dfc00b17 	ldw	ra,44(sp)
   2cee8:	df000a17 	ldw	fp,40(sp)
   2ceec:	ddc00917 	ldw	r23,36(sp)
   2cef0:	dd800817 	ldw	r22,32(sp)
   2cef4:	dd400717 	ldw	r21,28(sp)
   2cef8:	dd000617 	ldw	r20,24(sp)
   2cefc:	dcc00517 	ldw	r19,20(sp)
   2cf00:	dc800417 	ldw	r18,16(sp)
   2cf04:	dc400317 	ldw	r17,12(sp)
   2cf08:	dc000217 	ldw	r16,8(sp)
   2cf0c:	dec00c04 	addi	sp,sp,48
   2cf10:	f800283a 	ret
   2cf14:	800b883a 	mov	r5,r16
   2cf18:	a809883a 	mov	r4,r21
   2cf1c:	0026c2c0 	call	26c2c <__swsetup_r>
   2cf20:	1000eb1e 	bne	r2,zero,2d2d0 <__sfvwrite_r+0x4a4>
   2cf24:	80c0030b 	ldhu	r3,12(r16)
   2cf28:	a4400017 	ldw	r17,0(r20)
   2cf2c:	1880008c 	andi	r2,r3,2
   2cf30:	103fd61e 	bne	r2,zero,2ce8c <__alt_data_end+0xfffece8c>
   2cf34:	1880004c 	andi	r2,r3,1
   2cf38:	10003f1e 	bne	r2,zero,2d038 <__sfvwrite_r+0x20c>
   2cf3c:	0039883a 	mov	fp,zero
   2cf40:	0025883a 	mov	r18,zero
   2cf44:	90001a26 	beq	r18,zero,2cfb0 <__sfvwrite_r+0x184>
   2cf48:	1880800c 	andi	r2,r3,512
   2cf4c:	84c00217 	ldw	r19,8(r16)
   2cf50:	10002126 	beq	r2,zero,2cfd8 <__sfvwrite_r+0x1ac>
   2cf54:	982f883a 	mov	r23,r19
   2cf58:	94c09336 	bltu	r18,r19,2d1a8 <__sfvwrite_r+0x37c>
   2cf5c:	1881200c 	andi	r2,r3,1152
   2cf60:	10009e1e 	bne	r2,zero,2d1dc <__sfvwrite_r+0x3b0>
   2cf64:	81000017 	ldw	r4,0(r16)
   2cf68:	b80d883a 	mov	r6,r23
   2cf6c:	e00b883a 	mov	r5,fp
   2cf70:	002d39c0 	call	2d39c <memmove>
   2cf74:	80c00217 	ldw	r3,8(r16)
   2cf78:	81000017 	ldw	r4,0(r16)
   2cf7c:	9005883a 	mov	r2,r18
   2cf80:	1ce7c83a 	sub	r19,r3,r19
   2cf84:	25cf883a 	add	r7,r4,r23
   2cf88:	84c00215 	stw	r19,8(r16)
   2cf8c:	81c00015 	stw	r7,0(r16)
   2cf90:	a0c00217 	ldw	r3,8(r20)
   2cf94:	e0b9883a 	add	fp,fp,r2
   2cf98:	90a5c83a 	sub	r18,r18,r2
   2cf9c:	18a7c83a 	sub	r19,r3,r2
   2cfa0:	a4c00215 	stw	r19,8(r20)
   2cfa4:	983fce26 	beq	r19,zero,2cee0 <__alt_data_end+0xfffecee0>
   2cfa8:	80c0030b 	ldhu	r3,12(r16)
   2cfac:	903fe61e 	bne	r18,zero,2cf48 <__alt_data_end+0xfffecf48>
   2cfb0:	8f000017 	ldw	fp,0(r17)
   2cfb4:	8c800117 	ldw	r18,4(r17)
   2cfb8:	8c400204 	addi	r17,r17,8
   2cfbc:	003fe106 	br	2cf44 <__alt_data_end+0xfffecf44>
   2cfc0:	8cc00017 	ldw	r19,0(r17)
   2cfc4:	8c800117 	ldw	r18,4(r17)
   2cfc8:	8c400204 	addi	r17,r17,8
   2cfcc:	003fb306 	br	2ce9c <__alt_data_end+0xfffece9c>
   2cfd0:	0005883a 	mov	r2,zero
   2cfd4:	f800283a 	ret
   2cfd8:	81000017 	ldw	r4,0(r16)
   2cfdc:	80800417 	ldw	r2,16(r16)
   2cfe0:	11005736 	bltu	r2,r4,2d140 <__sfvwrite_r+0x314>
   2cfe4:	85c00517 	ldw	r23,20(r16)
   2cfe8:	95c05536 	bltu	r18,r23,2d140 <__sfvwrite_r+0x314>
   2cfec:	00a00034 	movhi	r2,32768
   2cff0:	10bfffc4 	addi	r2,r2,-1
   2cff4:	9009883a 	mov	r4,r18
   2cff8:	1480012e 	bgeu	r2,r18,2d000 <__sfvwrite_r+0x1d4>
   2cffc:	1009883a 	mov	r4,r2
   2d000:	b80b883a 	mov	r5,r23
   2d004:	002216c0 	call	2216c <__divsi3>
   2d008:	15cf383a 	mul	r7,r2,r23
   2d00c:	81400717 	ldw	r5,28(r16)
   2d010:	80800917 	ldw	r2,36(r16)
   2d014:	e00d883a 	mov	r6,fp
   2d018:	a809883a 	mov	r4,r21
   2d01c:	103ee83a 	callr	r2
   2d020:	00bfdb16 	blt	zero,r2,2cf90 <__alt_data_end+0xfffecf90>
   2d024:	8080030b 	ldhu	r2,12(r16)
   2d028:	10801014 	ori	r2,r2,64
   2d02c:	8080030d 	sth	r2,12(r16)
   2d030:	00bfffc4 	movi	r2,-1
   2d034:	003fab06 	br	2cee4 <__alt_data_end+0xfffecee4>
   2d038:	0027883a 	mov	r19,zero
   2d03c:	0011883a 	mov	r8,zero
   2d040:	0039883a 	mov	fp,zero
   2d044:	0025883a 	mov	r18,zero
   2d048:	90001f26 	beq	r18,zero,2d0c8 <__sfvwrite_r+0x29c>
   2d04c:	40005a26 	beq	r8,zero,2d1b8 <__sfvwrite_r+0x38c>
   2d050:	982d883a 	mov	r22,r19
   2d054:	94c0012e 	bgeu	r18,r19,2d05c <__sfvwrite_r+0x230>
   2d058:	902d883a 	mov	r22,r18
   2d05c:	81000017 	ldw	r4,0(r16)
   2d060:	80800417 	ldw	r2,16(r16)
   2d064:	b02f883a 	mov	r23,r22
   2d068:	81c00517 	ldw	r7,20(r16)
   2d06c:	1100032e 	bgeu	r2,r4,2d07c <__sfvwrite_r+0x250>
   2d070:	80c00217 	ldw	r3,8(r16)
   2d074:	38c7883a 	add	r3,r7,r3
   2d078:	1d801816 	blt	r3,r22,2d0dc <__sfvwrite_r+0x2b0>
   2d07c:	b1c03e16 	blt	r22,r7,2d178 <__sfvwrite_r+0x34c>
   2d080:	80800917 	ldw	r2,36(r16)
   2d084:	81400717 	ldw	r5,28(r16)
   2d088:	e00d883a 	mov	r6,fp
   2d08c:	da000115 	stw	r8,4(sp)
   2d090:	a809883a 	mov	r4,r21
   2d094:	103ee83a 	callr	r2
   2d098:	102f883a 	mov	r23,r2
   2d09c:	da000117 	ldw	r8,4(sp)
   2d0a0:	00bfe00e 	bge	zero,r2,2d024 <__alt_data_end+0xfffed024>
   2d0a4:	9de7c83a 	sub	r19,r19,r23
   2d0a8:	98001f26 	beq	r19,zero,2d128 <__sfvwrite_r+0x2fc>
   2d0ac:	a0800217 	ldw	r2,8(r20)
   2d0b0:	e5f9883a 	add	fp,fp,r23
   2d0b4:	95e5c83a 	sub	r18,r18,r23
   2d0b8:	15efc83a 	sub	r23,r2,r23
   2d0bc:	a5c00215 	stw	r23,8(r20)
   2d0c0:	b83f8726 	beq	r23,zero,2cee0 <__alt_data_end+0xfffecee0>
   2d0c4:	903fe11e 	bne	r18,zero,2d04c <__alt_data_end+0xfffed04c>
   2d0c8:	8f000017 	ldw	fp,0(r17)
   2d0cc:	8c800117 	ldw	r18,4(r17)
   2d0d0:	0011883a 	mov	r8,zero
   2d0d4:	8c400204 	addi	r17,r17,8
   2d0d8:	003fdb06 	br	2d048 <__alt_data_end+0xfffed048>
   2d0dc:	180d883a 	mov	r6,r3
   2d0e0:	e00b883a 	mov	r5,fp
   2d0e4:	da000115 	stw	r8,4(sp)
   2d0e8:	d8c00015 	stw	r3,0(sp)
   2d0ec:	002d39c0 	call	2d39c <memmove>
   2d0f0:	d8c00017 	ldw	r3,0(sp)
   2d0f4:	80800017 	ldw	r2,0(r16)
   2d0f8:	800b883a 	mov	r5,r16
   2d0fc:	a809883a 	mov	r4,r21
   2d100:	10c5883a 	add	r2,r2,r3
   2d104:	80800015 	stw	r2,0(r16)
   2d108:	d8c00015 	stw	r3,0(sp)
   2d10c:	00288240 	call	28824 <_fflush_r>
   2d110:	d8c00017 	ldw	r3,0(sp)
   2d114:	da000117 	ldw	r8,4(sp)
   2d118:	103fc21e 	bne	r2,zero,2d024 <__alt_data_end+0xfffed024>
   2d11c:	182f883a 	mov	r23,r3
   2d120:	9de7c83a 	sub	r19,r19,r23
   2d124:	983fe11e 	bne	r19,zero,2d0ac <__alt_data_end+0xfffed0ac>
   2d128:	800b883a 	mov	r5,r16
   2d12c:	a809883a 	mov	r4,r21
   2d130:	00288240 	call	28824 <_fflush_r>
   2d134:	103fbb1e 	bne	r2,zero,2d024 <__alt_data_end+0xfffed024>
   2d138:	0011883a 	mov	r8,zero
   2d13c:	003fdb06 	br	2d0ac <__alt_data_end+0xfffed0ac>
   2d140:	94c0012e 	bgeu	r18,r19,2d148 <__sfvwrite_r+0x31c>
   2d144:	9027883a 	mov	r19,r18
   2d148:	980d883a 	mov	r6,r19
   2d14c:	e00b883a 	mov	r5,fp
   2d150:	002d39c0 	call	2d39c <memmove>
   2d154:	80800217 	ldw	r2,8(r16)
   2d158:	80c00017 	ldw	r3,0(r16)
   2d15c:	14c5c83a 	sub	r2,r2,r19
   2d160:	1cc7883a 	add	r3,r3,r19
   2d164:	80800215 	stw	r2,8(r16)
   2d168:	80c00015 	stw	r3,0(r16)
   2d16c:	10004326 	beq	r2,zero,2d27c <__sfvwrite_r+0x450>
   2d170:	9805883a 	mov	r2,r19
   2d174:	003f8606 	br	2cf90 <__alt_data_end+0xfffecf90>
   2d178:	b00d883a 	mov	r6,r22
   2d17c:	e00b883a 	mov	r5,fp
   2d180:	da000115 	stw	r8,4(sp)
   2d184:	002d39c0 	call	2d39c <memmove>
   2d188:	80800217 	ldw	r2,8(r16)
   2d18c:	80c00017 	ldw	r3,0(r16)
   2d190:	da000117 	ldw	r8,4(sp)
   2d194:	1585c83a 	sub	r2,r2,r22
   2d198:	1dad883a 	add	r22,r3,r22
   2d19c:	80800215 	stw	r2,8(r16)
   2d1a0:	85800015 	stw	r22,0(r16)
   2d1a4:	003fbf06 	br	2d0a4 <__alt_data_end+0xfffed0a4>
   2d1a8:	81000017 	ldw	r4,0(r16)
   2d1ac:	9027883a 	mov	r19,r18
   2d1b0:	902f883a 	mov	r23,r18
   2d1b4:	003f6c06 	br	2cf68 <__alt_data_end+0xfffecf68>
   2d1b8:	900d883a 	mov	r6,r18
   2d1bc:	01400284 	movi	r5,10
   2d1c0:	e009883a 	mov	r4,fp
   2d1c4:	0029cb00 	call	29cb0 <memchr>
   2d1c8:	10003e26 	beq	r2,zero,2d2c4 <__sfvwrite_r+0x498>
   2d1cc:	10800044 	addi	r2,r2,1
   2d1d0:	1727c83a 	sub	r19,r2,fp
   2d1d4:	02000044 	movi	r8,1
   2d1d8:	003f9d06 	br	2d050 <__alt_data_end+0xfffed050>
   2d1dc:	80800517 	ldw	r2,20(r16)
   2d1e0:	81400417 	ldw	r5,16(r16)
   2d1e4:	81c00017 	ldw	r7,0(r16)
   2d1e8:	10a7883a 	add	r19,r2,r2
   2d1ec:	9885883a 	add	r2,r19,r2
   2d1f0:	1026d7fa 	srli	r19,r2,31
   2d1f4:	396dc83a 	sub	r22,r7,r5
   2d1f8:	b1000044 	addi	r4,r22,1
   2d1fc:	9885883a 	add	r2,r19,r2
   2d200:	1027d07a 	srai	r19,r2,1
   2d204:	2485883a 	add	r2,r4,r18
   2d208:	980d883a 	mov	r6,r19
   2d20c:	9880022e 	bgeu	r19,r2,2d218 <__sfvwrite_r+0x3ec>
   2d210:	1027883a 	mov	r19,r2
   2d214:	100d883a 	mov	r6,r2
   2d218:	18c1000c 	andi	r3,r3,1024
   2d21c:	18001c26 	beq	r3,zero,2d290 <__sfvwrite_r+0x464>
   2d220:	300b883a 	mov	r5,r6
   2d224:	a809883a 	mov	r4,r21
   2d228:	00294a40 	call	294a4 <_malloc_r>
   2d22c:	102f883a 	mov	r23,r2
   2d230:	10002926 	beq	r2,zero,2d2d8 <__sfvwrite_r+0x4ac>
   2d234:	81400417 	ldw	r5,16(r16)
   2d238:	b00d883a 	mov	r6,r22
   2d23c:	1009883a 	mov	r4,r2
   2d240:	0029d940 	call	29d94 <memcpy>
   2d244:	8080030b 	ldhu	r2,12(r16)
   2d248:	00fedfc4 	movi	r3,-1153
   2d24c:	10c4703a 	and	r2,r2,r3
   2d250:	10802014 	ori	r2,r2,128
   2d254:	8080030d 	sth	r2,12(r16)
   2d258:	bd89883a 	add	r4,r23,r22
   2d25c:	9d8fc83a 	sub	r7,r19,r22
   2d260:	85c00415 	stw	r23,16(r16)
   2d264:	84c00515 	stw	r19,20(r16)
   2d268:	81000015 	stw	r4,0(r16)
   2d26c:	9027883a 	mov	r19,r18
   2d270:	81c00215 	stw	r7,8(r16)
   2d274:	902f883a 	mov	r23,r18
   2d278:	003f3b06 	br	2cf68 <__alt_data_end+0xfffecf68>
   2d27c:	800b883a 	mov	r5,r16
   2d280:	a809883a 	mov	r4,r21
   2d284:	00288240 	call	28824 <_fflush_r>
   2d288:	103fb926 	beq	r2,zero,2d170 <__alt_data_end+0xfffed170>
   2d28c:	003f6506 	br	2d024 <__alt_data_end+0xfffed024>
   2d290:	a809883a 	mov	r4,r21
   2d294:	002d5580 	call	2d558 <_realloc_r>
   2d298:	102f883a 	mov	r23,r2
   2d29c:	103fee1e 	bne	r2,zero,2d258 <__alt_data_end+0xfffed258>
   2d2a0:	81400417 	ldw	r5,16(r16)
   2d2a4:	a809883a 	mov	r4,r21
   2d2a8:	0028d740 	call	28d74 <_free_r>
   2d2ac:	8080030b 	ldhu	r2,12(r16)
   2d2b0:	00ffdfc4 	movi	r3,-129
   2d2b4:	1884703a 	and	r2,r3,r2
   2d2b8:	00c00304 	movi	r3,12
   2d2bc:	a8c00015 	stw	r3,0(r21)
   2d2c0:	003f5906 	br	2d028 <__alt_data_end+0xfffed028>
   2d2c4:	94c00044 	addi	r19,r18,1
   2d2c8:	02000044 	movi	r8,1
   2d2cc:	003f6006 	br	2d050 <__alt_data_end+0xfffed050>
   2d2d0:	00bfffc4 	movi	r2,-1
   2d2d4:	003f0306 	br	2cee4 <__alt_data_end+0xfffecee4>
   2d2d8:	00800304 	movi	r2,12
   2d2dc:	a8800015 	stw	r2,0(r21)
   2d2e0:	8080030b 	ldhu	r2,12(r16)
   2d2e4:	003f5006 	br	2d028 <__alt_data_end+0xfffed028>

0002d2e8 <_isatty_r>:
   2d2e8:	defffd04 	addi	sp,sp,-12
   2d2ec:	dc000015 	stw	r16,0(sp)
   2d2f0:	040000f4 	movhi	r16,3
   2d2f4:	dc400115 	stw	r17,4(sp)
   2d2f8:	8412e904 	addi	r16,r16,19364
   2d2fc:	2023883a 	mov	r17,r4
   2d300:	2809883a 	mov	r4,r5
   2d304:	dfc00215 	stw	ra,8(sp)
   2d308:	80000015 	stw	zero,0(r16)
   2d30c:	002ebb40 	call	2ebb4 <isatty>
   2d310:	00ffffc4 	movi	r3,-1
   2d314:	10c00526 	beq	r2,r3,2d32c <_isatty_r+0x44>
   2d318:	dfc00217 	ldw	ra,8(sp)
   2d31c:	dc400117 	ldw	r17,4(sp)
   2d320:	dc000017 	ldw	r16,0(sp)
   2d324:	dec00304 	addi	sp,sp,12
   2d328:	f800283a 	ret
   2d32c:	80c00017 	ldw	r3,0(r16)
   2d330:	183ff926 	beq	r3,zero,2d318 <__alt_data_end+0xfffed318>
   2d334:	88c00015 	stw	r3,0(r17)
   2d338:	003ff706 	br	2d318 <__alt_data_end+0xfffed318>

0002d33c <_lseek_r>:
   2d33c:	defffd04 	addi	sp,sp,-12
   2d340:	2805883a 	mov	r2,r5
   2d344:	dc000015 	stw	r16,0(sp)
   2d348:	040000f4 	movhi	r16,3
   2d34c:	dc400115 	stw	r17,4(sp)
   2d350:	300b883a 	mov	r5,r6
   2d354:	8412e904 	addi	r16,r16,19364
   2d358:	2023883a 	mov	r17,r4
   2d35c:	380d883a 	mov	r6,r7
   2d360:	1009883a 	mov	r4,r2
   2d364:	dfc00215 	stw	ra,8(sp)
   2d368:	80000015 	stw	zero,0(r16)
   2d36c:	002ed800 	call	2ed80 <lseek>
   2d370:	00ffffc4 	movi	r3,-1
   2d374:	10c00526 	beq	r2,r3,2d38c <_lseek_r+0x50>
   2d378:	dfc00217 	ldw	ra,8(sp)
   2d37c:	dc400117 	ldw	r17,4(sp)
   2d380:	dc000017 	ldw	r16,0(sp)
   2d384:	dec00304 	addi	sp,sp,12
   2d388:	f800283a 	ret
   2d38c:	80c00017 	ldw	r3,0(r16)
   2d390:	183ff926 	beq	r3,zero,2d378 <__alt_data_end+0xfffed378>
   2d394:	88c00015 	stw	r3,0(r17)
   2d398:	003ff706 	br	2d378 <__alt_data_end+0xfffed378>

0002d39c <memmove>:
   2d39c:	2005883a 	mov	r2,r4
   2d3a0:	29000b2e 	bgeu	r5,r4,2d3d0 <memmove+0x34>
   2d3a4:	298f883a 	add	r7,r5,r6
   2d3a8:	21c0092e 	bgeu	r4,r7,2d3d0 <memmove+0x34>
   2d3ac:	2187883a 	add	r3,r4,r6
   2d3b0:	198bc83a 	sub	r5,r3,r6
   2d3b4:	30004826 	beq	r6,zero,2d4d8 <memmove+0x13c>
   2d3b8:	39ffffc4 	addi	r7,r7,-1
   2d3bc:	39000003 	ldbu	r4,0(r7)
   2d3c0:	18ffffc4 	addi	r3,r3,-1
   2d3c4:	19000005 	stb	r4,0(r3)
   2d3c8:	28fffb1e 	bne	r5,r3,2d3b8 <__alt_data_end+0xfffed3b8>
   2d3cc:	f800283a 	ret
   2d3d0:	00c003c4 	movi	r3,15
   2d3d4:	1980412e 	bgeu	r3,r6,2d4dc <memmove+0x140>
   2d3d8:	2886b03a 	or	r3,r5,r2
   2d3dc:	18c000cc 	andi	r3,r3,3
   2d3e0:	1800401e 	bne	r3,zero,2d4e4 <memmove+0x148>
   2d3e4:	33fffc04 	addi	r15,r6,-16
   2d3e8:	781ed13a 	srli	r15,r15,4
   2d3ec:	28c00104 	addi	r3,r5,4
   2d3f0:	13400104 	addi	r13,r2,4
   2d3f4:	781c913a 	slli	r14,r15,4
   2d3f8:	2b000204 	addi	r12,r5,8
   2d3fc:	12c00204 	addi	r11,r2,8
   2d400:	73800504 	addi	r14,r14,20
   2d404:	2a800304 	addi	r10,r5,12
   2d408:	12400304 	addi	r9,r2,12
   2d40c:	2b9d883a 	add	r14,r5,r14
   2d410:	2811883a 	mov	r8,r5
   2d414:	100f883a 	mov	r7,r2
   2d418:	41000017 	ldw	r4,0(r8)
   2d41c:	39c00404 	addi	r7,r7,16
   2d420:	18c00404 	addi	r3,r3,16
   2d424:	393ffc15 	stw	r4,-16(r7)
   2d428:	193ffc17 	ldw	r4,-16(r3)
   2d42c:	6b400404 	addi	r13,r13,16
   2d430:	5ac00404 	addi	r11,r11,16
   2d434:	693ffc15 	stw	r4,-16(r13)
   2d438:	61000017 	ldw	r4,0(r12)
   2d43c:	4a400404 	addi	r9,r9,16
   2d440:	42000404 	addi	r8,r8,16
   2d444:	593ffc15 	stw	r4,-16(r11)
   2d448:	51000017 	ldw	r4,0(r10)
   2d44c:	63000404 	addi	r12,r12,16
   2d450:	52800404 	addi	r10,r10,16
   2d454:	493ffc15 	stw	r4,-16(r9)
   2d458:	1bbfef1e 	bne	r3,r14,2d418 <__alt_data_end+0xfffed418>
   2d45c:	79000044 	addi	r4,r15,1
   2d460:	2008913a 	slli	r4,r4,4
   2d464:	328003cc 	andi	r10,r6,15
   2d468:	02c000c4 	movi	r11,3
   2d46c:	1107883a 	add	r3,r2,r4
   2d470:	290b883a 	add	r5,r5,r4
   2d474:	5a801e2e 	bgeu	r11,r10,2d4f0 <memmove+0x154>
   2d478:	1813883a 	mov	r9,r3
   2d47c:	2811883a 	mov	r8,r5
   2d480:	500f883a 	mov	r7,r10
   2d484:	41000017 	ldw	r4,0(r8)
   2d488:	4a400104 	addi	r9,r9,4
   2d48c:	39ffff04 	addi	r7,r7,-4
   2d490:	493fff15 	stw	r4,-4(r9)
   2d494:	42000104 	addi	r8,r8,4
   2d498:	59fffa36 	bltu	r11,r7,2d484 <__alt_data_end+0xfffed484>
   2d49c:	513fff04 	addi	r4,r10,-4
   2d4a0:	2008d0ba 	srli	r4,r4,2
   2d4a4:	318000cc 	andi	r6,r6,3
   2d4a8:	21000044 	addi	r4,r4,1
   2d4ac:	2109883a 	add	r4,r4,r4
   2d4b0:	2109883a 	add	r4,r4,r4
   2d4b4:	1907883a 	add	r3,r3,r4
   2d4b8:	290b883a 	add	r5,r5,r4
   2d4bc:	30000b26 	beq	r6,zero,2d4ec <memmove+0x150>
   2d4c0:	198d883a 	add	r6,r3,r6
   2d4c4:	29c00003 	ldbu	r7,0(r5)
   2d4c8:	18c00044 	addi	r3,r3,1
   2d4cc:	29400044 	addi	r5,r5,1
   2d4d0:	19ffffc5 	stb	r7,-1(r3)
   2d4d4:	19bffb1e 	bne	r3,r6,2d4c4 <__alt_data_end+0xfffed4c4>
   2d4d8:	f800283a 	ret
   2d4dc:	1007883a 	mov	r3,r2
   2d4e0:	003ff606 	br	2d4bc <__alt_data_end+0xfffed4bc>
   2d4e4:	1007883a 	mov	r3,r2
   2d4e8:	003ff506 	br	2d4c0 <__alt_data_end+0xfffed4c0>
   2d4ec:	f800283a 	ret
   2d4f0:	500d883a 	mov	r6,r10
   2d4f4:	003ff106 	br	2d4bc <__alt_data_end+0xfffed4bc>

0002d4f8 <_read_r>:
   2d4f8:	defffd04 	addi	sp,sp,-12
   2d4fc:	2805883a 	mov	r2,r5
   2d500:	dc000015 	stw	r16,0(sp)
   2d504:	040000f4 	movhi	r16,3
   2d508:	dc400115 	stw	r17,4(sp)
   2d50c:	300b883a 	mov	r5,r6
   2d510:	8412e904 	addi	r16,r16,19364
   2d514:	2023883a 	mov	r17,r4
   2d518:	380d883a 	mov	r6,r7
   2d51c:	1009883a 	mov	r4,r2
   2d520:	dfc00215 	stw	ra,8(sp)
   2d524:	80000015 	stw	zero,0(r16)
   2d528:	002ef540 	call	2ef54 <read>
   2d52c:	00ffffc4 	movi	r3,-1
   2d530:	10c00526 	beq	r2,r3,2d548 <_read_r+0x50>
   2d534:	dfc00217 	ldw	ra,8(sp)
   2d538:	dc400117 	ldw	r17,4(sp)
   2d53c:	dc000017 	ldw	r16,0(sp)
   2d540:	dec00304 	addi	sp,sp,12
   2d544:	f800283a 	ret
   2d548:	80c00017 	ldw	r3,0(r16)
   2d54c:	183ff926 	beq	r3,zero,2d534 <__alt_data_end+0xfffed534>
   2d550:	88c00015 	stw	r3,0(r17)
   2d554:	003ff706 	br	2d534 <__alt_data_end+0xfffed534>

0002d558 <_realloc_r>:
   2d558:	defff604 	addi	sp,sp,-40
   2d55c:	dc800215 	stw	r18,8(sp)
   2d560:	dfc00915 	stw	ra,36(sp)
   2d564:	df000815 	stw	fp,32(sp)
   2d568:	ddc00715 	stw	r23,28(sp)
   2d56c:	dd800615 	stw	r22,24(sp)
   2d570:	dd400515 	stw	r21,20(sp)
   2d574:	dd000415 	stw	r20,16(sp)
   2d578:	dcc00315 	stw	r19,12(sp)
   2d57c:	dc400115 	stw	r17,4(sp)
   2d580:	dc000015 	stw	r16,0(sp)
   2d584:	3025883a 	mov	r18,r6
   2d588:	2800b726 	beq	r5,zero,2d868 <_realloc_r+0x310>
   2d58c:	282b883a 	mov	r21,r5
   2d590:	2029883a 	mov	r20,r4
   2d594:	002eed00 	call	2eed0 <__malloc_lock>
   2d598:	a8bfff17 	ldw	r2,-4(r21)
   2d59c:	043fff04 	movi	r16,-4
   2d5a0:	90c002c4 	addi	r3,r18,11
   2d5a4:	01000584 	movi	r4,22
   2d5a8:	acfffe04 	addi	r19,r21,-8
   2d5ac:	1420703a 	and	r16,r2,r16
   2d5b0:	20c0332e 	bgeu	r4,r3,2d680 <_realloc_r+0x128>
   2d5b4:	047ffe04 	movi	r17,-8
   2d5b8:	1c62703a 	and	r17,r3,r17
   2d5bc:	8807883a 	mov	r3,r17
   2d5c0:	88005816 	blt	r17,zero,2d724 <_realloc_r+0x1cc>
   2d5c4:	8c805736 	bltu	r17,r18,2d724 <_realloc_r+0x1cc>
   2d5c8:	80c0300e 	bge	r16,r3,2d68c <_realloc_r+0x134>
   2d5cc:	070000f4 	movhi	fp,3
   2d5d0:	e7069204 	addi	fp,fp,6728
   2d5d4:	e1c00217 	ldw	r7,8(fp)
   2d5d8:	9c09883a 	add	r4,r19,r16
   2d5dc:	22000117 	ldw	r8,4(r4)
   2d5e0:	21c06326 	beq	r4,r7,2d770 <_realloc_r+0x218>
   2d5e4:	017fff84 	movi	r5,-2
   2d5e8:	414a703a 	and	r5,r8,r5
   2d5ec:	214b883a 	add	r5,r4,r5
   2d5f0:	29800117 	ldw	r6,4(r5)
   2d5f4:	3180004c 	andi	r6,r6,1
   2d5f8:	30003f26 	beq	r6,zero,2d6f8 <_realloc_r+0x1a0>
   2d5fc:	1080004c 	andi	r2,r2,1
   2d600:	10008326 	beq	r2,zero,2d810 <_realloc_r+0x2b8>
   2d604:	900b883a 	mov	r5,r18
   2d608:	a009883a 	mov	r4,r20
   2d60c:	00294a40 	call	294a4 <_malloc_r>
   2d610:	1025883a 	mov	r18,r2
   2d614:	10011e26 	beq	r2,zero,2da90 <_realloc_r+0x538>
   2d618:	a93fff17 	ldw	r4,-4(r21)
   2d61c:	10fffe04 	addi	r3,r2,-8
   2d620:	00bfff84 	movi	r2,-2
   2d624:	2084703a 	and	r2,r4,r2
   2d628:	9885883a 	add	r2,r19,r2
   2d62c:	1880ee26 	beq	r3,r2,2d9e8 <_realloc_r+0x490>
   2d630:	81bfff04 	addi	r6,r16,-4
   2d634:	00800904 	movi	r2,36
   2d638:	1180b836 	bltu	r2,r6,2d91c <_realloc_r+0x3c4>
   2d63c:	00c004c4 	movi	r3,19
   2d640:	19809636 	bltu	r3,r6,2d89c <_realloc_r+0x344>
   2d644:	9005883a 	mov	r2,r18
   2d648:	a807883a 	mov	r3,r21
   2d64c:	19000017 	ldw	r4,0(r3)
   2d650:	11000015 	stw	r4,0(r2)
   2d654:	19000117 	ldw	r4,4(r3)
   2d658:	11000115 	stw	r4,4(r2)
   2d65c:	18c00217 	ldw	r3,8(r3)
   2d660:	10c00215 	stw	r3,8(r2)
   2d664:	a80b883a 	mov	r5,r21
   2d668:	a009883a 	mov	r4,r20
   2d66c:	0028d740 	call	28d74 <_free_r>
   2d670:	a009883a 	mov	r4,r20
   2d674:	002eef40 	call	2eef4 <__malloc_unlock>
   2d678:	9005883a 	mov	r2,r18
   2d67c:	00001206 	br	2d6c8 <_realloc_r+0x170>
   2d680:	00c00404 	movi	r3,16
   2d684:	1823883a 	mov	r17,r3
   2d688:	003fce06 	br	2d5c4 <__alt_data_end+0xfffed5c4>
   2d68c:	a825883a 	mov	r18,r21
   2d690:	8445c83a 	sub	r2,r16,r17
   2d694:	00c003c4 	movi	r3,15
   2d698:	18802636 	bltu	r3,r2,2d734 <_realloc_r+0x1dc>
   2d69c:	99800117 	ldw	r6,4(r19)
   2d6a0:	9c07883a 	add	r3,r19,r16
   2d6a4:	3180004c 	andi	r6,r6,1
   2d6a8:	3420b03a 	or	r16,r6,r16
   2d6ac:	9c000115 	stw	r16,4(r19)
   2d6b0:	18800117 	ldw	r2,4(r3)
   2d6b4:	10800054 	ori	r2,r2,1
   2d6b8:	18800115 	stw	r2,4(r3)
   2d6bc:	a009883a 	mov	r4,r20
   2d6c0:	002eef40 	call	2eef4 <__malloc_unlock>
   2d6c4:	9005883a 	mov	r2,r18
   2d6c8:	dfc00917 	ldw	ra,36(sp)
   2d6cc:	df000817 	ldw	fp,32(sp)
   2d6d0:	ddc00717 	ldw	r23,28(sp)
   2d6d4:	dd800617 	ldw	r22,24(sp)
   2d6d8:	dd400517 	ldw	r21,20(sp)
   2d6dc:	dd000417 	ldw	r20,16(sp)
   2d6e0:	dcc00317 	ldw	r19,12(sp)
   2d6e4:	dc800217 	ldw	r18,8(sp)
   2d6e8:	dc400117 	ldw	r17,4(sp)
   2d6ec:	dc000017 	ldw	r16,0(sp)
   2d6f0:	dec00a04 	addi	sp,sp,40
   2d6f4:	f800283a 	ret
   2d6f8:	017fff04 	movi	r5,-4
   2d6fc:	414a703a 	and	r5,r8,r5
   2d700:	814d883a 	add	r6,r16,r5
   2d704:	30c01f16 	blt	r6,r3,2d784 <_realloc_r+0x22c>
   2d708:	20800317 	ldw	r2,12(r4)
   2d70c:	20c00217 	ldw	r3,8(r4)
   2d710:	a825883a 	mov	r18,r21
   2d714:	3021883a 	mov	r16,r6
   2d718:	18800315 	stw	r2,12(r3)
   2d71c:	10c00215 	stw	r3,8(r2)
   2d720:	003fdb06 	br	2d690 <__alt_data_end+0xfffed690>
   2d724:	00800304 	movi	r2,12
   2d728:	a0800015 	stw	r2,0(r20)
   2d72c:	0005883a 	mov	r2,zero
   2d730:	003fe506 	br	2d6c8 <__alt_data_end+0xfffed6c8>
   2d734:	98c00117 	ldw	r3,4(r19)
   2d738:	9c4b883a 	add	r5,r19,r17
   2d73c:	11000054 	ori	r4,r2,1
   2d740:	18c0004c 	andi	r3,r3,1
   2d744:	1c62b03a 	or	r17,r3,r17
   2d748:	9c400115 	stw	r17,4(r19)
   2d74c:	29000115 	stw	r4,4(r5)
   2d750:	2885883a 	add	r2,r5,r2
   2d754:	10c00117 	ldw	r3,4(r2)
   2d758:	29400204 	addi	r5,r5,8
   2d75c:	a009883a 	mov	r4,r20
   2d760:	18c00054 	ori	r3,r3,1
   2d764:	10c00115 	stw	r3,4(r2)
   2d768:	0028d740 	call	28d74 <_free_r>
   2d76c:	003fd306 	br	2d6bc <__alt_data_end+0xfffed6bc>
   2d770:	017fff04 	movi	r5,-4
   2d774:	414a703a 	and	r5,r8,r5
   2d778:	89800404 	addi	r6,r17,16
   2d77c:	8151883a 	add	r8,r16,r5
   2d780:	4180590e 	bge	r8,r6,2d8e8 <_realloc_r+0x390>
   2d784:	1080004c 	andi	r2,r2,1
   2d788:	103f9e1e 	bne	r2,zero,2d604 <__alt_data_end+0xfffed604>
   2d78c:	adbffe17 	ldw	r22,-8(r21)
   2d790:	00bfff04 	movi	r2,-4
   2d794:	9dadc83a 	sub	r22,r19,r22
   2d798:	b1800117 	ldw	r6,4(r22)
   2d79c:	3084703a 	and	r2,r6,r2
   2d7a0:	20002026 	beq	r4,zero,2d824 <_realloc_r+0x2cc>
   2d7a4:	80af883a 	add	r23,r16,r2
   2d7a8:	b96f883a 	add	r23,r23,r5
   2d7ac:	21c05f26 	beq	r4,r7,2d92c <_realloc_r+0x3d4>
   2d7b0:	b8c01c16 	blt	r23,r3,2d824 <_realloc_r+0x2cc>
   2d7b4:	20800317 	ldw	r2,12(r4)
   2d7b8:	20c00217 	ldw	r3,8(r4)
   2d7bc:	81bfff04 	addi	r6,r16,-4
   2d7c0:	01000904 	movi	r4,36
   2d7c4:	18800315 	stw	r2,12(r3)
   2d7c8:	10c00215 	stw	r3,8(r2)
   2d7cc:	b0c00217 	ldw	r3,8(r22)
   2d7d0:	b0800317 	ldw	r2,12(r22)
   2d7d4:	b4800204 	addi	r18,r22,8
   2d7d8:	18800315 	stw	r2,12(r3)
   2d7dc:	10c00215 	stw	r3,8(r2)
   2d7e0:	21801b36 	bltu	r4,r6,2d850 <_realloc_r+0x2f8>
   2d7e4:	008004c4 	movi	r2,19
   2d7e8:	1180352e 	bgeu	r2,r6,2d8c0 <_realloc_r+0x368>
   2d7ec:	a8800017 	ldw	r2,0(r21)
   2d7f0:	b0800215 	stw	r2,8(r22)
   2d7f4:	a8800117 	ldw	r2,4(r21)
   2d7f8:	b0800315 	stw	r2,12(r22)
   2d7fc:	008006c4 	movi	r2,27
   2d800:	11807f36 	bltu	r2,r6,2da00 <_realloc_r+0x4a8>
   2d804:	b0800404 	addi	r2,r22,16
   2d808:	ad400204 	addi	r21,r21,8
   2d80c:	00002d06 	br	2d8c4 <_realloc_r+0x36c>
   2d810:	adbffe17 	ldw	r22,-8(r21)
   2d814:	00bfff04 	movi	r2,-4
   2d818:	9dadc83a 	sub	r22,r19,r22
   2d81c:	b1000117 	ldw	r4,4(r22)
   2d820:	2084703a 	and	r2,r4,r2
   2d824:	b03f7726 	beq	r22,zero,2d604 <__alt_data_end+0xfffed604>
   2d828:	80af883a 	add	r23,r16,r2
   2d82c:	b8ff7516 	blt	r23,r3,2d604 <__alt_data_end+0xfffed604>
   2d830:	b0800317 	ldw	r2,12(r22)
   2d834:	b0c00217 	ldw	r3,8(r22)
   2d838:	81bfff04 	addi	r6,r16,-4
   2d83c:	01000904 	movi	r4,36
   2d840:	18800315 	stw	r2,12(r3)
   2d844:	10c00215 	stw	r3,8(r2)
   2d848:	b4800204 	addi	r18,r22,8
   2d84c:	21bfe52e 	bgeu	r4,r6,2d7e4 <__alt_data_end+0xfffed7e4>
   2d850:	a80b883a 	mov	r5,r21
   2d854:	9009883a 	mov	r4,r18
   2d858:	002d39c0 	call	2d39c <memmove>
   2d85c:	b821883a 	mov	r16,r23
   2d860:	b027883a 	mov	r19,r22
   2d864:	003f8a06 	br	2d690 <__alt_data_end+0xfffed690>
   2d868:	300b883a 	mov	r5,r6
   2d86c:	dfc00917 	ldw	ra,36(sp)
   2d870:	df000817 	ldw	fp,32(sp)
   2d874:	ddc00717 	ldw	r23,28(sp)
   2d878:	dd800617 	ldw	r22,24(sp)
   2d87c:	dd400517 	ldw	r21,20(sp)
   2d880:	dd000417 	ldw	r20,16(sp)
   2d884:	dcc00317 	ldw	r19,12(sp)
   2d888:	dc800217 	ldw	r18,8(sp)
   2d88c:	dc400117 	ldw	r17,4(sp)
   2d890:	dc000017 	ldw	r16,0(sp)
   2d894:	dec00a04 	addi	sp,sp,40
   2d898:	00294a41 	jmpi	294a4 <_malloc_r>
   2d89c:	a8c00017 	ldw	r3,0(r21)
   2d8a0:	90c00015 	stw	r3,0(r18)
   2d8a4:	a8c00117 	ldw	r3,4(r21)
   2d8a8:	90c00115 	stw	r3,4(r18)
   2d8ac:	00c006c4 	movi	r3,27
   2d8b0:	19804536 	bltu	r3,r6,2d9c8 <_realloc_r+0x470>
   2d8b4:	90800204 	addi	r2,r18,8
   2d8b8:	a8c00204 	addi	r3,r21,8
   2d8bc:	003f6306 	br	2d64c <__alt_data_end+0xfffed64c>
   2d8c0:	9005883a 	mov	r2,r18
   2d8c4:	a8c00017 	ldw	r3,0(r21)
   2d8c8:	b821883a 	mov	r16,r23
   2d8cc:	b027883a 	mov	r19,r22
   2d8d0:	10c00015 	stw	r3,0(r2)
   2d8d4:	a8c00117 	ldw	r3,4(r21)
   2d8d8:	10c00115 	stw	r3,4(r2)
   2d8dc:	a8c00217 	ldw	r3,8(r21)
   2d8e0:	10c00215 	stw	r3,8(r2)
   2d8e4:	003f6a06 	br	2d690 <__alt_data_end+0xfffed690>
   2d8e8:	9c67883a 	add	r19,r19,r17
   2d8ec:	4445c83a 	sub	r2,r8,r17
   2d8f0:	e4c00215 	stw	r19,8(fp)
   2d8f4:	10800054 	ori	r2,r2,1
   2d8f8:	98800115 	stw	r2,4(r19)
   2d8fc:	a8bfff17 	ldw	r2,-4(r21)
   2d900:	a009883a 	mov	r4,r20
   2d904:	1080004c 	andi	r2,r2,1
   2d908:	1462b03a 	or	r17,r2,r17
   2d90c:	ac7fff15 	stw	r17,-4(r21)
   2d910:	002eef40 	call	2eef4 <__malloc_unlock>
   2d914:	a805883a 	mov	r2,r21
   2d918:	003f6b06 	br	2d6c8 <__alt_data_end+0xfffed6c8>
   2d91c:	a80b883a 	mov	r5,r21
   2d920:	9009883a 	mov	r4,r18
   2d924:	002d39c0 	call	2d39c <memmove>
   2d928:	003f4e06 	br	2d664 <__alt_data_end+0xfffed664>
   2d92c:	89000404 	addi	r4,r17,16
   2d930:	b93fbc16 	blt	r23,r4,2d824 <__alt_data_end+0xfffed824>
   2d934:	b0800317 	ldw	r2,12(r22)
   2d938:	b0c00217 	ldw	r3,8(r22)
   2d93c:	81bfff04 	addi	r6,r16,-4
   2d940:	01000904 	movi	r4,36
   2d944:	18800315 	stw	r2,12(r3)
   2d948:	10c00215 	stw	r3,8(r2)
   2d94c:	b4800204 	addi	r18,r22,8
   2d950:	21804336 	bltu	r4,r6,2da60 <_realloc_r+0x508>
   2d954:	008004c4 	movi	r2,19
   2d958:	11803f2e 	bgeu	r2,r6,2da58 <_realloc_r+0x500>
   2d95c:	a8800017 	ldw	r2,0(r21)
   2d960:	b0800215 	stw	r2,8(r22)
   2d964:	a8800117 	ldw	r2,4(r21)
   2d968:	b0800315 	stw	r2,12(r22)
   2d96c:	008006c4 	movi	r2,27
   2d970:	11803f36 	bltu	r2,r6,2da70 <_realloc_r+0x518>
   2d974:	b0800404 	addi	r2,r22,16
   2d978:	ad400204 	addi	r21,r21,8
   2d97c:	a8c00017 	ldw	r3,0(r21)
   2d980:	10c00015 	stw	r3,0(r2)
   2d984:	a8c00117 	ldw	r3,4(r21)
   2d988:	10c00115 	stw	r3,4(r2)
   2d98c:	a8c00217 	ldw	r3,8(r21)
   2d990:	10c00215 	stw	r3,8(r2)
   2d994:	b447883a 	add	r3,r22,r17
   2d998:	bc45c83a 	sub	r2,r23,r17
   2d99c:	e0c00215 	stw	r3,8(fp)
   2d9a0:	10800054 	ori	r2,r2,1
   2d9a4:	18800115 	stw	r2,4(r3)
   2d9a8:	b0800117 	ldw	r2,4(r22)
   2d9ac:	a009883a 	mov	r4,r20
   2d9b0:	1080004c 	andi	r2,r2,1
   2d9b4:	1462b03a 	or	r17,r2,r17
   2d9b8:	b4400115 	stw	r17,4(r22)
   2d9bc:	002eef40 	call	2eef4 <__malloc_unlock>
   2d9c0:	9005883a 	mov	r2,r18
   2d9c4:	003f4006 	br	2d6c8 <__alt_data_end+0xfffed6c8>
   2d9c8:	a8c00217 	ldw	r3,8(r21)
   2d9cc:	90c00215 	stw	r3,8(r18)
   2d9d0:	a8c00317 	ldw	r3,12(r21)
   2d9d4:	90c00315 	stw	r3,12(r18)
   2d9d8:	30801126 	beq	r6,r2,2da20 <_realloc_r+0x4c8>
   2d9dc:	90800404 	addi	r2,r18,16
   2d9e0:	a8c00404 	addi	r3,r21,16
   2d9e4:	003f1906 	br	2d64c <__alt_data_end+0xfffed64c>
   2d9e8:	90ffff17 	ldw	r3,-4(r18)
   2d9ec:	00bfff04 	movi	r2,-4
   2d9f0:	a825883a 	mov	r18,r21
   2d9f4:	1884703a 	and	r2,r3,r2
   2d9f8:	80a1883a 	add	r16,r16,r2
   2d9fc:	003f2406 	br	2d690 <__alt_data_end+0xfffed690>
   2da00:	a8800217 	ldw	r2,8(r21)
   2da04:	b0800415 	stw	r2,16(r22)
   2da08:	a8800317 	ldw	r2,12(r21)
   2da0c:	b0800515 	stw	r2,20(r22)
   2da10:	31000a26 	beq	r6,r4,2da3c <_realloc_r+0x4e4>
   2da14:	b0800604 	addi	r2,r22,24
   2da18:	ad400404 	addi	r21,r21,16
   2da1c:	003fa906 	br	2d8c4 <__alt_data_end+0xfffed8c4>
   2da20:	a9000417 	ldw	r4,16(r21)
   2da24:	90800604 	addi	r2,r18,24
   2da28:	a8c00604 	addi	r3,r21,24
   2da2c:	91000415 	stw	r4,16(r18)
   2da30:	a9000517 	ldw	r4,20(r21)
   2da34:	91000515 	stw	r4,20(r18)
   2da38:	003f0406 	br	2d64c <__alt_data_end+0xfffed64c>
   2da3c:	a8c00417 	ldw	r3,16(r21)
   2da40:	ad400604 	addi	r21,r21,24
   2da44:	b0800804 	addi	r2,r22,32
   2da48:	b0c00615 	stw	r3,24(r22)
   2da4c:	a8ffff17 	ldw	r3,-4(r21)
   2da50:	b0c00715 	stw	r3,28(r22)
   2da54:	003f9b06 	br	2d8c4 <__alt_data_end+0xfffed8c4>
   2da58:	9005883a 	mov	r2,r18
   2da5c:	003fc706 	br	2d97c <__alt_data_end+0xfffed97c>
   2da60:	a80b883a 	mov	r5,r21
   2da64:	9009883a 	mov	r4,r18
   2da68:	002d39c0 	call	2d39c <memmove>
   2da6c:	003fc906 	br	2d994 <__alt_data_end+0xfffed994>
   2da70:	a8800217 	ldw	r2,8(r21)
   2da74:	b0800415 	stw	r2,16(r22)
   2da78:	a8800317 	ldw	r2,12(r21)
   2da7c:	b0800515 	stw	r2,20(r22)
   2da80:	31000726 	beq	r6,r4,2daa0 <_realloc_r+0x548>
   2da84:	b0800604 	addi	r2,r22,24
   2da88:	ad400404 	addi	r21,r21,16
   2da8c:	003fbb06 	br	2d97c <__alt_data_end+0xfffed97c>
   2da90:	a009883a 	mov	r4,r20
   2da94:	002eef40 	call	2eef4 <__malloc_unlock>
   2da98:	0005883a 	mov	r2,zero
   2da9c:	003f0a06 	br	2d6c8 <__alt_data_end+0xfffed6c8>
   2daa0:	a8c00417 	ldw	r3,16(r21)
   2daa4:	ad400604 	addi	r21,r21,24
   2daa8:	b0800804 	addi	r2,r22,32
   2daac:	b0c00615 	stw	r3,24(r22)
   2dab0:	a8ffff17 	ldw	r3,-4(r21)
   2dab4:	b0c00715 	stw	r3,28(r22)
   2dab8:	003fb006 	br	2d97c <__alt_data_end+0xfffed97c>

0002dabc <__swbuf_r>:
   2dabc:	defffb04 	addi	sp,sp,-20
   2dac0:	dcc00315 	stw	r19,12(sp)
   2dac4:	dc800215 	stw	r18,8(sp)
   2dac8:	dc000015 	stw	r16,0(sp)
   2dacc:	dfc00415 	stw	ra,16(sp)
   2dad0:	dc400115 	stw	r17,4(sp)
   2dad4:	2025883a 	mov	r18,r4
   2dad8:	2827883a 	mov	r19,r5
   2dadc:	3021883a 	mov	r16,r6
   2dae0:	20000226 	beq	r4,zero,2daec <__swbuf_r+0x30>
   2dae4:	20800e17 	ldw	r2,56(r4)
   2dae8:	10004226 	beq	r2,zero,2dbf4 <__swbuf_r+0x138>
   2daec:	80800617 	ldw	r2,24(r16)
   2daf0:	8100030b 	ldhu	r4,12(r16)
   2daf4:	80800215 	stw	r2,8(r16)
   2daf8:	2080020c 	andi	r2,r4,8
   2dafc:	10003626 	beq	r2,zero,2dbd8 <__swbuf_r+0x11c>
   2db00:	80c00417 	ldw	r3,16(r16)
   2db04:	18003426 	beq	r3,zero,2dbd8 <__swbuf_r+0x11c>
   2db08:	2088000c 	andi	r2,r4,8192
   2db0c:	9c403fcc 	andi	r17,r19,255
   2db10:	10001a26 	beq	r2,zero,2db7c <__swbuf_r+0xc0>
   2db14:	80800017 	ldw	r2,0(r16)
   2db18:	81000517 	ldw	r4,20(r16)
   2db1c:	10c7c83a 	sub	r3,r2,r3
   2db20:	1900200e 	bge	r3,r4,2dba4 <__swbuf_r+0xe8>
   2db24:	18c00044 	addi	r3,r3,1
   2db28:	81000217 	ldw	r4,8(r16)
   2db2c:	11400044 	addi	r5,r2,1
   2db30:	81400015 	stw	r5,0(r16)
   2db34:	213fffc4 	addi	r4,r4,-1
   2db38:	81000215 	stw	r4,8(r16)
   2db3c:	14c00005 	stb	r19,0(r2)
   2db40:	80800517 	ldw	r2,20(r16)
   2db44:	10c01e26 	beq	r2,r3,2dbc0 <__swbuf_r+0x104>
   2db48:	8080030b 	ldhu	r2,12(r16)
   2db4c:	1080004c 	andi	r2,r2,1
   2db50:	10000226 	beq	r2,zero,2db5c <__swbuf_r+0xa0>
   2db54:	00800284 	movi	r2,10
   2db58:	88801926 	beq	r17,r2,2dbc0 <__swbuf_r+0x104>
   2db5c:	8805883a 	mov	r2,r17
   2db60:	dfc00417 	ldw	ra,16(sp)
   2db64:	dcc00317 	ldw	r19,12(sp)
   2db68:	dc800217 	ldw	r18,8(sp)
   2db6c:	dc400117 	ldw	r17,4(sp)
   2db70:	dc000017 	ldw	r16,0(sp)
   2db74:	dec00504 	addi	sp,sp,20
   2db78:	f800283a 	ret
   2db7c:	81401917 	ldw	r5,100(r16)
   2db80:	00b7ffc4 	movi	r2,-8193
   2db84:	21080014 	ori	r4,r4,8192
   2db88:	2884703a 	and	r2,r5,r2
   2db8c:	80801915 	stw	r2,100(r16)
   2db90:	80800017 	ldw	r2,0(r16)
   2db94:	8100030d 	sth	r4,12(r16)
   2db98:	81000517 	ldw	r4,20(r16)
   2db9c:	10c7c83a 	sub	r3,r2,r3
   2dba0:	193fe016 	blt	r3,r4,2db24 <__alt_data_end+0xfffedb24>
   2dba4:	800b883a 	mov	r5,r16
   2dba8:	9009883a 	mov	r4,r18
   2dbac:	00288240 	call	28824 <_fflush_r>
   2dbb0:	1000071e 	bne	r2,zero,2dbd0 <__swbuf_r+0x114>
   2dbb4:	80800017 	ldw	r2,0(r16)
   2dbb8:	00c00044 	movi	r3,1
   2dbbc:	003fda06 	br	2db28 <__alt_data_end+0xfffedb28>
   2dbc0:	800b883a 	mov	r5,r16
   2dbc4:	9009883a 	mov	r4,r18
   2dbc8:	00288240 	call	28824 <_fflush_r>
   2dbcc:	103fe326 	beq	r2,zero,2db5c <__alt_data_end+0xfffedb5c>
   2dbd0:	00bfffc4 	movi	r2,-1
   2dbd4:	003fe206 	br	2db60 <__alt_data_end+0xfffedb60>
   2dbd8:	800b883a 	mov	r5,r16
   2dbdc:	9009883a 	mov	r4,r18
   2dbe0:	0026c2c0 	call	26c2c <__swsetup_r>
   2dbe4:	103ffa1e 	bne	r2,zero,2dbd0 <__alt_data_end+0xfffedbd0>
   2dbe8:	8100030b 	ldhu	r4,12(r16)
   2dbec:	80c00417 	ldw	r3,16(r16)
   2dbf0:	003fc506 	br	2db08 <__alt_data_end+0xfffedb08>
   2dbf4:	0028c000 	call	28c00 <__sinit>
   2dbf8:	003fbc06 	br	2daec <__alt_data_end+0xfffedaec>

0002dbfc <__swbuf>:
   2dbfc:	008000f4 	movhi	r2,3
   2dc00:	108c1804 	addi	r2,r2,12384
   2dc04:	280d883a 	mov	r6,r5
   2dc08:	200b883a 	mov	r5,r4
   2dc0c:	11000017 	ldw	r4,0(r2)
   2dc10:	002dabc1 	jmpi	2dabc <__swbuf_r>

0002dc14 <_wcrtomb_r>:
   2dc14:	defff604 	addi	sp,sp,-40
   2dc18:	008000f4 	movhi	r2,3
   2dc1c:	dc800815 	stw	r18,32(sp)
   2dc20:	dc400715 	stw	r17,28(sp)
   2dc24:	dc000615 	stw	r16,24(sp)
   2dc28:	108c1c04 	addi	r2,r2,12400
   2dc2c:	dfc00915 	stw	ra,36(sp)
   2dc30:	2021883a 	mov	r16,r4
   2dc34:	3823883a 	mov	r17,r7
   2dc38:	14800017 	ldw	r18,0(r2)
   2dc3c:	28001426 	beq	r5,zero,2dc90 <_wcrtomb_r+0x7c>
   2dc40:	d9400415 	stw	r5,16(sp)
   2dc44:	d9800515 	stw	r6,20(sp)
   2dc48:	00292880 	call	29288 <__locale_charset>
   2dc4c:	d9800517 	ldw	r6,20(sp)
   2dc50:	d9400417 	ldw	r5,16(sp)
   2dc54:	100f883a 	mov	r7,r2
   2dc58:	dc400015 	stw	r17,0(sp)
   2dc5c:	8009883a 	mov	r4,r16
   2dc60:	903ee83a 	callr	r18
   2dc64:	00ffffc4 	movi	r3,-1
   2dc68:	10c0031e 	bne	r2,r3,2dc78 <_wcrtomb_r+0x64>
   2dc6c:	88000015 	stw	zero,0(r17)
   2dc70:	00c02284 	movi	r3,138
   2dc74:	80c00015 	stw	r3,0(r16)
   2dc78:	dfc00917 	ldw	ra,36(sp)
   2dc7c:	dc800817 	ldw	r18,32(sp)
   2dc80:	dc400717 	ldw	r17,28(sp)
   2dc84:	dc000617 	ldw	r16,24(sp)
   2dc88:	dec00a04 	addi	sp,sp,40
   2dc8c:	f800283a 	ret
   2dc90:	00292880 	call	29288 <__locale_charset>
   2dc94:	100f883a 	mov	r7,r2
   2dc98:	dc400015 	stw	r17,0(sp)
   2dc9c:	000d883a 	mov	r6,zero
   2dca0:	d9400104 	addi	r5,sp,4
   2dca4:	8009883a 	mov	r4,r16
   2dca8:	903ee83a 	callr	r18
   2dcac:	003fed06 	br	2dc64 <__alt_data_end+0xfffedc64>

0002dcb0 <wcrtomb>:
   2dcb0:	defff604 	addi	sp,sp,-40
   2dcb4:	008000f4 	movhi	r2,3
   2dcb8:	dc800615 	stw	r18,24(sp)
   2dcbc:	dc400515 	stw	r17,20(sp)
   2dcc0:	108c1804 	addi	r2,r2,12384
   2dcc4:	dfc00915 	stw	ra,36(sp)
   2dcc8:	dd000815 	stw	r20,32(sp)
   2dccc:	dcc00715 	stw	r19,28(sp)
   2dcd0:	dc000415 	stw	r16,16(sp)
   2dcd4:	3025883a 	mov	r18,r6
   2dcd8:	14400017 	ldw	r17,0(r2)
   2dcdc:	20001926 	beq	r4,zero,2dd44 <wcrtomb+0x94>
   2dce0:	008000f4 	movhi	r2,3
   2dce4:	108c1c04 	addi	r2,r2,12400
   2dce8:	15000017 	ldw	r20,0(r2)
   2dcec:	2021883a 	mov	r16,r4
   2dcf0:	2827883a 	mov	r19,r5
   2dcf4:	00292880 	call	29288 <__locale_charset>
   2dcf8:	100f883a 	mov	r7,r2
   2dcfc:	dc800015 	stw	r18,0(sp)
   2dd00:	980d883a 	mov	r6,r19
   2dd04:	800b883a 	mov	r5,r16
   2dd08:	8809883a 	mov	r4,r17
   2dd0c:	a03ee83a 	callr	r20
   2dd10:	00ffffc4 	movi	r3,-1
   2dd14:	10c0031e 	bne	r2,r3,2dd24 <wcrtomb+0x74>
   2dd18:	90000015 	stw	zero,0(r18)
   2dd1c:	00c02284 	movi	r3,138
   2dd20:	88c00015 	stw	r3,0(r17)
   2dd24:	dfc00917 	ldw	ra,36(sp)
   2dd28:	dd000817 	ldw	r20,32(sp)
   2dd2c:	dcc00717 	ldw	r19,28(sp)
   2dd30:	dc800617 	ldw	r18,24(sp)
   2dd34:	dc400517 	ldw	r17,20(sp)
   2dd38:	dc000417 	ldw	r16,16(sp)
   2dd3c:	dec00a04 	addi	sp,sp,40
   2dd40:	f800283a 	ret
   2dd44:	008000f4 	movhi	r2,3
   2dd48:	108c1c04 	addi	r2,r2,12400
   2dd4c:	14000017 	ldw	r16,0(r2)
   2dd50:	00292880 	call	29288 <__locale_charset>
   2dd54:	100f883a 	mov	r7,r2
   2dd58:	dc800015 	stw	r18,0(sp)
   2dd5c:	000d883a 	mov	r6,zero
   2dd60:	d9400104 	addi	r5,sp,4
   2dd64:	8809883a 	mov	r4,r17
   2dd68:	803ee83a 	callr	r16
   2dd6c:	003fe806 	br	2dd10 <__alt_data_end+0xfffedd10>

0002dd70 <__ascii_wctomb>:
   2dd70:	28000526 	beq	r5,zero,2dd88 <__ascii_wctomb+0x18>
   2dd74:	00803fc4 	movi	r2,255
   2dd78:	11800536 	bltu	r2,r6,2dd90 <__ascii_wctomb+0x20>
   2dd7c:	29800005 	stb	r6,0(r5)
   2dd80:	00800044 	movi	r2,1
   2dd84:	f800283a 	ret
   2dd88:	0005883a 	mov	r2,zero
   2dd8c:	f800283a 	ret
   2dd90:	00802284 	movi	r2,138
   2dd94:	20800015 	stw	r2,0(r4)
   2dd98:	00bfffc4 	movi	r2,-1
   2dd9c:	f800283a 	ret

0002dda0 <_wctomb_r>:
   2dda0:	008000f4 	movhi	r2,3
   2dda4:	defff904 	addi	sp,sp,-28
   2dda8:	108c1c04 	addi	r2,r2,12400
   2ddac:	dfc00615 	stw	ra,24(sp)
   2ddb0:	dc400515 	stw	r17,20(sp)
   2ddb4:	dc000415 	stw	r16,16(sp)
   2ddb8:	3823883a 	mov	r17,r7
   2ddbc:	14000017 	ldw	r16,0(r2)
   2ddc0:	d9000115 	stw	r4,4(sp)
   2ddc4:	d9400215 	stw	r5,8(sp)
   2ddc8:	d9800315 	stw	r6,12(sp)
   2ddcc:	00292880 	call	29288 <__locale_charset>
   2ddd0:	d9800317 	ldw	r6,12(sp)
   2ddd4:	d9400217 	ldw	r5,8(sp)
   2ddd8:	d9000117 	ldw	r4,4(sp)
   2dddc:	100f883a 	mov	r7,r2
   2dde0:	dc400015 	stw	r17,0(sp)
   2dde4:	803ee83a 	callr	r16
   2dde8:	dfc00617 	ldw	ra,24(sp)
   2ddec:	dc400517 	ldw	r17,20(sp)
   2ddf0:	dc000417 	ldw	r16,16(sp)
   2ddf4:	dec00704 	addi	sp,sp,28
   2ddf8:	f800283a 	ret

0002ddfc <__udivdi3>:
   2ddfc:	defff504 	addi	sp,sp,-44
   2de00:	dcc00415 	stw	r19,16(sp)
   2de04:	dc000115 	stw	r16,4(sp)
   2de08:	dfc00a15 	stw	ra,40(sp)
   2de0c:	df000915 	stw	fp,36(sp)
   2de10:	ddc00815 	stw	r23,32(sp)
   2de14:	dd800715 	stw	r22,28(sp)
   2de18:	dd400615 	stw	r21,24(sp)
   2de1c:	dd000515 	stw	r20,20(sp)
   2de20:	dc800315 	stw	r18,12(sp)
   2de24:	dc400215 	stw	r17,8(sp)
   2de28:	2027883a 	mov	r19,r4
   2de2c:	2821883a 	mov	r16,r5
   2de30:	3800411e 	bne	r7,zero,2df38 <__udivdi3+0x13c>
   2de34:	3023883a 	mov	r17,r6
   2de38:	2025883a 	mov	r18,r4
   2de3c:	2980522e 	bgeu	r5,r6,2df88 <__udivdi3+0x18c>
   2de40:	00bfffd4 	movui	r2,65535
   2de44:	282d883a 	mov	r22,r5
   2de48:	1180a836 	bltu	r2,r6,2e0ec <__udivdi3+0x2f0>
   2de4c:	00803fc4 	movi	r2,255
   2de50:	1185803a 	cmpltu	r2,r2,r6
   2de54:	100490fa 	slli	r2,r2,3
   2de58:	3086d83a 	srl	r3,r6,r2
   2de5c:	010000f4 	movhi	r4,3
   2de60:	2104ac04 	addi	r4,r4,4784
   2de64:	20c7883a 	add	r3,r4,r3
   2de68:	18c00003 	ldbu	r3,0(r3)
   2de6c:	1885883a 	add	r2,r3,r2
   2de70:	00c00804 	movi	r3,32
   2de74:	1887c83a 	sub	r3,r3,r2
   2de78:	18000526 	beq	r3,zero,2de90 <__udivdi3+0x94>
   2de7c:	80e0983a 	sll	r16,r16,r3
   2de80:	9884d83a 	srl	r2,r19,r2
   2de84:	30e2983a 	sll	r17,r6,r3
   2de88:	98e4983a 	sll	r18,r19,r3
   2de8c:	142cb03a 	or	r22,r2,r16
   2de90:	882ad43a 	srli	r21,r17,16
   2de94:	b009883a 	mov	r4,r22
   2de98:	8d3fffcc 	andi	r20,r17,65535
   2de9c:	a80b883a 	mov	r5,r21
   2dea0:	00222c80 	call	222c8 <__umodsi3>
   2dea4:	b009883a 	mov	r4,r22
   2dea8:	a80b883a 	mov	r5,r21
   2deac:	1027883a 	mov	r19,r2
   2deb0:	00222640 	call	22264 <__udivsi3>
   2deb4:	102d883a 	mov	r22,r2
   2deb8:	9826943a 	slli	r19,r19,16
   2debc:	9004d43a 	srli	r2,r18,16
   2dec0:	a5a1383a 	mul	r16,r20,r22
   2dec4:	14c4b03a 	or	r2,r2,r19
   2dec8:	1400052e 	bgeu	r2,r16,2dee0 <__udivdi3+0xe4>
   2decc:	1445883a 	add	r2,r2,r17
   2ded0:	b0ffffc4 	addi	r3,r22,-1
   2ded4:	14400136 	bltu	r2,r17,2dedc <__udivdi3+0xe0>
   2ded8:	14012336 	bltu	r2,r16,2e368 <__udivdi3+0x56c>
   2dedc:	182d883a 	mov	r22,r3
   2dee0:	1421c83a 	sub	r16,r2,r16
   2dee4:	a80b883a 	mov	r5,r21
   2dee8:	8009883a 	mov	r4,r16
   2deec:	00222c80 	call	222c8 <__umodsi3>
   2def0:	1027883a 	mov	r19,r2
   2def4:	a80b883a 	mov	r5,r21
   2def8:	8009883a 	mov	r4,r16
   2defc:	00222640 	call	22264 <__udivsi3>
   2df00:	9826943a 	slli	r19,r19,16
   2df04:	a0a9383a 	mul	r20,r20,r2
   2df08:	94bfffcc 	andi	r18,r18,65535
   2df0c:	94e4b03a 	or	r18,r18,r19
   2df10:	9500052e 	bgeu	r18,r20,2df28 <__udivdi3+0x12c>
   2df14:	8ca5883a 	add	r18,r17,r18
   2df18:	10ffffc4 	addi	r3,r2,-1
   2df1c:	9440f136 	bltu	r18,r17,2e2e4 <__udivdi3+0x4e8>
   2df20:	9500f02e 	bgeu	r18,r20,2e2e4 <__udivdi3+0x4e8>
   2df24:	10bfff84 	addi	r2,r2,-2
   2df28:	b00c943a 	slli	r6,r22,16
   2df2c:	0007883a 	mov	r3,zero
   2df30:	3084b03a 	or	r2,r6,r2
   2df34:	00005906 	br	2e09c <__udivdi3+0x2a0>
   2df38:	29c05636 	bltu	r5,r7,2e094 <__udivdi3+0x298>
   2df3c:	00bfffd4 	movui	r2,65535
   2df40:	11c0622e 	bgeu	r2,r7,2e0cc <__udivdi3+0x2d0>
   2df44:	00804034 	movhi	r2,256
   2df48:	10bfffc4 	addi	r2,r2,-1
   2df4c:	11c0ee36 	bltu	r2,r7,2e308 <__udivdi3+0x50c>
   2df50:	00800404 	movi	r2,16
   2df54:	3886d83a 	srl	r3,r7,r2
   2df58:	010000f4 	movhi	r4,3
   2df5c:	2104ac04 	addi	r4,r4,4784
   2df60:	20c7883a 	add	r3,r4,r3
   2df64:	18c00003 	ldbu	r3,0(r3)
   2df68:	05400804 	movi	r21,32
   2df6c:	1885883a 	add	r2,r3,r2
   2df70:	a8abc83a 	sub	r21,r21,r2
   2df74:	a800621e 	bne	r21,zero,2e100 <__udivdi3+0x304>
   2df78:	3c00e936 	bltu	r7,r16,2e320 <__udivdi3+0x524>
   2df7c:	9985403a 	cmpgeu	r2,r19,r6
   2df80:	0007883a 	mov	r3,zero
   2df84:	00004506 	br	2e09c <__udivdi3+0x2a0>
   2df88:	3000041e 	bne	r6,zero,2df9c <__udivdi3+0x1a0>
   2df8c:	000b883a 	mov	r5,zero
   2df90:	01000044 	movi	r4,1
   2df94:	00222640 	call	22264 <__udivsi3>
   2df98:	1023883a 	mov	r17,r2
   2df9c:	00bfffd4 	movui	r2,65535
   2dfa0:	14404e2e 	bgeu	r2,r17,2e0dc <__udivdi3+0x2e0>
   2dfa4:	00804034 	movhi	r2,256
   2dfa8:	10bfffc4 	addi	r2,r2,-1
   2dfac:	1440d836 	bltu	r2,r17,2e310 <__udivdi3+0x514>
   2dfb0:	00800404 	movi	r2,16
   2dfb4:	8886d83a 	srl	r3,r17,r2
   2dfb8:	010000f4 	movhi	r4,3
   2dfbc:	2104ac04 	addi	r4,r4,4784
   2dfc0:	20c7883a 	add	r3,r4,r3
   2dfc4:	18c00003 	ldbu	r3,0(r3)
   2dfc8:	1885883a 	add	r2,r3,r2
   2dfcc:	00c00804 	movi	r3,32
   2dfd0:	1887c83a 	sub	r3,r3,r2
   2dfd4:	18008f1e 	bne	r3,zero,2e214 <__udivdi3+0x418>
   2dfd8:	882ad43a 	srli	r21,r17,16
   2dfdc:	8461c83a 	sub	r16,r16,r17
   2dfe0:	8d3fffcc 	andi	r20,r17,65535
   2dfe4:	00c00044 	movi	r3,1
   2dfe8:	8009883a 	mov	r4,r16
   2dfec:	a80b883a 	mov	r5,r21
   2dff0:	d8c00015 	stw	r3,0(sp)
   2dff4:	00222c80 	call	222c8 <__umodsi3>
   2dff8:	8009883a 	mov	r4,r16
   2dffc:	a80b883a 	mov	r5,r21
   2e000:	1027883a 	mov	r19,r2
   2e004:	00222640 	call	22264 <__udivsi3>
   2e008:	9826943a 	slli	r19,r19,16
   2e00c:	9008d43a 	srli	r4,r18,16
   2e010:	1521383a 	mul	r16,r2,r20
   2e014:	102d883a 	mov	r22,r2
   2e018:	24c8b03a 	or	r4,r4,r19
   2e01c:	d8c00017 	ldw	r3,0(sp)
   2e020:	2400052e 	bgeu	r4,r16,2e038 <__udivdi3+0x23c>
   2e024:	2449883a 	add	r4,r4,r17
   2e028:	b0bfffc4 	addi	r2,r22,-1
   2e02c:	24400136 	bltu	r4,r17,2e034 <__udivdi3+0x238>
   2e030:	2400ca36 	bltu	r4,r16,2e35c <__udivdi3+0x560>
   2e034:	102d883a 	mov	r22,r2
   2e038:	2421c83a 	sub	r16,r4,r16
   2e03c:	a80b883a 	mov	r5,r21
   2e040:	8009883a 	mov	r4,r16
   2e044:	d8c00015 	stw	r3,0(sp)
   2e048:	00222c80 	call	222c8 <__umodsi3>
   2e04c:	1027883a 	mov	r19,r2
   2e050:	a80b883a 	mov	r5,r21
   2e054:	8009883a 	mov	r4,r16
   2e058:	00222640 	call	22264 <__udivsi3>
   2e05c:	9826943a 	slli	r19,r19,16
   2e060:	1529383a 	mul	r20,r2,r20
   2e064:	94bfffcc 	andi	r18,r18,65535
   2e068:	94e4b03a 	or	r18,r18,r19
   2e06c:	d8c00017 	ldw	r3,0(sp)
   2e070:	9500052e 	bgeu	r18,r20,2e088 <__udivdi3+0x28c>
   2e074:	8ca5883a 	add	r18,r17,r18
   2e078:	113fffc4 	addi	r4,r2,-1
   2e07c:	94409736 	bltu	r18,r17,2e2dc <__udivdi3+0x4e0>
   2e080:	9500962e 	bgeu	r18,r20,2e2dc <__udivdi3+0x4e0>
   2e084:	10bfff84 	addi	r2,r2,-2
   2e088:	b00c943a 	slli	r6,r22,16
   2e08c:	3084b03a 	or	r2,r6,r2
   2e090:	00000206 	br	2e09c <__udivdi3+0x2a0>
   2e094:	0007883a 	mov	r3,zero
   2e098:	0005883a 	mov	r2,zero
   2e09c:	dfc00a17 	ldw	ra,40(sp)
   2e0a0:	df000917 	ldw	fp,36(sp)
   2e0a4:	ddc00817 	ldw	r23,32(sp)
   2e0a8:	dd800717 	ldw	r22,28(sp)
   2e0ac:	dd400617 	ldw	r21,24(sp)
   2e0b0:	dd000517 	ldw	r20,20(sp)
   2e0b4:	dcc00417 	ldw	r19,16(sp)
   2e0b8:	dc800317 	ldw	r18,12(sp)
   2e0bc:	dc400217 	ldw	r17,8(sp)
   2e0c0:	dc000117 	ldw	r16,4(sp)
   2e0c4:	dec00b04 	addi	sp,sp,44
   2e0c8:	f800283a 	ret
   2e0cc:	00803fc4 	movi	r2,255
   2e0d0:	11c5803a 	cmpltu	r2,r2,r7
   2e0d4:	100490fa 	slli	r2,r2,3
   2e0d8:	003f9e06 	br	2df54 <__alt_data_end+0xfffedf54>
   2e0dc:	00803fc4 	movi	r2,255
   2e0e0:	1445803a 	cmpltu	r2,r2,r17
   2e0e4:	100490fa 	slli	r2,r2,3
   2e0e8:	003fb206 	br	2dfb4 <__alt_data_end+0xfffedfb4>
   2e0ec:	00804034 	movhi	r2,256
   2e0f0:	10bfffc4 	addi	r2,r2,-1
   2e0f4:	11808836 	bltu	r2,r6,2e318 <__udivdi3+0x51c>
   2e0f8:	00800404 	movi	r2,16
   2e0fc:	003f5606 	br	2de58 <__alt_data_end+0xfffede58>
   2e100:	30aed83a 	srl	r23,r6,r2
   2e104:	3d4e983a 	sll	r7,r7,r21
   2e108:	80acd83a 	srl	r22,r16,r2
   2e10c:	9884d83a 	srl	r2,r19,r2
   2e110:	3deeb03a 	or	r23,r7,r23
   2e114:	b824d43a 	srli	r18,r23,16
   2e118:	8560983a 	sll	r16,r16,r21
   2e11c:	b009883a 	mov	r4,r22
   2e120:	900b883a 	mov	r5,r18
   2e124:	3568983a 	sll	r20,r6,r21
   2e128:	1420b03a 	or	r16,r2,r16
   2e12c:	00222c80 	call	222c8 <__umodsi3>
   2e130:	b009883a 	mov	r4,r22
   2e134:	900b883a 	mov	r5,r18
   2e138:	1023883a 	mov	r17,r2
   2e13c:	00222640 	call	22264 <__udivsi3>
   2e140:	8808943a 	slli	r4,r17,16
   2e144:	bf3fffcc 	andi	fp,r23,65535
   2e148:	8006d43a 	srli	r3,r16,16
   2e14c:	e0a3383a 	mul	r17,fp,r2
   2e150:	100d883a 	mov	r6,r2
   2e154:	1906b03a 	or	r3,r3,r4
   2e158:	1c40042e 	bgeu	r3,r17,2e16c <__udivdi3+0x370>
   2e15c:	1dc7883a 	add	r3,r3,r23
   2e160:	10bfffc4 	addi	r2,r2,-1
   2e164:	1dc0752e 	bgeu	r3,r23,2e33c <__udivdi3+0x540>
   2e168:	100d883a 	mov	r6,r2
   2e16c:	1c63c83a 	sub	r17,r3,r17
   2e170:	900b883a 	mov	r5,r18
   2e174:	8809883a 	mov	r4,r17
   2e178:	d9800015 	stw	r6,0(sp)
   2e17c:	00222c80 	call	222c8 <__umodsi3>
   2e180:	102d883a 	mov	r22,r2
   2e184:	8809883a 	mov	r4,r17
   2e188:	900b883a 	mov	r5,r18
   2e18c:	00222640 	call	22264 <__udivsi3>
   2e190:	b02c943a 	slli	r22,r22,16
   2e194:	e089383a 	mul	r4,fp,r2
   2e198:	843fffcc 	andi	r16,r16,65535
   2e19c:	85a0b03a 	or	r16,r16,r22
   2e1a0:	d9800017 	ldw	r6,0(sp)
   2e1a4:	8100042e 	bgeu	r16,r4,2e1b8 <__udivdi3+0x3bc>
   2e1a8:	85e1883a 	add	r16,r16,r23
   2e1ac:	10ffffc4 	addi	r3,r2,-1
   2e1b0:	85c05e2e 	bgeu	r16,r23,2e32c <__udivdi3+0x530>
   2e1b4:	1805883a 	mov	r2,r3
   2e1b8:	300c943a 	slli	r6,r6,16
   2e1bc:	a17fffcc 	andi	r5,r20,65535
   2e1c0:	a028d43a 	srli	r20,r20,16
   2e1c4:	3084b03a 	or	r2,r6,r2
   2e1c8:	10ffffcc 	andi	r3,r2,65535
   2e1cc:	100cd43a 	srli	r6,r2,16
   2e1d0:	194f383a 	mul	r7,r3,r5
   2e1d4:	1d07383a 	mul	r3,r3,r20
   2e1d8:	314b383a 	mul	r5,r6,r5
   2e1dc:	3810d43a 	srli	r8,r7,16
   2e1e0:	8121c83a 	sub	r16,r16,r4
   2e1e4:	1947883a 	add	r3,r3,r5
   2e1e8:	40c7883a 	add	r3,r8,r3
   2e1ec:	350d383a 	mul	r6,r6,r20
   2e1f0:	1940022e 	bgeu	r3,r5,2e1fc <__udivdi3+0x400>
   2e1f4:	01000074 	movhi	r4,1
   2e1f8:	310d883a 	add	r6,r6,r4
   2e1fc:	1828d43a 	srli	r20,r3,16
   2e200:	a18d883a 	add	r6,r20,r6
   2e204:	81803e36 	bltu	r16,r6,2e300 <__udivdi3+0x504>
   2e208:	81803826 	beq	r16,r6,2e2ec <__udivdi3+0x4f0>
   2e20c:	0007883a 	mov	r3,zero
   2e210:	003fa206 	br	2e09c <__alt_data_end+0xfffee09c>
   2e214:	88e2983a 	sll	r17,r17,r3
   2e218:	80a8d83a 	srl	r20,r16,r2
   2e21c:	80e0983a 	sll	r16,r16,r3
   2e220:	882ad43a 	srli	r21,r17,16
   2e224:	9884d83a 	srl	r2,r19,r2
   2e228:	a009883a 	mov	r4,r20
   2e22c:	a80b883a 	mov	r5,r21
   2e230:	142eb03a 	or	r23,r2,r16
   2e234:	98e4983a 	sll	r18,r19,r3
   2e238:	00222c80 	call	222c8 <__umodsi3>
   2e23c:	a009883a 	mov	r4,r20
   2e240:	a80b883a 	mov	r5,r21
   2e244:	1021883a 	mov	r16,r2
   2e248:	00222640 	call	22264 <__udivsi3>
   2e24c:	1039883a 	mov	fp,r2
   2e250:	8d3fffcc 	andi	r20,r17,65535
   2e254:	8020943a 	slli	r16,r16,16
   2e258:	b804d43a 	srli	r2,r23,16
   2e25c:	a72d383a 	mul	r22,r20,fp
   2e260:	1404b03a 	or	r2,r2,r16
   2e264:	1580062e 	bgeu	r2,r22,2e280 <__udivdi3+0x484>
   2e268:	1445883a 	add	r2,r2,r17
   2e26c:	e0ffffc4 	addi	r3,fp,-1
   2e270:	14403836 	bltu	r2,r17,2e354 <__udivdi3+0x558>
   2e274:	1580372e 	bgeu	r2,r22,2e354 <__udivdi3+0x558>
   2e278:	e73fff84 	addi	fp,fp,-2
   2e27c:	1445883a 	add	r2,r2,r17
   2e280:	15adc83a 	sub	r22,r2,r22
   2e284:	a80b883a 	mov	r5,r21
   2e288:	b009883a 	mov	r4,r22
   2e28c:	00222c80 	call	222c8 <__umodsi3>
   2e290:	1027883a 	mov	r19,r2
   2e294:	b009883a 	mov	r4,r22
   2e298:	a80b883a 	mov	r5,r21
   2e29c:	00222640 	call	22264 <__udivsi3>
   2e2a0:	9826943a 	slli	r19,r19,16
   2e2a4:	a0a1383a 	mul	r16,r20,r2
   2e2a8:	b93fffcc 	andi	r4,r23,65535
   2e2ac:	24c8b03a 	or	r4,r4,r19
   2e2b0:	2400062e 	bgeu	r4,r16,2e2cc <__udivdi3+0x4d0>
   2e2b4:	2449883a 	add	r4,r4,r17
   2e2b8:	10ffffc4 	addi	r3,r2,-1
   2e2bc:	24402336 	bltu	r4,r17,2e34c <__udivdi3+0x550>
   2e2c0:	2400222e 	bgeu	r4,r16,2e34c <__udivdi3+0x550>
   2e2c4:	10bfff84 	addi	r2,r2,-2
   2e2c8:	2449883a 	add	r4,r4,r17
   2e2cc:	e038943a 	slli	fp,fp,16
   2e2d0:	2421c83a 	sub	r16,r4,r16
   2e2d4:	e086b03a 	or	r3,fp,r2
   2e2d8:	003f4306 	br	2dfe8 <__alt_data_end+0xfffedfe8>
   2e2dc:	2005883a 	mov	r2,r4
   2e2e0:	003f6906 	br	2e088 <__alt_data_end+0xfffee088>
   2e2e4:	1805883a 	mov	r2,r3
   2e2e8:	003f0f06 	br	2df28 <__alt_data_end+0xfffedf28>
   2e2ec:	1806943a 	slli	r3,r3,16
   2e2f0:	9d66983a 	sll	r19,r19,r21
   2e2f4:	39ffffcc 	andi	r7,r7,65535
   2e2f8:	19c7883a 	add	r3,r3,r7
   2e2fc:	98ffc32e 	bgeu	r19,r3,2e20c <__alt_data_end+0xfffee20c>
   2e300:	10bfffc4 	addi	r2,r2,-1
   2e304:	003fc106 	br	2e20c <__alt_data_end+0xfffee20c>
   2e308:	00800604 	movi	r2,24
   2e30c:	003f1106 	br	2df54 <__alt_data_end+0xfffedf54>
   2e310:	00800604 	movi	r2,24
   2e314:	003f2706 	br	2dfb4 <__alt_data_end+0xfffedfb4>
   2e318:	00800604 	movi	r2,24
   2e31c:	003ece06 	br	2de58 <__alt_data_end+0xfffede58>
   2e320:	0007883a 	mov	r3,zero
   2e324:	00800044 	movi	r2,1
   2e328:	003f5c06 	br	2e09c <__alt_data_end+0xfffee09c>
   2e32c:	813fa12e 	bgeu	r16,r4,2e1b4 <__alt_data_end+0xfffee1b4>
   2e330:	10bfff84 	addi	r2,r2,-2
   2e334:	85e1883a 	add	r16,r16,r23
   2e338:	003f9f06 	br	2e1b8 <__alt_data_end+0xfffee1b8>
   2e33c:	1c7f8a2e 	bgeu	r3,r17,2e168 <__alt_data_end+0xfffee168>
   2e340:	31bfff84 	addi	r6,r6,-2
   2e344:	1dc7883a 	add	r3,r3,r23
   2e348:	003f8806 	br	2e16c <__alt_data_end+0xfffee16c>
   2e34c:	1805883a 	mov	r2,r3
   2e350:	003fde06 	br	2e2cc <__alt_data_end+0xfffee2cc>
   2e354:	1839883a 	mov	fp,r3
   2e358:	003fc906 	br	2e280 <__alt_data_end+0xfffee280>
   2e35c:	b5bfff84 	addi	r22,r22,-2
   2e360:	2449883a 	add	r4,r4,r17
   2e364:	003f3406 	br	2e038 <__alt_data_end+0xfffee038>
   2e368:	b5bfff84 	addi	r22,r22,-2
   2e36c:	1445883a 	add	r2,r2,r17
   2e370:	003edb06 	br	2dee0 <__alt_data_end+0xfffedee0>

0002e374 <__umoddi3>:
   2e374:	defff404 	addi	sp,sp,-48
   2e378:	df000a15 	stw	fp,40(sp)
   2e37c:	dc400315 	stw	r17,12(sp)
   2e380:	dc000215 	stw	r16,8(sp)
   2e384:	dfc00b15 	stw	ra,44(sp)
   2e388:	ddc00915 	stw	r23,36(sp)
   2e38c:	dd800815 	stw	r22,32(sp)
   2e390:	dd400715 	stw	r21,28(sp)
   2e394:	dd000615 	stw	r20,24(sp)
   2e398:	dcc00515 	stw	r19,20(sp)
   2e39c:	dc800415 	stw	r18,16(sp)
   2e3a0:	2021883a 	mov	r16,r4
   2e3a4:	2823883a 	mov	r17,r5
   2e3a8:	2839883a 	mov	fp,r5
   2e3ac:	38003c1e 	bne	r7,zero,2e4a0 <__umoddi3+0x12c>
   2e3b0:	3027883a 	mov	r19,r6
   2e3b4:	2029883a 	mov	r20,r4
   2e3b8:	2980512e 	bgeu	r5,r6,2e500 <__umoddi3+0x18c>
   2e3bc:	00bfffd4 	movui	r2,65535
   2e3c0:	11809a36 	bltu	r2,r6,2e62c <__umoddi3+0x2b8>
   2e3c4:	01003fc4 	movi	r4,255
   2e3c8:	2189803a 	cmpltu	r4,r4,r6
   2e3cc:	200890fa 	slli	r4,r4,3
   2e3d0:	3104d83a 	srl	r2,r6,r4
   2e3d4:	00c000f4 	movhi	r3,3
   2e3d8:	18c4ac04 	addi	r3,r3,4784
   2e3dc:	1885883a 	add	r2,r3,r2
   2e3e0:	10c00003 	ldbu	r3,0(r2)
   2e3e4:	00800804 	movi	r2,32
   2e3e8:	1909883a 	add	r4,r3,r4
   2e3ec:	1125c83a 	sub	r18,r2,r4
   2e3f0:	90000526 	beq	r18,zero,2e408 <__umoddi3+0x94>
   2e3f4:	8ca2983a 	sll	r17,r17,r18
   2e3f8:	8108d83a 	srl	r4,r16,r4
   2e3fc:	34a6983a 	sll	r19,r6,r18
   2e400:	84a8983a 	sll	r20,r16,r18
   2e404:	2478b03a 	or	fp,r4,r17
   2e408:	982ed43a 	srli	r23,r19,16
   2e40c:	e009883a 	mov	r4,fp
   2e410:	9dbfffcc 	andi	r22,r19,65535
   2e414:	b80b883a 	mov	r5,r23
   2e418:	00222c80 	call	222c8 <__umodsi3>
   2e41c:	e009883a 	mov	r4,fp
   2e420:	b80b883a 	mov	r5,r23
   2e424:	102b883a 	mov	r21,r2
   2e428:	00222640 	call	22264 <__udivsi3>
   2e42c:	a806943a 	slli	r3,r21,16
   2e430:	a008d43a 	srli	r4,r20,16
   2e434:	b085383a 	mul	r2,r22,r2
   2e438:	20c8b03a 	or	r4,r4,r3
   2e43c:	2080032e 	bgeu	r4,r2,2e44c <__umoddi3+0xd8>
   2e440:	24c9883a 	add	r4,r4,r19
   2e444:	24c00136 	bltu	r4,r19,2e44c <__umoddi3+0xd8>
   2e448:	20811036 	bltu	r4,r2,2e88c <__umoddi3+0x518>
   2e44c:	20abc83a 	sub	r21,r4,r2
   2e450:	b80b883a 	mov	r5,r23
   2e454:	a809883a 	mov	r4,r21
   2e458:	00222c80 	call	222c8 <__umodsi3>
   2e45c:	1023883a 	mov	r17,r2
   2e460:	b80b883a 	mov	r5,r23
   2e464:	a809883a 	mov	r4,r21
   2e468:	00222640 	call	22264 <__udivsi3>
   2e46c:	8822943a 	slli	r17,r17,16
   2e470:	b085383a 	mul	r2,r22,r2
   2e474:	a0ffffcc 	andi	r3,r20,65535
   2e478:	1c46b03a 	or	r3,r3,r17
   2e47c:	1880042e 	bgeu	r3,r2,2e490 <__umoddi3+0x11c>
   2e480:	1cc7883a 	add	r3,r3,r19
   2e484:	1cc00236 	bltu	r3,r19,2e490 <__umoddi3+0x11c>
   2e488:	1880012e 	bgeu	r3,r2,2e490 <__umoddi3+0x11c>
   2e48c:	1cc7883a 	add	r3,r3,r19
   2e490:	1885c83a 	sub	r2,r3,r2
   2e494:	1484d83a 	srl	r2,r2,r18
   2e498:	0007883a 	mov	r3,zero
   2e49c:	00004f06 	br	2e5dc <__umoddi3+0x268>
   2e4a0:	29c04c36 	bltu	r5,r7,2e5d4 <__umoddi3+0x260>
   2e4a4:	00bfffd4 	movui	r2,65535
   2e4a8:	11c0582e 	bgeu	r2,r7,2e60c <__umoddi3+0x298>
   2e4ac:	00804034 	movhi	r2,256
   2e4b0:	10bfffc4 	addi	r2,r2,-1
   2e4b4:	11c0e736 	bltu	r2,r7,2e854 <__umoddi3+0x4e0>
   2e4b8:	01000404 	movi	r4,16
   2e4bc:	3904d83a 	srl	r2,r7,r4
   2e4c0:	00c000f4 	movhi	r3,3
   2e4c4:	18c4ac04 	addi	r3,r3,4784
   2e4c8:	1885883a 	add	r2,r3,r2
   2e4cc:	14c00003 	ldbu	r19,0(r2)
   2e4d0:	00c00804 	movi	r3,32
   2e4d4:	9927883a 	add	r19,r19,r4
   2e4d8:	1ce9c83a 	sub	r20,r3,r19
   2e4dc:	a000581e 	bne	r20,zero,2e640 <__umoddi3+0x2cc>
   2e4e0:	3c400136 	bltu	r7,r17,2e4e8 <__umoddi3+0x174>
   2e4e4:	8180eb36 	bltu	r16,r6,2e894 <__umoddi3+0x520>
   2e4e8:	8185c83a 	sub	r2,r16,r6
   2e4ec:	89e3c83a 	sub	r17,r17,r7
   2e4f0:	8089803a 	cmpltu	r4,r16,r2
   2e4f4:	8939c83a 	sub	fp,r17,r4
   2e4f8:	e007883a 	mov	r3,fp
   2e4fc:	00003706 	br	2e5dc <__umoddi3+0x268>
   2e500:	3000041e 	bne	r6,zero,2e514 <__umoddi3+0x1a0>
   2e504:	000b883a 	mov	r5,zero
   2e508:	01000044 	movi	r4,1
   2e50c:	00222640 	call	22264 <__udivsi3>
   2e510:	1027883a 	mov	r19,r2
   2e514:	00bfffd4 	movui	r2,65535
   2e518:	14c0402e 	bgeu	r2,r19,2e61c <__umoddi3+0x2a8>
   2e51c:	00804034 	movhi	r2,256
   2e520:	10bfffc4 	addi	r2,r2,-1
   2e524:	14c0cd36 	bltu	r2,r19,2e85c <__umoddi3+0x4e8>
   2e528:	00800404 	movi	r2,16
   2e52c:	9886d83a 	srl	r3,r19,r2
   2e530:	010000f4 	movhi	r4,3
   2e534:	2104ac04 	addi	r4,r4,4784
   2e538:	20c7883a 	add	r3,r4,r3
   2e53c:	18c00003 	ldbu	r3,0(r3)
   2e540:	1887883a 	add	r3,r3,r2
   2e544:	00800804 	movi	r2,32
   2e548:	10e5c83a 	sub	r18,r2,r3
   2e54c:	9000901e 	bne	r18,zero,2e790 <__umoddi3+0x41c>
   2e550:	982cd43a 	srli	r22,r19,16
   2e554:	8ce3c83a 	sub	r17,r17,r19
   2e558:	9d7fffcc 	andi	r21,r19,65535
   2e55c:	b00b883a 	mov	r5,r22
   2e560:	8809883a 	mov	r4,r17
   2e564:	00222c80 	call	222c8 <__umodsi3>
   2e568:	8809883a 	mov	r4,r17
   2e56c:	b00b883a 	mov	r5,r22
   2e570:	1021883a 	mov	r16,r2
   2e574:	00222640 	call	22264 <__udivsi3>
   2e578:	8006943a 	slli	r3,r16,16
   2e57c:	a008d43a 	srli	r4,r20,16
   2e580:	1545383a 	mul	r2,r2,r21
   2e584:	20c8b03a 	or	r4,r4,r3
   2e588:	2080042e 	bgeu	r4,r2,2e59c <__umoddi3+0x228>
   2e58c:	24c9883a 	add	r4,r4,r19
   2e590:	24c00236 	bltu	r4,r19,2e59c <__umoddi3+0x228>
   2e594:	2080012e 	bgeu	r4,r2,2e59c <__umoddi3+0x228>
   2e598:	24c9883a 	add	r4,r4,r19
   2e59c:	20a1c83a 	sub	r16,r4,r2
   2e5a0:	b00b883a 	mov	r5,r22
   2e5a4:	8009883a 	mov	r4,r16
   2e5a8:	00222c80 	call	222c8 <__umodsi3>
   2e5ac:	1023883a 	mov	r17,r2
   2e5b0:	b00b883a 	mov	r5,r22
   2e5b4:	8009883a 	mov	r4,r16
   2e5b8:	00222640 	call	22264 <__udivsi3>
   2e5bc:	8822943a 	slli	r17,r17,16
   2e5c0:	1545383a 	mul	r2,r2,r21
   2e5c4:	a53fffcc 	andi	r20,r20,65535
   2e5c8:	a446b03a 	or	r3,r20,r17
   2e5cc:	18bfb02e 	bgeu	r3,r2,2e490 <__alt_data_end+0xfffee490>
   2e5d0:	003fab06 	br	2e480 <__alt_data_end+0xfffee480>
   2e5d4:	2005883a 	mov	r2,r4
   2e5d8:	2807883a 	mov	r3,r5
   2e5dc:	dfc00b17 	ldw	ra,44(sp)
   2e5e0:	df000a17 	ldw	fp,40(sp)
   2e5e4:	ddc00917 	ldw	r23,36(sp)
   2e5e8:	dd800817 	ldw	r22,32(sp)
   2e5ec:	dd400717 	ldw	r21,28(sp)
   2e5f0:	dd000617 	ldw	r20,24(sp)
   2e5f4:	dcc00517 	ldw	r19,20(sp)
   2e5f8:	dc800417 	ldw	r18,16(sp)
   2e5fc:	dc400317 	ldw	r17,12(sp)
   2e600:	dc000217 	ldw	r16,8(sp)
   2e604:	dec00c04 	addi	sp,sp,48
   2e608:	f800283a 	ret
   2e60c:	04c03fc4 	movi	r19,255
   2e610:	99c9803a 	cmpltu	r4,r19,r7
   2e614:	200890fa 	slli	r4,r4,3
   2e618:	003fa806 	br	2e4bc <__alt_data_end+0xfffee4bc>
   2e61c:	00803fc4 	movi	r2,255
   2e620:	14c5803a 	cmpltu	r2,r2,r19
   2e624:	100490fa 	slli	r2,r2,3
   2e628:	003fc006 	br	2e52c <__alt_data_end+0xfffee52c>
   2e62c:	00804034 	movhi	r2,256
   2e630:	10bfffc4 	addi	r2,r2,-1
   2e634:	11808b36 	bltu	r2,r6,2e864 <__umoddi3+0x4f0>
   2e638:	01000404 	movi	r4,16
   2e63c:	003f6406 	br	2e3d0 <__alt_data_end+0xfffee3d0>
   2e640:	34c4d83a 	srl	r2,r6,r19
   2e644:	3d0e983a 	sll	r7,r7,r20
   2e648:	8cf8d83a 	srl	fp,r17,r19
   2e64c:	8d10983a 	sll	r8,r17,r20
   2e650:	38aab03a 	or	r21,r7,r2
   2e654:	a82cd43a 	srli	r22,r21,16
   2e658:	84e2d83a 	srl	r17,r16,r19
   2e65c:	e009883a 	mov	r4,fp
   2e660:	b00b883a 	mov	r5,r22
   2e664:	8a22b03a 	or	r17,r17,r8
   2e668:	3524983a 	sll	r18,r6,r20
   2e66c:	00222c80 	call	222c8 <__umodsi3>
   2e670:	e009883a 	mov	r4,fp
   2e674:	b00b883a 	mov	r5,r22
   2e678:	102f883a 	mov	r23,r2
   2e67c:	00222640 	call	22264 <__udivsi3>
   2e680:	100d883a 	mov	r6,r2
   2e684:	b808943a 	slli	r4,r23,16
   2e688:	aa3fffcc 	andi	r8,r21,65535
   2e68c:	8804d43a 	srli	r2,r17,16
   2e690:	41af383a 	mul	r23,r8,r6
   2e694:	8520983a 	sll	r16,r16,r20
   2e698:	1104b03a 	or	r2,r2,r4
   2e69c:	15c0042e 	bgeu	r2,r23,2e6b0 <__umoddi3+0x33c>
   2e6a0:	1545883a 	add	r2,r2,r21
   2e6a4:	30ffffc4 	addi	r3,r6,-1
   2e6a8:	1540742e 	bgeu	r2,r21,2e87c <__umoddi3+0x508>
   2e6ac:	180d883a 	mov	r6,r3
   2e6b0:	15efc83a 	sub	r23,r2,r23
   2e6b4:	b00b883a 	mov	r5,r22
   2e6b8:	b809883a 	mov	r4,r23
   2e6bc:	d9800115 	stw	r6,4(sp)
   2e6c0:	da000015 	stw	r8,0(sp)
   2e6c4:	00222c80 	call	222c8 <__umodsi3>
   2e6c8:	b00b883a 	mov	r5,r22
   2e6cc:	b809883a 	mov	r4,r23
   2e6d0:	1039883a 	mov	fp,r2
   2e6d4:	00222640 	call	22264 <__udivsi3>
   2e6d8:	da000017 	ldw	r8,0(sp)
   2e6dc:	e038943a 	slli	fp,fp,16
   2e6e0:	100b883a 	mov	r5,r2
   2e6e4:	4089383a 	mul	r4,r8,r2
   2e6e8:	8a3fffcc 	andi	r8,r17,65535
   2e6ec:	4710b03a 	or	r8,r8,fp
   2e6f0:	d9800117 	ldw	r6,4(sp)
   2e6f4:	4100042e 	bgeu	r8,r4,2e708 <__umoddi3+0x394>
   2e6f8:	4551883a 	add	r8,r8,r21
   2e6fc:	10bfffc4 	addi	r2,r2,-1
   2e700:	45405a2e 	bgeu	r8,r21,2e86c <__umoddi3+0x4f8>
   2e704:	100b883a 	mov	r5,r2
   2e708:	300c943a 	slli	r6,r6,16
   2e70c:	91ffffcc 	andi	r7,r18,65535
   2e710:	9004d43a 	srli	r2,r18,16
   2e714:	314cb03a 	or	r6,r6,r5
   2e718:	317fffcc 	andi	r5,r6,65535
   2e71c:	300cd43a 	srli	r6,r6,16
   2e720:	29d3383a 	mul	r9,r5,r7
   2e724:	288b383a 	mul	r5,r5,r2
   2e728:	31cf383a 	mul	r7,r6,r7
   2e72c:	4806d43a 	srli	r3,r9,16
   2e730:	4111c83a 	sub	r8,r8,r4
   2e734:	29cb883a 	add	r5,r5,r7
   2e738:	194b883a 	add	r5,r3,r5
   2e73c:	3085383a 	mul	r2,r6,r2
   2e740:	29c0022e 	bgeu	r5,r7,2e74c <__umoddi3+0x3d8>
   2e744:	00c00074 	movhi	r3,1
   2e748:	10c5883a 	add	r2,r2,r3
   2e74c:	2808d43a 	srli	r4,r5,16
   2e750:	280a943a 	slli	r5,r5,16
   2e754:	4a7fffcc 	andi	r9,r9,65535
   2e758:	2085883a 	add	r2,r4,r2
   2e75c:	2a4b883a 	add	r5,r5,r9
   2e760:	40803636 	bltu	r8,r2,2e83c <__umoddi3+0x4c8>
   2e764:	40804d26 	beq	r8,r2,2e89c <__umoddi3+0x528>
   2e768:	4089c83a 	sub	r4,r8,r2
   2e76c:	280f883a 	mov	r7,r5
   2e770:	81cfc83a 	sub	r7,r16,r7
   2e774:	81c7803a 	cmpltu	r3,r16,r7
   2e778:	20c7c83a 	sub	r3,r4,r3
   2e77c:	1cc4983a 	sll	r2,r3,r19
   2e780:	3d0ed83a 	srl	r7,r7,r20
   2e784:	1d06d83a 	srl	r3,r3,r20
   2e788:	11c4b03a 	or	r2,r2,r7
   2e78c:	003f9306 	br	2e5dc <__alt_data_end+0xfffee5dc>
   2e790:	9ca6983a 	sll	r19,r19,r18
   2e794:	88e8d83a 	srl	r20,r17,r3
   2e798:	80c4d83a 	srl	r2,r16,r3
   2e79c:	982cd43a 	srli	r22,r19,16
   2e7a0:	8ca2983a 	sll	r17,r17,r18
   2e7a4:	a009883a 	mov	r4,r20
   2e7a8:	b00b883a 	mov	r5,r22
   2e7ac:	1478b03a 	or	fp,r2,r17
   2e7b0:	00222c80 	call	222c8 <__umodsi3>
   2e7b4:	a009883a 	mov	r4,r20
   2e7b8:	b00b883a 	mov	r5,r22
   2e7bc:	1023883a 	mov	r17,r2
   2e7c0:	00222640 	call	22264 <__udivsi3>
   2e7c4:	9d7fffcc 	andi	r21,r19,65535
   2e7c8:	880a943a 	slli	r5,r17,16
   2e7cc:	e008d43a 	srli	r4,fp,16
   2e7d0:	a885383a 	mul	r2,r21,r2
   2e7d4:	84a8983a 	sll	r20,r16,r18
   2e7d8:	2148b03a 	or	r4,r4,r5
   2e7dc:	2080042e 	bgeu	r4,r2,2e7f0 <__umoddi3+0x47c>
   2e7e0:	24c9883a 	add	r4,r4,r19
   2e7e4:	24c00236 	bltu	r4,r19,2e7f0 <__umoddi3+0x47c>
   2e7e8:	2080012e 	bgeu	r4,r2,2e7f0 <__umoddi3+0x47c>
   2e7ec:	24c9883a 	add	r4,r4,r19
   2e7f0:	20a3c83a 	sub	r17,r4,r2
   2e7f4:	b00b883a 	mov	r5,r22
   2e7f8:	8809883a 	mov	r4,r17
   2e7fc:	00222c80 	call	222c8 <__umodsi3>
   2e800:	102f883a 	mov	r23,r2
   2e804:	8809883a 	mov	r4,r17
   2e808:	b00b883a 	mov	r5,r22
   2e80c:	00222640 	call	22264 <__udivsi3>
   2e810:	b82e943a 	slli	r23,r23,16
   2e814:	a885383a 	mul	r2,r21,r2
   2e818:	e13fffcc 	andi	r4,fp,65535
   2e81c:	25c8b03a 	or	r4,r4,r23
   2e820:	2080042e 	bgeu	r4,r2,2e834 <__umoddi3+0x4c0>
   2e824:	24c9883a 	add	r4,r4,r19
   2e828:	24c00236 	bltu	r4,r19,2e834 <__umoddi3+0x4c0>
   2e82c:	2080012e 	bgeu	r4,r2,2e834 <__umoddi3+0x4c0>
   2e830:	24c9883a 	add	r4,r4,r19
   2e834:	20a3c83a 	sub	r17,r4,r2
   2e838:	003f4806 	br	2e55c <__alt_data_end+0xfffee55c>
   2e83c:	2c8fc83a 	sub	r7,r5,r18
   2e840:	1545c83a 	sub	r2,r2,r21
   2e844:	29cb803a 	cmpltu	r5,r5,r7
   2e848:	1145c83a 	sub	r2,r2,r5
   2e84c:	4089c83a 	sub	r4,r8,r2
   2e850:	003fc706 	br	2e770 <__alt_data_end+0xfffee770>
   2e854:	01000604 	movi	r4,24
   2e858:	003f1806 	br	2e4bc <__alt_data_end+0xfffee4bc>
   2e85c:	00800604 	movi	r2,24
   2e860:	003f3206 	br	2e52c <__alt_data_end+0xfffee52c>
   2e864:	01000604 	movi	r4,24
   2e868:	003ed906 	br	2e3d0 <__alt_data_end+0xfffee3d0>
   2e86c:	413fa52e 	bgeu	r8,r4,2e704 <__alt_data_end+0xfffee704>
   2e870:	297fff84 	addi	r5,r5,-2
   2e874:	4551883a 	add	r8,r8,r21
   2e878:	003fa306 	br	2e708 <__alt_data_end+0xfffee708>
   2e87c:	15ff8b2e 	bgeu	r2,r23,2e6ac <__alt_data_end+0xfffee6ac>
   2e880:	31bfff84 	addi	r6,r6,-2
   2e884:	1545883a 	add	r2,r2,r21
   2e888:	003f8906 	br	2e6b0 <__alt_data_end+0xfffee6b0>
   2e88c:	24c9883a 	add	r4,r4,r19
   2e890:	003eee06 	br	2e44c <__alt_data_end+0xfffee44c>
   2e894:	8005883a 	mov	r2,r16
   2e898:	003f1706 	br	2e4f8 <__alt_data_end+0xfffee4f8>
   2e89c:	817fe736 	bltu	r16,r5,2e83c <__alt_data_end+0xfffee83c>
   2e8a0:	280f883a 	mov	r7,r5
   2e8a4:	0009883a 	mov	r4,zero
   2e8a8:	003fb106 	br	2e770 <__alt_data_end+0xfffee770>

0002e8ac <__floatunsidf>:
   2e8ac:	defffe04 	addi	sp,sp,-8
   2e8b0:	dc000015 	stw	r16,0(sp)
   2e8b4:	dfc00115 	stw	ra,4(sp)
   2e8b8:	2021883a 	mov	r16,r4
   2e8bc:	20002226 	beq	r4,zero,2e948 <__floatunsidf+0x9c>
   2e8c0:	002487c0 	call	2487c <__clzsi2>
   2e8c4:	01010784 	movi	r4,1054
   2e8c8:	2089c83a 	sub	r4,r4,r2
   2e8cc:	01810cc4 	movi	r6,1075
   2e8d0:	310dc83a 	sub	r6,r6,r4
   2e8d4:	00c007c4 	movi	r3,31
   2e8d8:	1980120e 	bge	r3,r6,2e924 <__floatunsidf+0x78>
   2e8dc:	00c104c4 	movi	r3,1043
   2e8e0:	1907c83a 	sub	r3,r3,r4
   2e8e4:	80ca983a 	sll	r5,r16,r3
   2e8e8:	00800434 	movhi	r2,16
   2e8ec:	10bfffc4 	addi	r2,r2,-1
   2e8f0:	2101ffcc 	andi	r4,r4,2047
   2e8f4:	0021883a 	mov	r16,zero
   2e8f8:	288a703a 	and	r5,r5,r2
   2e8fc:	2008953a 	slli	r4,r4,20
   2e900:	00c00434 	movhi	r3,16
   2e904:	18ffffc4 	addi	r3,r3,-1
   2e908:	28c6703a 	and	r3,r5,r3
   2e90c:	8005883a 	mov	r2,r16
   2e910:	1906b03a 	or	r3,r3,r4
   2e914:	dfc00117 	ldw	ra,4(sp)
   2e918:	dc000017 	ldw	r16,0(sp)
   2e91c:	dec00204 	addi	sp,sp,8
   2e920:	f800283a 	ret
   2e924:	00c002c4 	movi	r3,11
   2e928:	188bc83a 	sub	r5,r3,r2
   2e92c:	814ad83a 	srl	r5,r16,r5
   2e930:	00c00434 	movhi	r3,16
   2e934:	18ffffc4 	addi	r3,r3,-1
   2e938:	81a0983a 	sll	r16,r16,r6
   2e93c:	2101ffcc 	andi	r4,r4,2047
   2e940:	28ca703a 	and	r5,r5,r3
   2e944:	003fed06 	br	2e8fc <__alt_data_end+0xfffee8fc>
   2e948:	0009883a 	mov	r4,zero
   2e94c:	000b883a 	mov	r5,zero
   2e950:	003fea06 	br	2e8fc <__alt_data_end+0xfffee8fc>

0002e954 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e954:	defffe04 	addi	sp,sp,-8
   2e958:	dfc00115 	stw	ra,4(sp)
   2e95c:	df000015 	stw	fp,0(sp)
   2e960:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e964:	d0a00c17 	ldw	r2,-32720(gp)
   2e968:	10000326 	beq	r2,zero,2e978 <alt_get_errno+0x24>
   2e96c:	d0a00c17 	ldw	r2,-32720(gp)
   2e970:	103ee83a 	callr	r2
   2e974:	00000106 	br	2e97c <alt_get_errno+0x28>
   2e978:	d0a6d304 	addi	r2,gp,-25780
}
   2e97c:	e037883a 	mov	sp,fp
   2e980:	dfc00117 	ldw	ra,4(sp)
   2e984:	df000017 	ldw	fp,0(sp)
   2e988:	dec00204 	addi	sp,sp,8
   2e98c:	f800283a 	ret

0002e990 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2e990:	defffb04 	addi	sp,sp,-20
   2e994:	dfc00415 	stw	ra,16(sp)
   2e998:	df000315 	stw	fp,12(sp)
   2e99c:	df000304 	addi	fp,sp,12
   2e9a0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2e9a4:	e0bfff17 	ldw	r2,-4(fp)
   2e9a8:	10000616 	blt	r2,zero,2e9c4 <close+0x34>
   2e9ac:	e0bfff17 	ldw	r2,-4(fp)
   2e9b0:	10c00324 	muli	r3,r2,12
   2e9b4:	008000f4 	movhi	r2,3
   2e9b8:	10879e04 	addi	r2,r2,7800
   2e9bc:	1885883a 	add	r2,r3,r2
   2e9c0:	00000106 	br	2e9c8 <close+0x38>
   2e9c4:	0005883a 	mov	r2,zero
   2e9c8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2e9cc:	e0bffd17 	ldw	r2,-12(fp)
   2e9d0:	10001926 	beq	r2,zero,2ea38 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2e9d4:	e0bffd17 	ldw	r2,-12(fp)
   2e9d8:	10800017 	ldw	r2,0(r2)
   2e9dc:	10800417 	ldw	r2,16(r2)
   2e9e0:	10000626 	beq	r2,zero,2e9fc <close+0x6c>
   2e9e4:	e0bffd17 	ldw	r2,-12(fp)
   2e9e8:	10800017 	ldw	r2,0(r2)
   2e9ec:	10800417 	ldw	r2,16(r2)
   2e9f0:	e13ffd17 	ldw	r4,-12(fp)
   2e9f4:	103ee83a 	callr	r2
   2e9f8:	00000106 	br	2ea00 <close+0x70>
   2e9fc:	0005883a 	mov	r2,zero
   2ea00:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2ea04:	e13fff17 	ldw	r4,-4(fp)
   2ea08:	002f0500 	call	2f050 <alt_release_fd>
    if (rval < 0)
   2ea0c:	e0bffe17 	ldw	r2,-8(fp)
   2ea10:	1000070e 	bge	r2,zero,2ea30 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2ea14:	002e9540 	call	2e954 <alt_get_errno>
   2ea18:	1007883a 	mov	r3,r2
   2ea1c:	e0bffe17 	ldw	r2,-8(fp)
   2ea20:	0085c83a 	sub	r2,zero,r2
   2ea24:	18800015 	stw	r2,0(r3)
      return -1;
   2ea28:	00bfffc4 	movi	r2,-1
   2ea2c:	00000706 	br	2ea4c <close+0xbc>
    }
    return 0;
   2ea30:	0005883a 	mov	r2,zero
   2ea34:	00000506 	br	2ea4c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2ea38:	002e9540 	call	2e954 <alt_get_errno>
   2ea3c:	1007883a 	mov	r3,r2
   2ea40:	00801444 	movi	r2,81
   2ea44:	18800015 	stw	r2,0(r3)
    return -1;
   2ea48:	00bfffc4 	movi	r2,-1
  }
}
   2ea4c:	e037883a 	mov	sp,fp
   2ea50:	dfc00117 	ldw	ra,4(sp)
   2ea54:	df000017 	ldw	fp,0(sp)
   2ea58:	dec00204 	addi	sp,sp,8
   2ea5c:	f800283a 	ret

0002ea60 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2ea60:	defffc04 	addi	sp,sp,-16
   2ea64:	df000315 	stw	fp,12(sp)
   2ea68:	df000304 	addi	fp,sp,12
   2ea6c:	e13ffd15 	stw	r4,-12(fp)
   2ea70:	e17ffe15 	stw	r5,-8(fp)
   2ea74:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2ea78:	e0bfff17 	ldw	r2,-4(fp)
}
   2ea7c:	e037883a 	mov	sp,fp
   2ea80:	df000017 	ldw	fp,0(sp)
   2ea84:	dec00104 	addi	sp,sp,4
   2ea88:	f800283a 	ret

0002ea8c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ea8c:	defffe04 	addi	sp,sp,-8
   2ea90:	dfc00115 	stw	ra,4(sp)
   2ea94:	df000015 	stw	fp,0(sp)
   2ea98:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ea9c:	d0a00c17 	ldw	r2,-32720(gp)
   2eaa0:	10000326 	beq	r2,zero,2eab0 <alt_get_errno+0x24>
   2eaa4:	d0a00c17 	ldw	r2,-32720(gp)
   2eaa8:	103ee83a 	callr	r2
   2eaac:	00000106 	br	2eab4 <alt_get_errno+0x28>
   2eab0:	d0a6d304 	addi	r2,gp,-25780
}
   2eab4:	e037883a 	mov	sp,fp
   2eab8:	dfc00117 	ldw	ra,4(sp)
   2eabc:	df000017 	ldw	fp,0(sp)
   2eac0:	dec00204 	addi	sp,sp,8
   2eac4:	f800283a 	ret

0002eac8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2eac8:	defffb04 	addi	sp,sp,-20
   2eacc:	dfc00415 	stw	ra,16(sp)
   2ead0:	df000315 	stw	fp,12(sp)
   2ead4:	df000304 	addi	fp,sp,12
   2ead8:	e13ffe15 	stw	r4,-8(fp)
   2eadc:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2eae0:	e0bffe17 	ldw	r2,-8(fp)
   2eae4:	10000616 	blt	r2,zero,2eb00 <fstat+0x38>
   2eae8:	e0bffe17 	ldw	r2,-8(fp)
   2eaec:	10c00324 	muli	r3,r2,12
   2eaf0:	008000f4 	movhi	r2,3
   2eaf4:	10879e04 	addi	r2,r2,7800
   2eaf8:	1885883a 	add	r2,r3,r2
   2eafc:	00000106 	br	2eb04 <fstat+0x3c>
   2eb00:	0005883a 	mov	r2,zero
   2eb04:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2eb08:	e0bffd17 	ldw	r2,-12(fp)
   2eb0c:	10001026 	beq	r2,zero,2eb50 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2eb10:	e0bffd17 	ldw	r2,-12(fp)
   2eb14:	10800017 	ldw	r2,0(r2)
   2eb18:	10800817 	ldw	r2,32(r2)
   2eb1c:	10000726 	beq	r2,zero,2eb3c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2eb20:	e0bffd17 	ldw	r2,-12(fp)
   2eb24:	10800017 	ldw	r2,0(r2)
   2eb28:	10800817 	ldw	r2,32(r2)
   2eb2c:	e17fff17 	ldw	r5,-4(fp)
   2eb30:	e13ffd17 	ldw	r4,-12(fp)
   2eb34:	103ee83a 	callr	r2
   2eb38:	00000a06 	br	2eb64 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2eb3c:	e0bfff17 	ldw	r2,-4(fp)
   2eb40:	00c80004 	movi	r3,8192
   2eb44:	10c00115 	stw	r3,4(r2)
      return 0;
   2eb48:	0005883a 	mov	r2,zero
   2eb4c:	00000506 	br	2eb64 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2eb50:	002ea8c0 	call	2ea8c <alt_get_errno>
   2eb54:	1007883a 	mov	r3,r2
   2eb58:	00801444 	movi	r2,81
   2eb5c:	18800015 	stw	r2,0(r3)
    return -1;
   2eb60:	00bfffc4 	movi	r2,-1
  }
}
   2eb64:	e037883a 	mov	sp,fp
   2eb68:	dfc00117 	ldw	ra,4(sp)
   2eb6c:	df000017 	ldw	fp,0(sp)
   2eb70:	dec00204 	addi	sp,sp,8
   2eb74:	f800283a 	ret

0002eb78 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2eb78:	defffe04 	addi	sp,sp,-8
   2eb7c:	dfc00115 	stw	ra,4(sp)
   2eb80:	df000015 	stw	fp,0(sp)
   2eb84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2eb88:	d0a00c17 	ldw	r2,-32720(gp)
   2eb8c:	10000326 	beq	r2,zero,2eb9c <alt_get_errno+0x24>
   2eb90:	d0a00c17 	ldw	r2,-32720(gp)
   2eb94:	103ee83a 	callr	r2
   2eb98:	00000106 	br	2eba0 <alt_get_errno+0x28>
   2eb9c:	d0a6d304 	addi	r2,gp,-25780
}
   2eba0:	e037883a 	mov	sp,fp
   2eba4:	dfc00117 	ldw	ra,4(sp)
   2eba8:	df000017 	ldw	fp,0(sp)
   2ebac:	dec00204 	addi	sp,sp,8
   2ebb0:	f800283a 	ret

0002ebb4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2ebb4:	deffed04 	addi	sp,sp,-76
   2ebb8:	dfc01215 	stw	ra,72(sp)
   2ebbc:	df001115 	stw	fp,68(sp)
   2ebc0:	df001104 	addi	fp,sp,68
   2ebc4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2ebc8:	e0bfff17 	ldw	r2,-4(fp)
   2ebcc:	10000616 	blt	r2,zero,2ebe8 <isatty+0x34>
   2ebd0:	e0bfff17 	ldw	r2,-4(fp)
   2ebd4:	10c00324 	muli	r3,r2,12
   2ebd8:	008000f4 	movhi	r2,3
   2ebdc:	10879e04 	addi	r2,r2,7800
   2ebe0:	1885883a 	add	r2,r3,r2
   2ebe4:	00000106 	br	2ebec <isatty+0x38>
   2ebe8:	0005883a 	mov	r2,zero
   2ebec:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2ebf0:	e0bfef17 	ldw	r2,-68(fp)
   2ebf4:	10000e26 	beq	r2,zero,2ec30 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2ebf8:	e0bfef17 	ldw	r2,-68(fp)
   2ebfc:	10800017 	ldw	r2,0(r2)
   2ec00:	10800817 	ldw	r2,32(r2)
   2ec04:	1000021e 	bne	r2,zero,2ec10 <isatty+0x5c>
    {
      return 1;
   2ec08:	00800044 	movi	r2,1
   2ec0c:	00000d06 	br	2ec44 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2ec10:	e0bff004 	addi	r2,fp,-64
   2ec14:	100b883a 	mov	r5,r2
   2ec18:	e13fff17 	ldw	r4,-4(fp)
   2ec1c:	002eac80 	call	2eac8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2ec20:	e0bff117 	ldw	r2,-60(fp)
   2ec24:	10880020 	cmpeqi	r2,r2,8192
   2ec28:	10803fcc 	andi	r2,r2,255
   2ec2c:	00000506 	br	2ec44 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2ec30:	002eb780 	call	2eb78 <alt_get_errno>
   2ec34:	1007883a 	mov	r3,r2
   2ec38:	00801444 	movi	r2,81
   2ec3c:	18800015 	stw	r2,0(r3)
    return 0;
   2ec40:	0005883a 	mov	r2,zero
  }
}
   2ec44:	e037883a 	mov	sp,fp
   2ec48:	dfc00117 	ldw	ra,4(sp)
   2ec4c:	df000017 	ldw	fp,0(sp)
   2ec50:	dec00204 	addi	sp,sp,8
   2ec54:	f800283a 	ret

0002ec58 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2ec58:	defffc04 	addi	sp,sp,-16
   2ec5c:	df000315 	stw	fp,12(sp)
   2ec60:	df000304 	addi	fp,sp,12
   2ec64:	e13ffd15 	stw	r4,-12(fp)
   2ec68:	e17ffe15 	stw	r5,-8(fp)
   2ec6c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2ec70:	e0fffe17 	ldw	r3,-8(fp)
   2ec74:	e0bffd17 	ldw	r2,-12(fp)
   2ec78:	18800c26 	beq	r3,r2,2ecac <alt_load_section+0x54>
  {
    while( to != end )
   2ec7c:	00000806 	br	2eca0 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2ec80:	e0bffe17 	ldw	r2,-8(fp)
   2ec84:	10c00104 	addi	r3,r2,4
   2ec88:	e0fffe15 	stw	r3,-8(fp)
   2ec8c:	e0fffd17 	ldw	r3,-12(fp)
   2ec90:	19000104 	addi	r4,r3,4
   2ec94:	e13ffd15 	stw	r4,-12(fp)
   2ec98:	18c00017 	ldw	r3,0(r3)
   2ec9c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2eca0:	e0fffe17 	ldw	r3,-8(fp)
   2eca4:	e0bfff17 	ldw	r2,-4(fp)
   2eca8:	18bff51e 	bne	r3,r2,2ec80 <__alt_data_end+0xfffeec80>
    {
      *to++ = *from++;
    }
  }
}
   2ecac:	0001883a 	nop
   2ecb0:	e037883a 	mov	sp,fp
   2ecb4:	df000017 	ldw	fp,0(sp)
   2ecb8:	dec00104 	addi	sp,sp,4
   2ecbc:	f800283a 	ret

0002ecc0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2ecc0:	defffe04 	addi	sp,sp,-8
   2ecc4:	dfc00115 	stw	ra,4(sp)
   2ecc8:	df000015 	stw	fp,0(sp)
   2eccc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2ecd0:	018000f4 	movhi	r6,3
   2ecd4:	318c2704 	addi	r6,r6,12444
   2ecd8:	014000f4 	movhi	r5,3
   2ecdc:	29456b04 	addi	r5,r5,5548
   2ece0:	010000f4 	movhi	r4,3
   2ece4:	210c2704 	addi	r4,r4,12444
   2ece8:	002ec580 	call	2ec58 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2ecec:	018000b4 	movhi	r6,2
   2ecf0:	31809104 	addi	r6,r6,580
   2ecf4:	014000b4 	movhi	r5,2
   2ecf8:	29400804 	addi	r5,r5,32
   2ecfc:	010000b4 	movhi	r4,2
   2ed00:	21000804 	addi	r4,r4,32
   2ed04:	002ec580 	call	2ec58 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2ed08:	018000f4 	movhi	r6,3
   2ed0c:	31856b04 	addi	r6,r6,5548
   2ed10:	014000f4 	movhi	r5,3
   2ed14:	2944a304 	addi	r5,r5,4748
   2ed18:	010000f4 	movhi	r4,3
   2ed1c:	2104a304 	addi	r4,r4,4748
   2ed20:	002ec580 	call	2ec58 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2ed24:	00301780 	call	30178 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2ed28:	00303600 	call	30360 <alt_icache_flush_all>
}
   2ed2c:	0001883a 	nop
   2ed30:	e037883a 	mov	sp,fp
   2ed34:	dfc00117 	ldw	ra,4(sp)
   2ed38:	df000017 	ldw	fp,0(sp)
   2ed3c:	dec00204 	addi	sp,sp,8
   2ed40:	f800283a 	ret

0002ed44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ed44:	defffe04 	addi	sp,sp,-8
   2ed48:	dfc00115 	stw	ra,4(sp)
   2ed4c:	df000015 	stw	fp,0(sp)
   2ed50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ed54:	d0a00c17 	ldw	r2,-32720(gp)
   2ed58:	10000326 	beq	r2,zero,2ed68 <alt_get_errno+0x24>
   2ed5c:	d0a00c17 	ldw	r2,-32720(gp)
   2ed60:	103ee83a 	callr	r2
   2ed64:	00000106 	br	2ed6c <alt_get_errno+0x28>
   2ed68:	d0a6d304 	addi	r2,gp,-25780
}
   2ed6c:	e037883a 	mov	sp,fp
   2ed70:	dfc00117 	ldw	ra,4(sp)
   2ed74:	df000017 	ldw	fp,0(sp)
   2ed78:	dec00204 	addi	sp,sp,8
   2ed7c:	f800283a 	ret

0002ed80 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2ed80:	defff904 	addi	sp,sp,-28
   2ed84:	dfc00615 	stw	ra,24(sp)
   2ed88:	df000515 	stw	fp,20(sp)
   2ed8c:	df000504 	addi	fp,sp,20
   2ed90:	e13ffd15 	stw	r4,-12(fp)
   2ed94:	e17ffe15 	stw	r5,-8(fp)
   2ed98:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2ed9c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2eda0:	e0bffd17 	ldw	r2,-12(fp)
   2eda4:	10000616 	blt	r2,zero,2edc0 <lseek+0x40>
   2eda8:	e0bffd17 	ldw	r2,-12(fp)
   2edac:	10c00324 	muli	r3,r2,12
   2edb0:	008000f4 	movhi	r2,3
   2edb4:	10879e04 	addi	r2,r2,7800
   2edb8:	1885883a 	add	r2,r3,r2
   2edbc:	00000106 	br	2edc4 <lseek+0x44>
   2edc0:	0005883a 	mov	r2,zero
   2edc4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2edc8:	e0bffc17 	ldw	r2,-16(fp)
   2edcc:	10001026 	beq	r2,zero,2ee10 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2edd0:	e0bffc17 	ldw	r2,-16(fp)
   2edd4:	10800017 	ldw	r2,0(r2)
   2edd8:	10800717 	ldw	r2,28(r2)
   2eddc:	10000926 	beq	r2,zero,2ee04 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2ede0:	e0bffc17 	ldw	r2,-16(fp)
   2ede4:	10800017 	ldw	r2,0(r2)
   2ede8:	10800717 	ldw	r2,28(r2)
   2edec:	e1bfff17 	ldw	r6,-4(fp)
   2edf0:	e17ffe17 	ldw	r5,-8(fp)
   2edf4:	e13ffc17 	ldw	r4,-16(fp)
   2edf8:	103ee83a 	callr	r2
   2edfc:	e0bffb15 	stw	r2,-20(fp)
   2ee00:	00000506 	br	2ee18 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2ee04:	00bfde84 	movi	r2,-134
   2ee08:	e0bffb15 	stw	r2,-20(fp)
   2ee0c:	00000206 	br	2ee18 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2ee10:	00bfebc4 	movi	r2,-81
   2ee14:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2ee18:	e0bffb17 	ldw	r2,-20(fp)
   2ee1c:	1000070e 	bge	r2,zero,2ee3c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2ee20:	002ed440 	call	2ed44 <alt_get_errno>
   2ee24:	1007883a 	mov	r3,r2
   2ee28:	e0bffb17 	ldw	r2,-20(fp)
   2ee2c:	0085c83a 	sub	r2,zero,r2
   2ee30:	18800015 	stw	r2,0(r3)
    rc = -1;
   2ee34:	00bfffc4 	movi	r2,-1
   2ee38:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2ee3c:	e0bffb17 	ldw	r2,-20(fp)
}
   2ee40:	e037883a 	mov	sp,fp
   2ee44:	dfc00117 	ldw	ra,4(sp)
   2ee48:	df000017 	ldw	fp,0(sp)
   2ee4c:	dec00204 	addi	sp,sp,8
   2ee50:	f800283a 	ret

0002ee54 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2ee54:	defffd04 	addi	sp,sp,-12
   2ee58:	dfc00215 	stw	ra,8(sp)
   2ee5c:	df000115 	stw	fp,4(sp)
   2ee60:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2ee64:	0009883a 	mov	r4,zero
   2ee68:	002f2fc0 	call	2f2fc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2ee6c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2ee70:	002f3340 	call	2f334 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2ee74:	018000f4 	movhi	r6,3
   2ee78:	31856104 	addi	r6,r6,5508
   2ee7c:	014000f4 	movhi	r5,3
   2ee80:	29456104 	addi	r5,r5,5508
   2ee84:	010000f4 	movhi	r4,3
   2ee88:	21056104 	addi	r4,r4,5508
   2ee8c:	00306f80 	call	306f8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2ee90:	00302a00 	call	302a0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2ee94:	010000f4 	movhi	r4,3
   2ee98:	2100c004 	addi	r4,r4,768
   2ee9c:	0030ef80 	call	30ef8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2eea0:	d0a6d417 	ldw	r2,-25776(gp)
   2eea4:	d0e6d517 	ldw	r3,-25772(gp)
   2eea8:	d126d617 	ldw	r4,-25768(gp)
   2eeac:	200d883a 	mov	r6,r4
   2eeb0:	180b883a 	mov	r5,r3
   2eeb4:	1009883a 	mov	r4,r2
   2eeb8:	00202900 	call	20290 <main>
   2eebc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2eec0:	01000044 	movi	r4,1
   2eec4:	002e9900 	call	2e990 <close>
  exit (result);
   2eec8:	e13fff17 	ldw	r4,-4(fp)
   2eecc:	0030f0c0 	call	30f0c <exit>

0002eed0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2eed0:	defffe04 	addi	sp,sp,-8
   2eed4:	df000115 	stw	fp,4(sp)
   2eed8:	df000104 	addi	fp,sp,4
   2eedc:	e13fff15 	stw	r4,-4(fp)
}
   2eee0:	0001883a 	nop
   2eee4:	e037883a 	mov	sp,fp
   2eee8:	df000017 	ldw	fp,0(sp)
   2eeec:	dec00104 	addi	sp,sp,4
   2eef0:	f800283a 	ret

0002eef4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2eef4:	defffe04 	addi	sp,sp,-8
   2eef8:	df000115 	stw	fp,4(sp)
   2eefc:	df000104 	addi	fp,sp,4
   2ef00:	e13fff15 	stw	r4,-4(fp)
}
   2ef04:	0001883a 	nop
   2ef08:	e037883a 	mov	sp,fp
   2ef0c:	df000017 	ldw	fp,0(sp)
   2ef10:	dec00104 	addi	sp,sp,4
   2ef14:	f800283a 	ret

0002ef18 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ef18:	defffe04 	addi	sp,sp,-8
   2ef1c:	dfc00115 	stw	ra,4(sp)
   2ef20:	df000015 	stw	fp,0(sp)
   2ef24:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ef28:	d0a00c17 	ldw	r2,-32720(gp)
   2ef2c:	10000326 	beq	r2,zero,2ef3c <alt_get_errno+0x24>
   2ef30:	d0a00c17 	ldw	r2,-32720(gp)
   2ef34:	103ee83a 	callr	r2
   2ef38:	00000106 	br	2ef40 <alt_get_errno+0x28>
   2ef3c:	d0a6d304 	addi	r2,gp,-25780
}
   2ef40:	e037883a 	mov	sp,fp
   2ef44:	dfc00117 	ldw	ra,4(sp)
   2ef48:	df000017 	ldw	fp,0(sp)
   2ef4c:	dec00204 	addi	sp,sp,8
   2ef50:	f800283a 	ret

0002ef54 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2ef54:	defff904 	addi	sp,sp,-28
   2ef58:	dfc00615 	stw	ra,24(sp)
   2ef5c:	df000515 	stw	fp,20(sp)
   2ef60:	df000504 	addi	fp,sp,20
   2ef64:	e13ffd15 	stw	r4,-12(fp)
   2ef68:	e17ffe15 	stw	r5,-8(fp)
   2ef6c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2ef70:	e0bffd17 	ldw	r2,-12(fp)
   2ef74:	10000616 	blt	r2,zero,2ef90 <read+0x3c>
   2ef78:	e0bffd17 	ldw	r2,-12(fp)
   2ef7c:	10c00324 	muli	r3,r2,12
   2ef80:	008000f4 	movhi	r2,3
   2ef84:	10879e04 	addi	r2,r2,7800
   2ef88:	1885883a 	add	r2,r3,r2
   2ef8c:	00000106 	br	2ef94 <read+0x40>
   2ef90:	0005883a 	mov	r2,zero
   2ef94:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2ef98:	e0bffb17 	ldw	r2,-20(fp)
   2ef9c:	10002226 	beq	r2,zero,2f028 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2efa0:	e0bffb17 	ldw	r2,-20(fp)
   2efa4:	10800217 	ldw	r2,8(r2)
   2efa8:	108000cc 	andi	r2,r2,3
   2efac:	10800060 	cmpeqi	r2,r2,1
   2efb0:	1000181e 	bne	r2,zero,2f014 <read+0xc0>
        (fd->dev->read))
   2efb4:	e0bffb17 	ldw	r2,-20(fp)
   2efb8:	10800017 	ldw	r2,0(r2)
   2efbc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2efc0:	10001426 	beq	r2,zero,2f014 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2efc4:	e0bffb17 	ldw	r2,-20(fp)
   2efc8:	10800017 	ldw	r2,0(r2)
   2efcc:	10800517 	ldw	r2,20(r2)
   2efd0:	e0ffff17 	ldw	r3,-4(fp)
   2efd4:	180d883a 	mov	r6,r3
   2efd8:	e17ffe17 	ldw	r5,-8(fp)
   2efdc:	e13ffb17 	ldw	r4,-20(fp)
   2efe0:	103ee83a 	callr	r2
   2efe4:	e0bffc15 	stw	r2,-16(fp)
   2efe8:	e0bffc17 	ldw	r2,-16(fp)
   2efec:	1000070e 	bge	r2,zero,2f00c <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2eff0:	002ef180 	call	2ef18 <alt_get_errno>
   2eff4:	1007883a 	mov	r3,r2
   2eff8:	e0bffc17 	ldw	r2,-16(fp)
   2effc:	0085c83a 	sub	r2,zero,r2
   2f000:	18800015 	stw	r2,0(r3)
          return -1;
   2f004:	00bfffc4 	movi	r2,-1
   2f008:	00000c06 	br	2f03c <read+0xe8>
        }
        return rval;
   2f00c:	e0bffc17 	ldw	r2,-16(fp)
   2f010:	00000a06 	br	2f03c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2f014:	002ef180 	call	2ef18 <alt_get_errno>
   2f018:	1007883a 	mov	r3,r2
   2f01c:	00800344 	movi	r2,13
   2f020:	18800015 	stw	r2,0(r3)
   2f024:	00000406 	br	2f038 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2f028:	002ef180 	call	2ef18 <alt_get_errno>
   2f02c:	1007883a 	mov	r3,r2
   2f030:	00801444 	movi	r2,81
   2f034:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2f038:	00bfffc4 	movi	r2,-1
}
   2f03c:	e037883a 	mov	sp,fp
   2f040:	dfc00117 	ldw	ra,4(sp)
   2f044:	df000017 	ldw	fp,0(sp)
   2f048:	dec00204 	addi	sp,sp,8
   2f04c:	f800283a 	ret

0002f050 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2f050:	defffe04 	addi	sp,sp,-8
   2f054:	df000115 	stw	fp,4(sp)
   2f058:	df000104 	addi	fp,sp,4
   2f05c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2f060:	e0bfff17 	ldw	r2,-4(fp)
   2f064:	108000d0 	cmplti	r2,r2,3
   2f068:	10000d1e 	bne	r2,zero,2f0a0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2f06c:	008000f4 	movhi	r2,3
   2f070:	10879e04 	addi	r2,r2,7800
   2f074:	e0ffff17 	ldw	r3,-4(fp)
   2f078:	18c00324 	muli	r3,r3,12
   2f07c:	10c5883a 	add	r2,r2,r3
   2f080:	10800204 	addi	r2,r2,8
   2f084:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2f088:	008000f4 	movhi	r2,3
   2f08c:	10879e04 	addi	r2,r2,7800
   2f090:	e0ffff17 	ldw	r3,-4(fp)
   2f094:	18c00324 	muli	r3,r3,12
   2f098:	10c5883a 	add	r2,r2,r3
   2f09c:	10000015 	stw	zero,0(r2)
  }
}
   2f0a0:	0001883a 	nop
   2f0a4:	e037883a 	mov	sp,fp
   2f0a8:	df000017 	ldw	fp,0(sp)
   2f0ac:	dec00104 	addi	sp,sp,4
   2f0b0:	f800283a 	ret

0002f0b4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2f0b4:	defff904 	addi	sp,sp,-28
   2f0b8:	df000615 	stw	fp,24(sp)
   2f0bc:	df000604 	addi	fp,sp,24
   2f0c0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f0c4:	0005303a 	rdctl	r2,status
   2f0c8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f0cc:	e0fffe17 	ldw	r3,-8(fp)
   2f0d0:	00bfff84 	movi	r2,-2
   2f0d4:	1884703a 	and	r2,r3,r2
   2f0d8:	1001703a 	wrctl	status,r2
  
  return context;
   2f0dc:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2f0e0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2f0e4:	d0a00d17 	ldw	r2,-32716(gp)
   2f0e8:	10c000c4 	addi	r3,r2,3
   2f0ec:	00bfff04 	movi	r2,-4
   2f0f0:	1884703a 	and	r2,r3,r2
   2f0f4:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2f0f8:	d0e00d17 	ldw	r3,-32716(gp)
   2f0fc:	e0bfff17 	ldw	r2,-4(fp)
   2f100:	1887883a 	add	r3,r3,r2
   2f104:	00800134 	movhi	r2,4
   2f108:	10800004 	addi	r2,r2,0
   2f10c:	10c0062e 	bgeu	r2,r3,2f128 <sbrk+0x74>
   2f110:	e0bffb17 	ldw	r2,-20(fp)
   2f114:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f118:	e0bffa17 	ldw	r2,-24(fp)
   2f11c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2f120:	00bfffc4 	movi	r2,-1
   2f124:	00000b06 	br	2f154 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2f128:	d0a00d17 	ldw	r2,-32716(gp)
   2f12c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2f130:	d0e00d17 	ldw	r3,-32716(gp)
   2f134:	e0bfff17 	ldw	r2,-4(fp)
   2f138:	1885883a 	add	r2,r3,r2
   2f13c:	d0a00d15 	stw	r2,-32716(gp)
   2f140:	e0bffb17 	ldw	r2,-20(fp)
   2f144:	e0bffc15 	stw	r2,-16(fp)
   2f148:	e0bffc17 	ldw	r2,-16(fp)
   2f14c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2f150:	e0bffd17 	ldw	r2,-12(fp)
} 
   2f154:	e037883a 	mov	sp,fp
   2f158:	df000017 	ldw	fp,0(sp)
   2f15c:	dec00104 	addi	sp,sp,4
   2f160:	f800283a 	ret

0002f164 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   2f164:	defffd04 	addi	sp,sp,-12
   2f168:	dfc00215 	stw	ra,8(sp)
   2f16c:	df000115 	stw	fp,4(sp)
   2f170:	df000104 	addi	fp,sp,4
   2f174:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   2f178:	e13fff17 	ldw	r4,-4(fp)
   2f17c:	00300200 	call	30020 <alt_busy_sleep>
}
   2f180:	e037883a 	mov	sp,fp
   2f184:	dfc00117 	ldw	ra,4(sp)
   2f188:	df000017 	ldw	fp,0(sp)
   2f18c:	dec00204 	addi	sp,sp,8
   2f190:	f800283a 	ret

0002f194 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2f194:	defffe04 	addi	sp,sp,-8
   2f198:	dfc00115 	stw	ra,4(sp)
   2f19c:	df000015 	stw	fp,0(sp)
   2f1a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f1a4:	d0a00c17 	ldw	r2,-32720(gp)
   2f1a8:	10000326 	beq	r2,zero,2f1b8 <alt_get_errno+0x24>
   2f1ac:	d0a00c17 	ldw	r2,-32720(gp)
   2f1b0:	103ee83a 	callr	r2
   2f1b4:	00000106 	br	2f1bc <alt_get_errno+0x28>
   2f1b8:	d0a6d304 	addi	r2,gp,-25780
}
   2f1bc:	e037883a 	mov	sp,fp
   2f1c0:	dfc00117 	ldw	ra,4(sp)
   2f1c4:	df000017 	ldw	fp,0(sp)
   2f1c8:	dec00204 	addi	sp,sp,8
   2f1cc:	f800283a 	ret

0002f1d0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2f1d0:	defff904 	addi	sp,sp,-28
   2f1d4:	dfc00615 	stw	ra,24(sp)
   2f1d8:	df000515 	stw	fp,20(sp)
   2f1dc:	df000504 	addi	fp,sp,20
   2f1e0:	e13ffd15 	stw	r4,-12(fp)
   2f1e4:	e17ffe15 	stw	r5,-8(fp)
   2f1e8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2f1ec:	e0bffd17 	ldw	r2,-12(fp)
   2f1f0:	10000616 	blt	r2,zero,2f20c <write+0x3c>
   2f1f4:	e0bffd17 	ldw	r2,-12(fp)
   2f1f8:	10c00324 	muli	r3,r2,12
   2f1fc:	008000f4 	movhi	r2,3
   2f200:	10879e04 	addi	r2,r2,7800
   2f204:	1885883a 	add	r2,r3,r2
   2f208:	00000106 	br	2f210 <write+0x40>
   2f20c:	0005883a 	mov	r2,zero
   2f210:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2f214:	e0bffb17 	ldw	r2,-20(fp)
   2f218:	10002126 	beq	r2,zero,2f2a0 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2f21c:	e0bffb17 	ldw	r2,-20(fp)
   2f220:	10800217 	ldw	r2,8(r2)
   2f224:	108000cc 	andi	r2,r2,3
   2f228:	10001826 	beq	r2,zero,2f28c <write+0xbc>
   2f22c:	e0bffb17 	ldw	r2,-20(fp)
   2f230:	10800017 	ldw	r2,0(r2)
   2f234:	10800617 	ldw	r2,24(r2)
   2f238:	10001426 	beq	r2,zero,2f28c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2f23c:	e0bffb17 	ldw	r2,-20(fp)
   2f240:	10800017 	ldw	r2,0(r2)
   2f244:	10800617 	ldw	r2,24(r2)
   2f248:	e0ffff17 	ldw	r3,-4(fp)
   2f24c:	180d883a 	mov	r6,r3
   2f250:	e17ffe17 	ldw	r5,-8(fp)
   2f254:	e13ffb17 	ldw	r4,-20(fp)
   2f258:	103ee83a 	callr	r2
   2f25c:	e0bffc15 	stw	r2,-16(fp)
   2f260:	e0bffc17 	ldw	r2,-16(fp)
   2f264:	1000070e 	bge	r2,zero,2f284 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2f268:	002f1940 	call	2f194 <alt_get_errno>
   2f26c:	1007883a 	mov	r3,r2
   2f270:	e0bffc17 	ldw	r2,-16(fp)
   2f274:	0085c83a 	sub	r2,zero,r2
   2f278:	18800015 	stw	r2,0(r3)
        return -1;
   2f27c:	00bfffc4 	movi	r2,-1
   2f280:	00000c06 	br	2f2b4 <write+0xe4>
      }
      return rval;
   2f284:	e0bffc17 	ldw	r2,-16(fp)
   2f288:	00000a06 	br	2f2b4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2f28c:	002f1940 	call	2f194 <alt_get_errno>
   2f290:	1007883a 	mov	r3,r2
   2f294:	00800344 	movi	r2,13
   2f298:	18800015 	stw	r2,0(r3)
   2f29c:	00000406 	br	2f2b0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2f2a0:	002f1940 	call	2f194 <alt_get_errno>
   2f2a4:	1007883a 	mov	r3,r2
   2f2a8:	00801444 	movi	r2,81
   2f2ac:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2f2b0:	00bfffc4 	movi	r2,-1
}
   2f2b4:	e037883a 	mov	sp,fp
   2f2b8:	dfc00117 	ldw	ra,4(sp)
   2f2bc:	df000017 	ldw	fp,0(sp)
   2f2c0:	dec00204 	addi	sp,sp,8
   2f2c4:	f800283a 	ret

0002f2c8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2f2c8:	defffd04 	addi	sp,sp,-12
   2f2cc:	dfc00215 	stw	ra,8(sp)
   2f2d0:	df000115 	stw	fp,4(sp)
   2f2d4:	df000104 	addi	fp,sp,4
   2f2d8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2f2dc:	d1600904 	addi	r5,gp,-32732
   2f2e0:	e13fff17 	ldw	r4,-4(fp)
   2f2e4:	00301fc0 	call	301fc <alt_dev_llist_insert>
}
   2f2e8:	e037883a 	mov	sp,fp
   2f2ec:	dfc00117 	ldw	ra,4(sp)
   2f2f0:	df000017 	ldw	fp,0(sp)
   2f2f4:	dec00204 	addi	sp,sp,8
   2f2f8:	f800283a 	ret

0002f2fc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2f2fc:	defffd04 	addi	sp,sp,-12
   2f300:	dfc00215 	stw	ra,8(sp)
   2f304:	df000115 	stw	fp,4(sp)
   2f308:	df000104 	addi	fp,sp,4
   2f30c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   2f310:	0030b6c0 	call	30b6c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2f314:	00800044 	movi	r2,1
   2f318:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2f31c:	0001883a 	nop
   2f320:	e037883a 	mov	sp,fp
   2f324:	dfc00117 	ldw	ra,4(sp)
   2f328:	df000017 	ldw	fp,0(sp)
   2f32c:	dec00204 	addi	sp,sp,8
   2f330:	f800283a 	ret

0002f334 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2f334:	defffe04 	addi	sp,sp,-8
   2f338:	dfc00115 	stw	ra,4(sp)
   2f33c:	df000015 	stw	fp,0(sp)
   2f340:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
   2f344:	01c0fa04 	movi	r7,1000
   2f348:	01800044 	movi	r6,1
   2f34c:	000b883a 	mov	r5,zero
   2f350:	01000134 	movhi	r4,4
   2f354:	21040004 	addi	r4,r4,4096
   2f358:	002fe780 	call	2fe78 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2f35c:	01800404 	movi	r6,16
   2f360:	000b883a 	mov	r5,zero
   2f364:	010000f4 	movhi	r4,3
   2f368:	21080804 	addi	r4,r4,8224
   2f36c:	002f4fc0 	call	2f4fc <altera_avalon_jtag_uart_init>
   2f370:	010000f4 	movhi	r4,3
   2f374:	2107fe04 	addi	r4,r4,8184
   2f378:	002f2c80 	call	2f2c8 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
   2f37c:	0001883a 	nop
}
   2f380:	0001883a 	nop
   2f384:	e037883a 	mov	sp,fp
   2f388:	dfc00117 	ldw	ra,4(sp)
   2f38c:	df000017 	ldw	fp,0(sp)
   2f390:	dec00204 	addi	sp,sp,8
   2f394:	f800283a 	ret

0002f398 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2f398:	defffa04 	addi	sp,sp,-24
   2f39c:	dfc00515 	stw	ra,20(sp)
   2f3a0:	df000415 	stw	fp,16(sp)
   2f3a4:	df000404 	addi	fp,sp,16
   2f3a8:	e13ffd15 	stw	r4,-12(fp)
   2f3ac:	e17ffe15 	stw	r5,-8(fp)
   2f3b0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2f3b4:	e0bffd17 	ldw	r2,-12(fp)
   2f3b8:	10800017 	ldw	r2,0(r2)
   2f3bc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2f3c0:	e0bffc17 	ldw	r2,-16(fp)
   2f3c4:	10c00a04 	addi	r3,r2,40
   2f3c8:	e0bffd17 	ldw	r2,-12(fp)
   2f3cc:	10800217 	ldw	r2,8(r2)
   2f3d0:	100f883a 	mov	r7,r2
   2f3d4:	e1bfff17 	ldw	r6,-4(fp)
   2f3d8:	e17ffe17 	ldw	r5,-8(fp)
   2f3dc:	1809883a 	mov	r4,r3
   2f3e0:	002f9c00 	call	2f9c0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2f3e4:	e037883a 	mov	sp,fp
   2f3e8:	dfc00117 	ldw	ra,4(sp)
   2f3ec:	df000017 	ldw	fp,0(sp)
   2f3f0:	dec00204 	addi	sp,sp,8
   2f3f4:	f800283a 	ret

0002f3f8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2f3f8:	defffa04 	addi	sp,sp,-24
   2f3fc:	dfc00515 	stw	ra,20(sp)
   2f400:	df000415 	stw	fp,16(sp)
   2f404:	df000404 	addi	fp,sp,16
   2f408:	e13ffd15 	stw	r4,-12(fp)
   2f40c:	e17ffe15 	stw	r5,-8(fp)
   2f410:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2f414:	e0bffd17 	ldw	r2,-12(fp)
   2f418:	10800017 	ldw	r2,0(r2)
   2f41c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2f420:	e0bffc17 	ldw	r2,-16(fp)
   2f424:	10c00a04 	addi	r3,r2,40
   2f428:	e0bffd17 	ldw	r2,-12(fp)
   2f42c:	10800217 	ldw	r2,8(r2)
   2f430:	100f883a 	mov	r7,r2
   2f434:	e1bfff17 	ldw	r6,-4(fp)
   2f438:	e17ffe17 	ldw	r5,-8(fp)
   2f43c:	1809883a 	mov	r4,r3
   2f440:	002fbdc0 	call	2fbdc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2f444:	e037883a 	mov	sp,fp
   2f448:	dfc00117 	ldw	ra,4(sp)
   2f44c:	df000017 	ldw	fp,0(sp)
   2f450:	dec00204 	addi	sp,sp,8
   2f454:	f800283a 	ret

0002f458 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2f458:	defffc04 	addi	sp,sp,-16
   2f45c:	dfc00315 	stw	ra,12(sp)
   2f460:	df000215 	stw	fp,8(sp)
   2f464:	df000204 	addi	fp,sp,8
   2f468:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2f46c:	e0bfff17 	ldw	r2,-4(fp)
   2f470:	10800017 	ldw	r2,0(r2)
   2f474:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2f478:	e0bffe17 	ldw	r2,-8(fp)
   2f47c:	10c00a04 	addi	r3,r2,40
   2f480:	e0bfff17 	ldw	r2,-4(fp)
   2f484:	10800217 	ldw	r2,8(r2)
   2f488:	100b883a 	mov	r5,r2
   2f48c:	1809883a 	mov	r4,r3
   2f490:	002f8680 	call	2f868 <altera_avalon_jtag_uart_close>
}
   2f494:	e037883a 	mov	sp,fp
   2f498:	dfc00117 	ldw	ra,4(sp)
   2f49c:	df000017 	ldw	fp,0(sp)
   2f4a0:	dec00204 	addi	sp,sp,8
   2f4a4:	f800283a 	ret

0002f4a8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2f4a8:	defffa04 	addi	sp,sp,-24
   2f4ac:	dfc00515 	stw	ra,20(sp)
   2f4b0:	df000415 	stw	fp,16(sp)
   2f4b4:	df000404 	addi	fp,sp,16
   2f4b8:	e13ffd15 	stw	r4,-12(fp)
   2f4bc:	e17ffe15 	stw	r5,-8(fp)
   2f4c0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2f4c4:	e0bffd17 	ldw	r2,-12(fp)
   2f4c8:	10800017 	ldw	r2,0(r2)
   2f4cc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2f4d0:	e0bffc17 	ldw	r2,-16(fp)
   2f4d4:	10800a04 	addi	r2,r2,40
   2f4d8:	e1bfff17 	ldw	r6,-4(fp)
   2f4dc:	e17ffe17 	ldw	r5,-8(fp)
   2f4e0:	1009883a 	mov	r4,r2
   2f4e4:	002f8d00 	call	2f8d0 <altera_avalon_jtag_uart_ioctl>
}
   2f4e8:	e037883a 	mov	sp,fp
   2f4ec:	dfc00117 	ldw	ra,4(sp)
   2f4f0:	df000017 	ldw	fp,0(sp)
   2f4f4:	dec00204 	addi	sp,sp,8
   2f4f8:	f800283a 	ret

0002f4fc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2f4fc:	defffa04 	addi	sp,sp,-24
   2f500:	dfc00515 	stw	ra,20(sp)
   2f504:	df000415 	stw	fp,16(sp)
   2f508:	df000404 	addi	fp,sp,16
   2f50c:	e13ffd15 	stw	r4,-12(fp)
   2f510:	e17ffe15 	stw	r5,-8(fp)
   2f514:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2f518:	e0bffd17 	ldw	r2,-12(fp)
   2f51c:	00c00044 	movi	r3,1
   2f520:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2f524:	e0bffd17 	ldw	r2,-12(fp)
   2f528:	10800017 	ldw	r2,0(r2)
   2f52c:	10800104 	addi	r2,r2,4
   2f530:	1007883a 	mov	r3,r2
   2f534:	e0bffd17 	ldw	r2,-12(fp)
   2f538:	10800817 	ldw	r2,32(r2)
   2f53c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2f540:	e0bffe17 	ldw	r2,-8(fp)
   2f544:	e0ffff17 	ldw	r3,-4(fp)
   2f548:	d8000015 	stw	zero,0(sp)
   2f54c:	e1fffd17 	ldw	r7,-12(fp)
   2f550:	018000f4 	movhi	r6,3
   2f554:	31bd6f04 	addi	r6,r6,-2628
   2f558:	180b883a 	mov	r5,r3
   2f55c:	1009883a 	mov	r4,r2
   2f560:	00303940 	call	30394 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2f564:	e0bffd17 	ldw	r2,-12(fp)
   2f568:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2f56c:	e0bffd17 	ldw	r2,-12(fp)
   2f570:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2f574:	d0e6d817 	ldw	r3,-25760(gp)
   2f578:	e1fffd17 	ldw	r7,-12(fp)
   2f57c:	018000f4 	movhi	r6,3
   2f580:	31bdf204 	addi	r6,r6,-2104
   2f584:	180b883a 	mov	r5,r3
   2f588:	1009883a 	mov	r4,r2
   2f58c:	002fef40 	call	2fef4 <alt_alarm_start>
   2f590:	1000040e 	bge	r2,zero,2f5a4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2f594:	e0fffd17 	ldw	r3,-12(fp)
   2f598:	00a00034 	movhi	r2,32768
   2f59c:	10bfffc4 	addi	r2,r2,-1
   2f5a0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2f5a4:	0001883a 	nop
   2f5a8:	e037883a 	mov	sp,fp
   2f5ac:	dfc00117 	ldw	ra,4(sp)
   2f5b0:	df000017 	ldw	fp,0(sp)
   2f5b4:	dec00204 	addi	sp,sp,8
   2f5b8:	f800283a 	ret

0002f5bc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2f5bc:	defff804 	addi	sp,sp,-32
   2f5c0:	df000715 	stw	fp,28(sp)
   2f5c4:	df000704 	addi	fp,sp,28
   2f5c8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2f5cc:	e0bfff17 	ldw	r2,-4(fp)
   2f5d0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   2f5d4:	e0bffb17 	ldw	r2,-20(fp)
   2f5d8:	10800017 	ldw	r2,0(r2)
   2f5dc:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2f5e0:	e0bffc17 	ldw	r2,-16(fp)
   2f5e4:	10800104 	addi	r2,r2,4
   2f5e8:	10800037 	ldwio	r2,0(r2)
   2f5ec:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2f5f0:	e0bffd17 	ldw	r2,-12(fp)
   2f5f4:	1080c00c 	andi	r2,r2,768
   2f5f8:	10006d26 	beq	r2,zero,2f7b0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2f5fc:	e0bffd17 	ldw	r2,-12(fp)
   2f600:	1080400c 	andi	r2,r2,256
   2f604:	10003526 	beq	r2,zero,2f6dc <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2f608:	00800074 	movhi	r2,1
   2f60c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2f610:	e0bffb17 	ldw	r2,-20(fp)
   2f614:	10800a17 	ldw	r2,40(r2)
   2f618:	10800044 	addi	r2,r2,1
   2f61c:	1081ffcc 	andi	r2,r2,2047
   2f620:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   2f624:	e0bffb17 	ldw	r2,-20(fp)
   2f628:	10c00b17 	ldw	r3,44(r2)
   2f62c:	e0bffe17 	ldw	r2,-8(fp)
   2f630:	18801526 	beq	r3,r2,2f688 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2f634:	e0bffc17 	ldw	r2,-16(fp)
   2f638:	10800037 	ldwio	r2,0(r2)
   2f63c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2f640:	e0bff917 	ldw	r2,-28(fp)
   2f644:	10a0000c 	andi	r2,r2,32768
   2f648:	10001126 	beq	r2,zero,2f690 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2f64c:	e0bffb17 	ldw	r2,-20(fp)
   2f650:	10800a17 	ldw	r2,40(r2)
   2f654:	e0fff917 	ldw	r3,-28(fp)
   2f658:	1809883a 	mov	r4,r3
   2f65c:	e0fffb17 	ldw	r3,-20(fp)
   2f660:	1885883a 	add	r2,r3,r2
   2f664:	10800e04 	addi	r2,r2,56
   2f668:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2f66c:	e0bffb17 	ldw	r2,-20(fp)
   2f670:	10800a17 	ldw	r2,40(r2)
   2f674:	10800044 	addi	r2,r2,1
   2f678:	10c1ffcc 	andi	r3,r2,2047
   2f67c:	e0bffb17 	ldw	r2,-20(fp)
   2f680:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2f684:	003fe206 	br	2f610 <__alt_data_end+0xfffef610>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2f688:	0001883a 	nop
   2f68c:	00000106 	br	2f694 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2f690:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2f694:	e0bff917 	ldw	r2,-28(fp)
   2f698:	10bfffec 	andhi	r2,r2,65535
   2f69c:	10000f26 	beq	r2,zero,2f6dc <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2f6a0:	e0bffb17 	ldw	r2,-20(fp)
   2f6a4:	10c00817 	ldw	r3,32(r2)
   2f6a8:	00bfff84 	movi	r2,-2
   2f6ac:	1886703a 	and	r3,r3,r2
   2f6b0:	e0bffb17 	ldw	r2,-20(fp)
   2f6b4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2f6b8:	e0bffc17 	ldw	r2,-16(fp)
   2f6bc:	10800104 	addi	r2,r2,4
   2f6c0:	1007883a 	mov	r3,r2
   2f6c4:	e0bffb17 	ldw	r2,-20(fp)
   2f6c8:	10800817 	ldw	r2,32(r2)
   2f6cc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2f6d0:	e0bffc17 	ldw	r2,-16(fp)
   2f6d4:	10800104 	addi	r2,r2,4
   2f6d8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2f6dc:	e0bffd17 	ldw	r2,-12(fp)
   2f6e0:	1080800c 	andi	r2,r2,512
   2f6e4:	103fbe26 	beq	r2,zero,2f5e0 <__alt_data_end+0xfffef5e0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2f6e8:	e0bffd17 	ldw	r2,-12(fp)
   2f6ec:	1004d43a 	srli	r2,r2,16
   2f6f0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2f6f4:	00001406 	br	2f748 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2f6f8:	e0bffc17 	ldw	r2,-16(fp)
   2f6fc:	e0fffb17 	ldw	r3,-20(fp)
   2f700:	18c00d17 	ldw	r3,52(r3)
   2f704:	e13ffb17 	ldw	r4,-20(fp)
   2f708:	20c7883a 	add	r3,r4,r3
   2f70c:	18c20e04 	addi	r3,r3,2104
   2f710:	18c00003 	ldbu	r3,0(r3)
   2f714:	18c03fcc 	andi	r3,r3,255
   2f718:	18c0201c 	xori	r3,r3,128
   2f71c:	18ffe004 	addi	r3,r3,-128
   2f720:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2f724:	e0bffb17 	ldw	r2,-20(fp)
   2f728:	10800d17 	ldw	r2,52(r2)
   2f72c:	10800044 	addi	r2,r2,1
   2f730:	10c1ffcc 	andi	r3,r2,2047
   2f734:	e0bffb17 	ldw	r2,-20(fp)
   2f738:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2f73c:	e0bffa17 	ldw	r2,-24(fp)
   2f740:	10bfffc4 	addi	r2,r2,-1
   2f744:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2f748:	e0bffa17 	ldw	r2,-24(fp)
   2f74c:	10000526 	beq	r2,zero,2f764 <altera_avalon_jtag_uart_irq+0x1a8>
   2f750:	e0bffb17 	ldw	r2,-20(fp)
   2f754:	10c00d17 	ldw	r3,52(r2)
   2f758:	e0bffb17 	ldw	r2,-20(fp)
   2f75c:	10800c17 	ldw	r2,48(r2)
   2f760:	18bfe51e 	bne	r3,r2,2f6f8 <__alt_data_end+0xfffef6f8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2f764:	e0bffa17 	ldw	r2,-24(fp)
   2f768:	103f9d26 	beq	r2,zero,2f5e0 <__alt_data_end+0xfffef5e0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2f76c:	e0bffb17 	ldw	r2,-20(fp)
   2f770:	10c00817 	ldw	r3,32(r2)
   2f774:	00bfff44 	movi	r2,-3
   2f778:	1886703a 	and	r3,r3,r2
   2f77c:	e0bffb17 	ldw	r2,-20(fp)
   2f780:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2f784:	e0bffb17 	ldw	r2,-20(fp)
   2f788:	10800017 	ldw	r2,0(r2)
   2f78c:	10800104 	addi	r2,r2,4
   2f790:	1007883a 	mov	r3,r2
   2f794:	e0bffb17 	ldw	r2,-20(fp)
   2f798:	10800817 	ldw	r2,32(r2)
   2f79c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2f7a0:	e0bffc17 	ldw	r2,-16(fp)
   2f7a4:	10800104 	addi	r2,r2,4
   2f7a8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2f7ac:	003f8c06 	br	2f5e0 <__alt_data_end+0xfffef5e0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2f7b0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2f7b4:	0001883a 	nop
   2f7b8:	e037883a 	mov	sp,fp
   2f7bc:	df000017 	ldw	fp,0(sp)
   2f7c0:	dec00104 	addi	sp,sp,4
   2f7c4:	f800283a 	ret

0002f7c8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2f7c8:	defff804 	addi	sp,sp,-32
   2f7cc:	df000715 	stw	fp,28(sp)
   2f7d0:	df000704 	addi	fp,sp,28
   2f7d4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2f7d8:	e0bffb17 	ldw	r2,-20(fp)
   2f7dc:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2f7e0:	e0bff917 	ldw	r2,-28(fp)
   2f7e4:	10800017 	ldw	r2,0(r2)
   2f7e8:	10800104 	addi	r2,r2,4
   2f7ec:	10800037 	ldwio	r2,0(r2)
   2f7f0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2f7f4:	e0bffa17 	ldw	r2,-24(fp)
   2f7f8:	1081000c 	andi	r2,r2,1024
   2f7fc:	10000b26 	beq	r2,zero,2f82c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2f800:	e0bff917 	ldw	r2,-28(fp)
   2f804:	10800017 	ldw	r2,0(r2)
   2f808:	10800104 	addi	r2,r2,4
   2f80c:	1007883a 	mov	r3,r2
   2f810:	e0bff917 	ldw	r2,-28(fp)
   2f814:	10800817 	ldw	r2,32(r2)
   2f818:	10810014 	ori	r2,r2,1024
   2f81c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2f820:	e0bff917 	ldw	r2,-28(fp)
   2f824:	10000915 	stw	zero,36(r2)
   2f828:	00000a06 	br	2f854 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2f82c:	e0bff917 	ldw	r2,-28(fp)
   2f830:	10c00917 	ldw	r3,36(r2)
   2f834:	00a00034 	movhi	r2,32768
   2f838:	10bfff04 	addi	r2,r2,-4
   2f83c:	10c00536 	bltu	r2,r3,2f854 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2f840:	e0bff917 	ldw	r2,-28(fp)
   2f844:	10800917 	ldw	r2,36(r2)
   2f848:	10c00044 	addi	r3,r2,1
   2f84c:	e0bff917 	ldw	r2,-28(fp)
   2f850:	10c00915 	stw	r3,36(r2)
   2f854:	d0a6d817 	ldw	r2,-25760(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2f858:	e037883a 	mov	sp,fp
   2f85c:	df000017 	ldw	fp,0(sp)
   2f860:	dec00104 	addi	sp,sp,4
   2f864:	f800283a 	ret

0002f868 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2f868:	defffd04 	addi	sp,sp,-12
   2f86c:	df000215 	stw	fp,8(sp)
   2f870:	df000204 	addi	fp,sp,8
   2f874:	e13ffe15 	stw	r4,-8(fp)
   2f878:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2f87c:	00000506 	br	2f894 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2f880:	e0bfff17 	ldw	r2,-4(fp)
   2f884:	1090000c 	andi	r2,r2,16384
   2f888:	10000226 	beq	r2,zero,2f894 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2f88c:	00bffd44 	movi	r2,-11
   2f890:	00000b06 	br	2f8c0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2f894:	e0bffe17 	ldw	r2,-8(fp)
   2f898:	10c00d17 	ldw	r3,52(r2)
   2f89c:	e0bffe17 	ldw	r2,-8(fp)
   2f8a0:	10800c17 	ldw	r2,48(r2)
   2f8a4:	18800526 	beq	r3,r2,2f8bc <altera_avalon_jtag_uart_close+0x54>
   2f8a8:	e0bffe17 	ldw	r2,-8(fp)
   2f8ac:	10c00917 	ldw	r3,36(r2)
   2f8b0:	e0bffe17 	ldw	r2,-8(fp)
   2f8b4:	10800117 	ldw	r2,4(r2)
   2f8b8:	18bff136 	bltu	r3,r2,2f880 <__alt_data_end+0xfffef880>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2f8bc:	0005883a 	mov	r2,zero
}
   2f8c0:	e037883a 	mov	sp,fp
   2f8c4:	df000017 	ldw	fp,0(sp)
   2f8c8:	dec00104 	addi	sp,sp,4
   2f8cc:	f800283a 	ret

0002f8d0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2f8d0:	defffa04 	addi	sp,sp,-24
   2f8d4:	df000515 	stw	fp,20(sp)
   2f8d8:	df000504 	addi	fp,sp,20
   2f8dc:	e13ffd15 	stw	r4,-12(fp)
   2f8e0:	e17ffe15 	stw	r5,-8(fp)
   2f8e4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2f8e8:	00bff9c4 	movi	r2,-25
   2f8ec:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2f8f0:	e0bffe17 	ldw	r2,-8(fp)
   2f8f4:	10da8060 	cmpeqi	r3,r2,27137
   2f8f8:	1800031e 	bne	r3,zero,2f908 <altera_avalon_jtag_uart_ioctl+0x38>
   2f8fc:	109a80a0 	cmpeqi	r2,r2,27138
   2f900:	1000181e 	bne	r2,zero,2f964 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2f904:	00002906 	br	2f9ac <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2f908:	e0bffd17 	ldw	r2,-12(fp)
   2f90c:	10c00117 	ldw	r3,4(r2)
   2f910:	00a00034 	movhi	r2,32768
   2f914:	10bfffc4 	addi	r2,r2,-1
   2f918:	18802126 	beq	r3,r2,2f9a0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2f91c:	e0bfff17 	ldw	r2,-4(fp)
   2f920:	10800017 	ldw	r2,0(r2)
   2f924:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2f928:	e0bffc17 	ldw	r2,-16(fp)
   2f92c:	10800090 	cmplti	r2,r2,2
   2f930:	1000061e 	bne	r2,zero,2f94c <altera_avalon_jtag_uart_ioctl+0x7c>
   2f934:	e0fffc17 	ldw	r3,-16(fp)
   2f938:	00a00034 	movhi	r2,32768
   2f93c:	10bfffc4 	addi	r2,r2,-1
   2f940:	18800226 	beq	r3,r2,2f94c <altera_avalon_jtag_uart_ioctl+0x7c>
   2f944:	e0bffc17 	ldw	r2,-16(fp)
   2f948:	00000206 	br	2f954 <altera_avalon_jtag_uart_ioctl+0x84>
   2f94c:	00a00034 	movhi	r2,32768
   2f950:	10bfff84 	addi	r2,r2,-2
   2f954:	e0fffd17 	ldw	r3,-12(fp)
   2f958:	18800115 	stw	r2,4(r3)
      rc = 0;
   2f95c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2f960:	00000f06 	br	2f9a0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2f964:	e0bffd17 	ldw	r2,-12(fp)
   2f968:	10c00117 	ldw	r3,4(r2)
   2f96c:	00a00034 	movhi	r2,32768
   2f970:	10bfffc4 	addi	r2,r2,-1
   2f974:	18800c26 	beq	r3,r2,2f9a8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2f978:	e0bffd17 	ldw	r2,-12(fp)
   2f97c:	10c00917 	ldw	r3,36(r2)
   2f980:	e0bffd17 	ldw	r2,-12(fp)
   2f984:	10800117 	ldw	r2,4(r2)
   2f988:	1885803a 	cmpltu	r2,r3,r2
   2f98c:	10c03fcc 	andi	r3,r2,255
   2f990:	e0bfff17 	ldw	r2,-4(fp)
   2f994:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2f998:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2f99c:	00000206 	br	2f9a8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2f9a0:	0001883a 	nop
   2f9a4:	00000106 	br	2f9ac <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2f9a8:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2f9ac:	e0bffb17 	ldw	r2,-20(fp)
}
   2f9b0:	e037883a 	mov	sp,fp
   2f9b4:	df000017 	ldw	fp,0(sp)
   2f9b8:	dec00104 	addi	sp,sp,4
   2f9bc:	f800283a 	ret

0002f9c0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2f9c0:	defff304 	addi	sp,sp,-52
   2f9c4:	dfc00c15 	stw	ra,48(sp)
   2f9c8:	df000b15 	stw	fp,44(sp)
   2f9cc:	df000b04 	addi	fp,sp,44
   2f9d0:	e13ffc15 	stw	r4,-16(fp)
   2f9d4:	e17ffd15 	stw	r5,-12(fp)
   2f9d8:	e1bffe15 	stw	r6,-8(fp)
   2f9dc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2f9e0:	e0bffd17 	ldw	r2,-12(fp)
   2f9e4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2f9e8:	00004706 	br	2fb08 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2f9ec:	e0bffc17 	ldw	r2,-16(fp)
   2f9f0:	10800a17 	ldw	r2,40(r2)
   2f9f4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2f9f8:	e0bffc17 	ldw	r2,-16(fp)
   2f9fc:	10800b17 	ldw	r2,44(r2)
   2fa00:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2fa04:	e0fff717 	ldw	r3,-36(fp)
   2fa08:	e0bff817 	ldw	r2,-32(fp)
   2fa0c:	18800536 	bltu	r3,r2,2fa24 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2fa10:	e0fff717 	ldw	r3,-36(fp)
   2fa14:	e0bff817 	ldw	r2,-32(fp)
   2fa18:	1885c83a 	sub	r2,r3,r2
   2fa1c:	e0bff615 	stw	r2,-40(fp)
   2fa20:	00000406 	br	2fa34 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2fa24:	00c20004 	movi	r3,2048
   2fa28:	e0bff817 	ldw	r2,-32(fp)
   2fa2c:	1885c83a 	sub	r2,r3,r2
   2fa30:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2fa34:	e0bff617 	ldw	r2,-40(fp)
   2fa38:	10001e26 	beq	r2,zero,2fab4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2fa3c:	e0fffe17 	ldw	r3,-8(fp)
   2fa40:	e0bff617 	ldw	r2,-40(fp)
   2fa44:	1880022e 	bgeu	r3,r2,2fa50 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2fa48:	e0bffe17 	ldw	r2,-8(fp)
   2fa4c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2fa50:	e0bffc17 	ldw	r2,-16(fp)
   2fa54:	10c00e04 	addi	r3,r2,56
   2fa58:	e0bff817 	ldw	r2,-32(fp)
   2fa5c:	1885883a 	add	r2,r3,r2
   2fa60:	e1bff617 	ldw	r6,-40(fp)
   2fa64:	100b883a 	mov	r5,r2
   2fa68:	e13ff517 	ldw	r4,-44(fp)
   2fa6c:	0029d940 	call	29d94 <memcpy>
      ptr   += n;
   2fa70:	e0fff517 	ldw	r3,-44(fp)
   2fa74:	e0bff617 	ldw	r2,-40(fp)
   2fa78:	1885883a 	add	r2,r3,r2
   2fa7c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2fa80:	e0fffe17 	ldw	r3,-8(fp)
   2fa84:	e0bff617 	ldw	r2,-40(fp)
   2fa88:	1885c83a 	sub	r2,r3,r2
   2fa8c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2fa90:	e0fff817 	ldw	r3,-32(fp)
   2fa94:	e0bff617 	ldw	r2,-40(fp)
   2fa98:	1885883a 	add	r2,r3,r2
   2fa9c:	10c1ffcc 	andi	r3,r2,2047
   2faa0:	e0bffc17 	ldw	r2,-16(fp)
   2faa4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2faa8:	e0bffe17 	ldw	r2,-8(fp)
   2faac:	00bfcf16 	blt	zero,r2,2f9ec <__alt_data_end+0xfffef9ec>
   2fab0:	00000106 	br	2fab8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2fab4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2fab8:	e0fff517 	ldw	r3,-44(fp)
   2fabc:	e0bffd17 	ldw	r2,-12(fp)
   2fac0:	1880141e 	bne	r3,r2,2fb14 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2fac4:	e0bfff17 	ldw	r2,-4(fp)
   2fac8:	1090000c 	andi	r2,r2,16384
   2facc:	1000131e 	bne	r2,zero,2fb1c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2fad0:	0001883a 	nop
   2fad4:	e0bffc17 	ldw	r2,-16(fp)
   2fad8:	10c00a17 	ldw	r3,40(r2)
   2fadc:	e0bff717 	ldw	r2,-36(fp)
   2fae0:	1880051e 	bne	r3,r2,2faf8 <altera_avalon_jtag_uart_read+0x138>
   2fae4:	e0bffc17 	ldw	r2,-16(fp)
   2fae8:	10c00917 	ldw	r3,36(r2)
   2faec:	e0bffc17 	ldw	r2,-16(fp)
   2faf0:	10800117 	ldw	r2,4(r2)
   2faf4:	18bff736 	bltu	r3,r2,2fad4 <__alt_data_end+0xfffefad4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2faf8:	e0bffc17 	ldw	r2,-16(fp)
   2fafc:	10c00a17 	ldw	r3,40(r2)
   2fb00:	e0bff717 	ldw	r2,-36(fp)
   2fb04:	18800726 	beq	r3,r2,2fb24 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2fb08:	e0bffe17 	ldw	r2,-8(fp)
   2fb0c:	00bfb716 	blt	zero,r2,2f9ec <__alt_data_end+0xfffef9ec>
   2fb10:	00000506 	br	2fb28 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2fb14:	0001883a 	nop
   2fb18:	00000306 	br	2fb28 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2fb1c:	0001883a 	nop
   2fb20:	00000106 	br	2fb28 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2fb24:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2fb28:	e0fff517 	ldw	r3,-44(fp)
   2fb2c:	e0bffd17 	ldw	r2,-12(fp)
   2fb30:	18801826 	beq	r3,r2,2fb94 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2fb34:	0005303a 	rdctl	r2,status
   2fb38:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fb3c:	e0fffb17 	ldw	r3,-20(fp)
   2fb40:	00bfff84 	movi	r2,-2
   2fb44:	1884703a 	and	r2,r3,r2
   2fb48:	1001703a 	wrctl	status,r2
  
  return context;
   2fb4c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2fb50:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2fb54:	e0bffc17 	ldw	r2,-16(fp)
   2fb58:	10800817 	ldw	r2,32(r2)
   2fb5c:	10c00054 	ori	r3,r2,1
   2fb60:	e0bffc17 	ldw	r2,-16(fp)
   2fb64:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2fb68:	e0bffc17 	ldw	r2,-16(fp)
   2fb6c:	10800017 	ldw	r2,0(r2)
   2fb70:	10800104 	addi	r2,r2,4
   2fb74:	1007883a 	mov	r3,r2
   2fb78:	e0bffc17 	ldw	r2,-16(fp)
   2fb7c:	10800817 	ldw	r2,32(r2)
   2fb80:	18800035 	stwio	r2,0(r3)
   2fb84:	e0bffa17 	ldw	r2,-24(fp)
   2fb88:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2fb8c:	e0bff917 	ldw	r2,-28(fp)
   2fb90:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2fb94:	e0fff517 	ldw	r3,-44(fp)
   2fb98:	e0bffd17 	ldw	r2,-12(fp)
   2fb9c:	18800426 	beq	r3,r2,2fbb0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2fba0:	e0fff517 	ldw	r3,-44(fp)
   2fba4:	e0bffd17 	ldw	r2,-12(fp)
   2fba8:	1885c83a 	sub	r2,r3,r2
   2fbac:	00000606 	br	2fbc8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2fbb0:	e0bfff17 	ldw	r2,-4(fp)
   2fbb4:	1090000c 	andi	r2,r2,16384
   2fbb8:	10000226 	beq	r2,zero,2fbc4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2fbbc:	00bffd44 	movi	r2,-11
   2fbc0:	00000106 	br	2fbc8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2fbc4:	00bffec4 	movi	r2,-5
}
   2fbc8:	e037883a 	mov	sp,fp
   2fbcc:	dfc00117 	ldw	ra,4(sp)
   2fbd0:	df000017 	ldw	fp,0(sp)
   2fbd4:	dec00204 	addi	sp,sp,8
   2fbd8:	f800283a 	ret

0002fbdc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2fbdc:	defff304 	addi	sp,sp,-52
   2fbe0:	dfc00c15 	stw	ra,48(sp)
   2fbe4:	df000b15 	stw	fp,44(sp)
   2fbe8:	df000b04 	addi	fp,sp,44
   2fbec:	e13ffc15 	stw	r4,-16(fp)
   2fbf0:	e17ffd15 	stw	r5,-12(fp)
   2fbf4:	e1bffe15 	stw	r6,-8(fp)
   2fbf8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2fbfc:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2fc00:	e0bffd17 	ldw	r2,-12(fp)
   2fc04:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2fc08:	00003706 	br	2fce8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2fc0c:	e0bffc17 	ldw	r2,-16(fp)
   2fc10:	10800c17 	ldw	r2,48(r2)
   2fc14:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2fc18:	e0bffc17 	ldw	r2,-16(fp)
   2fc1c:	10800d17 	ldw	r2,52(r2)
   2fc20:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2fc24:	e0fff917 	ldw	r3,-28(fp)
   2fc28:	e0bff517 	ldw	r2,-44(fp)
   2fc2c:	1880062e 	bgeu	r3,r2,2fc48 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2fc30:	e0fff517 	ldw	r3,-44(fp)
   2fc34:	e0bff917 	ldw	r2,-28(fp)
   2fc38:	1885c83a 	sub	r2,r3,r2
   2fc3c:	10bfffc4 	addi	r2,r2,-1
   2fc40:	e0bff615 	stw	r2,-40(fp)
   2fc44:	00000b06 	br	2fc74 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2fc48:	e0bff517 	ldw	r2,-44(fp)
   2fc4c:	10000526 	beq	r2,zero,2fc64 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2fc50:	00c20004 	movi	r3,2048
   2fc54:	e0bff917 	ldw	r2,-28(fp)
   2fc58:	1885c83a 	sub	r2,r3,r2
   2fc5c:	e0bff615 	stw	r2,-40(fp)
   2fc60:	00000406 	br	2fc74 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2fc64:	00c1ffc4 	movi	r3,2047
   2fc68:	e0bff917 	ldw	r2,-28(fp)
   2fc6c:	1885c83a 	sub	r2,r3,r2
   2fc70:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2fc74:	e0bff617 	ldw	r2,-40(fp)
   2fc78:	10001e26 	beq	r2,zero,2fcf4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2fc7c:	e0fffe17 	ldw	r3,-8(fp)
   2fc80:	e0bff617 	ldw	r2,-40(fp)
   2fc84:	1880022e 	bgeu	r3,r2,2fc90 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2fc88:	e0bffe17 	ldw	r2,-8(fp)
   2fc8c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2fc90:	e0bffc17 	ldw	r2,-16(fp)
   2fc94:	10c20e04 	addi	r3,r2,2104
   2fc98:	e0bff917 	ldw	r2,-28(fp)
   2fc9c:	1885883a 	add	r2,r3,r2
   2fca0:	e1bff617 	ldw	r6,-40(fp)
   2fca4:	e17ffd17 	ldw	r5,-12(fp)
   2fca8:	1009883a 	mov	r4,r2
   2fcac:	0029d940 	call	29d94 <memcpy>
      ptr   += n;
   2fcb0:	e0fffd17 	ldw	r3,-12(fp)
   2fcb4:	e0bff617 	ldw	r2,-40(fp)
   2fcb8:	1885883a 	add	r2,r3,r2
   2fcbc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2fcc0:	e0fffe17 	ldw	r3,-8(fp)
   2fcc4:	e0bff617 	ldw	r2,-40(fp)
   2fcc8:	1885c83a 	sub	r2,r3,r2
   2fccc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2fcd0:	e0fff917 	ldw	r3,-28(fp)
   2fcd4:	e0bff617 	ldw	r2,-40(fp)
   2fcd8:	1885883a 	add	r2,r3,r2
   2fcdc:	10c1ffcc 	andi	r3,r2,2047
   2fce0:	e0bffc17 	ldw	r2,-16(fp)
   2fce4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2fce8:	e0bffe17 	ldw	r2,-8(fp)
   2fcec:	00bfc716 	blt	zero,r2,2fc0c <__alt_data_end+0xfffefc0c>
   2fcf0:	00000106 	br	2fcf8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2fcf4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2fcf8:	0005303a 	rdctl	r2,status
   2fcfc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fd00:	e0fffb17 	ldw	r3,-20(fp)
   2fd04:	00bfff84 	movi	r2,-2
   2fd08:	1884703a 	and	r2,r3,r2
   2fd0c:	1001703a 	wrctl	status,r2
  
  return context;
   2fd10:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2fd14:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2fd18:	e0bffc17 	ldw	r2,-16(fp)
   2fd1c:	10800817 	ldw	r2,32(r2)
   2fd20:	10c00094 	ori	r3,r2,2
   2fd24:	e0bffc17 	ldw	r2,-16(fp)
   2fd28:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2fd2c:	e0bffc17 	ldw	r2,-16(fp)
   2fd30:	10800017 	ldw	r2,0(r2)
   2fd34:	10800104 	addi	r2,r2,4
   2fd38:	1007883a 	mov	r3,r2
   2fd3c:	e0bffc17 	ldw	r2,-16(fp)
   2fd40:	10800817 	ldw	r2,32(r2)
   2fd44:	18800035 	stwio	r2,0(r3)
   2fd48:	e0bffa17 	ldw	r2,-24(fp)
   2fd4c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2fd50:	e0bff817 	ldw	r2,-32(fp)
   2fd54:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2fd58:	e0bffe17 	ldw	r2,-8(fp)
   2fd5c:	0080100e 	bge	zero,r2,2fda0 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2fd60:	e0bfff17 	ldw	r2,-4(fp)
   2fd64:	1090000c 	andi	r2,r2,16384
   2fd68:	1000101e 	bne	r2,zero,2fdac <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2fd6c:	0001883a 	nop
   2fd70:	e0bffc17 	ldw	r2,-16(fp)
   2fd74:	10c00d17 	ldw	r3,52(r2)
   2fd78:	e0bff517 	ldw	r2,-44(fp)
   2fd7c:	1880051e 	bne	r3,r2,2fd94 <altera_avalon_jtag_uart_write+0x1b8>
   2fd80:	e0bffc17 	ldw	r2,-16(fp)
   2fd84:	10c00917 	ldw	r3,36(r2)
   2fd88:	e0bffc17 	ldw	r2,-16(fp)
   2fd8c:	10800117 	ldw	r2,4(r2)
   2fd90:	18bff736 	bltu	r3,r2,2fd70 <__alt_data_end+0xfffefd70>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2fd94:	e0bffc17 	ldw	r2,-16(fp)
   2fd98:	10800917 	ldw	r2,36(r2)
   2fd9c:	1000051e 	bne	r2,zero,2fdb4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2fda0:	e0bffe17 	ldw	r2,-8(fp)
   2fda4:	00bfd016 	blt	zero,r2,2fce8 <__alt_data_end+0xfffefce8>
   2fda8:	00000306 	br	2fdb8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2fdac:	0001883a 	nop
   2fdb0:	00000106 	br	2fdb8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2fdb4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2fdb8:	e0fffd17 	ldw	r3,-12(fp)
   2fdbc:	e0bff717 	ldw	r2,-36(fp)
   2fdc0:	18800426 	beq	r3,r2,2fdd4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2fdc4:	e0fffd17 	ldw	r3,-12(fp)
   2fdc8:	e0bff717 	ldw	r2,-36(fp)
   2fdcc:	1885c83a 	sub	r2,r3,r2
   2fdd0:	00000606 	br	2fdec <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2fdd4:	e0bfff17 	ldw	r2,-4(fp)
   2fdd8:	1090000c 	andi	r2,r2,16384
   2fddc:	10000226 	beq	r2,zero,2fde8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2fde0:	00bffd44 	movi	r2,-11
   2fde4:	00000106 	br	2fdec <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2fde8:	00bffec4 	movi	r2,-5
}
   2fdec:	e037883a 	mov	sp,fp
   2fdf0:	dfc00117 	ldw	ra,4(sp)
   2fdf4:	df000017 	ldw	fp,0(sp)
   2fdf8:	dec00204 	addi	sp,sp,8
   2fdfc:	f800283a 	ret

0002fe00 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   2fe00:	defffa04 	addi	sp,sp,-24
   2fe04:	dfc00515 	stw	ra,20(sp)
   2fe08:	df000415 	stw	fp,16(sp)
   2fe0c:	df000404 	addi	fp,sp,16
   2fe10:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   2fe14:	0007883a 	mov	r3,zero
   2fe18:	e0bfff17 	ldw	r2,-4(fp)
   2fe1c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   2fe20:	e0bfff17 	ldw	r2,-4(fp)
   2fe24:	10800104 	addi	r2,r2,4
   2fe28:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2fe2c:	0005303a 	rdctl	r2,status
   2fe30:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fe34:	e0fffd17 	ldw	r3,-12(fp)
   2fe38:	00bfff84 	movi	r2,-2
   2fe3c:	1884703a 	and	r2,r3,r2
   2fe40:	1001703a 	wrctl	status,r2
  
  return context;
   2fe44:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   2fe48:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   2fe4c:	0030a640 	call	30a64 <alt_tick>
   2fe50:	e0bffc17 	ldw	r2,-16(fp)
   2fe54:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2fe58:	e0bffe17 	ldw	r2,-8(fp)
   2fe5c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   2fe60:	0001883a 	nop
   2fe64:	e037883a 	mov	sp,fp
   2fe68:	dfc00117 	ldw	ra,4(sp)
   2fe6c:	df000017 	ldw	fp,0(sp)
   2fe70:	dec00204 	addi	sp,sp,8
   2fe74:	f800283a 	ret

0002fe78 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   2fe78:	defff804 	addi	sp,sp,-32
   2fe7c:	dfc00715 	stw	ra,28(sp)
   2fe80:	df000615 	stw	fp,24(sp)
   2fe84:	df000604 	addi	fp,sp,24
   2fe88:	e13ffc15 	stw	r4,-16(fp)
   2fe8c:	e17ffd15 	stw	r5,-12(fp)
   2fe90:	e1bffe15 	stw	r6,-8(fp)
   2fe94:	e1ffff15 	stw	r7,-4(fp)
   2fe98:	e0bfff17 	ldw	r2,-4(fp)
   2fe9c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   2fea0:	d0a6d817 	ldw	r2,-25760(gp)
   2fea4:	1000021e 	bne	r2,zero,2feb0 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   2fea8:	e0bffb17 	ldw	r2,-20(fp)
   2feac:	d0a6d815 	stw	r2,-25760(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   2feb0:	e0bffc17 	ldw	r2,-16(fp)
   2feb4:	10800104 	addi	r2,r2,4
   2feb8:	00c001c4 	movi	r3,7
   2febc:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   2fec0:	d8000015 	stw	zero,0(sp)
   2fec4:	e1fffc17 	ldw	r7,-16(fp)
   2fec8:	018000f4 	movhi	r6,3
   2fecc:	31bf8004 	addi	r6,r6,-512
   2fed0:	e17ffe17 	ldw	r5,-8(fp)
   2fed4:	e13ffd17 	ldw	r4,-12(fp)
   2fed8:	00303940 	call	30394 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   2fedc:	0001883a 	nop
   2fee0:	e037883a 	mov	sp,fp
   2fee4:	dfc00117 	ldw	ra,4(sp)
   2fee8:	df000017 	ldw	fp,0(sp)
   2feec:	dec00204 	addi	sp,sp,8
   2fef0:	f800283a 	ret

0002fef4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2fef4:	defff504 	addi	sp,sp,-44
   2fef8:	df000a15 	stw	fp,40(sp)
   2fefc:	df000a04 	addi	fp,sp,40
   2ff00:	e13ffc15 	stw	r4,-16(fp)
   2ff04:	e17ffd15 	stw	r5,-12(fp)
   2ff08:	e1bffe15 	stw	r6,-8(fp)
   2ff0c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2ff10:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2ff14:	d0a6d817 	ldw	r2,-25760(gp)
  
  if (alt_ticks_per_second ())
   2ff18:	10003c26 	beq	r2,zero,3000c <alt_alarm_start+0x118>
  {
    if (alarm)
   2ff1c:	e0bffc17 	ldw	r2,-16(fp)
   2ff20:	10003826 	beq	r2,zero,30004 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   2ff24:	e0bffc17 	ldw	r2,-16(fp)
   2ff28:	e0fffe17 	ldw	r3,-8(fp)
   2ff2c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2ff30:	e0bffc17 	ldw	r2,-16(fp)
   2ff34:	e0ffff17 	ldw	r3,-4(fp)
   2ff38:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2ff3c:	0005303a 	rdctl	r2,status
   2ff40:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ff44:	e0fff917 	ldw	r3,-28(fp)
   2ff48:	00bfff84 	movi	r2,-2
   2ff4c:	1884703a 	and	r2,r3,r2
   2ff50:	1001703a 	wrctl	status,r2
  
  return context;
   2ff54:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2ff58:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2ff5c:	d0a6d917 	ldw	r2,-25756(gp)
      
      current_nticks = alt_nticks();
   2ff60:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2ff64:	e0fffd17 	ldw	r3,-12(fp)
   2ff68:	e0bff617 	ldw	r2,-40(fp)
   2ff6c:	1885883a 	add	r2,r3,r2
   2ff70:	10c00044 	addi	r3,r2,1
   2ff74:	e0bffc17 	ldw	r2,-16(fp)
   2ff78:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2ff7c:	e0bffc17 	ldw	r2,-16(fp)
   2ff80:	10c00217 	ldw	r3,8(r2)
   2ff84:	e0bff617 	ldw	r2,-40(fp)
   2ff88:	1880042e 	bgeu	r3,r2,2ff9c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2ff8c:	e0bffc17 	ldw	r2,-16(fp)
   2ff90:	00c00044 	movi	r3,1
   2ff94:	10c00405 	stb	r3,16(r2)
   2ff98:	00000206 	br	2ffa4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2ff9c:	e0bffc17 	ldw	r2,-16(fp)
   2ffa0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2ffa4:	e0bffc17 	ldw	r2,-16(fp)
   2ffa8:	d0e00f04 	addi	r3,gp,-32708
   2ffac:	e0fffa15 	stw	r3,-24(fp)
   2ffb0:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2ffb4:	e0bffb17 	ldw	r2,-20(fp)
   2ffb8:	e0fffa17 	ldw	r3,-24(fp)
   2ffbc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2ffc0:	e0bffa17 	ldw	r2,-24(fp)
   2ffc4:	10c00017 	ldw	r3,0(r2)
   2ffc8:	e0bffb17 	ldw	r2,-20(fp)
   2ffcc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2ffd0:	e0bffa17 	ldw	r2,-24(fp)
   2ffd4:	10800017 	ldw	r2,0(r2)
   2ffd8:	e0fffb17 	ldw	r3,-20(fp)
   2ffdc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2ffe0:	e0bffa17 	ldw	r2,-24(fp)
   2ffe4:	e0fffb17 	ldw	r3,-20(fp)
   2ffe8:	10c00015 	stw	r3,0(r2)
   2ffec:	e0bff817 	ldw	r2,-32(fp)
   2fff0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2fff4:	e0bff717 	ldw	r2,-36(fp)
   2fff8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2fffc:	0005883a 	mov	r2,zero
   30000:	00000306 	br	30010 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   30004:	00bffa84 	movi	r2,-22
   30008:	00000106 	br	30010 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   3000c:	00bfde84 	movi	r2,-134
  }
}
   30010:	e037883a 	mov	sp,fp
   30014:	df000017 	ldw	fp,0(sp)
   30018:	dec00104 	addi	sp,sp,4
   3001c:	f800283a 	ret

00030020 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   30020:	defffa04 	addi	sp,sp,-24
   30024:	dfc00515 	stw	ra,20(sp)
   30028:	df000415 	stw	fp,16(sp)
   3002c:	df000404 	addi	fp,sp,16
   30030:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   30034:	008000c4 	movi	r2,3
   30038:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   3003c:	e0fffd17 	ldw	r3,-12(fp)
   30040:	008003f4 	movhi	r2,15
   30044:	10909004 	addi	r2,r2,16960
   30048:	1885383a 	mul	r2,r3,r2
   3004c:	100b883a 	mov	r5,r2
   30050:	0100bef4 	movhi	r4,763
   30054:	213c2004 	addi	r4,r4,-3968
   30058:	00222640 	call	22264 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   3005c:	100b883a 	mov	r5,r2
   30060:	01200034 	movhi	r4,32768
   30064:	213fffc4 	addi	r4,r4,-1
   30068:	00222640 	call	22264 <__udivsi3>
   3006c:	100b883a 	mov	r5,r2
   30070:	e13fff17 	ldw	r4,-4(fp)
   30074:	00222640 	call	22264 <__udivsi3>
   30078:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   3007c:	e0bffe17 	ldw	r2,-8(fp)
   30080:	10002a26 	beq	r2,zero,3012c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   30084:	e03ffc15 	stw	zero,-16(fp)
   30088:	00001706 	br	300e8 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   3008c:	00a00034 	movhi	r2,32768
   30090:	10bfffc4 	addi	r2,r2,-1
   30094:	10bfffc4 	addi	r2,r2,-1
   30098:	103ffe1e 	bne	r2,zero,30094 <__alt_data_end+0xffff0094>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   3009c:	e0fffd17 	ldw	r3,-12(fp)
   300a0:	008003f4 	movhi	r2,15
   300a4:	10909004 	addi	r2,r2,16960
   300a8:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   300ac:	100b883a 	mov	r5,r2
   300b0:	0100bef4 	movhi	r4,763
   300b4:	213c2004 	addi	r4,r4,-3968
   300b8:	00222640 	call	22264 <__udivsi3>
   300bc:	100b883a 	mov	r5,r2
   300c0:	01200034 	movhi	r4,32768
   300c4:	213fffc4 	addi	r4,r4,-1
   300c8:	00222640 	call	22264 <__udivsi3>
   300cc:	1007883a 	mov	r3,r2
   300d0:	e0bfff17 	ldw	r2,-4(fp)
   300d4:	10c5c83a 	sub	r2,r2,r3
   300d8:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   300dc:	e0bffc17 	ldw	r2,-16(fp)
   300e0:	10800044 	addi	r2,r2,1
   300e4:	e0bffc15 	stw	r2,-16(fp)
   300e8:	e0fffc17 	ldw	r3,-16(fp)
   300ec:	e0bffe17 	ldw	r2,-8(fp)
   300f0:	18bfe616 	blt	r3,r2,3008c <__alt_data_end+0xffff008c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   300f4:	e0fffd17 	ldw	r3,-12(fp)
   300f8:	008003f4 	movhi	r2,15
   300fc:	10909004 	addi	r2,r2,16960
   30100:	1885383a 	mul	r2,r3,r2
   30104:	100b883a 	mov	r5,r2
   30108:	0100bef4 	movhi	r4,763
   3010c:	213c2004 	addi	r4,r4,-3968
   30110:	00222640 	call	22264 <__udivsi3>
   30114:	1007883a 	mov	r3,r2
   30118:	e0bfff17 	ldw	r2,-4(fp)
   3011c:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   30120:	10bfffc4 	addi	r2,r2,-1
   30124:	103ffe1e 	bne	r2,zero,30120 <__alt_data_end+0xffff0120>
   30128:	00000d06 	br	30160 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   3012c:	e0fffd17 	ldw	r3,-12(fp)
   30130:	008003f4 	movhi	r2,15
   30134:	10909004 	addi	r2,r2,16960
   30138:	1885383a 	mul	r2,r3,r2
   3013c:	100b883a 	mov	r5,r2
   30140:	0100bef4 	movhi	r4,763
   30144:	213c2004 	addi	r4,r4,-3968
   30148:	00222640 	call	22264 <__udivsi3>
   3014c:	1007883a 	mov	r3,r2
   30150:	e0bfff17 	ldw	r2,-4(fp)
   30154:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   30158:	10bfffc4 	addi	r2,r2,-1
   3015c:	00bffe16 	blt	zero,r2,30158 <__alt_data_end+0xffff0158>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   30160:	0005883a 	mov	r2,zero
}
   30164:	e037883a 	mov	sp,fp
   30168:	dfc00117 	ldw	ra,4(sp)
   3016c:	df000017 	ldw	fp,0(sp)
   30170:	dec00204 	addi	sp,sp,8
   30174:	f800283a 	ret

00030178 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   30178:	defffe04 	addi	sp,sp,-8
   3017c:	df000115 	stw	fp,4(sp)
   30180:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   30184:	e03fff15 	stw	zero,-4(fp)
   30188:	00000506 	br	301a0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   3018c:	e0bfff17 	ldw	r2,-4(fp)
   30190:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   30194:	e0bfff17 	ldw	r2,-4(fp)
   30198:	10800804 	addi	r2,r2,32
   3019c:	e0bfff15 	stw	r2,-4(fp)
   301a0:	e0bfff17 	ldw	r2,-4(fp)
   301a4:	10820030 	cmpltui	r2,r2,2048
   301a8:	103ff81e 	bne	r2,zero,3018c <__alt_data_end+0xffff018c>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   301ac:	0001883a 	nop
   301b0:	e037883a 	mov	sp,fp
   301b4:	df000017 	ldw	fp,0(sp)
   301b8:	dec00104 	addi	sp,sp,4
   301bc:	f800283a 	ret

000301c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   301c0:	defffe04 	addi	sp,sp,-8
   301c4:	dfc00115 	stw	ra,4(sp)
   301c8:	df000015 	stw	fp,0(sp)
   301cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   301d0:	d0a00c17 	ldw	r2,-32720(gp)
   301d4:	10000326 	beq	r2,zero,301e4 <alt_get_errno+0x24>
   301d8:	d0a00c17 	ldw	r2,-32720(gp)
   301dc:	103ee83a 	callr	r2
   301e0:	00000106 	br	301e8 <alt_get_errno+0x28>
   301e4:	d0a6d304 	addi	r2,gp,-25780
}
   301e8:	e037883a 	mov	sp,fp
   301ec:	dfc00117 	ldw	ra,4(sp)
   301f0:	df000017 	ldw	fp,0(sp)
   301f4:	dec00204 	addi	sp,sp,8
   301f8:	f800283a 	ret

000301fc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   301fc:	defffa04 	addi	sp,sp,-24
   30200:	dfc00515 	stw	ra,20(sp)
   30204:	df000415 	stw	fp,16(sp)
   30208:	df000404 	addi	fp,sp,16
   3020c:	e13ffe15 	stw	r4,-8(fp)
   30210:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   30214:	e0bffe17 	ldw	r2,-8(fp)
   30218:	10000326 	beq	r2,zero,30228 <alt_dev_llist_insert+0x2c>
   3021c:	e0bffe17 	ldw	r2,-8(fp)
   30220:	10800217 	ldw	r2,8(r2)
   30224:	1000061e 	bne	r2,zero,30240 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   30228:	00301c00 	call	301c0 <alt_get_errno>
   3022c:	1007883a 	mov	r3,r2
   30230:	00800584 	movi	r2,22
   30234:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   30238:	00bffa84 	movi	r2,-22
   3023c:	00001306 	br	3028c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   30240:	e0bffe17 	ldw	r2,-8(fp)
   30244:	e0ffff17 	ldw	r3,-4(fp)
   30248:	e0fffc15 	stw	r3,-16(fp)
   3024c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   30250:	e0bffd17 	ldw	r2,-12(fp)
   30254:	e0fffc17 	ldw	r3,-16(fp)
   30258:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   3025c:	e0bffc17 	ldw	r2,-16(fp)
   30260:	10c00017 	ldw	r3,0(r2)
   30264:	e0bffd17 	ldw	r2,-12(fp)
   30268:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   3026c:	e0bffc17 	ldw	r2,-16(fp)
   30270:	10800017 	ldw	r2,0(r2)
   30274:	e0fffd17 	ldw	r3,-12(fp)
   30278:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   3027c:	e0bffc17 	ldw	r2,-16(fp)
   30280:	e0fffd17 	ldw	r3,-12(fp)
   30284:	10c00015 	stw	r3,0(r2)

  return 0;  
   30288:	0005883a 	mov	r2,zero
}
   3028c:	e037883a 	mov	sp,fp
   30290:	dfc00117 	ldw	ra,4(sp)
   30294:	df000017 	ldw	fp,0(sp)
   30298:	dec00204 	addi	sp,sp,8
   3029c:	f800283a 	ret

000302a0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   302a0:	defffd04 	addi	sp,sp,-12
   302a4:	dfc00215 	stw	ra,8(sp)
   302a8:	df000115 	stw	fp,4(sp)
   302ac:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   302b0:	008000f4 	movhi	r2,3
   302b4:	1084a204 	addi	r2,r2,4744
   302b8:	e0bfff15 	stw	r2,-4(fp)
   302bc:	00000606 	br	302d8 <_do_ctors+0x38>
        (*ctor) (); 
   302c0:	e0bfff17 	ldw	r2,-4(fp)
   302c4:	10800017 	ldw	r2,0(r2)
   302c8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   302cc:	e0bfff17 	ldw	r2,-4(fp)
   302d0:	10bfff04 	addi	r2,r2,-4
   302d4:	e0bfff15 	stw	r2,-4(fp)
   302d8:	e0ffff17 	ldw	r3,-4(fp)
   302dc:	008000f4 	movhi	r2,3
   302e0:	1084a304 	addi	r2,r2,4748
   302e4:	18bff62e 	bgeu	r3,r2,302c0 <__alt_data_end+0xffff02c0>
        (*ctor) (); 
}
   302e8:	0001883a 	nop
   302ec:	e037883a 	mov	sp,fp
   302f0:	dfc00117 	ldw	ra,4(sp)
   302f4:	df000017 	ldw	fp,0(sp)
   302f8:	dec00204 	addi	sp,sp,8
   302fc:	f800283a 	ret

00030300 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   30300:	defffd04 	addi	sp,sp,-12
   30304:	dfc00215 	stw	ra,8(sp)
   30308:	df000115 	stw	fp,4(sp)
   3030c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   30310:	008000f4 	movhi	r2,3
   30314:	1084a204 	addi	r2,r2,4744
   30318:	e0bfff15 	stw	r2,-4(fp)
   3031c:	00000606 	br	30338 <_do_dtors+0x38>
        (*dtor) (); 
   30320:	e0bfff17 	ldw	r2,-4(fp)
   30324:	10800017 	ldw	r2,0(r2)
   30328:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   3032c:	e0bfff17 	ldw	r2,-4(fp)
   30330:	10bfff04 	addi	r2,r2,-4
   30334:	e0bfff15 	stw	r2,-4(fp)
   30338:	e0ffff17 	ldw	r3,-4(fp)
   3033c:	008000f4 	movhi	r2,3
   30340:	1084a304 	addi	r2,r2,4748
   30344:	18bff62e 	bgeu	r3,r2,30320 <__alt_data_end+0xffff0320>
        (*dtor) (); 
}
   30348:	0001883a 	nop
   3034c:	e037883a 	mov	sp,fp
   30350:	dfc00117 	ldw	ra,4(sp)
   30354:	df000017 	ldw	fp,0(sp)
   30358:	dec00204 	addi	sp,sp,8
   3035c:	f800283a 	ret

00030360 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   30360:	defffe04 	addi	sp,sp,-8
   30364:	dfc00115 	stw	ra,4(sp)
   30368:	df000015 	stw	fp,0(sp)
   3036c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   30370:	01440004 	movi	r5,4096
   30374:	0009883a 	mov	r4,zero
   30378:	0030dcc0 	call	30dcc <alt_icache_flush>
#endif
}
   3037c:	0001883a 	nop
   30380:	e037883a 	mov	sp,fp
   30384:	dfc00117 	ldw	ra,4(sp)
   30388:	df000017 	ldw	fp,0(sp)
   3038c:	dec00204 	addi	sp,sp,8
   30390:	f800283a 	ret

00030394 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   30394:	defff904 	addi	sp,sp,-28
   30398:	dfc00615 	stw	ra,24(sp)
   3039c:	df000515 	stw	fp,20(sp)
   303a0:	df000504 	addi	fp,sp,20
   303a4:	e13ffc15 	stw	r4,-16(fp)
   303a8:	e17ffd15 	stw	r5,-12(fp)
   303ac:	e1bffe15 	stw	r6,-8(fp)
   303b0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   303b4:	e0800217 	ldw	r2,8(fp)
   303b8:	d8800015 	stw	r2,0(sp)
   303bc:	e1ffff17 	ldw	r7,-4(fp)
   303c0:	e1bffe17 	ldw	r6,-8(fp)
   303c4:	e17ffd17 	ldw	r5,-12(fp)
   303c8:	e13ffc17 	ldw	r4,-16(fp)
   303cc:	00305440 	call	30544 <alt_iic_isr_register>
}  
   303d0:	e037883a 	mov	sp,fp
   303d4:	dfc00117 	ldw	ra,4(sp)
   303d8:	df000017 	ldw	fp,0(sp)
   303dc:	dec00204 	addi	sp,sp,8
   303e0:	f800283a 	ret

000303e4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   303e4:	defff904 	addi	sp,sp,-28
   303e8:	df000615 	stw	fp,24(sp)
   303ec:	df000604 	addi	fp,sp,24
   303f0:	e13ffe15 	stw	r4,-8(fp)
   303f4:	e17fff15 	stw	r5,-4(fp)
   303f8:	e0bfff17 	ldw	r2,-4(fp)
   303fc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30400:	0005303a 	rdctl	r2,status
   30404:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30408:	e0fffb17 	ldw	r3,-20(fp)
   3040c:	00bfff84 	movi	r2,-2
   30410:	1884703a 	and	r2,r3,r2
   30414:	1001703a 	wrctl	status,r2
  
  return context;
   30418:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   3041c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   30420:	00c00044 	movi	r3,1
   30424:	e0bffa17 	ldw	r2,-24(fp)
   30428:	1884983a 	sll	r2,r3,r2
   3042c:	1007883a 	mov	r3,r2
   30430:	d0a6d717 	ldw	r2,-25764(gp)
   30434:	1884b03a 	or	r2,r3,r2
   30438:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   3043c:	d0a6d717 	ldw	r2,-25764(gp)
   30440:	100170fa 	wrctl	ienable,r2
   30444:	e0bffc17 	ldw	r2,-16(fp)
   30448:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   3044c:	e0bffd17 	ldw	r2,-12(fp)
   30450:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   30454:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   30458:	0001883a 	nop
}
   3045c:	e037883a 	mov	sp,fp
   30460:	df000017 	ldw	fp,0(sp)
   30464:	dec00104 	addi	sp,sp,4
   30468:	f800283a 	ret

0003046c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   3046c:	defff904 	addi	sp,sp,-28
   30470:	df000615 	stw	fp,24(sp)
   30474:	df000604 	addi	fp,sp,24
   30478:	e13ffe15 	stw	r4,-8(fp)
   3047c:	e17fff15 	stw	r5,-4(fp)
   30480:	e0bfff17 	ldw	r2,-4(fp)
   30484:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30488:	0005303a 	rdctl	r2,status
   3048c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30490:	e0fffb17 	ldw	r3,-20(fp)
   30494:	00bfff84 	movi	r2,-2
   30498:	1884703a 	and	r2,r3,r2
   3049c:	1001703a 	wrctl	status,r2
  
  return context;
   304a0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   304a4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   304a8:	00c00044 	movi	r3,1
   304ac:	e0bffa17 	ldw	r2,-24(fp)
   304b0:	1884983a 	sll	r2,r3,r2
   304b4:	0084303a 	nor	r2,zero,r2
   304b8:	1007883a 	mov	r3,r2
   304bc:	d0a6d717 	ldw	r2,-25764(gp)
   304c0:	1884703a 	and	r2,r3,r2
   304c4:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   304c8:	d0a6d717 	ldw	r2,-25764(gp)
   304cc:	100170fa 	wrctl	ienable,r2
   304d0:	e0bffc17 	ldw	r2,-16(fp)
   304d4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   304d8:	e0bffd17 	ldw	r2,-12(fp)
   304dc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   304e0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   304e4:	0001883a 	nop
}
   304e8:	e037883a 	mov	sp,fp
   304ec:	df000017 	ldw	fp,0(sp)
   304f0:	dec00104 	addi	sp,sp,4
   304f4:	f800283a 	ret

000304f8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   304f8:	defffc04 	addi	sp,sp,-16
   304fc:	df000315 	stw	fp,12(sp)
   30500:	df000304 	addi	fp,sp,12
   30504:	e13ffe15 	stw	r4,-8(fp)
   30508:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   3050c:	000530fa 	rdctl	r2,ienable
   30510:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   30514:	00c00044 	movi	r3,1
   30518:	e0bfff17 	ldw	r2,-4(fp)
   3051c:	1884983a 	sll	r2,r3,r2
   30520:	1007883a 	mov	r3,r2
   30524:	e0bffd17 	ldw	r2,-12(fp)
   30528:	1884703a 	and	r2,r3,r2
   3052c:	1004c03a 	cmpne	r2,r2,zero
   30530:	10803fcc 	andi	r2,r2,255
}
   30534:	e037883a 	mov	sp,fp
   30538:	df000017 	ldw	fp,0(sp)
   3053c:	dec00104 	addi	sp,sp,4
   30540:	f800283a 	ret

00030544 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   30544:	defff504 	addi	sp,sp,-44
   30548:	dfc00a15 	stw	ra,40(sp)
   3054c:	df000915 	stw	fp,36(sp)
   30550:	df000904 	addi	fp,sp,36
   30554:	e13ffc15 	stw	r4,-16(fp)
   30558:	e17ffd15 	stw	r5,-12(fp)
   3055c:	e1bffe15 	stw	r6,-8(fp)
   30560:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   30564:	00bffa84 	movi	r2,-22
   30568:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   3056c:	e0bffd17 	ldw	r2,-12(fp)
   30570:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   30574:	e0bff817 	ldw	r2,-32(fp)
   30578:	10800808 	cmpgei	r2,r2,32
   3057c:	1000271e 	bne	r2,zero,3061c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30580:	0005303a 	rdctl	r2,status
   30584:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30588:	e0fffb17 	ldw	r3,-20(fp)
   3058c:	00bfff84 	movi	r2,-2
   30590:	1884703a 	and	r2,r3,r2
   30594:	1001703a 	wrctl	status,r2
  
  return context;
   30598:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   3059c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   305a0:	008000f4 	movhi	r2,3
   305a4:	1092fb04 	addi	r2,r2,19436
   305a8:	e0fff817 	ldw	r3,-32(fp)
   305ac:	180690fa 	slli	r3,r3,3
   305b0:	10c5883a 	add	r2,r2,r3
   305b4:	e0fffe17 	ldw	r3,-8(fp)
   305b8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   305bc:	008000f4 	movhi	r2,3
   305c0:	1092fb04 	addi	r2,r2,19436
   305c4:	e0fff817 	ldw	r3,-32(fp)
   305c8:	180690fa 	slli	r3,r3,3
   305cc:	10c5883a 	add	r2,r2,r3
   305d0:	10800104 	addi	r2,r2,4
   305d4:	e0ffff17 	ldw	r3,-4(fp)
   305d8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   305dc:	e0bffe17 	ldw	r2,-8(fp)
   305e0:	10000526 	beq	r2,zero,305f8 <alt_iic_isr_register+0xb4>
   305e4:	e0bff817 	ldw	r2,-32(fp)
   305e8:	100b883a 	mov	r5,r2
   305ec:	e13ffc17 	ldw	r4,-16(fp)
   305f0:	00303e40 	call	303e4 <alt_ic_irq_enable>
   305f4:	00000406 	br	30608 <alt_iic_isr_register+0xc4>
   305f8:	e0bff817 	ldw	r2,-32(fp)
   305fc:	100b883a 	mov	r5,r2
   30600:	e13ffc17 	ldw	r4,-16(fp)
   30604:	003046c0 	call	3046c <alt_ic_irq_disable>
   30608:	e0bff715 	stw	r2,-36(fp)
   3060c:	e0bffa17 	ldw	r2,-24(fp)
   30610:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   30614:	e0bff917 	ldw	r2,-28(fp)
   30618:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   3061c:	e0bff717 	ldw	r2,-36(fp)
}
   30620:	e037883a 	mov	sp,fp
   30624:	dfc00117 	ldw	ra,4(sp)
   30628:	df000017 	ldw	fp,0(sp)
   3062c:	dec00204 	addi	sp,sp,8
   30630:	f800283a 	ret

00030634 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   30634:	defff904 	addi	sp,sp,-28
   30638:	dfc00615 	stw	ra,24(sp)
   3063c:	df000515 	stw	fp,20(sp)
   30640:	df000504 	addi	fp,sp,20
   30644:	e13ffc15 	stw	r4,-16(fp)
   30648:	e17ffd15 	stw	r5,-12(fp)
   3064c:	e1bffe15 	stw	r6,-8(fp)
   30650:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   30654:	e1bfff17 	ldw	r6,-4(fp)
   30658:	e17ffe17 	ldw	r5,-8(fp)
   3065c:	e13ffd17 	ldw	r4,-12(fp)
   30660:	00308740 	call	30874 <open>
   30664:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   30668:	e0bffb17 	ldw	r2,-20(fp)
   3066c:	10001c16 	blt	r2,zero,306e0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   30670:	008000f4 	movhi	r2,3
   30674:	10879e04 	addi	r2,r2,7800
   30678:	e0fffb17 	ldw	r3,-20(fp)
   3067c:	18c00324 	muli	r3,r3,12
   30680:	10c5883a 	add	r2,r2,r3
   30684:	10c00017 	ldw	r3,0(r2)
   30688:	e0bffc17 	ldw	r2,-16(fp)
   3068c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   30690:	008000f4 	movhi	r2,3
   30694:	10879e04 	addi	r2,r2,7800
   30698:	e0fffb17 	ldw	r3,-20(fp)
   3069c:	18c00324 	muli	r3,r3,12
   306a0:	10c5883a 	add	r2,r2,r3
   306a4:	10800104 	addi	r2,r2,4
   306a8:	10c00017 	ldw	r3,0(r2)
   306ac:	e0bffc17 	ldw	r2,-16(fp)
   306b0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   306b4:	008000f4 	movhi	r2,3
   306b8:	10879e04 	addi	r2,r2,7800
   306bc:	e0fffb17 	ldw	r3,-20(fp)
   306c0:	18c00324 	muli	r3,r3,12
   306c4:	10c5883a 	add	r2,r2,r3
   306c8:	10800204 	addi	r2,r2,8
   306cc:	10c00017 	ldw	r3,0(r2)
   306d0:	e0bffc17 	ldw	r2,-16(fp)
   306d4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   306d8:	e13ffb17 	ldw	r4,-20(fp)
   306dc:	002f0500 	call	2f050 <alt_release_fd>
  }
} 
   306e0:	0001883a 	nop
   306e4:	e037883a 	mov	sp,fp
   306e8:	dfc00117 	ldw	ra,4(sp)
   306ec:	df000017 	ldw	fp,0(sp)
   306f0:	dec00204 	addi	sp,sp,8
   306f4:	f800283a 	ret

000306f8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   306f8:	defffb04 	addi	sp,sp,-20
   306fc:	dfc00415 	stw	ra,16(sp)
   30700:	df000315 	stw	fp,12(sp)
   30704:	df000304 	addi	fp,sp,12
   30708:	e13ffd15 	stw	r4,-12(fp)
   3070c:	e17ffe15 	stw	r5,-8(fp)
   30710:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   30714:	01c07fc4 	movi	r7,511
   30718:	01800044 	movi	r6,1
   3071c:	e17ffd17 	ldw	r5,-12(fp)
   30720:	010000f4 	movhi	r4,3
   30724:	2107a104 	addi	r4,r4,7812
   30728:	00306340 	call	30634 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   3072c:	01c07fc4 	movi	r7,511
   30730:	000d883a 	mov	r6,zero
   30734:	e17ffe17 	ldw	r5,-8(fp)
   30738:	010000f4 	movhi	r4,3
   3073c:	21079e04 	addi	r4,r4,7800
   30740:	00306340 	call	30634 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   30744:	01c07fc4 	movi	r7,511
   30748:	01800044 	movi	r6,1
   3074c:	e17fff17 	ldw	r5,-4(fp)
   30750:	010000f4 	movhi	r4,3
   30754:	2107a404 	addi	r4,r4,7824
   30758:	00306340 	call	30634 <alt_open_fd>
}  
   3075c:	0001883a 	nop
   30760:	e037883a 	mov	sp,fp
   30764:	dfc00117 	ldw	ra,4(sp)
   30768:	df000017 	ldw	fp,0(sp)
   3076c:	dec00204 	addi	sp,sp,8
   30770:	f800283a 	ret

00030774 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30774:	defffe04 	addi	sp,sp,-8
   30778:	dfc00115 	stw	ra,4(sp)
   3077c:	df000015 	stw	fp,0(sp)
   30780:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30784:	d0a00c17 	ldw	r2,-32720(gp)
   30788:	10000326 	beq	r2,zero,30798 <alt_get_errno+0x24>
   3078c:	d0a00c17 	ldw	r2,-32720(gp)
   30790:	103ee83a 	callr	r2
   30794:	00000106 	br	3079c <alt_get_errno+0x28>
   30798:	d0a6d304 	addi	r2,gp,-25780
}
   3079c:	e037883a 	mov	sp,fp
   307a0:	dfc00117 	ldw	ra,4(sp)
   307a4:	df000017 	ldw	fp,0(sp)
   307a8:	dec00204 	addi	sp,sp,8
   307ac:	f800283a 	ret

000307b0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   307b0:	defffd04 	addi	sp,sp,-12
   307b4:	df000215 	stw	fp,8(sp)
   307b8:	df000204 	addi	fp,sp,8
   307bc:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   307c0:	e0bfff17 	ldw	r2,-4(fp)
   307c4:	10800217 	ldw	r2,8(r2)
   307c8:	10d00034 	orhi	r3,r2,16384
   307cc:	e0bfff17 	ldw	r2,-4(fp)
   307d0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   307d4:	e03ffe15 	stw	zero,-8(fp)
   307d8:	00001d06 	br	30850 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   307dc:	008000f4 	movhi	r2,3
   307e0:	10879e04 	addi	r2,r2,7800
   307e4:	e0fffe17 	ldw	r3,-8(fp)
   307e8:	18c00324 	muli	r3,r3,12
   307ec:	10c5883a 	add	r2,r2,r3
   307f0:	10c00017 	ldw	r3,0(r2)
   307f4:	e0bfff17 	ldw	r2,-4(fp)
   307f8:	10800017 	ldw	r2,0(r2)
   307fc:	1880111e 	bne	r3,r2,30844 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   30800:	008000f4 	movhi	r2,3
   30804:	10879e04 	addi	r2,r2,7800
   30808:	e0fffe17 	ldw	r3,-8(fp)
   3080c:	18c00324 	muli	r3,r3,12
   30810:	10c5883a 	add	r2,r2,r3
   30814:	10800204 	addi	r2,r2,8
   30818:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   3081c:	1000090e 	bge	r2,zero,30844 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   30820:	e0bffe17 	ldw	r2,-8(fp)
   30824:	10c00324 	muli	r3,r2,12
   30828:	008000f4 	movhi	r2,3
   3082c:	10879e04 	addi	r2,r2,7800
   30830:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   30834:	e0bfff17 	ldw	r2,-4(fp)
   30838:	18800226 	beq	r3,r2,30844 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   3083c:	00bffcc4 	movi	r2,-13
   30840:	00000806 	br	30864 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   30844:	e0bffe17 	ldw	r2,-8(fp)
   30848:	10800044 	addi	r2,r2,1
   3084c:	e0bffe15 	stw	r2,-8(fp)
   30850:	d0a00b17 	ldw	r2,-32724(gp)
   30854:	1007883a 	mov	r3,r2
   30858:	e0bffe17 	ldw	r2,-8(fp)
   3085c:	18bfdf2e 	bgeu	r3,r2,307dc <__alt_data_end+0xffff07dc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   30860:	0005883a 	mov	r2,zero
}
   30864:	e037883a 	mov	sp,fp
   30868:	df000017 	ldw	fp,0(sp)
   3086c:	dec00104 	addi	sp,sp,4
   30870:	f800283a 	ret

00030874 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   30874:	defff604 	addi	sp,sp,-40
   30878:	dfc00915 	stw	ra,36(sp)
   3087c:	df000815 	stw	fp,32(sp)
   30880:	df000804 	addi	fp,sp,32
   30884:	e13ffd15 	stw	r4,-12(fp)
   30888:	e17ffe15 	stw	r5,-8(fp)
   3088c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   30890:	00bfffc4 	movi	r2,-1
   30894:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   30898:	00bffb44 	movi	r2,-19
   3089c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   308a0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   308a4:	d1600904 	addi	r5,gp,-32732
   308a8:	e13ffd17 	ldw	r4,-12(fp)
   308ac:	0030b900 	call	30b90 <alt_find_dev>
   308b0:	e0bff815 	stw	r2,-32(fp)
   308b4:	e0bff817 	ldw	r2,-32(fp)
   308b8:	1000051e 	bne	r2,zero,308d0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   308bc:	e13ffd17 	ldw	r4,-12(fp)
   308c0:	0030c200 	call	30c20 <alt_find_file>
   308c4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   308c8:	00800044 	movi	r2,1
   308cc:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   308d0:	e0bff817 	ldw	r2,-32(fp)
   308d4:	10002926 	beq	r2,zero,3097c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   308d8:	e13ff817 	ldw	r4,-32(fp)
   308dc:	0030d280 	call	30d28 <alt_get_fd>
   308e0:	e0bff915 	stw	r2,-28(fp)
   308e4:	e0bff917 	ldw	r2,-28(fp)
   308e8:	1000030e 	bge	r2,zero,308f8 <open+0x84>
    {
      status = index;
   308ec:	e0bff917 	ldw	r2,-28(fp)
   308f0:	e0bffa15 	stw	r2,-24(fp)
   308f4:	00002306 	br	30984 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   308f8:	e0bff917 	ldw	r2,-28(fp)
   308fc:	10c00324 	muli	r3,r2,12
   30900:	008000f4 	movhi	r2,3
   30904:	10879e04 	addi	r2,r2,7800
   30908:	1885883a 	add	r2,r3,r2
   3090c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   30910:	e0fffe17 	ldw	r3,-8(fp)
   30914:	00900034 	movhi	r2,16384
   30918:	10bfffc4 	addi	r2,r2,-1
   3091c:	1886703a 	and	r3,r3,r2
   30920:	e0bffc17 	ldw	r2,-16(fp)
   30924:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   30928:	e0bffb17 	ldw	r2,-20(fp)
   3092c:	1000051e 	bne	r2,zero,30944 <open+0xd0>
   30930:	e13ffc17 	ldw	r4,-16(fp)
   30934:	00307b00 	call	307b0 <alt_file_locked>
   30938:	e0bffa15 	stw	r2,-24(fp)
   3093c:	e0bffa17 	ldw	r2,-24(fp)
   30940:	10001016 	blt	r2,zero,30984 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   30944:	e0bff817 	ldw	r2,-32(fp)
   30948:	10800317 	ldw	r2,12(r2)
   3094c:	10000826 	beq	r2,zero,30970 <open+0xfc>
   30950:	e0bff817 	ldw	r2,-32(fp)
   30954:	10800317 	ldw	r2,12(r2)
   30958:	e1ffff17 	ldw	r7,-4(fp)
   3095c:	e1bffe17 	ldw	r6,-8(fp)
   30960:	e17ffd17 	ldw	r5,-12(fp)
   30964:	e13ffc17 	ldw	r4,-16(fp)
   30968:	103ee83a 	callr	r2
   3096c:	00000106 	br	30974 <open+0x100>
   30970:	0005883a 	mov	r2,zero
   30974:	e0bffa15 	stw	r2,-24(fp)
   30978:	00000206 	br	30984 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   3097c:	00bffb44 	movi	r2,-19
   30980:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   30984:	e0bffa17 	ldw	r2,-24(fp)
   30988:	1000090e 	bge	r2,zero,309b0 <open+0x13c>
  {
    alt_release_fd (index);  
   3098c:	e13ff917 	ldw	r4,-28(fp)
   30990:	002f0500 	call	2f050 <alt_release_fd>
    ALT_ERRNO = -status;
   30994:	00307740 	call	30774 <alt_get_errno>
   30998:	1007883a 	mov	r3,r2
   3099c:	e0bffa17 	ldw	r2,-24(fp)
   309a0:	0085c83a 	sub	r2,zero,r2
   309a4:	18800015 	stw	r2,0(r3)
    return -1;
   309a8:	00bfffc4 	movi	r2,-1
   309ac:	00000106 	br	309b4 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   309b0:	e0bff917 	ldw	r2,-28(fp)
}
   309b4:	e037883a 	mov	sp,fp
   309b8:	dfc00117 	ldw	ra,4(sp)
   309bc:	df000017 	ldw	fp,0(sp)
   309c0:	dec00204 	addi	sp,sp,8
   309c4:	f800283a 	ret

000309c8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   309c8:	defffa04 	addi	sp,sp,-24
   309cc:	df000515 	stw	fp,20(sp)
   309d0:	df000504 	addi	fp,sp,20
   309d4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   309d8:	0005303a 	rdctl	r2,status
   309dc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   309e0:	e0fffc17 	ldw	r3,-16(fp)
   309e4:	00bfff84 	movi	r2,-2
   309e8:	1884703a 	and	r2,r3,r2
   309ec:	1001703a 	wrctl	status,r2
  
  return context;
   309f0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   309f4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   309f8:	e0bfff17 	ldw	r2,-4(fp)
   309fc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   30a00:	e0bffd17 	ldw	r2,-12(fp)
   30a04:	10800017 	ldw	r2,0(r2)
   30a08:	e0fffd17 	ldw	r3,-12(fp)
   30a0c:	18c00117 	ldw	r3,4(r3)
   30a10:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   30a14:	e0bffd17 	ldw	r2,-12(fp)
   30a18:	10800117 	ldw	r2,4(r2)
   30a1c:	e0fffd17 	ldw	r3,-12(fp)
   30a20:	18c00017 	ldw	r3,0(r3)
   30a24:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   30a28:	e0bffd17 	ldw	r2,-12(fp)
   30a2c:	e0fffd17 	ldw	r3,-12(fp)
   30a30:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   30a34:	e0bffd17 	ldw	r2,-12(fp)
   30a38:	e0fffd17 	ldw	r3,-12(fp)
   30a3c:	10c00015 	stw	r3,0(r2)
   30a40:	e0bffb17 	ldw	r2,-20(fp)
   30a44:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   30a48:	e0bffe17 	ldw	r2,-8(fp)
   30a4c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   30a50:	0001883a 	nop
   30a54:	e037883a 	mov	sp,fp
   30a58:	df000017 	ldw	fp,0(sp)
   30a5c:	dec00104 	addi	sp,sp,4
   30a60:	f800283a 	ret

00030a64 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   30a64:	defffb04 	addi	sp,sp,-20
   30a68:	dfc00415 	stw	ra,16(sp)
   30a6c:	df000315 	stw	fp,12(sp)
   30a70:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   30a74:	d0a00f17 	ldw	r2,-32708(gp)
   30a78:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   30a7c:	d0a6d917 	ldw	r2,-25756(gp)
   30a80:	10800044 	addi	r2,r2,1
   30a84:	d0a6d915 	stw	r2,-25756(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   30a88:	00002e06 	br	30b44 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   30a8c:	e0bffd17 	ldw	r2,-12(fp)
   30a90:	10800017 	ldw	r2,0(r2)
   30a94:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   30a98:	e0bffd17 	ldw	r2,-12(fp)
   30a9c:	10800403 	ldbu	r2,16(r2)
   30aa0:	10803fcc 	andi	r2,r2,255
   30aa4:	10000426 	beq	r2,zero,30ab8 <alt_tick+0x54>
   30aa8:	d0a6d917 	ldw	r2,-25756(gp)
   30aac:	1000021e 	bne	r2,zero,30ab8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   30ab0:	e0bffd17 	ldw	r2,-12(fp)
   30ab4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   30ab8:	e0bffd17 	ldw	r2,-12(fp)
   30abc:	10800217 	ldw	r2,8(r2)
   30ac0:	d0e6d917 	ldw	r3,-25756(gp)
   30ac4:	18801d36 	bltu	r3,r2,30b3c <alt_tick+0xd8>
   30ac8:	e0bffd17 	ldw	r2,-12(fp)
   30acc:	10800403 	ldbu	r2,16(r2)
   30ad0:	10803fcc 	andi	r2,r2,255
   30ad4:	1000191e 	bne	r2,zero,30b3c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   30ad8:	e0bffd17 	ldw	r2,-12(fp)
   30adc:	10800317 	ldw	r2,12(r2)
   30ae0:	e0fffd17 	ldw	r3,-12(fp)
   30ae4:	18c00517 	ldw	r3,20(r3)
   30ae8:	1809883a 	mov	r4,r3
   30aec:	103ee83a 	callr	r2
   30af0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   30af4:	e0bfff17 	ldw	r2,-4(fp)
   30af8:	1000031e 	bne	r2,zero,30b08 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   30afc:	e13ffd17 	ldw	r4,-12(fp)
   30b00:	00309c80 	call	309c8 <alt_alarm_stop>
   30b04:	00000d06 	br	30b3c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   30b08:	e0bffd17 	ldw	r2,-12(fp)
   30b0c:	10c00217 	ldw	r3,8(r2)
   30b10:	e0bfff17 	ldw	r2,-4(fp)
   30b14:	1887883a 	add	r3,r3,r2
   30b18:	e0bffd17 	ldw	r2,-12(fp)
   30b1c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   30b20:	e0bffd17 	ldw	r2,-12(fp)
   30b24:	10c00217 	ldw	r3,8(r2)
   30b28:	d0a6d917 	ldw	r2,-25756(gp)
   30b2c:	1880032e 	bgeu	r3,r2,30b3c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   30b30:	e0bffd17 	ldw	r2,-12(fp)
   30b34:	00c00044 	movi	r3,1
   30b38:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   30b3c:	e0bffe17 	ldw	r2,-8(fp)
   30b40:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   30b44:	e0fffd17 	ldw	r3,-12(fp)
   30b48:	d0a00f04 	addi	r2,gp,-32708
   30b4c:	18bfcf1e 	bne	r3,r2,30a8c <__alt_data_end+0xffff0a8c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   30b50:	0001883a 	nop
}
   30b54:	0001883a 	nop
   30b58:	e037883a 	mov	sp,fp
   30b5c:	dfc00117 	ldw	ra,4(sp)
   30b60:	df000017 	ldw	fp,0(sp)
   30b64:	dec00204 	addi	sp,sp,8
   30b68:	f800283a 	ret

00030b6c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   30b6c:	deffff04 	addi	sp,sp,-4
   30b70:	df000015 	stw	fp,0(sp)
   30b74:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   30b78:	000170fa 	wrctl	ienable,zero
}
   30b7c:	0001883a 	nop
   30b80:	e037883a 	mov	sp,fp
   30b84:	df000017 	ldw	fp,0(sp)
   30b88:	dec00104 	addi	sp,sp,4
   30b8c:	f800283a 	ret

00030b90 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   30b90:	defffa04 	addi	sp,sp,-24
   30b94:	dfc00515 	stw	ra,20(sp)
   30b98:	df000415 	stw	fp,16(sp)
   30b9c:	df000404 	addi	fp,sp,16
   30ba0:	e13ffe15 	stw	r4,-8(fp)
   30ba4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   30ba8:	e0bfff17 	ldw	r2,-4(fp)
   30bac:	10800017 	ldw	r2,0(r2)
   30bb0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   30bb4:	e13ffe17 	ldw	r4,-8(fp)
   30bb8:	002b26c0 	call	2b26c <strlen>
   30bbc:	10800044 	addi	r2,r2,1
   30bc0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   30bc4:	00000d06 	br	30bfc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   30bc8:	e0bffc17 	ldw	r2,-16(fp)
   30bcc:	10800217 	ldw	r2,8(r2)
   30bd0:	e0fffd17 	ldw	r3,-12(fp)
   30bd4:	180d883a 	mov	r6,r3
   30bd8:	e17ffe17 	ldw	r5,-8(fp)
   30bdc:	1009883a 	mov	r4,r2
   30be0:	0030f440 	call	30f44 <memcmp>
   30be4:	1000021e 	bne	r2,zero,30bf0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   30be8:	e0bffc17 	ldw	r2,-16(fp)
   30bec:	00000706 	br	30c0c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   30bf0:	e0bffc17 	ldw	r2,-16(fp)
   30bf4:	10800017 	ldw	r2,0(r2)
   30bf8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   30bfc:	e0fffc17 	ldw	r3,-16(fp)
   30c00:	e0bfff17 	ldw	r2,-4(fp)
   30c04:	18bff01e 	bne	r3,r2,30bc8 <__alt_data_end+0xffff0bc8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   30c08:	0005883a 	mov	r2,zero
}
   30c0c:	e037883a 	mov	sp,fp
   30c10:	dfc00117 	ldw	ra,4(sp)
   30c14:	df000017 	ldw	fp,0(sp)
   30c18:	dec00204 	addi	sp,sp,8
   30c1c:	f800283a 	ret

00030c20 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   30c20:	defffb04 	addi	sp,sp,-20
   30c24:	dfc00415 	stw	ra,16(sp)
   30c28:	df000315 	stw	fp,12(sp)
   30c2c:	df000304 	addi	fp,sp,12
   30c30:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   30c34:	d0a00717 	ldw	r2,-32740(gp)
   30c38:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   30c3c:	00003106 	br	30d04 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   30c40:	e0bffd17 	ldw	r2,-12(fp)
   30c44:	10800217 	ldw	r2,8(r2)
   30c48:	1009883a 	mov	r4,r2
   30c4c:	002b26c0 	call	2b26c <strlen>
   30c50:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   30c54:	e0bffd17 	ldw	r2,-12(fp)
   30c58:	10c00217 	ldw	r3,8(r2)
   30c5c:	e0bffe17 	ldw	r2,-8(fp)
   30c60:	10bfffc4 	addi	r2,r2,-1
   30c64:	1885883a 	add	r2,r3,r2
   30c68:	10800003 	ldbu	r2,0(r2)
   30c6c:	10803fcc 	andi	r2,r2,255
   30c70:	1080201c 	xori	r2,r2,128
   30c74:	10bfe004 	addi	r2,r2,-128
   30c78:	10800bd8 	cmpnei	r2,r2,47
   30c7c:	1000031e 	bne	r2,zero,30c8c <alt_find_file+0x6c>
    {
      len -= 1;
   30c80:	e0bffe17 	ldw	r2,-8(fp)
   30c84:	10bfffc4 	addi	r2,r2,-1
   30c88:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   30c8c:	e0bffe17 	ldw	r2,-8(fp)
   30c90:	e0ffff17 	ldw	r3,-4(fp)
   30c94:	1885883a 	add	r2,r3,r2
   30c98:	10800003 	ldbu	r2,0(r2)
   30c9c:	10803fcc 	andi	r2,r2,255
   30ca0:	1080201c 	xori	r2,r2,128
   30ca4:	10bfe004 	addi	r2,r2,-128
   30ca8:	10800be0 	cmpeqi	r2,r2,47
   30cac:	1000081e 	bne	r2,zero,30cd0 <alt_find_file+0xb0>
   30cb0:	e0bffe17 	ldw	r2,-8(fp)
   30cb4:	e0ffff17 	ldw	r3,-4(fp)
   30cb8:	1885883a 	add	r2,r3,r2
   30cbc:	10800003 	ldbu	r2,0(r2)
   30cc0:	10803fcc 	andi	r2,r2,255
   30cc4:	1080201c 	xori	r2,r2,128
   30cc8:	10bfe004 	addi	r2,r2,-128
   30ccc:	10000a1e 	bne	r2,zero,30cf8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   30cd0:	e0bffd17 	ldw	r2,-12(fp)
   30cd4:	10800217 	ldw	r2,8(r2)
   30cd8:	e0fffe17 	ldw	r3,-8(fp)
   30cdc:	180d883a 	mov	r6,r3
   30ce0:	e17fff17 	ldw	r5,-4(fp)
   30ce4:	1009883a 	mov	r4,r2
   30ce8:	0030f440 	call	30f44 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   30cec:	1000021e 	bne	r2,zero,30cf8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   30cf0:	e0bffd17 	ldw	r2,-12(fp)
   30cf4:	00000706 	br	30d14 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   30cf8:	e0bffd17 	ldw	r2,-12(fp)
   30cfc:	10800017 	ldw	r2,0(r2)
   30d00:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   30d04:	e0fffd17 	ldw	r3,-12(fp)
   30d08:	d0a00704 	addi	r2,gp,-32740
   30d0c:	18bfcc1e 	bne	r3,r2,30c40 <__alt_data_end+0xffff0c40>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   30d10:	0005883a 	mov	r2,zero
}
   30d14:	e037883a 	mov	sp,fp
   30d18:	dfc00117 	ldw	ra,4(sp)
   30d1c:	df000017 	ldw	fp,0(sp)
   30d20:	dec00204 	addi	sp,sp,8
   30d24:	f800283a 	ret

00030d28 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   30d28:	defffc04 	addi	sp,sp,-16
   30d2c:	df000315 	stw	fp,12(sp)
   30d30:	df000304 	addi	fp,sp,12
   30d34:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   30d38:	00bffa04 	movi	r2,-24
   30d3c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   30d40:	e03ffd15 	stw	zero,-12(fp)
   30d44:	00001906 	br	30dac <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   30d48:	008000f4 	movhi	r2,3
   30d4c:	10879e04 	addi	r2,r2,7800
   30d50:	e0fffd17 	ldw	r3,-12(fp)
   30d54:	18c00324 	muli	r3,r3,12
   30d58:	10c5883a 	add	r2,r2,r3
   30d5c:	10800017 	ldw	r2,0(r2)
   30d60:	10000f1e 	bne	r2,zero,30da0 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   30d64:	008000f4 	movhi	r2,3
   30d68:	10879e04 	addi	r2,r2,7800
   30d6c:	e0fffd17 	ldw	r3,-12(fp)
   30d70:	18c00324 	muli	r3,r3,12
   30d74:	10c5883a 	add	r2,r2,r3
   30d78:	e0ffff17 	ldw	r3,-4(fp)
   30d7c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   30d80:	d0e00b17 	ldw	r3,-32724(gp)
   30d84:	e0bffd17 	ldw	r2,-12(fp)
   30d88:	1880020e 	bge	r3,r2,30d94 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   30d8c:	e0bffd17 	ldw	r2,-12(fp)
   30d90:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
   30d94:	e0bffd17 	ldw	r2,-12(fp)
   30d98:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   30d9c:	00000606 	br	30db8 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   30da0:	e0bffd17 	ldw	r2,-12(fp)
   30da4:	10800044 	addi	r2,r2,1
   30da8:	e0bffd15 	stw	r2,-12(fp)
   30dac:	e0bffd17 	ldw	r2,-12(fp)
   30db0:	10800810 	cmplti	r2,r2,32
   30db4:	103fe41e 	bne	r2,zero,30d48 <__alt_data_end+0xffff0d48>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   30db8:	e0bffe17 	ldw	r2,-8(fp)
}
   30dbc:	e037883a 	mov	sp,fp
   30dc0:	df000017 	ldw	fp,0(sp)
   30dc4:	dec00104 	addi	sp,sp,4
   30dc8:	f800283a 	ret

00030dcc <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   30dcc:	defffb04 	addi	sp,sp,-20
   30dd0:	df000415 	stw	fp,16(sp)
   30dd4:	df000404 	addi	fp,sp,16
   30dd8:	e13ffe15 	stw	r4,-8(fp)
   30ddc:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   30de0:	e0bfff17 	ldw	r2,-4(fp)
   30de4:	10840070 	cmpltui	r2,r2,4097
   30de8:	1000021e 	bne	r2,zero,30df4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   30dec:	00840004 	movi	r2,4096
   30df0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   30df4:	e0fffe17 	ldw	r3,-8(fp)
   30df8:	e0bfff17 	ldw	r2,-4(fp)
   30dfc:	1885883a 	add	r2,r3,r2
   30e00:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   30e04:	e0bffe17 	ldw	r2,-8(fp)
   30e08:	e0bffc15 	stw	r2,-16(fp)
   30e0c:	00000506 	br	30e24 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   30e10:	e0bffc17 	ldw	r2,-16(fp)
   30e14:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   30e18:	e0bffc17 	ldw	r2,-16(fp)
   30e1c:	10800804 	addi	r2,r2,32
   30e20:	e0bffc15 	stw	r2,-16(fp)
   30e24:	e0fffc17 	ldw	r3,-16(fp)
   30e28:	e0bffd17 	ldw	r2,-12(fp)
   30e2c:	18bff836 	bltu	r3,r2,30e10 <__alt_data_end+0xffff0e10>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   30e30:	e0bffe17 	ldw	r2,-8(fp)
   30e34:	108007cc 	andi	r2,r2,31
   30e38:	10000226 	beq	r2,zero,30e44 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   30e3c:	e0bffc17 	ldw	r2,-16(fp)
   30e40:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   30e44:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   30e48:	0001883a 	nop
   30e4c:	e037883a 	mov	sp,fp
   30e50:	df000017 	ldw	fp,0(sp)
   30e54:	dec00104 	addi	sp,sp,4
   30e58:	f800283a 	ret

00030e5c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   30e5c:	defffe04 	addi	sp,sp,-8
   30e60:	df000115 	stw	fp,4(sp)
   30e64:	df000104 	addi	fp,sp,4
   30e68:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   30e6c:	e0bfff17 	ldw	r2,-4(fp)
   30e70:	10bffe84 	addi	r2,r2,-6
   30e74:	10c00428 	cmpgeui	r3,r2,16
   30e78:	18001a1e 	bne	r3,zero,30ee4 <alt_exception_cause_generated_bad_addr+0x88>
   30e7c:	100690ba 	slli	r3,r2,2
   30e80:	008000f4 	movhi	r2,3
   30e84:	1083a504 	addi	r2,r2,3732
   30e88:	1885883a 	add	r2,r3,r2
   30e8c:	10800017 	ldw	r2,0(r2)
   30e90:	1000683a 	jmp	r2
   30e94:	00030ed4 	movui	zero,3131
   30e98:	00030ed4 	movui	zero,3131
   30e9c:	00030ee4 	muli	zero,zero,3131
   30ea0:	00030ee4 	muli	zero,zero,3131
   30ea4:	00030ee4 	muli	zero,zero,3131
   30ea8:	00030ed4 	movui	zero,3131
   30eac:	00030edc 	xori	zero,zero,3131
   30eb0:	00030ee4 	muli	zero,zero,3131
   30eb4:	00030ed4 	movui	zero,3131
   30eb8:	00030ed4 	movui	zero,3131
   30ebc:	00030ee4 	muli	zero,zero,3131
   30ec0:	00030ed4 	movui	zero,3131
   30ec4:	00030edc 	xori	zero,zero,3131
   30ec8:	00030ee4 	muli	zero,zero,3131
   30ecc:	00030ee4 	muli	zero,zero,3131
   30ed0:	00030ed4 	movui	zero,3131
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   30ed4:	00800044 	movi	r2,1
   30ed8:	00000306 	br	30ee8 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   30edc:	0005883a 	mov	r2,zero
   30ee0:	00000106 	br	30ee8 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   30ee4:	0005883a 	mov	r2,zero
  }
}
   30ee8:	e037883a 	mov	sp,fp
   30eec:	df000017 	ldw	fp,0(sp)
   30ef0:	dec00104 	addi	sp,sp,4
   30ef4:	f800283a 	ret

00030ef8 <atexit>:
   30ef8:	200b883a 	mov	r5,r4
   30efc:	000f883a 	mov	r7,zero
   30f00:	000d883a 	mov	r6,zero
   30f04:	0009883a 	mov	r4,zero
   30f08:	0030fc01 	jmpi	30fc0 <__register_exitproc>

00030f0c <exit>:
   30f0c:	defffe04 	addi	sp,sp,-8
   30f10:	000b883a 	mov	r5,zero
   30f14:	dc000015 	stw	r16,0(sp)
   30f18:	dfc00115 	stw	ra,4(sp)
   30f1c:	2021883a 	mov	r16,r4
   30f20:	00310d80 	call	310d8 <__call_exitprocs>
   30f24:	008000f4 	movhi	r2,3
   30f28:	108c1704 	addi	r2,r2,12380
   30f2c:	11000017 	ldw	r4,0(r2)
   30f30:	20800f17 	ldw	r2,60(r4)
   30f34:	10000126 	beq	r2,zero,30f3c <exit+0x30>
   30f38:	103ee83a 	callr	r2
   30f3c:	8009883a 	mov	r4,r16
   30f40:	00312580 	call	31258 <_exit>

00030f44 <memcmp>:
   30f44:	01c000c4 	movi	r7,3
   30f48:	3980192e 	bgeu	r7,r6,30fb0 <memcmp+0x6c>
   30f4c:	2144b03a 	or	r2,r4,r5
   30f50:	11c4703a 	and	r2,r2,r7
   30f54:	10000f26 	beq	r2,zero,30f94 <memcmp+0x50>
   30f58:	20800003 	ldbu	r2,0(r4)
   30f5c:	28c00003 	ldbu	r3,0(r5)
   30f60:	10c0151e 	bne	r2,r3,30fb8 <memcmp+0x74>
   30f64:	31bfff84 	addi	r6,r6,-2
   30f68:	01ffffc4 	movi	r7,-1
   30f6c:	00000406 	br	30f80 <memcmp+0x3c>
   30f70:	20800003 	ldbu	r2,0(r4)
   30f74:	28c00003 	ldbu	r3,0(r5)
   30f78:	31bfffc4 	addi	r6,r6,-1
   30f7c:	10c00e1e 	bne	r2,r3,30fb8 <memcmp+0x74>
   30f80:	21000044 	addi	r4,r4,1
   30f84:	29400044 	addi	r5,r5,1
   30f88:	31fff91e 	bne	r6,r7,30f70 <__alt_data_end+0xffff0f70>
   30f8c:	0005883a 	mov	r2,zero
   30f90:	f800283a 	ret
   30f94:	20c00017 	ldw	r3,0(r4)
   30f98:	28800017 	ldw	r2,0(r5)
   30f9c:	18bfee1e 	bne	r3,r2,30f58 <__alt_data_end+0xffff0f58>
   30fa0:	31bfff04 	addi	r6,r6,-4
   30fa4:	21000104 	addi	r4,r4,4
   30fa8:	29400104 	addi	r5,r5,4
   30fac:	39bff936 	bltu	r7,r6,30f94 <__alt_data_end+0xffff0f94>
   30fb0:	303fe91e 	bne	r6,zero,30f58 <__alt_data_end+0xffff0f58>
   30fb4:	003ff506 	br	30f8c <__alt_data_end+0xffff0f8c>
   30fb8:	10c5c83a 	sub	r2,r2,r3
   30fbc:	f800283a 	ret

00030fc0 <__register_exitproc>:
   30fc0:	defffa04 	addi	sp,sp,-24
   30fc4:	dc000315 	stw	r16,12(sp)
   30fc8:	040000f4 	movhi	r16,3
   30fcc:	840c1704 	addi	r16,r16,12380
   30fd0:	80c00017 	ldw	r3,0(r16)
   30fd4:	dc400415 	stw	r17,16(sp)
   30fd8:	dfc00515 	stw	ra,20(sp)
   30fdc:	18805217 	ldw	r2,328(r3)
   30fe0:	2023883a 	mov	r17,r4
   30fe4:	10003726 	beq	r2,zero,310c4 <__register_exitproc+0x104>
   30fe8:	10c00117 	ldw	r3,4(r2)
   30fec:	010007c4 	movi	r4,31
   30ff0:	20c00e16 	blt	r4,r3,3102c <__register_exitproc+0x6c>
   30ff4:	1a000044 	addi	r8,r3,1
   30ff8:	8800221e 	bne	r17,zero,31084 <__register_exitproc+0xc4>
   30ffc:	18c00084 	addi	r3,r3,2
   31000:	18c7883a 	add	r3,r3,r3
   31004:	18c7883a 	add	r3,r3,r3
   31008:	12000115 	stw	r8,4(r2)
   3100c:	10c7883a 	add	r3,r2,r3
   31010:	19400015 	stw	r5,0(r3)
   31014:	0005883a 	mov	r2,zero
   31018:	dfc00517 	ldw	ra,20(sp)
   3101c:	dc400417 	ldw	r17,16(sp)
   31020:	dc000317 	ldw	r16,12(sp)
   31024:	dec00604 	addi	sp,sp,24
   31028:	f800283a 	ret
   3102c:	00800034 	movhi	r2,0
   31030:	10800004 	addi	r2,r2,0
   31034:	10002626 	beq	r2,zero,310d0 <__register_exitproc+0x110>
   31038:	01006404 	movi	r4,400
   3103c:	d9400015 	stw	r5,0(sp)
   31040:	d9800115 	stw	r6,4(sp)
   31044:	d9c00215 	stw	r7,8(sp)
   31048:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   3104c:	d9400017 	ldw	r5,0(sp)
   31050:	d9800117 	ldw	r6,4(sp)
   31054:	d9c00217 	ldw	r7,8(sp)
   31058:	10001d26 	beq	r2,zero,310d0 <__register_exitproc+0x110>
   3105c:	81000017 	ldw	r4,0(r16)
   31060:	10000115 	stw	zero,4(r2)
   31064:	02000044 	movi	r8,1
   31068:	22405217 	ldw	r9,328(r4)
   3106c:	0007883a 	mov	r3,zero
   31070:	12400015 	stw	r9,0(r2)
   31074:	20805215 	stw	r2,328(r4)
   31078:	10006215 	stw	zero,392(r2)
   3107c:	10006315 	stw	zero,396(r2)
   31080:	883fde26 	beq	r17,zero,30ffc <__alt_data_end+0xffff0ffc>
   31084:	18c9883a 	add	r4,r3,r3
   31088:	2109883a 	add	r4,r4,r4
   3108c:	1109883a 	add	r4,r2,r4
   31090:	21802215 	stw	r6,136(r4)
   31094:	01800044 	movi	r6,1
   31098:	12406217 	ldw	r9,392(r2)
   3109c:	30cc983a 	sll	r6,r6,r3
   310a0:	4992b03a 	or	r9,r9,r6
   310a4:	12406215 	stw	r9,392(r2)
   310a8:	21c04215 	stw	r7,264(r4)
   310ac:	01000084 	movi	r4,2
   310b0:	893fd21e 	bne	r17,r4,30ffc <__alt_data_end+0xffff0ffc>
   310b4:	11006317 	ldw	r4,396(r2)
   310b8:	218cb03a 	or	r6,r4,r6
   310bc:	11806315 	stw	r6,396(r2)
   310c0:	003fce06 	br	30ffc <__alt_data_end+0xffff0ffc>
   310c4:	18805304 	addi	r2,r3,332
   310c8:	18805215 	stw	r2,328(r3)
   310cc:	003fc606 	br	30fe8 <__alt_data_end+0xffff0fe8>
   310d0:	00bfffc4 	movi	r2,-1
   310d4:	003fd006 	br	31018 <__alt_data_end+0xffff1018>

000310d8 <__call_exitprocs>:
   310d8:	defff504 	addi	sp,sp,-44
   310dc:	df000915 	stw	fp,36(sp)
   310e0:	dd400615 	stw	r21,24(sp)
   310e4:	dc800315 	stw	r18,12(sp)
   310e8:	dfc00a15 	stw	ra,40(sp)
   310ec:	ddc00815 	stw	r23,32(sp)
   310f0:	dd800715 	stw	r22,28(sp)
   310f4:	dd000515 	stw	r20,20(sp)
   310f8:	dcc00415 	stw	r19,16(sp)
   310fc:	dc400215 	stw	r17,8(sp)
   31100:	dc000115 	stw	r16,4(sp)
   31104:	d9000015 	stw	r4,0(sp)
   31108:	2839883a 	mov	fp,r5
   3110c:	04800044 	movi	r18,1
   31110:	057fffc4 	movi	r21,-1
   31114:	008000f4 	movhi	r2,3
   31118:	108c1704 	addi	r2,r2,12380
   3111c:	12000017 	ldw	r8,0(r2)
   31120:	45005217 	ldw	r20,328(r8)
   31124:	44c05204 	addi	r19,r8,328
   31128:	a0001c26 	beq	r20,zero,3119c <__call_exitprocs+0xc4>
   3112c:	a0800117 	ldw	r2,4(r20)
   31130:	15ffffc4 	addi	r23,r2,-1
   31134:	b8000d16 	blt	r23,zero,3116c <__call_exitprocs+0x94>
   31138:	14000044 	addi	r16,r2,1
   3113c:	8421883a 	add	r16,r16,r16
   31140:	8421883a 	add	r16,r16,r16
   31144:	84402004 	addi	r17,r16,128
   31148:	a463883a 	add	r17,r20,r17
   3114c:	a421883a 	add	r16,r20,r16
   31150:	e0001e26 	beq	fp,zero,311cc <__call_exitprocs+0xf4>
   31154:	80804017 	ldw	r2,256(r16)
   31158:	e0801c26 	beq	fp,r2,311cc <__call_exitprocs+0xf4>
   3115c:	bdffffc4 	addi	r23,r23,-1
   31160:	843fff04 	addi	r16,r16,-4
   31164:	8c7fff04 	addi	r17,r17,-4
   31168:	bd7ff91e 	bne	r23,r21,31150 <__alt_data_end+0xffff1150>
   3116c:	00800034 	movhi	r2,0
   31170:	10800004 	addi	r2,r2,0
   31174:	10000926 	beq	r2,zero,3119c <__call_exitprocs+0xc4>
   31178:	a0800117 	ldw	r2,4(r20)
   3117c:	1000301e 	bne	r2,zero,31240 <__call_exitprocs+0x168>
   31180:	a0800017 	ldw	r2,0(r20)
   31184:	10003226 	beq	r2,zero,31250 <__call_exitprocs+0x178>
   31188:	a009883a 	mov	r4,r20
   3118c:	98800015 	stw	r2,0(r19)
   31190:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   31194:	9d000017 	ldw	r20,0(r19)
   31198:	a03fe41e 	bne	r20,zero,3112c <__alt_data_end+0xffff112c>
   3119c:	dfc00a17 	ldw	ra,40(sp)
   311a0:	df000917 	ldw	fp,36(sp)
   311a4:	ddc00817 	ldw	r23,32(sp)
   311a8:	dd800717 	ldw	r22,28(sp)
   311ac:	dd400617 	ldw	r21,24(sp)
   311b0:	dd000517 	ldw	r20,20(sp)
   311b4:	dcc00417 	ldw	r19,16(sp)
   311b8:	dc800317 	ldw	r18,12(sp)
   311bc:	dc400217 	ldw	r17,8(sp)
   311c0:	dc000117 	ldw	r16,4(sp)
   311c4:	dec00b04 	addi	sp,sp,44
   311c8:	f800283a 	ret
   311cc:	a0800117 	ldw	r2,4(r20)
   311d0:	80c00017 	ldw	r3,0(r16)
   311d4:	10bfffc4 	addi	r2,r2,-1
   311d8:	15c01426 	beq	r2,r23,3122c <__call_exitprocs+0x154>
   311dc:	80000015 	stw	zero,0(r16)
   311e0:	183fde26 	beq	r3,zero,3115c <__alt_data_end+0xffff115c>
   311e4:	95c8983a 	sll	r4,r18,r23
   311e8:	a0806217 	ldw	r2,392(r20)
   311ec:	a5800117 	ldw	r22,4(r20)
   311f0:	2084703a 	and	r2,r4,r2
   311f4:	10000b26 	beq	r2,zero,31224 <__call_exitprocs+0x14c>
   311f8:	a0806317 	ldw	r2,396(r20)
   311fc:	2088703a 	and	r4,r4,r2
   31200:	20000c1e 	bne	r4,zero,31234 <__call_exitprocs+0x15c>
   31204:	89400017 	ldw	r5,0(r17)
   31208:	d9000017 	ldw	r4,0(sp)
   3120c:	183ee83a 	callr	r3
   31210:	a0800117 	ldw	r2,4(r20)
   31214:	15bfbf1e 	bne	r2,r22,31114 <__alt_data_end+0xffff1114>
   31218:	98800017 	ldw	r2,0(r19)
   3121c:	153fcf26 	beq	r2,r20,3115c <__alt_data_end+0xffff115c>
   31220:	003fbc06 	br	31114 <__alt_data_end+0xffff1114>
   31224:	183ee83a 	callr	r3
   31228:	003ff906 	br	31210 <__alt_data_end+0xffff1210>
   3122c:	a5c00115 	stw	r23,4(r20)
   31230:	003feb06 	br	311e0 <__alt_data_end+0xffff11e0>
   31234:	89000017 	ldw	r4,0(r17)
   31238:	183ee83a 	callr	r3
   3123c:	003ff406 	br	31210 <__alt_data_end+0xffff1210>
   31240:	a0800017 	ldw	r2,0(r20)
   31244:	a027883a 	mov	r19,r20
   31248:	1029883a 	mov	r20,r2
   3124c:	003fb606 	br	31128 <__alt_data_end+0xffff1128>
   31250:	0005883a 	mov	r2,zero
   31254:	003ffb06 	br	31244 <__alt_data_end+0xffff1244>

00031258 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   31258:	defffd04 	addi	sp,sp,-12
   3125c:	df000215 	stw	fp,8(sp)
   31260:	df000204 	addi	fp,sp,8
   31264:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   31268:	0001883a 	nop
   3126c:	e0bfff17 	ldw	r2,-4(fp)
   31270:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   31274:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   31278:	10000226 	beq	r2,zero,31284 <_exit+0x2c>
    ALT_SIM_FAIL();
   3127c:	002af070 	cmpltui	zero,zero,43969
   31280:	00000106 	br	31288 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   31284:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   31288:	003fff06 	br	31288 <__alt_data_end+0xffff1288>
