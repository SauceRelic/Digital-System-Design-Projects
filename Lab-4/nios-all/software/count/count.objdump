
count.elf:     file format elf32-littlenios2
count.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x0001154c memsz 0x0001154c flags r-x
    LOAD off    0x0001256c vaddr 0x0003156c paddr 0x0003305c align 2**12
         filesz 0x00001af0 memsz 0x00001af0 flags rw-
    LOAD off    0x00014b4c vaddr 0x00034b4c paddr 0x00034b4c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011008  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000320  0003124c  0003124c  0001224c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af0  0003156c  0003305c  0001256c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00034b4c  00034b4c  00014b4c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00034cac  00034cac  0001405c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001405c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001048  00000000  00000000  00014080  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000249fb  00000000  00000000  000150c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009942  00000000  00000000  00039ac3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c5ba  00000000  00000000  00043405  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002328  00000000  00000000  0004f9c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003d22  00000000  00000000  00051ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00019709  00000000  00000000  00055a0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  0006f114  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001a48  00000000  00000000  0006f178  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00073f46  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  00073f49  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00073f55  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00073f56  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00073f57  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00073f5b  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00073f5f  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  00073f63  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  00073f6e  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  00073f79  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000009  00000000  00000000  00073f84  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000051  00000000  00000000  00073f8d  2**0
                  CONTENTS, READONLY
 29 .jdi          00005818  00000000  00000000  00073fde  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     00048c62  00000000  00000000  000797f6  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
0003124c l    d  .rodata	00000000 .rodata
0003156c l    d  .rwdata	00000000 .rwdata
00034b4c l    d  .bss	00000000 .bss
00034cac l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../count_bsp//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 count.c
00000000 l    df *ABS*	00000000 w_pow.c
00000000 l    df *ABS*	00000000 e_pow.c
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_finite.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 s_rint.c
00031260 l     O .rodata	00000010 TWO52
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
0003156c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
000313b6 l     O .rodata	00000010 zeroes.4404
00026b30 l     F .text	000000bc __sbprintf
000313c6 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00026d40 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00028870 l     F .text	00000008 __fp_unlock
00028884 l     F .text	0000019c __sinit.part.1
00028a20 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
000319b0 l     O .rwdata	00000020 lc_ctype_charset
00031990 l     O .rwdata	00000020 lc_message_charset
000319d0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000313f4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002b2c4 l     F .text	000000fc __sprint_r.part.0
00031528 l     O .rodata	00000010 blanks.4348
00031518 l     O .rodata	00000010 zeroes.4349
0002c850 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0002e914 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002ea20 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002ea4c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002eb38 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002ec18 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002ed04 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002eed8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0003304c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0002f154 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002f288 l     F .text	00000034 alt_dev_reg
00031fb8 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002f57c l     F .text	0000020c altera_avalon_jtag_uart_irq
0002f788 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0002fdc0 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00030180 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
000305f4 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00030734 l     F .text	0000003c alt_get_errno
00030770 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00034b80 g     O .bss	00000004 alt_instruction_exception_handler
0002ae48 g     F .text	00000074 _mprec_log10
0002af34 g     F .text	0000008c __any_on
0002d2a8 g     F .text	00000054 _isatty_r
00031400 g     O .rodata	00000028 __mprec_tinytens
0002ee14 g     F .text	0000007c alt_main
00034bac g     O .bss	00000100 alt_irq
00021cd0 g     F .text	00000014 fabs
0002d2fc g     F .text	00000060 _lseek_r
0003305c g       *ABS*	00000000 __flash_rwdata_start
00023474 g     F .text	00000088 .hidden __eqdf2
00034cac g       *ABS*	00000000 __alt_heap_start
000248e0 g     F .text	0000003c printf
0002dbd4 g     F .text	0000009c _wcrtomb_r
0002b0ec g     F .text	0000005c __sseek
00028bc0 g     F .text	00000010 __sinit
0002da7c g     F .text	00000140 __swbuf_r
000291cc g     F .text	0000007c _setlocale_r
00028a28 g     F .text	00000068 __sfmoreglue
0002eeb4 g     F .text	00000024 __malloc_unlock
0002030c g     F .text	000001d4 hex_bit
0002d35c g     F .text	0000015c memmove
00028ba8 g     F .text	00000018 _cleanup
00029fc4 g     F .text	000000a8 _Balloc
000234fc g     F .text	000000dc .hidden __gtdf2
00030b2c g     F .text	00000024 altera_nios2_gen2_irq_init
000248a0 g     F .text	00000010 __errno
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
0002cd90 g     F .text	0000005c _fstat_r
00034b64 g     O .bss	00000004 errno
0002b068 g     F .text	00000008 __seofread
00034b6c g     O .bss	00000004 alt_argv
0003b018 g       *ABS*	00000000 _gp
0002f124 g     F .text	00000030 usleep
00031e38 g     O .rwdata	00000180 alt_fd_list
00030b50 g     F .text	00000090 alt_find_dev
00029d54 g     F .text	00000148 memcpy
00028878 g     F .text	0000000c _cleanup_r
00024760 g     F .text	000000dc .hidden __floatsidf
000306b8 g     F .text	0000007c alt_io_redirect
000235d8 g     F .text	000000f4 .hidden __ltdf2
0003124c g       *ABS*	00000000 __DTOR_END__
00030e1c g     F .text	0000009c alt_exception_cause_generated_bad_addr
00021d00 g     F .text	00000074 __fpclassifyd
0002ada4 g     F .text	000000a4 __ratio
0002c834 g     F .text	0000001c __vfiprintf_internal
0002f980 g     F .text	0000021c altera_avalon_jtag_uart_read
000248b0 g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00022224 g     F .text	00000064 .hidden __udivsi3
0002eb74 g     F .text	000000a4 isatty
00031450 g     O .rodata	000000c8 __mprec_tens
00029248 g     F .text	0000000c __locale_charset
00030d8c g     F .text	00000090 alt_icache_flush
00034b60 g     O .bss	00000004 __malloc_top_pad
00033024 g     O .rwdata	00000004 __mb_cur_max
00029278 g     F .text	0000000c _localeconv_r
0002cdec g     F .text	000004bc __sfvwrite_r
0002a3d0 g     F .text	0000003c __i2b
0002afc0 g     F .text	00000054 _sbrk_r
0002d4b8 g     F .text	00000060 _read_r
00033044 g     O .rwdata	00000004 alt_max_fd
0002ca84 g     F .text	000000f0 _fclose_r
00028840 g     F .text	00000030 fflush
00034b5c g     O .bss	00000004 __malloc_max_sbrked_mem
000222e0 g     F .text	000008ac .hidden __adddf3
0002ab4c g     F .text	0000010c __b2d
0002e334 g     F .text	00000538 .hidden __umoddi3
0002ed40 g     F .text	000000d4 lseek
00033018 g     O .rwdata	00000004 __fdlib_version
0003301c g     O .rwdata	00000004 _global_impure_ptr
0002d518 g     F .text	00000564 _realloc_r
00034cac g       *ABS*	00000000 __bss_end
00030504 g     F .text	000000f0 alt_iic_isr_register
00030a24 g     F .text	00000108 alt_tick
0002ddbc g     F .text	00000578 .hidden __udivdi3
0002ccec g     F .text	00000024 _fputwc_r
00031428 g     O .rodata	00000028 __mprec_bigtens
0002a1b4 g     F .text	00000104 __s2b
0002e86c g     F .text	000000a8 .hidden __floatunsidf
0002a88c g     F .text	00000060 __mcmp
00028be0 g     F .text	00000018 __fp_lock_all
000304b8 g     F .text	0000004c alt_ic_irq_enabled
00030988 g     F .text	0000009c alt_alarm_stop
00034b74 g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
00031e10 g     O .rwdata	00000028 alt_dev_null
00021d88 g     F .text	000001ec rint
00030138 g     F .text	00000048 alt_dcache_flush_all
0002a2b8 g     F .text	00000068 __hi0bits
000246e0 g     F .text	00000080 .hidden __fixdfsi
0003305c g       *ABS*	00000000 __ram_rwdata_end
0003303c g     O .rwdata	00000008 alt_dev_list
0002f190 g     F .text	000000f8 write
0003156c g       *ABS*	00000000 __ram_rodata_end
0002ea88 g     F .text	000000b0 fstat
000235d8 g     F .text	000000f4 .hidden __ledf2
0002a604 g     F .text	00000140 __pow5mult
0002b3d8 g     F .text	0000145c ___vfiprintf_internal_r
00034b54 g     O .bss	00000004 __nlocale_changed
00022288 g     F .text	00000058 .hidden __umodsi3
00034cac g       *ABS*	00000000 end
0002f4bc g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0003124c g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002fe38 g     F .text	0000007c alt_avalon_timer_sc_init
0002483c g     F .text	00000064 .hidden __clzsi2
0002fb9c g     F .text	00000224 altera_avalon_jtag_uart_write
00028bd0 g     F .text	00000004 __sfp_lock_acquire
00029c70 g     F .text	000000e4 memchr
0002491c g     F .text	000021f8 ___vfprintf_internal_r
00028d34 g     F .text	00000310 _free_r
00029254 g     F .text	00000010 __locale_mb_cur_max
00031098 g     F .text	00000180 __call_exitprocs
00034b50 g     O .bss	00000004 __mlocale_changed
00033028 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00034b78 g     O .bss	00000004 _alt_tick_rate
0002a744 g     F .text	00000148 __lshift
00034b7c g     O .bss	00000004 _alt_nticks
0002ef14 g     F .text	000000fc read
0002f2f4 g     F .text	00000064 alt_sys_init
00030f80 g     F .text	00000118 __register_exitproc
0002a40c g     F .text	000001f8 __multiply
000209a4 g     F .text	000010a4 __ieee754_pow
0002f828 g     F .text	00000068 altera_avalon_jtag_uart_close
000204e0 g     F .text	000004c4 pow
0003156c g       *ABS*	00000000 __ram_rwdata_start
0003124c g       *ABS*	00000000 __ram_rodata_start
00034b84 g     O .bss	00000028 __malloc_current_mallinfo
0002ac58 g     F .text	0000014c __d2b
0002f358 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00030ce8 g     F .text	000000a4 alt_get_fd
0002ffe0 g     F .text	00000158 alt_busy_sleep
0002c96c g     F .text	00000054 _close_r
00030f04 g     F .text	0000007c memcmp
0002f418 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00034cac g       *ABS*	00000000 __alt_stack_base
0002f468 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00026bec g     F .text	00000154 __swsetup_r
00022b8c g     F .text	000008e8 .hidden __divdf3
00028a90 g     F .text	00000118 __sfp
0002aebc g     F .text	00000078 __copybits
00031a08 g     O .rwdata	00000408 __malloc_av_
00028bdc g     F .text	00000004 __sinit_lock_release
000236cc g     F .text	00000718 .hidden __muldf3
0002b014 g     F .text	00000054 __sread
00030be0 g     F .text	00000108 alt_find_file
000301bc g     F .text	000000a4 alt_dev_llist_insert
0002ee90 g     F .text	00000024 __malloc_lock
0002f074 g     F .text	000000b0 sbrk
000287e4 g     F .text	0000005c _fflush_r
0002c9c0 g     F .text	000000c4 _calloc_r
00034b4c g       *ABS*	00000000 __bss_start
00029e9c g     F .text	00000128 memset
00020290 g     F .text	0000007c main
00034b70 g     O .bss	00000004 alt_envp
00034b58 g     O .bss	00000004 __malloc_max_total_mem
0002f3b8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0002dbbc g     F .text	00000018 __swbuf
0002b148 g     F .text	00000008 __sclose
00021d74 g     F .text	00000008 matherr
00040000 g       *ABS*	00000000 __alt_heap_limit
0002cb74 g     F .text	00000014 fclose
00026f40 g     F .text	00001688 _dtoa_r
00029464 g     F .text	0000080c _malloc_r
0002dd30 g     F .text	00000030 __ascii_wctomb
00033048 g     O .rwdata	00000004 alt_errno
00029044 g     F .text	000000c4 _fwalk
0002212c g     F .text	00000084 .hidden __divsi3
00028c10 g     F .text	00000124 _malloc_trim_r
0003124c g       *ABS*	00000000 __CTOR_END__
00021ce4 g     F .text	0000001c finite
0002b150 g     F .text	000000dc strcmp
0003124c g       *ABS*	00000000 __flash_rodata_start
0003124c g       *ABS*	00000000 __DTOR_LIST__
00022110 g     F .text	0000001c copysign
00023474 g     F .text	00000088 .hidden __nedf2
0002f2bc g     F .text	00000038 alt_irq_init
0002f010 g     F .text	00000064 alt_release_fd
00031270 g     O .rodata	00000100 .hidden __clz_tab
00034b4c g     O .bss	00000004 _PathLocale
00030eb8 g     F .text	00000014 atexit
0002c90c g     F .text	00000060 _write_r
00029284 g     F .text	00000018 setlocale
00033020 g     O .rwdata	00000004 _impure_ptr
00034b68 g     O .bss	00000004 alt_argc
000285c8 g     F .text	0000021c __sflush_r
00021f74 g     F .text	0000019c scalbn
000302c0 g     F .text	00000060 _do_dtors
00029270 g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
0002aae8 g     F .text	00000064 __ulp
00028bf8 g     F .text	00000018 __fp_unlock_all
00033034 g     O .rwdata	00000008 alt_fs_list
00021d7c g     F .text	0000000c nan
00020020 g       *ABS*	00000000 __ram_exceptions_start
0002929c g     F .text	0000000c localeconv
00021a48 g     F .text	00000288 __ieee754_sqrt
00030354 g     F .text	00000050 alt_ic_isr_register
0003305c g       *ABS*	00000000 _edata
00034cac g       *ABS*	00000000 _end
0002cb88 g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
0002f890 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0003042c g     F .text	0000008c alt_ic_irq_disable
0002b070 g     F .text	0000007c __swrite
0003302c g     O .rwdata	00000004 __malloc_trim_threshold
00029264 g     F .text	0000000c __locale_msgcharset
00030ecc g     F .text	00000038 exit
00029108 g     F .text	000000c4 _fwalk_reent
0002a8ec g     F .text	000001fc __mdiff
000221b0 g     F .text	00000074 .hidden __modsi3
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00028bd4 g     F .text	00000004 __sfp_lock_release
00031218 g     F .text	00000034 _exit
0002feb4 g     F .text	0000012c alt_alarm_start
000292a8 g     F .text	000001bc __smakebuf_r
0002b22c g     F .text	00000098 strlen
00030834 g     F .text	00000154 open
000234fc g     F .text	000000dc .hidden __gedf2
00033030 g     O .rwdata	00000004 __wctomb
0002b3c0 g     F .text	00000018 __sprint_r
00030320 g     F .text	00000034 alt_icache_flush_all
00033050 g     O .rwdata	00000004 alt_priority_mask
000303a4 g     F .text	00000088 alt_ic_irq_enable
00026b14 g     F .text	0000001c __vfprintf_internal
0002dd60 g     F .text	0000005c _wctomb_r
00023de4 g     F .text	000008fc .hidden __subdf3
0002a320 g     F .text	000000b0 __lo0bits
00033054 g     O .rwdata	00000008 alt_alarm_list
00030260 g     F .text	00000060 _do_ctors
0002dc70 g     F .text	000000c0 wcrtomb
0002e950 g     F .text	000000d0 close
0002ec80 g     F .text	00000084 alt_load
0002cd10 g     F .text	00000080 fputwc
00028bd8 g     F .text	00000004 __sinit_lock_acquire
0002a094 g     F .text	00000120 __multadd
0002a06c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__reset-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	1092eb04 	addi	r2,r2,19372
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	1092eb04 	addi	r2,r2,19372
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6da17 	ldw	r2,-25752(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6da17 	ldw	r2,-25752(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   2025c:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20260:	d6ac0614 	ori	gp,gp,45080
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20268:	1092d314 	ori	r2,r2,19276

    movhi r3, %hi(__bss_end)
   2026c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20270:	18d32b14 	ori	r3,r3,19628

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	002ec800 	call	2ec80 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	002ee140 	call	2ee14 <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <__alt_data_end+0xfffe028c>

00020290 <main>:
#include <math.h>
#include <unistd.h>

int hex_bit(int num, int bit);

int main() {
   20290:	defffc04 	addi	sp,sp,-16
   20294:	dfc00315 	stw	ra,12(sp)
   20298:	df000215 	stw	fp,8(sp)
   2029c:	dc000115 	stw	r16,4(sp)
   202a0:	df000204 	addi	fp,sp,8
	printf("entered main");
   202a4:	010000f4 	movhi	r4,3
   202a8:	21049304 	addi	r4,r4,4684
   202ac:	00248e00 	call	248e0 <printf>
	int count = 0;
   202b0:	e03ffe15 	stw	zero,-8(fp)

	while(1){
		IOWR(COUNT_PIO_BASE, 0,
   202b4:	01400044 	movi	r5,1
   202b8:	e13ffe17 	ldw	r4,-8(fp)
   202bc:	002030c0 	call	2030c <hex_bit>
   202c0:	1020923a 	slli	r16,r2,8
   202c4:	000b883a 	mov	r5,zero
   202c8:	e13ffe17 	ldw	r4,-8(fp)
   202cc:	002030c0 	call	2030c <hex_bit>
   202d0:	8087883a 	add	r3,r16,r2
   202d4:	00800134 	movhi	r2,4
   202d8:	10841004 	addi	r2,r2,4160
   202dc:	10c00035 	stwio	r3,0(r2)
				(hex_bit(count, 1) << 8)+hex_bit(count,0));

		count++;
   202e0:	e0bffe17 	ldw	r2,-8(fp)
   202e4:	10800044 	addi	r2,r2,1
   202e8:	e0bffe15 	stw	r2,-8(fp)
		if(count >= 256)
   202ec:	e0bffe17 	ldw	r2,-8(fp)
   202f0:	10804010 	cmplti	r2,r2,256
   202f4:	1000011e 	bne	r2,zero,202fc <main+0x6c>
			count = 0;
   202f8:	e03ffe15 	stw	zero,-8(fp)

		usleep(333333);
   202fc:	01000174 	movhi	r4,5
   20300:	21058544 	addi	r4,r4,5653
   20304:	002f1240 	call	2f124 <usleep>
	};
   20308:	003fea06 	br	202b4 <__alt_data_end+0xfffe02b4>

0002030c <hex_bit>:

	return 0;
}

int hex_bit(int num, int bit){
   2030c:	defff904 	addi	sp,sp,-28
   20310:	dfc00615 	stw	ra,24(sp)
   20314:	df000515 	stw	fp,20(sp)
   20318:	df000504 	addi	fp,sp,20
   2031c:	e13ffe15 	stw	r4,-8(fp)
   20320:	e17fff15 	stw	r5,-4(fp)

	int div = (int) pow(16,bit);
   20324:	e13fff17 	ldw	r4,-4(fp)
   20328:	00247600 	call	24760 <__floatsidf>
   2032c:	1009883a 	mov	r4,r2
   20330:	180b883a 	mov	r5,r3
   20334:	200d883a 	mov	r6,r4
   20338:	280f883a 	mov	r7,r5
   2033c:	0009883a 	mov	r4,zero
   20340:	01500c34 	movhi	r5,16432
   20344:	00204e00 	call	204e0 <pow>
   20348:	100b883a 	mov	r5,r2
   2034c:	180d883a 	mov	r6,r3
   20350:	2809883a 	mov	r4,r5
   20354:	300b883a 	mov	r5,r6
   20358:	00246e00 	call	246e0 <__fixdfsi>
   2035c:	e0bffc15 	stw	r2,-16(fp)
	int digit = (num / div) % 16;
   20360:	e17ffc17 	ldw	r5,-16(fp)
   20364:	e13ffe17 	ldw	r4,-8(fp)
   20368:	002212c0 	call	2212c <__divsi3>
   2036c:	1007883a 	mov	r3,r2
   20370:	00a00034 	movhi	r2,32768
   20374:	108003c4 	addi	r2,r2,15
   20378:	1884703a 	and	r2,r3,r2
   2037c:	1000040e 	bge	r2,zero,20390 <hex_bit+0x84>
   20380:	10bfffc4 	addi	r2,r2,-1
   20384:	00fffc04 	movi	r3,-16
   20388:	10c4b03a 	or	r2,r2,r3
   2038c:	10800044 	addi	r2,r2,1
   20390:	e0bffd15 	stw	r2,-12(fp)

	int hex;
	switch(digit){
   20394:	e0bffd17 	ldw	r2,-12(fp)
   20398:	10800428 	cmpgeui	r2,r2,16
   2039c:	1000471e 	bne	r2,zero,204bc <hex_bit+0x1b0>
   203a0:	e0bffd17 	ldw	r2,-12(fp)
   203a4:	100690ba 	slli	r3,r2,2
   203a8:	008000b4 	movhi	r2,2
   203ac:	1080ef04 	addi	r2,r2,956
   203b0:	1885883a 	add	r2,r3,r2
   203b4:	10800017 	ldw	r2,0(r2)
   203b8:	1000683a 	jmp	r2
   203bc:	000203fc 	xorhi	zero,zero,2063
   203c0:	00020408 	cmpgei	zero,zero,2064
   203c4:	00020414 	movui	zero,2064
   203c8:	00020420 	cmpeqi	zero,zero,2064
   203cc:	0002042c 	andhi	zero,zero,2064
   203d0:	00020438 	rdprs	zero,zero,2064
   203d4:	00020444 	movi	zero,2065
   203d8:	00020450 	cmplti	zero,zero,2065
   203dc:	0002045c 	xori	zero,zero,2065
   203e0:	00020468 	cmpgeui	zero,zero,2065
   203e4:	00020474 	movhi	zero,2065
   203e8:	00020480 	call	2048 <__reset-0x1dfb8>
   203ec:	0002048c 	andi	zero,zero,2066
   203f0:	00020498 	cmpnei	zero,zero,2066
   203f4:	000204a4 	muli	zero,zero,2066
   203f8:	000204b0 	cmpltui	zero,zero,2066
		case 0:  hex = 0b11000000; break;
   203fc:	00803004 	movi	r2,192
   20400:	e0bffb15 	stw	r2,-20(fp)
   20404:	00003006 	br	204c8 <hex_bit+0x1bc>
		case 1:  hex = 0b11111001; break;
   20408:	00803e44 	movi	r2,249
   2040c:	e0bffb15 	stw	r2,-20(fp)
   20410:	00002d06 	br	204c8 <hex_bit+0x1bc>
		case 2:  hex = 0b10100100; break;
   20414:	00802904 	movi	r2,164
   20418:	e0bffb15 	stw	r2,-20(fp)
   2041c:	00002a06 	br	204c8 <hex_bit+0x1bc>
		case 3:  hex = 0b10110000; break;
   20420:	00802c04 	movi	r2,176
   20424:	e0bffb15 	stw	r2,-20(fp)
   20428:	00002706 	br	204c8 <hex_bit+0x1bc>
		case 4:  hex = 0b10011001; break;
   2042c:	00802644 	movi	r2,153
   20430:	e0bffb15 	stw	r2,-20(fp)
   20434:	00002406 	br	204c8 <hex_bit+0x1bc>
		case 5:  hex = 0b10010010; break;
   20438:	00802484 	movi	r2,146
   2043c:	e0bffb15 	stw	r2,-20(fp)
   20440:	00002106 	br	204c8 <hex_bit+0x1bc>
		case 6:  hex = 0b10000010; break;
   20444:	00802084 	movi	r2,130
   20448:	e0bffb15 	stw	r2,-20(fp)
   2044c:	00001e06 	br	204c8 <hex_bit+0x1bc>
		case 7:  hex = 0b11111000; break;
   20450:	00803e04 	movi	r2,248
   20454:	e0bffb15 	stw	r2,-20(fp)
   20458:	00001b06 	br	204c8 <hex_bit+0x1bc>
		case 8:  hex = 0b10000000; break;
   2045c:	00802004 	movi	r2,128
   20460:	e0bffb15 	stw	r2,-20(fp)
   20464:	00001806 	br	204c8 <hex_bit+0x1bc>
		case 9:  hex = 0b10011000; break;
   20468:	00802604 	movi	r2,152
   2046c:	e0bffb15 	stw	r2,-20(fp)
   20470:	00001506 	br	204c8 <hex_bit+0x1bc>
		case 10: hex = 0b10001000; break;
   20474:	00802204 	movi	r2,136
   20478:	e0bffb15 	stw	r2,-20(fp)
   2047c:	00001206 	br	204c8 <hex_bit+0x1bc>
		case 11: hex = 0b10000011; break;
   20480:	008020c4 	movi	r2,131
   20484:	e0bffb15 	stw	r2,-20(fp)
   20488:	00000f06 	br	204c8 <hex_bit+0x1bc>
		case 12: hex = 0b10100111; break;
   2048c:	008029c4 	movi	r2,167
   20490:	e0bffb15 	stw	r2,-20(fp)
   20494:	00000c06 	br	204c8 <hex_bit+0x1bc>
		case 13: hex = 0b10100001; break;
   20498:	00802844 	movi	r2,161
   2049c:	e0bffb15 	stw	r2,-20(fp)
   204a0:	00000906 	br	204c8 <hex_bit+0x1bc>
		case 14: hex = 0b10000110; break;
   204a4:	00802184 	movi	r2,134
   204a8:	e0bffb15 	stw	r2,-20(fp)
   204ac:	00000606 	br	204c8 <hex_bit+0x1bc>
		case 15: hex = 0b10001110; break;
   204b0:	00802384 	movi	r2,142
   204b4:	e0bffb15 	stw	r2,-20(fp)
   204b8:	00000306 	br	204c8 <hex_bit+0x1bc>
		default: hex = 0b00111111; break;
   204bc:	00800fc4 	movi	r2,63
   204c0:	e0bffb15 	stw	r2,-20(fp)
   204c4:	0001883a 	nop
	}

	return hex;
   204c8:	e0bffb17 	ldw	r2,-20(fp)
}
   204cc:	e037883a 	mov	sp,fp
   204d0:	dfc00117 	ldw	ra,4(sp)
   204d4:	df000017 	ldw	fp,0(sp)
   204d8:	dec00204 	addi	sp,sp,8
   204dc:	f800283a 	ret

000204e0 <pow>:
   204e0:	deffee04 	addi	sp,sp,-72
   204e4:	dc800b15 	stw	r18,44(sp)
   204e8:	048000f4 	movhi	r18,3
   204ec:	ddc01015 	stw	r23,64(sp)
   204f0:	dd800f15 	stw	r22,60(sp)
   204f4:	dd400e15 	stw	r21,56(sp)
   204f8:	dd000d15 	stw	r20,52(sp)
   204fc:	dcc00c15 	stw	r19,48(sp)
   20500:	dc400a15 	stw	r17,40(sp)
   20504:	dc000915 	stw	r16,36(sp)
   20508:	dfc01115 	stw	ra,68(sp)
   2050c:	948c0604 	addi	r18,r18,12312
   20510:	202f883a 	mov	r23,r4
   20514:	282d883a 	mov	r22,r5
   20518:	302b883a 	mov	r21,r6
   2051c:	3829883a 	mov	r20,r7
   20520:	00209a40 	call	209a4 <__ieee754_pow>
   20524:	1023883a 	mov	r17,r2
   20528:	90800017 	ldw	r2,0(r18)
   2052c:	04ffffc4 	movi	r19,-1
   20530:	1821883a 	mov	r16,r3
   20534:	14c00426 	beq	r2,r19,20548 <pow+0x68>
   20538:	a809883a 	mov	r4,r21
   2053c:	a00b883a 	mov	r5,r20
   20540:	0021d000 	call	21d00 <__fpclassifyd>
   20544:	10000d1e 	bne	r2,zero,2057c <pow+0x9c>
   20548:	8805883a 	mov	r2,r17
   2054c:	8007883a 	mov	r3,r16
   20550:	dfc01117 	ldw	ra,68(sp)
   20554:	ddc01017 	ldw	r23,64(sp)
   20558:	dd800f17 	ldw	r22,60(sp)
   2055c:	dd400e17 	ldw	r21,56(sp)
   20560:	dd000d17 	ldw	r20,52(sp)
   20564:	dcc00c17 	ldw	r19,48(sp)
   20568:	dc800b17 	ldw	r18,44(sp)
   2056c:	dc400a17 	ldw	r17,40(sp)
   20570:	dc000917 	ldw	r16,36(sp)
   20574:	dec01204 	addi	sp,sp,72
   20578:	f800283a 	ret
   2057c:	b809883a 	mov	r4,r23
   20580:	b00b883a 	mov	r5,r22
   20584:	0021d000 	call	21d00 <__fpclassifyd>
   20588:	000d883a 	mov	r6,zero
   2058c:	000f883a 	mov	r7,zero
   20590:	1000201e 	bne	r2,zero,20614 <pow+0x134>
   20594:	a809883a 	mov	r4,r21
   20598:	a00b883a 	mov	r5,r20
   2059c:	00234740 	call	23474 <__eqdf2>
   205a0:	103fe91e 	bne	r2,zero,20548 <__alt_data_end+0xfffe0548>
   205a4:	01000044 	movi	r4,1
   205a8:	d9000015 	stw	r4,0(sp)
   205ac:	90800017 	ldw	r2,0(r18)
   205b0:	010000f4 	movhi	r4,3
   205b4:	00cffc34 	movhi	r3,16368
   205b8:	21049704 	addi	r4,r4,4700
   205bc:	d9000115 	stw	r4,4(sp)
   205c0:	d8000815 	stw	zero,32(sp)
   205c4:	ddc00215 	stw	r23,8(sp)
   205c8:	dd800315 	stw	r22,12(sp)
   205cc:	dd400415 	stw	r21,16(sp)
   205d0:	dd000515 	stw	r20,20(sp)
   205d4:	d8000615 	stw	zero,24(sp)
   205d8:	d8c00715 	stw	r3,28(sp)
   205dc:	14c02826 	beq	r2,r19,20680 <pow+0x1a0>
   205e0:	01000084 	movi	r4,2
   205e4:	11002626 	beq	r2,r4,20680 <pow+0x1a0>
   205e8:	d809883a 	mov	r4,sp
   205ec:	0021d740 	call	21d74 <matherr>
   205f0:	10006b26 	beq	r2,zero,207a0 <pow+0x2c0>
   205f4:	d8800817 	ldw	r2,32(sp)
   205f8:	10000326 	beq	r2,zero,20608 <pow+0x128>
   205fc:	00248a00 	call	248a0 <__errno>
   20600:	d8c00817 	ldw	r3,32(sp)
   20604:	10c00015 	stw	r3,0(r2)
   20608:	d8800617 	ldw	r2,24(sp)
   2060c:	d8c00717 	ldw	r3,28(sp)
   20610:	003fcf06 	br	20550 <__alt_data_end+0xfffe0550>
   20614:	b809883a 	mov	r4,r23
   20618:	b00b883a 	mov	r5,r22
   2061c:	00234740 	call	23474 <__eqdf2>
   20620:	1000191e 	bne	r2,zero,20688 <pow+0x1a8>
   20624:	000d883a 	mov	r6,zero
   20628:	000f883a 	mov	r7,zero
   2062c:	a809883a 	mov	r4,r21
   20630:	a00b883a 	mov	r5,r20
   20634:	00234740 	call	23474 <__eqdf2>
   20638:	10003a1e 	bne	r2,zero,20724 <pow+0x244>
   2063c:	00c00044 	movi	r3,1
   20640:	d8c00015 	stw	r3,0(sp)
   20644:	90800017 	ldw	r2,0(r18)
   20648:	00c000f4 	movhi	r3,3
   2064c:	18c49704 	addi	r3,r3,4700
   20650:	d8c00115 	stw	r3,4(sp)
   20654:	d8000815 	stw	zero,32(sp)
   20658:	ddc00215 	stw	r23,8(sp)
   2065c:	dd800315 	stw	r22,12(sp)
   20660:	dd400415 	stw	r21,16(sp)
   20664:	dd000515 	stw	r20,20(sp)
   20668:	d8000615 	stw	zero,24(sp)
   2066c:	d8000715 	stw	zero,28(sp)
   20670:	103fdd26 	beq	r2,zero,205e8 <__alt_data_end+0xfffe05e8>
   20674:	0005883a 	mov	r2,zero
   20678:	00cffc34 	movhi	r3,16368
   2067c:	003fb406 	br	20550 <__alt_data_end+0xfffe0550>
   20680:	0005883a 	mov	r2,zero
   20684:	003fb206 	br	20550 <__alt_data_end+0xfffe0550>
   20688:	8809883a 	mov	r4,r17
   2068c:	800b883a 	mov	r5,r16
   20690:	0021ce40 	call	21ce4 <finite>
   20694:	10004626 	beq	r2,zero,207b0 <pow+0x2d0>
   20698:	000d883a 	mov	r6,zero
   2069c:	000f883a 	mov	r7,zero
   206a0:	8809883a 	mov	r4,r17
   206a4:	800b883a 	mov	r5,r16
   206a8:	00234740 	call	23474 <__eqdf2>
   206ac:	103fa61e 	bne	r2,zero,20548 <__alt_data_end+0xfffe0548>
   206b0:	b809883a 	mov	r4,r23
   206b4:	b00b883a 	mov	r5,r22
   206b8:	0021ce40 	call	21ce4 <finite>
   206bc:	103fa226 	beq	r2,zero,20548 <__alt_data_end+0xfffe0548>
   206c0:	a809883a 	mov	r4,r21
   206c4:	a00b883a 	mov	r5,r20
   206c8:	0021ce40 	call	21ce4 <finite>
   206cc:	103f9e26 	beq	r2,zero,20548 <__alt_data_end+0xfffe0548>
   206d0:	00800104 	movi	r2,4
   206d4:	d8800015 	stw	r2,0(sp)
   206d8:	90c00017 	ldw	r3,0(r18)
   206dc:	008000f4 	movhi	r2,3
   206e0:	10849704 	addi	r2,r2,4700
   206e4:	d8800115 	stw	r2,4(sp)
   206e8:	d8000815 	stw	zero,32(sp)
   206ec:	ddc00215 	stw	r23,8(sp)
   206f0:	dd800315 	stw	r22,12(sp)
   206f4:	dd400415 	stw	r21,16(sp)
   206f8:	dd000515 	stw	r20,20(sp)
   206fc:	d8000615 	stw	zero,24(sp)
   20700:	d8000715 	stw	zero,28(sp)
   20704:	00800084 	movi	r2,2
   20708:	18804726 	beq	r3,r2,20828 <pow+0x348>
   2070c:	d809883a 	mov	r4,sp
   20710:	0021d740 	call	21d74 <matherr>
   20714:	10004426 	beq	r2,zero,20828 <pow+0x348>
   20718:	d8800817 	ldw	r2,32(sp)
   2071c:	103fba26 	beq	r2,zero,20608 <__alt_data_end+0xfffe0608>
   20720:	003fb606 	br	205fc <__alt_data_end+0xfffe05fc>
   20724:	a809883a 	mov	r4,r21
   20728:	a00b883a 	mov	r5,r20
   2072c:	0021ce40 	call	21ce4 <finite>
   20730:	103f8526 	beq	r2,zero,20548 <__alt_data_end+0xfffe0548>
   20734:	000d883a 	mov	r6,zero
   20738:	000f883a 	mov	r7,zero
   2073c:	a809883a 	mov	r4,r21
   20740:	a00b883a 	mov	r5,r20
   20744:	00235d80 	call	235d8 <__ledf2>
   20748:	103f7f0e 	bge	r2,zero,20548 <__alt_data_end+0xfffe0548>
   2074c:	00c00044 	movi	r3,1
   20750:	d8c00015 	stw	r3,0(sp)
   20754:	90800017 	ldw	r2,0(r18)
   20758:	00c000f4 	movhi	r3,3
   2075c:	18c49704 	addi	r3,r3,4700
   20760:	d8c00115 	stw	r3,4(sp)
   20764:	d8000815 	stw	zero,32(sp)
   20768:	ddc00215 	stw	r23,8(sp)
   2076c:	dd800315 	stw	r22,12(sp)
   20770:	dd400415 	stw	r21,16(sp)
   20774:	dd000515 	stw	r20,20(sp)
   20778:	d8000615 	stw	zero,24(sp)
   2077c:	10002526 	beq	r2,zero,20814 <pow+0x334>
   20780:	00fffc34 	movhi	r3,65520
   20784:	d8c00715 	stw	r3,28(sp)
   20788:	00c00084 	movi	r3,2
   2078c:	10c0221e 	bne	r2,r3,20818 <pow+0x338>
   20790:	00248a00 	call	248a0 <__errno>
   20794:	00c00844 	movi	r3,33
   20798:	10c00015 	stw	r3,0(r2)
   2079c:	003fde06 	br	20718 <__alt_data_end+0xfffe0718>
   207a0:	00248a00 	call	248a0 <__errno>
   207a4:	00c00844 	movi	r3,33
   207a8:	10c00015 	stw	r3,0(r2)
   207ac:	003f9106 	br	205f4 <__alt_data_end+0xfffe05f4>
   207b0:	b809883a 	mov	r4,r23
   207b4:	b00b883a 	mov	r5,r22
   207b8:	0021ce40 	call	21ce4 <finite>
   207bc:	103fb626 	beq	r2,zero,20698 <__alt_data_end+0xfffe0698>
   207c0:	a809883a 	mov	r4,r21
   207c4:	a00b883a 	mov	r5,r20
   207c8:	0021ce40 	call	21ce4 <finite>
   207cc:	103fb226 	beq	r2,zero,20698 <__alt_data_end+0xfffe0698>
   207d0:	8809883a 	mov	r4,r17
   207d4:	800b883a 	mov	r5,r16
   207d8:	0021d000 	call	21d00 <__fpclassifyd>
   207dc:	1000161e 	bne	r2,zero,20838 <pow+0x358>
   207e0:	00800044 	movi	r2,1
   207e4:	d8800015 	stw	r2,0(sp)
   207e8:	94000017 	ldw	r16,0(r18)
   207ec:	008000f4 	movhi	r2,3
   207f0:	10849704 	addi	r2,r2,4700
   207f4:	d8800115 	stw	r2,4(sp)
   207f8:	d8000815 	stw	zero,32(sp)
   207fc:	ddc00215 	stw	r23,8(sp)
   20800:	dd800315 	stw	r22,12(sp)
   20804:	dd400415 	stw	r21,16(sp)
   20808:	dd000515 	stw	r20,20(sp)
   2080c:	8000281e 	bne	r16,zero,208b0 <pow+0x3d0>
   20810:	d8000615 	stw	zero,24(sp)
   20814:	d8000715 	stw	zero,28(sp)
   20818:	d809883a 	mov	r4,sp
   2081c:	0021d740 	call	21d74 <matherr>
   20820:	103fbd1e 	bne	r2,zero,20718 <__alt_data_end+0xfffe0718>
   20824:	003fda06 	br	20790 <__alt_data_end+0xfffe0790>
   20828:	00248a00 	call	248a0 <__errno>
   2082c:	00c00884 	movi	r3,34
   20830:	10c00015 	stw	r3,0(r2)
   20834:	003fb806 	br	20718 <__alt_data_end+0xfffe0718>
   20838:	00c000c4 	movi	r3,3
   2083c:	d8c00015 	stw	r3,0(sp)
   20840:	90800017 	ldw	r2,0(r18)
   20844:	00c000f4 	movhi	r3,3
   20848:	18c49704 	addi	r3,r3,4700
   2084c:	d8c00115 	stw	r3,4(sp)
   20850:	d8000815 	stw	zero,32(sp)
   20854:	ddc00215 	stw	r23,8(sp)
   20858:	dd800315 	stw	r22,12(sp)
   2085c:	dd400415 	stw	r21,16(sp)
   20860:	dd000515 	stw	r20,20(sp)
   20864:	000d883a 	mov	r6,zero
   20868:	000f883a 	mov	r7,zero
   2086c:	b809883a 	mov	r4,r23
   20870:	b00b883a 	mov	r5,r22
   20874:	1000181e 	bne	r2,zero,208d8 <pow+0x3f8>
   20878:	00b80034 	movhi	r2,57344
   2087c:	d8800615 	stw	r2,24(sp)
   20880:	0091fc34 	movhi	r2,18416
   20884:	10bfffc4 	addi	r2,r2,-1
   20888:	d8800715 	stw	r2,28(sp)
   2088c:	00235d80 	call	235d8 <__ledf2>
   20890:	10001a16 	blt	r2,zero,208fc <pow+0x41c>
   20894:	d809883a 	mov	r4,sp
   20898:	0021d740 	call	21d74 <matherr>
   2089c:	103f551e 	bne	r2,zero,205f4 <__alt_data_end+0xfffe05f4>
   208a0:	00248a00 	call	248a0 <__errno>
   208a4:	00c00884 	movi	r3,34
   208a8:	10c00015 	stw	r3,0(r2)
   208ac:	003f5106 	br	205f4 <__alt_data_end+0xfffe05f4>
   208b0:	000d883a 	mov	r6,zero
   208b4:	000f883a 	mov	r7,zero
   208b8:	0009883a 	mov	r4,zero
   208bc:	000b883a 	mov	r5,zero
   208c0:	0022b8c0 	call	22b8c <__divdf3>
   208c4:	d8800615 	stw	r2,24(sp)
   208c8:	d8c00715 	stw	r3,28(sp)
   208cc:	00800084 	movi	r2,2
   208d0:	80bfaf26 	beq	r16,r2,20790 <__alt_data_end+0xfffe0790>
   208d4:	003fd006 	br	20818 <__alt_data_end+0xfffe0818>
   208d8:	009ffc34 	movhi	r2,32752
   208dc:	d8000615 	stw	zero,24(sp)
   208e0:	d8800715 	stw	r2,28(sp)
   208e4:	00235d80 	call	235d8 <__ledf2>
   208e8:	10001a16 	blt	r2,zero,20954 <pow+0x474>
   208ec:	90c00017 	ldw	r3,0(r18)
   208f0:	00800084 	movi	r2,2
   208f4:	18bfe71e 	bne	r3,r2,20894 <__alt_data_end+0xfffe0894>
   208f8:	003fe906 	br	208a0 <__alt_data_end+0xfffe08a0>
   208fc:	000d883a 	mov	r6,zero
   20900:	01cff834 	movhi	r7,16352
   20904:	a809883a 	mov	r4,r21
   20908:	a00b883a 	mov	r5,r20
   2090c:	00236cc0 	call	236cc <__muldf3>
   20910:	1009883a 	mov	r4,r2
   20914:	180b883a 	mov	r5,r3
   20918:	1023883a 	mov	r17,r2
   2091c:	1821883a 	mov	r16,r3
   20920:	0021d880 	call	21d88 <rint>
   20924:	100d883a 	mov	r6,r2
   20928:	180f883a 	mov	r7,r3
   2092c:	8809883a 	mov	r4,r17
   20930:	800b883a 	mov	r5,r16
   20934:	00234740 	call	23474 <__eqdf2>
   20938:	103fec26 	beq	r2,zero,208ec <__alt_data_end+0xfffe08ec>
   2093c:	00b80034 	movhi	r2,57344
   20940:	d8800615 	stw	r2,24(sp)
   20944:	00b1fc34 	movhi	r2,51184
   20948:	10bfffc4 	addi	r2,r2,-1
   2094c:	d8800715 	stw	r2,28(sp)
   20950:	003fe606 	br	208ec <__alt_data_end+0xfffe08ec>
   20954:	000d883a 	mov	r6,zero
   20958:	01cff834 	movhi	r7,16352
   2095c:	a809883a 	mov	r4,r21
   20960:	a00b883a 	mov	r5,r20
   20964:	00236cc0 	call	236cc <__muldf3>
   20968:	1009883a 	mov	r4,r2
   2096c:	180b883a 	mov	r5,r3
   20970:	1023883a 	mov	r17,r2
   20974:	1821883a 	mov	r16,r3
   20978:	0021d880 	call	21d88 <rint>
   2097c:	100d883a 	mov	r6,r2
   20980:	180f883a 	mov	r7,r3
   20984:	8809883a 	mov	r4,r17
   20988:	800b883a 	mov	r5,r16
   2098c:	00234740 	call	23474 <__eqdf2>
   20990:	103fd626 	beq	r2,zero,208ec <__alt_data_end+0xfffe08ec>
   20994:	00bffc34 	movhi	r2,65520
   20998:	d8000615 	stw	zero,24(sp)
   2099c:	d8800715 	stw	r2,28(sp)
   209a0:	003fd206 	br	208ec <__alt_data_end+0xfffe08ec>

000209a4 <__ieee754_pow>:
   209a4:	00a00034 	movhi	r2,32768
   209a8:	deffea04 	addi	sp,sp,-88
   209ac:	10bfffc4 	addi	r2,r2,-1
   209b0:	dc800e15 	stw	r18,56(sp)
   209b4:	38a4703a 	and	r18,r7,r2
   209b8:	dfc01515 	stw	ra,84(sp)
   209bc:	df001415 	stw	fp,80(sp)
   209c0:	ddc01315 	stw	r23,76(sp)
   209c4:	dd801215 	stw	r22,72(sp)
   209c8:	dd401115 	stw	r21,68(sp)
   209cc:	dd001015 	stw	r20,64(sp)
   209d0:	dcc00f15 	stw	r19,60(sp)
   209d4:	dc400d15 	stw	r17,52(sp)
   209d8:	dc000c15 	stw	r16,48(sp)
   209dc:	9186b03a 	or	r3,r18,r6
   209e0:	18002a26 	beq	r3,zero,20a8c <__ieee754_pow+0xe8>
   209e4:	28a2703a 	and	r17,r5,r2
   209e8:	009ffc34 	movhi	r2,32752
   209ec:	14402316 	blt	r2,r17,20a7c <__ieee754_pow+0xd8>
   209f0:	88802126 	beq	r17,r2,20a78 <__ieee754_pow+0xd4>
   209f4:	14802116 	blt	r2,r18,20a7c <__ieee754_pow+0xd8>
   209f8:	009ffc34 	movhi	r2,32752
   209fc:	90807326 	beq	r18,r2,20bcc <__ieee754_pow+0x228>
   20a00:	2827883a 	mov	r19,r5
   20a04:	2021883a 	mov	r16,r4
   20a08:	302d883a 	mov	r22,r6
   20a0c:	3839883a 	mov	fp,r7
   20a10:	28007016 	blt	r5,zero,20bd4 <__ieee754_pow+0x230>
   20a14:	002b883a 	mov	r21,zero
   20a18:	b0003a1e 	bne	r22,zero,20b04 <__ieee754_pow+0x160>
   20a1c:	009ffc34 	movhi	r2,32752
   20a20:	90807f26 	beq	r18,r2,20c20 <__ieee754_pow+0x27c>
   20a24:	008ffc34 	movhi	r2,16368
   20a28:	90805426 	beq	r18,r2,20b7c <__ieee754_pow+0x1d8>
   20a2c:	00900034 	movhi	r2,16384
   20a30:	e0833b26 	beq	fp,r2,21720 <__ieee754_pow+0xd7c>
   20a34:	008ff834 	movhi	r2,16352
   20a38:	e080321e 	bne	fp,r2,20b04 <__ieee754_pow+0x160>
   20a3c:	98003116 	blt	r19,zero,20b04 <__ieee754_pow+0x160>
   20a40:	8009883a 	mov	r4,r16
   20a44:	980b883a 	mov	r5,r19
   20a48:	dfc01517 	ldw	ra,84(sp)
   20a4c:	df001417 	ldw	fp,80(sp)
   20a50:	ddc01317 	ldw	r23,76(sp)
   20a54:	dd801217 	ldw	r22,72(sp)
   20a58:	dd401117 	ldw	r21,68(sp)
   20a5c:	dd001017 	ldw	r20,64(sp)
   20a60:	dcc00f17 	ldw	r19,60(sp)
   20a64:	dc800e17 	ldw	r18,56(sp)
   20a68:	dc400d17 	ldw	r17,52(sp)
   20a6c:	dc000c17 	ldw	r16,48(sp)
   20a70:	dec01604 	addi	sp,sp,88
   20a74:	0021a481 	jmpi	21a48 <__ieee754_sqrt>
   20a78:	20001226 	beq	r4,zero,20ac4 <__ieee754_pow+0x120>
   20a7c:	00b00434 	movhi	r2,49168
   20a80:	8885883a 	add	r2,r17,r2
   20a84:	1108b03a 	or	r4,r2,r4
   20a88:	20000f1e 	bne	r4,zero,20ac8 <__ieee754_pow+0x124>
   20a8c:	0005883a 	mov	r2,zero
   20a90:	00cffc34 	movhi	r3,16368
   20a94:	dfc01517 	ldw	ra,84(sp)
   20a98:	df001417 	ldw	fp,80(sp)
   20a9c:	ddc01317 	ldw	r23,76(sp)
   20aa0:	dd801217 	ldw	r22,72(sp)
   20aa4:	dd401117 	ldw	r21,68(sp)
   20aa8:	dd001017 	ldw	r20,64(sp)
   20aac:	dcc00f17 	ldw	r19,60(sp)
   20ab0:	dc800e17 	ldw	r18,56(sp)
   20ab4:	dc400d17 	ldw	r17,52(sp)
   20ab8:	dc000c17 	ldw	r16,48(sp)
   20abc:	dec01604 	addi	sp,sp,88
   20ac0:	f800283a 	ret
   20ac4:	8cbfcc0e 	bge	r17,r18,209f8 <__alt_data_end+0xfffe09f8>
   20ac8:	010000f4 	movhi	r4,3
   20acc:	2104e504 	addi	r4,r4,5012
   20ad0:	dfc01517 	ldw	ra,84(sp)
   20ad4:	df001417 	ldw	fp,80(sp)
   20ad8:	ddc01317 	ldw	r23,76(sp)
   20adc:	dd801217 	ldw	r22,72(sp)
   20ae0:	dd401117 	ldw	r21,68(sp)
   20ae4:	dd001017 	ldw	r20,64(sp)
   20ae8:	dcc00f17 	ldw	r19,60(sp)
   20aec:	dc800e17 	ldw	r18,56(sp)
   20af0:	dc400d17 	ldw	r17,52(sp)
   20af4:	dc000c17 	ldw	r16,48(sp)
   20af8:	dec01604 	addi	sp,sp,88
   20afc:	0021d7c1 	jmpi	21d7c <nan>
   20b00:	002b883a 	mov	r21,zero
   20b04:	8009883a 	mov	r4,r16
   20b08:	980b883a 	mov	r5,r19
   20b0c:	0021cd00 	call	21cd0 <fabs>
   20b10:	102f883a 	mov	r23,r2
   20b14:	80000f26 	beq	r16,zero,20b54 <__ieee754_pow+0x1b0>
   20b18:	9816d7fa 	srli	r11,r19,31
   20b1c:	5affffc4 	addi	r11,r11,-1
   20b20:	aac4b03a 	or	r2,r21,r11
   20b24:	10004b26 	beq	r2,zero,20c54 <__ieee754_pow+0x2b0>
   20b28:	00907834 	movhi	r2,16864
   20b2c:	1480540e 	bge	r2,r18,20c80 <__ieee754_pow+0x2dc>
   20b30:	0090fc34 	movhi	r2,17392
   20b34:	14832d0e 	bge	r2,r18,217ec <__ieee754_pow+0xe48>
   20b38:	008ffc34 	movhi	r2,16368
   20b3c:	10bfffc4 	addi	r2,r2,-1
   20b40:	14401916 	blt	r2,r17,20ba8 <__ieee754_pow+0x204>
   20b44:	e0001916 	blt	fp,zero,20bac <__ieee754_pow+0x208>
   20b48:	0005883a 	mov	r2,zero
   20b4c:	0007883a 	mov	r3,zero
   20b50:	003fd006 	br	20a94 <__alt_data_end+0xfffe0a94>
   20b54:	88000526 	beq	r17,zero,20b6c <__ieee754_pow+0x1c8>
   20b58:	00900034 	movhi	r2,16384
   20b5c:	10bfffc4 	addi	r2,r2,-1
   20b60:	9884703a 	and	r2,r19,r2
   20b64:	010ffc34 	movhi	r4,16368
   20b68:	113feb1e 	bne	r2,r4,20b18 <__alt_data_end+0xfffe0b18>
   20b6c:	e0000716 	blt	fp,zero,20b8c <__ieee754_pow+0x1e8>
   20b70:	9802e216 	blt	r19,zero,216fc <__ieee754_pow+0xd58>
   20b74:	b805883a 	mov	r2,r23
   20b78:	003fc606 	br	20a94 <__alt_data_end+0xfffe0a94>
   20b7c:	e0037516 	blt	fp,zero,21954 <__ieee754_pow+0xfb0>
   20b80:	8005883a 	mov	r2,r16
   20b84:	9807883a 	mov	r3,r19
   20b88:	003fc206 	br	20a94 <__alt_data_end+0xfffe0a94>
   20b8c:	b80d883a 	mov	r6,r23
   20b90:	180f883a 	mov	r7,r3
   20b94:	0009883a 	mov	r4,zero
   20b98:	014ffc34 	movhi	r5,16368
   20b9c:	0022b8c0 	call	22b8c <__divdf3>
   20ba0:	102f883a 	mov	r23,r2
   20ba4:	003ff206 	br	20b70 <__alt_data_end+0xfffe0b70>
   20ba8:	073fe70e 	bge	zero,fp,20b48 <__alt_data_end+0xfffe0b48>
   20bac:	01a20034 	movhi	r6,34816
   20bb0:	01df8e34 	movhi	r7,32312
   20bb4:	319d6704 	addi	r6,r6,30108
   20bb8:	39f90f04 	addi	r7,r7,-7108
   20bbc:	3009883a 	mov	r4,r6
   20bc0:	380b883a 	mov	r5,r7
   20bc4:	00236cc0 	call	236cc <__muldf3>
   20bc8:	003fb206 	br	20a94 <__alt_data_end+0xfffe0a94>
   20bcc:	303f8c26 	beq	r6,zero,20a00 <__alt_data_end+0xfffe0a00>
   20bd0:	003faa06 	br	20a7c <__alt_data_end+0xfffe0a7c>
   20bd4:	0090d034 	movhi	r2,17216
   20bd8:	10bfffc4 	addi	r2,r2,-1
   20bdc:	14801b16 	blt	r2,r18,20c4c <__ieee754_pow+0x2a8>
   20be0:	008ffc34 	movhi	r2,16368
   20be4:	10bfffc4 	addi	r2,r2,-1
   20be8:	14bf8a0e 	bge	r2,r18,20a14 <__alt_data_end+0xfffe0a14>
   20bec:	9005d53a 	srai	r2,r18,20
   20bf0:	00c00504 	movi	r3,20
   20bf4:	10bf0044 	addi	r2,r2,-1023
   20bf8:	18836b0e 	bge	r3,r2,219a8 <__ieee754_pow+0x1004>
   20bfc:	00c00d04 	movi	r3,52
   20c00:	1885c83a 	sub	r2,r3,r2
   20c04:	3086d83a 	srl	r3,r6,r2
   20c08:	1884983a 	sll	r2,r3,r2
   20c0c:	30bf811e 	bne	r6,r2,20a14 <__alt_data_end+0xfffe0a14>
   20c10:	18c0004c 	andi	r3,r3,1
   20c14:	02800084 	movi	r10,2
   20c18:	50ebc83a 	sub	r21,r10,r3
   20c1c:	003f7e06 	br	20a18 <__alt_data_end+0xfffe0a18>
   20c20:	01300434 	movhi	r4,49168
   20c24:	8909883a 	add	r4,r17,r4
   20c28:	2408b03a 	or	r4,r4,r16
   20c2c:	203f9726 	beq	r4,zero,20a8c <__alt_data_end+0xfffe0a8c>
   20c30:	008ffc34 	movhi	r2,16368
   20c34:	10bfffc4 	addi	r2,r2,-1
   20c38:	1442e60e 	bge	r2,r17,217d4 <__ieee754_pow+0xe30>
   20c3c:	e03fc216 	blt	fp,zero,20b48 <__alt_data_end+0xfffe0b48>
   20c40:	0005883a 	mov	r2,zero
   20c44:	e007883a 	mov	r3,fp
   20c48:	003f9206 	br	20a94 <__alt_data_end+0xfffe0a94>
   20c4c:	05400084 	movi	r21,2
   20c50:	003f7106 	br	20a18 <__alt_data_end+0xfffe0a18>
   20c54:	800d883a 	mov	r6,r16
   20c58:	980f883a 	mov	r7,r19
   20c5c:	3009883a 	mov	r4,r6
   20c60:	380b883a 	mov	r5,r7
   20c64:	0023de40 	call	23de4 <__subdf3>
   20c68:	100d883a 	mov	r6,r2
   20c6c:	180f883a 	mov	r7,r3
   20c70:	1009883a 	mov	r4,r2
   20c74:	180b883a 	mov	r5,r3
   20c78:	0022b8c0 	call	22b8c <__divdf3>
   20c7c:	003f8506 	br	20a94 <__alt_data_end+0xfffe0a94>
   20c80:	00800434 	movhi	r2,16
   20c84:	10bfffc4 	addi	r2,r2,-1
   20c88:	1442d616 	blt	r2,r17,217e4 <__ieee754_pow+0xe40>
   20c8c:	b809883a 	mov	r4,r23
   20c90:	000d883a 	mov	r6,zero
   20c94:	01d0d034 	movhi	r7,17216
   20c98:	180b883a 	mov	r5,r3
   20c9c:	dac00b15 	stw	r11,44(sp)
   20ca0:	00236cc0 	call	236cc <__muldf3>
   20ca4:	dac00b17 	ldw	r11,44(sp)
   20ca8:	102f883a 	mov	r23,r2
   20cac:	1823883a 	mov	r17,r3
   20cb0:	033ff2c4 	movi	r12,-53
   20cb4:	8807d53a 	srai	r3,r17,20
   20cb8:	00800434 	movhi	r2,16
   20cbc:	10bfffc4 	addi	r2,r2,-1
   20cc0:	18ff0044 	addi	r3,r3,-1023
   20cc4:	1b19883a 	add	r12,r3,r12
   20cc8:	00c00134 	movhi	r3,4
   20ccc:	8884703a 	and	r2,r17,r2
   20cd0:	18e62384 	addi	r3,r3,-26482
   20cd4:	150ffc34 	orhi	r20,r2,16368
   20cd8:	1880060e 	bge	r3,r2,20cf4 <__ieee754_pow+0x350>
   20cdc:	00c00334 	movhi	r3,12
   20ce0:	18ed9e44 	addi	r3,r3,-18823
   20ce4:	18833f0e 	bge	r3,r2,219e4 <__ieee754_pow+0x1040>
   20ce8:	00bffc34 	movhi	r2,65520
   20cec:	63000044 	addi	r12,r12,1
   20cf0:	a0a9883a 	add	r20,r20,r2
   20cf4:	0027883a 	mov	r19,zero
   20cf8:	d8000215 	stw	zero,8(sp)
   20cfc:	0013883a 	mov	r9,zero
   20d00:	0011883a 	mov	r8,zero
   20d04:	0015883a 	mov	r10,zero
   20d08:	048ffc34 	movhi	r18,16368
   20d0c:	900f883a 	mov	r7,r18
   20d10:	b809883a 	mov	r4,r23
   20d14:	a00b883a 	mov	r5,r20
   20d18:	000d883a 	mov	r6,zero
   20d1c:	da000a15 	stw	r8,40(sp)
   20d20:	da400815 	stw	r9,32(sp)
   20d24:	dac00b15 	stw	r11,44(sp)
   20d28:	db000915 	stw	r12,36(sp)
   20d2c:	da800515 	stw	r10,20(sp)
   20d30:	0023de40 	call	23de4 <__subdf3>
   20d34:	b809883a 	mov	r4,r23
   20d38:	a00b883a 	mov	r5,r20
   20d3c:	900f883a 	mov	r7,r18
   20d40:	000d883a 	mov	r6,zero
   20d44:	d8800015 	stw	r2,0(sp)
   20d48:	d8c00115 	stw	r3,4(sp)
   20d4c:	00222e00 	call	222e0 <__adddf3>
   20d50:	100d883a 	mov	r6,r2
   20d54:	180f883a 	mov	r7,r3
   20d58:	0009883a 	mov	r4,zero
   20d5c:	014ffc34 	movhi	r5,16368
   20d60:	0022b8c0 	call	22b8c <__divdf3>
   20d64:	d9000017 	ldw	r4,0(sp)
   20d68:	d9400117 	ldw	r5,4(sp)
   20d6c:	100d883a 	mov	r6,r2
   20d70:	180f883a 	mov	r7,r3
   20d74:	d8c00715 	stw	r3,28(sp)
   20d78:	d8800615 	stw	r2,24(sp)
   20d7c:	00236cc0 	call	236cc <__muldf3>
   20d80:	1023883a 	mov	r17,r2
   20d84:	a005d07a 	srai	r2,r20,1
   20d88:	da800517 	ldw	r10,20(sp)
   20d8c:	1821883a 	mov	r16,r3
   20d90:	10c80034 	orhi	r3,r2,8192
   20d94:	00800234 	movhi	r2,8
   20d98:	1885883a 	add	r2,r3,r2
   20d9c:	1295883a 	add	r10,r2,r10
   20da0:	500f883a 	mov	r7,r10
   20da4:	800b883a 	mov	r5,r16
   20da8:	000d883a 	mov	r6,zero
   20dac:	0009883a 	mov	r4,zero
   20db0:	da800515 	stw	r10,20(sp)
   20db4:	00236cc0 	call	236cc <__muldf3>
   20db8:	d9000017 	ldw	r4,0(sp)
   20dbc:	d9400117 	ldw	r5,4(sp)
   20dc0:	100d883a 	mov	r6,r2
   20dc4:	180f883a 	mov	r7,r3
   20dc8:	0023de40 	call	23de4 <__subdf3>
   20dcc:	da800517 	ldw	r10,20(sp)
   20dd0:	900f883a 	mov	r7,r18
   20dd4:	000d883a 	mov	r6,zero
   20dd8:	500b883a 	mov	r5,r10
   20ddc:	0009883a 	mov	r4,zero
   20de0:	d8800015 	stw	r2,0(sp)
   20de4:	d8c00515 	stw	r3,20(sp)
   20de8:	0023de40 	call	23de4 <__subdf3>
   20dec:	b809883a 	mov	r4,r23
   20df0:	a00b883a 	mov	r5,r20
   20df4:	100d883a 	mov	r6,r2
   20df8:	180f883a 	mov	r7,r3
   20dfc:	0023de40 	call	23de4 <__subdf3>
   20e00:	800f883a 	mov	r7,r16
   20e04:	000d883a 	mov	r6,zero
   20e08:	1009883a 	mov	r4,r2
   20e0c:	180b883a 	mov	r5,r3
   20e10:	00236cc0 	call	236cc <__muldf3>
   20e14:	db400517 	ldw	r13,20(sp)
   20e18:	d9000017 	ldw	r4,0(sp)
   20e1c:	100d883a 	mov	r6,r2
   20e20:	680b883a 	mov	r5,r13
   20e24:	180f883a 	mov	r7,r3
   20e28:	0023de40 	call	23de4 <__subdf3>
   20e2c:	dbc00617 	ldw	r15,24(sp)
   20e30:	db800717 	ldw	r14,28(sp)
   20e34:	1009883a 	mov	r4,r2
   20e38:	780d883a 	mov	r6,r15
   20e3c:	700f883a 	mov	r7,r14
   20e40:	180b883a 	mov	r5,r3
   20e44:	00236cc0 	call	236cc <__muldf3>
   20e48:	880d883a 	mov	r6,r17
   20e4c:	800f883a 	mov	r7,r16
   20e50:	8809883a 	mov	r4,r17
   20e54:	800b883a 	mov	r5,r16
   20e58:	d8800015 	stw	r2,0(sp)
   20e5c:	d8c00115 	stw	r3,4(sp)
   20e60:	00236cc0 	call	236cc <__muldf3>
   20e64:	01929174 	movhi	r6,19013
   20e68:	01cff2b4 	movhi	r7,16330
   20e6c:	3193bbc4 	addi	r6,r6,20207
   20e70:	39df8a04 	addi	r7,r7,32296
   20e74:	1009883a 	mov	r4,r2
   20e78:	180b883a 	mov	r5,r3
   20e7c:	102f883a 	mov	r23,r2
   20e80:	1829883a 	mov	r20,r3
   20e84:	00236cc0 	call	236cc <__muldf3>
   20e88:	01a4f2b4 	movhi	r6,37834
   20e8c:	01cff3b4 	movhi	r7,16334
   20e90:	31b6d944 	addi	r6,r6,-9371
   20e94:	39e19284 	addi	r7,r7,-31158
   20e98:	1009883a 	mov	r4,r2
   20e9c:	180b883a 	mov	r5,r3
   20ea0:	00222e00 	call	222e0 <__adddf3>
   20ea4:	b80d883a 	mov	r6,r23
   20ea8:	a00f883a 	mov	r7,r20
   20eac:	1009883a 	mov	r4,r2
   20eb0:	180b883a 	mov	r5,r3
   20eb4:	00236cc0 	call	236cc <__muldf3>
   20eb8:	01aa4774 	movhi	r6,43293
   20ebc:	01cff474 	movhi	r7,16337
   20ec0:	31904044 	addi	r6,r6,16641
   20ec4:	39dd1804 	addi	r7,r7,29792
   20ec8:	1009883a 	mov	r4,r2
   20ecc:	180b883a 	mov	r5,r3
   20ed0:	00222e00 	call	222e0 <__adddf3>
   20ed4:	b80d883a 	mov	r6,r23
   20ed8:	a00f883a 	mov	r7,r20
   20edc:	1009883a 	mov	r4,r2
   20ee0:	180b883a 	mov	r5,r3
   20ee4:	00236cc0 	call	236cc <__muldf3>
   20ee8:	019463f4 	movhi	r6,20879
   20eec:	01cff574 	movhi	r7,16341
   20ef0:	31899344 	addi	r6,r6,9805
   20ef4:	39d55544 	addi	r7,r7,21845
   20ef8:	1009883a 	mov	r4,r2
   20efc:	180b883a 	mov	r5,r3
   20f00:	00222e00 	call	222e0 <__adddf3>
   20f04:	b80d883a 	mov	r6,r23
   20f08:	a00f883a 	mov	r7,r20
   20f0c:	1009883a 	mov	r4,r2
   20f10:	180b883a 	mov	r5,r3
   20f14:	00236cc0 	call	236cc <__muldf3>
   20f18:	01b6dc34 	movhi	r6,56176
   20f1c:	01cff6f4 	movhi	r7,16347
   20f20:	31aaffc4 	addi	r6,r6,-21505
   20f24:	39db6d84 	addi	r7,r7,28086
   20f28:	1009883a 	mov	r4,r2
   20f2c:	180b883a 	mov	r5,r3
   20f30:	00222e00 	call	222e0 <__adddf3>
   20f34:	b80d883a 	mov	r6,r23
   20f38:	a00f883a 	mov	r7,r20
   20f3c:	1009883a 	mov	r4,r2
   20f40:	180b883a 	mov	r5,r3
   20f44:	00236cc0 	call	236cc <__muldf3>
   20f48:	018cccf4 	movhi	r6,13107
   20f4c:	01cff8f4 	movhi	r7,16355
   20f50:	318cc0c4 	addi	r6,r6,13059
   20f54:	39ccccc4 	addi	r7,r7,13107
   20f58:	1009883a 	mov	r4,r2
   20f5c:	180b883a 	mov	r5,r3
   20f60:	00222e00 	call	222e0 <__adddf3>
   20f64:	b80d883a 	mov	r6,r23
   20f68:	a00f883a 	mov	r7,r20
   20f6c:	b809883a 	mov	r4,r23
   20f70:	a00b883a 	mov	r5,r20
   20f74:	1825883a 	mov	r18,r3
   20f78:	d8800515 	stw	r2,20(sp)
   20f7c:	00236cc0 	call	236cc <__muldf3>
   20f80:	db400517 	ldw	r13,20(sp)
   20f84:	900b883a 	mov	r5,r18
   20f88:	100d883a 	mov	r6,r2
   20f8c:	6809883a 	mov	r4,r13
   20f90:	180f883a 	mov	r7,r3
   20f94:	00236cc0 	call	236cc <__muldf3>
   20f98:	800f883a 	mov	r7,r16
   20f9c:	8809883a 	mov	r4,r17
   20fa0:	800b883a 	mov	r5,r16
   20fa4:	000d883a 	mov	r6,zero
   20fa8:	102f883a 	mov	r23,r2
   20fac:	1829883a 	mov	r20,r3
   20fb0:	00222e00 	call	222e0 <__adddf3>
   20fb4:	d9800017 	ldw	r6,0(sp)
   20fb8:	d9c00117 	ldw	r7,4(sp)
   20fbc:	1009883a 	mov	r4,r2
   20fc0:	180b883a 	mov	r5,r3
   20fc4:	00236cc0 	call	236cc <__muldf3>
   20fc8:	b80d883a 	mov	r6,r23
   20fcc:	a00f883a 	mov	r7,r20
   20fd0:	1009883a 	mov	r4,r2
   20fd4:	180b883a 	mov	r5,r3
   20fd8:	00222e00 	call	222e0 <__adddf3>
   20fdc:	800f883a 	mov	r7,r16
   20fe0:	800b883a 	mov	r5,r16
   20fe4:	000d883a 	mov	r6,zero
   20fe8:	0009883a 	mov	r4,zero
   20fec:	1025883a 	mov	r18,r2
   20ff0:	182f883a 	mov	r23,r3
   20ff4:	00236cc0 	call	236cc <__muldf3>
   20ff8:	000d883a 	mov	r6,zero
   20ffc:	01d00234 	movhi	r7,16392
   21000:	1009883a 	mov	r4,r2
   21004:	180b883a 	mov	r5,r3
   21008:	d8c00715 	stw	r3,28(sp)
   2100c:	d8800615 	stw	r2,24(sp)
   21010:	00222e00 	call	222e0 <__adddf3>
   21014:	900d883a 	mov	r6,r18
   21018:	b80f883a 	mov	r7,r23
   2101c:	1009883a 	mov	r4,r2
   21020:	180b883a 	mov	r5,r3
   21024:	00222e00 	call	222e0 <__adddf3>
   21028:	800b883a 	mov	r5,r16
   2102c:	000d883a 	mov	r6,zero
   21030:	180f883a 	mov	r7,r3
   21034:	0009883a 	mov	r4,zero
   21038:	1829883a 	mov	r20,r3
   2103c:	00236cc0 	call	236cc <__muldf3>
   21040:	a00b883a 	mov	r5,r20
   21044:	000d883a 	mov	r6,zero
   21048:	01d00234 	movhi	r7,16392
   2104c:	0009883a 	mov	r4,zero
   21050:	d8800315 	stw	r2,12(sp)
   21054:	d8c00415 	stw	r3,16(sp)
   21058:	0023de40 	call	23de4 <__subdf3>
   2105c:	dbc00617 	ldw	r15,24(sp)
   21060:	db800717 	ldw	r14,28(sp)
   21064:	1009883a 	mov	r4,r2
   21068:	780d883a 	mov	r6,r15
   2106c:	700f883a 	mov	r7,r14
   21070:	180b883a 	mov	r5,r3
   21074:	0023de40 	call	23de4 <__subdf3>
   21078:	9009883a 	mov	r4,r18
   2107c:	b80b883a 	mov	r5,r23
   21080:	100d883a 	mov	r6,r2
   21084:	180f883a 	mov	r7,r3
   21088:	0023de40 	call	23de4 <__subdf3>
   2108c:	880d883a 	mov	r6,r17
   21090:	800f883a 	mov	r7,r16
   21094:	1009883a 	mov	r4,r2
   21098:	180b883a 	mov	r5,r3
   2109c:	00236cc0 	call	236cc <__muldf3>
   210a0:	d9000017 	ldw	r4,0(sp)
   210a4:	d9400117 	ldw	r5,4(sp)
   210a8:	a00f883a 	mov	r7,r20
   210ac:	000d883a 	mov	r6,zero
   210b0:	1023883a 	mov	r17,r2
   210b4:	1821883a 	mov	r16,r3
   210b8:	00236cc0 	call	236cc <__muldf3>
   210bc:	8809883a 	mov	r4,r17
   210c0:	800b883a 	mov	r5,r16
   210c4:	100d883a 	mov	r6,r2
   210c8:	180f883a 	mov	r7,r3
   210cc:	00222e00 	call	222e0 <__adddf3>
   210d0:	d9000317 	ldw	r4,12(sp)
   210d4:	d9400417 	ldw	r5,16(sp)
   210d8:	100d883a 	mov	r6,r2
   210dc:	180f883a 	mov	r7,r3
   210e0:	102f883a 	mov	r23,r2
   210e4:	1823883a 	mov	r17,r3
   210e8:	00222e00 	call	222e0 <__adddf3>
   210ec:	01cffbf4 	movhi	r7,16367
   210f0:	39f1c244 	addi	r7,r7,-14583
   210f4:	0009883a 	mov	r4,zero
   210f8:	180b883a 	mov	r5,r3
   210fc:	01b80034 	movhi	r6,57344
   21100:	1821883a 	mov	r16,r3
   21104:	00236cc0 	call	236cc <__muldf3>
   21108:	d9800317 	ldw	r6,12(sp)
   2110c:	d9c00417 	ldw	r7,16(sp)
   21110:	800b883a 	mov	r5,r16
   21114:	0009883a 	mov	r4,zero
   21118:	1825883a 	mov	r18,r3
   2111c:	d8800015 	stw	r2,0(sp)
   21120:	0023de40 	call	23de4 <__subdf3>
   21124:	b809883a 	mov	r4,r23
   21128:	880b883a 	mov	r5,r17
   2112c:	100d883a 	mov	r6,r2
   21130:	180f883a 	mov	r7,r3
   21134:	0023de40 	call	23de4 <__subdf3>
   21138:	01b70eb4 	movhi	r6,56378
   2113c:	01cffbf4 	movhi	r7,16367
   21140:	3180ff44 	addi	r6,r6,1021
   21144:	39f1c244 	addi	r7,r7,-14583
   21148:	1009883a 	mov	r4,r2
   2114c:	180b883a 	mov	r5,r3
   21150:	00236cc0 	call	236cc <__muldf3>
   21154:	018516f4 	movhi	r6,5211
   21158:	01ef8fb4 	movhi	r7,48702
   2115c:	800b883a 	mov	r5,r16
   21160:	31807d44 	addi	r6,r6,501
   21164:	39cbf804 	addi	r7,r7,12256
   21168:	0009883a 	mov	r4,zero
   2116c:	1029883a 	mov	r20,r2
   21170:	1823883a 	mov	r17,r3
   21174:	00236cc0 	call	236cc <__muldf3>
   21178:	a009883a 	mov	r4,r20
   2117c:	880b883a 	mov	r5,r17
   21180:	100d883a 	mov	r6,r2
   21184:	180f883a 	mov	r7,r3
   21188:	00222e00 	call	222e0 <__adddf3>
   2118c:	da400817 	ldw	r9,32(sp)
   21190:	da000a17 	ldw	r8,40(sp)
   21194:	180b883a 	mov	r5,r3
   21198:	480d883a 	mov	r6,r9
   2119c:	400f883a 	mov	r7,r8
   211a0:	1009883a 	mov	r4,r2
   211a4:	00222e00 	call	222e0 <__adddf3>
   211a8:	db000917 	ldw	r12,36(sp)
   211ac:	1029883a 	mov	r20,r2
   211b0:	1823883a 	mov	r17,r3
   211b4:	6009883a 	mov	r4,r12
   211b8:	00247600 	call	24760 <__floatsidf>
   211bc:	d9000017 	ldw	r4,0(sp)
   211c0:	a00d883a 	mov	r6,r20
   211c4:	880f883a 	mov	r7,r17
   211c8:	900b883a 	mov	r5,r18
   211cc:	182f883a 	mov	r23,r3
   211d0:	d8800115 	stw	r2,4(sp)
   211d4:	00222e00 	call	222e0 <__adddf3>
   211d8:	d9c00217 	ldw	r7,8(sp)
   211dc:	980d883a 	mov	r6,r19
   211e0:	1009883a 	mov	r4,r2
   211e4:	180b883a 	mov	r5,r3
   211e8:	00222e00 	call	222e0 <__adddf3>
   211ec:	d9800117 	ldw	r6,4(sp)
   211f0:	b80f883a 	mov	r7,r23
   211f4:	1009883a 	mov	r4,r2
   211f8:	180b883a 	mov	r5,r3
   211fc:	00222e00 	call	222e0 <__adddf3>
   21200:	d9800117 	ldw	r6,4(sp)
   21204:	b80f883a 	mov	r7,r23
   21208:	0009883a 	mov	r4,zero
   2120c:	180b883a 	mov	r5,r3
   21210:	1821883a 	mov	r16,r3
   21214:	0023de40 	call	23de4 <__subdf3>
   21218:	d9c00217 	ldw	r7,8(sp)
   2121c:	980d883a 	mov	r6,r19
   21220:	1009883a 	mov	r4,r2
   21224:	180b883a 	mov	r5,r3
   21228:	0023de40 	call	23de4 <__subdf3>
   2122c:	d9800017 	ldw	r6,0(sp)
   21230:	900f883a 	mov	r7,r18
   21234:	1009883a 	mov	r4,r2
   21238:	180b883a 	mov	r5,r3
   2123c:	0023de40 	call	23de4 <__subdf3>
   21240:	880b883a 	mov	r5,r17
   21244:	100d883a 	mov	r6,r2
   21248:	180f883a 	mov	r7,r3
   2124c:	a009883a 	mov	r4,r20
   21250:	0023de40 	call	23de4 <__subdf3>
   21254:	dac00b17 	ldw	r11,44(sp)
   21258:	aabfffc4 	addi	r10,r21,-1
   2125c:	1025883a 	mov	r18,r2
   21260:	52d6b03a 	or	r11,r10,r11
   21264:	1823883a 	mov	r17,r3
   21268:	58015826 	beq	r11,zero,217cc <__ieee754_pow+0xe28>
   2126c:	04cffc34 	movhi	r19,16368
   21270:	b009883a 	mov	r4,r22
   21274:	000d883a 	mov	r6,zero
   21278:	e00f883a 	mov	r7,fp
   2127c:	e00b883a 	mov	r5,fp
   21280:	0023de40 	call	23de4 <__subdf3>
   21284:	800f883a 	mov	r7,r16
   21288:	000d883a 	mov	r6,zero
   2128c:	1009883a 	mov	r4,r2
   21290:	180b883a 	mov	r5,r3
   21294:	00236cc0 	call	236cc <__muldf3>
   21298:	b00d883a 	mov	r6,r22
   2129c:	9009883a 	mov	r4,r18
   212a0:	880b883a 	mov	r5,r17
   212a4:	e00f883a 	mov	r7,fp
   212a8:	1829883a 	mov	r20,r3
   212ac:	102b883a 	mov	r21,r2
   212b0:	00236cc0 	call	236cc <__muldf3>
   212b4:	a00b883a 	mov	r5,r20
   212b8:	100d883a 	mov	r6,r2
   212bc:	180f883a 	mov	r7,r3
   212c0:	a809883a 	mov	r4,r21
   212c4:	00222e00 	call	222e0 <__adddf3>
   212c8:	800b883a 	mov	r5,r16
   212cc:	000d883a 	mov	r6,zero
   212d0:	e00f883a 	mov	r7,fp
   212d4:	0009883a 	mov	r4,zero
   212d8:	102d883a 	mov	r22,r2
   212dc:	1829883a 	mov	r20,r3
   212e0:	00236cc0 	call	236cc <__muldf3>
   212e4:	100d883a 	mov	r6,r2
   212e8:	180f883a 	mov	r7,r3
   212ec:	b009883a 	mov	r4,r22
   212f0:	a00b883a 	mov	r5,r20
   212f4:	1025883a 	mov	r18,r2
   212f8:	1823883a 	mov	r17,r3
   212fc:	00222e00 	call	222e0 <__adddf3>
   21300:	102f883a 	mov	r23,r2
   21304:	00902434 	movhi	r2,16528
   21308:	10bfffc4 	addi	r2,r2,-1
   2130c:	1821883a 	mov	r16,r3
   21310:	9013883a 	mov	r9,r18
   21314:	8811883a 	mov	r8,r17
   21318:	10c1070e 	bge	r2,r3,21738 <__ieee754_pow+0xd94>
   2131c:	00afdc34 	movhi	r2,49008
   21320:	1885883a 	add	r2,r3,r2
   21324:	15c4b03a 	or	r2,r2,r23
   21328:	1001901e 	bne	r2,zero,2196c <__ieee754_pow+0xfc8>
   2132c:	01994b34 	movhi	r6,25900
   21330:	01cf25f4 	movhi	r7,15511
   21334:	31a0bf84 	addi	r6,r6,-32002
   21338:	39c551c4 	addi	r7,r7,5447
   2133c:	b009883a 	mov	r4,r22
   21340:	a00b883a 	mov	r5,r20
   21344:	00222e00 	call	222e0 <__adddf3>
   21348:	900d883a 	mov	r6,r18
   2134c:	880f883a 	mov	r7,r17
   21350:	b809883a 	mov	r4,r23
   21354:	800b883a 	mov	r5,r16
   21358:	1039883a 	mov	fp,r2
   2135c:	182b883a 	mov	r21,r3
   21360:	0023de40 	call	23de4 <__subdf3>
   21364:	100d883a 	mov	r6,r2
   21368:	180f883a 	mov	r7,r3
   2136c:	e009883a 	mov	r4,fp
   21370:	a80b883a 	mov	r5,r21
   21374:	00234fc0 	call	234fc <__gedf2>
   21378:	00817c16 	blt	zero,r2,2196c <__ieee754_pow+0xfc8>
   2137c:	802b883a 	mov	r21,r16
   21380:	a805d53a 	srai	r2,r21,20
   21384:	00c00434 	movhi	r3,16
   21388:	01000434 	movhi	r4,16
   2138c:	10bf0084 	addi	r2,r2,-1022
   21390:	1885d83a 	sra	r2,r3,r2
   21394:	213fffc4 	addi	r4,r4,-1
   21398:	1405883a 	add	r2,r2,r16
   2139c:	1006907a 	slli	r3,r2,1
   213a0:	112a703a 	and	r21,r2,r4
   213a4:	ad400434 	orhi	r21,r21,16
   213a8:	1806d57a 	srli	r3,r3,21
   213ac:	18ff0044 	addi	r3,r3,-1023
   213b0:	20cfd83a 	sra	r7,r4,r3
   213b4:	01000504 	movi	r4,20
   213b8:	20c7c83a 	sub	r3,r4,r3
   213bc:	a8c7d83a 	sra	r3,r21,r3
   213c0:	01ce303a 	nor	r7,zero,r7
   213c4:	388e703a 	and	r7,r7,r2
   213c8:	d8c00015 	stw	r3,0(sp)
   213cc:	80019016 	blt	r16,zero,21a10 <__ieee754_pow+0x106c>
   213d0:	000d883a 	mov	r6,zero
   213d4:	9009883a 	mov	r4,r18
   213d8:	880b883a 	mov	r5,r17
   213dc:	0023de40 	call	23de4 <__subdf3>
   213e0:	100d883a 	mov	r6,r2
   213e4:	180f883a 	mov	r7,r3
   213e8:	b009883a 	mov	r4,r22
   213ec:	a00b883a 	mov	r5,r20
   213f0:	d8c00a15 	stw	r3,40(sp)
   213f4:	d8800815 	stw	r2,32(sp)
   213f8:	00222e00 	call	222e0 <__adddf3>
   213fc:	d8800017 	ldw	r2,0(sp)
   21400:	da000a17 	ldw	r8,40(sp)
   21404:	da400817 	ldw	r9,32(sp)
   21408:	1004953a 	slli	r2,r2,20
   2140c:	1821883a 	mov	r16,r3
   21410:	d8800215 	stw	r2,8(sp)
   21414:	01cff9b4 	movhi	r7,16358
   21418:	800b883a 	mov	r5,r16
   2141c:	39cb90c4 	addi	r7,r7,11843
   21420:	0009883a 	mov	r4,zero
   21424:	000d883a 	mov	r6,zero
   21428:	da000a15 	stw	r8,40(sp)
   2142c:	da400815 	stw	r9,32(sp)
   21430:	00236cc0 	call	236cc <__muldf3>
   21434:	da400817 	ldw	r9,32(sp)
   21438:	da000a17 	ldw	r8,40(sp)
   2143c:	800b883a 	mov	r5,r16
   21440:	480d883a 	mov	r6,r9
   21444:	400f883a 	mov	r7,r8
   21448:	0009883a 	mov	r4,zero
   2144c:	1039883a 	mov	fp,r2
   21450:	182f883a 	mov	r23,r3
   21454:	0023de40 	call	23de4 <__subdf3>
   21458:	b009883a 	mov	r4,r22
   2145c:	a00b883a 	mov	r5,r20
   21460:	100d883a 	mov	r6,r2
   21464:	180f883a 	mov	r7,r3
   21468:	0023de40 	call	23de4 <__subdf3>
   2146c:	01bfbeb4 	movhi	r6,65274
   21470:	01cff9b4 	movhi	r7,16358
   21474:	318e7bc4 	addi	r6,r6,14831
   21478:	39cb9084 	addi	r7,r7,11842
   2147c:	1009883a 	mov	r4,r2
   21480:	180b883a 	mov	r5,r3
   21484:	00236cc0 	call	236cc <__muldf3>
   21488:	01832a34 	movhi	r6,3240
   2148c:	01ef8834 	movhi	r7,48672
   21490:	800b883a 	mov	r5,r16
   21494:	319b0e44 	addi	r6,r6,27705
   21498:	39d71844 	addi	r7,r7,23649
   2149c:	0009883a 	mov	r4,zero
   214a0:	1029883a 	mov	r20,r2
   214a4:	1823883a 	mov	r17,r3
   214a8:	00236cc0 	call	236cc <__muldf3>
   214ac:	a009883a 	mov	r4,r20
   214b0:	880b883a 	mov	r5,r17
   214b4:	100d883a 	mov	r6,r2
   214b8:	180f883a 	mov	r7,r3
   214bc:	00222e00 	call	222e0 <__adddf3>
   214c0:	e009883a 	mov	r4,fp
   214c4:	b80b883a 	mov	r5,r23
   214c8:	100d883a 	mov	r6,r2
   214cc:	180f883a 	mov	r7,r3
   214d0:	102d883a 	mov	r22,r2
   214d4:	1829883a 	mov	r20,r3
   214d8:	00222e00 	call	222e0 <__adddf3>
   214dc:	e00d883a 	mov	r6,fp
   214e0:	b80f883a 	mov	r7,r23
   214e4:	1009883a 	mov	r4,r2
   214e8:	180b883a 	mov	r5,r3
   214ec:	1023883a 	mov	r17,r2
   214f0:	1821883a 	mov	r16,r3
   214f4:	0023de40 	call	23de4 <__subdf3>
   214f8:	b009883a 	mov	r4,r22
   214fc:	a00b883a 	mov	r5,r20
   21500:	100d883a 	mov	r6,r2
   21504:	180f883a 	mov	r7,r3
   21508:	0023de40 	call	23de4 <__subdf3>
   2150c:	880d883a 	mov	r6,r17
   21510:	800f883a 	mov	r7,r16
   21514:	8809883a 	mov	r4,r17
   21518:	800b883a 	mov	r5,r16
   2151c:	1039883a 	mov	fp,r2
   21520:	182f883a 	mov	r23,r3
   21524:	00236cc0 	call	236cc <__muldf3>
   21528:	019caff4 	movhi	r6,29375
   2152c:	01cf99b4 	movhi	r7,15974
   21530:	31a93404 	addi	r6,r6,-23344
   21534:	39cdda44 	addi	r7,r7,14185
   21538:	1009883a 	mov	r4,r2
   2153c:	180b883a 	mov	r5,r3
   21540:	102d883a 	mov	r22,r2
   21544:	1829883a 	mov	r20,r3
   21548:	00236cc0 	call	236cc <__muldf3>
   2154c:	01b174b4 	movhi	r6,50642
   21550:	01cfaf34 	movhi	r7,16060
   21554:	319afc44 	addi	r6,r6,27633
   21558:	39ef5044 	addi	r7,r7,-17087
   2155c:	1009883a 	mov	r4,r2
   21560:	180b883a 	mov	r5,r3
   21564:	0023de40 	call	23de4 <__subdf3>
   21568:	b00d883a 	mov	r6,r22
   2156c:	a00f883a 	mov	r7,r20
   21570:	1009883a 	mov	r4,r2
   21574:	180b883a 	mov	r5,r3
   21578:	00236cc0 	call	236cc <__muldf3>
   2157c:	01abc9b4 	movhi	r6,44838
   21580:	01cfc474 	movhi	r7,16145
   21584:	31b78b04 	addi	r6,r6,-8660
   21588:	39d59a84 	addi	r7,r7,22122
   2158c:	1009883a 	mov	r4,r2
   21590:	180b883a 	mov	r5,r3
   21594:	00222e00 	call	222e0 <__adddf3>
   21598:	b00d883a 	mov	r6,r22
   2159c:	a00f883a 	mov	r7,r20
   215a0:	1009883a 	mov	r4,r2
   215a4:	180b883a 	mov	r5,r3
   215a8:	00236cc0 	call	236cc <__muldf3>
   215ac:	0185aff4 	movhi	r6,5823
   215b0:	01cfd9f4 	movhi	r7,16231
   215b4:	31af64c4 	addi	r6,r6,-17005
   215b8:	39f05b04 	addi	r7,r7,-16020
   215bc:	1009883a 	mov	r4,r2
   215c0:	180b883a 	mov	r5,r3
   215c4:	0023de40 	call	23de4 <__subdf3>
   215c8:	b00d883a 	mov	r6,r22
   215cc:	a00f883a 	mov	r7,r20
   215d0:	1009883a 	mov	r4,r2
   215d4:	180b883a 	mov	r5,r3
   215d8:	00236cc0 	call	236cc <__muldf3>
   215dc:	01955574 	movhi	r6,21845
   215e0:	01cff174 	movhi	r7,16325
   215e4:	31954f84 	addi	r6,r6,21822
   215e8:	39d55544 	addi	r7,r7,21845
   215ec:	1009883a 	mov	r4,r2
   215f0:	180b883a 	mov	r5,r3
   215f4:	00222e00 	call	222e0 <__adddf3>
   215f8:	b00d883a 	mov	r6,r22
   215fc:	a00f883a 	mov	r7,r20
   21600:	1009883a 	mov	r4,r2
   21604:	180b883a 	mov	r5,r3
   21608:	00236cc0 	call	236cc <__muldf3>
   2160c:	100d883a 	mov	r6,r2
   21610:	180f883a 	mov	r7,r3
   21614:	8809883a 	mov	r4,r17
   21618:	800b883a 	mov	r5,r16
   2161c:	0023de40 	call	23de4 <__subdf3>
   21620:	100d883a 	mov	r6,r2
   21624:	180f883a 	mov	r7,r3
   21628:	8809883a 	mov	r4,r17
   2162c:	800b883a 	mov	r5,r16
   21630:	102d883a 	mov	r22,r2
   21634:	1829883a 	mov	r20,r3
   21638:	00236cc0 	call	236cc <__muldf3>
   2163c:	b009883a 	mov	r4,r22
   21640:	a00b883a 	mov	r5,r20
   21644:	000d883a 	mov	r6,zero
   21648:	01d00034 	movhi	r7,16384
   2164c:	1025883a 	mov	r18,r2
   21650:	182b883a 	mov	r21,r3
   21654:	0023de40 	call	23de4 <__subdf3>
   21658:	100d883a 	mov	r6,r2
   2165c:	180f883a 	mov	r7,r3
   21660:	9009883a 	mov	r4,r18
   21664:	a80b883a 	mov	r5,r21
   21668:	0022b8c0 	call	22b8c <__divdf3>
   2166c:	e00d883a 	mov	r6,fp
   21670:	b80f883a 	mov	r7,r23
   21674:	8809883a 	mov	r4,r17
   21678:	800b883a 	mov	r5,r16
   2167c:	102d883a 	mov	r22,r2
   21680:	1829883a 	mov	r20,r3
   21684:	00236cc0 	call	236cc <__muldf3>
   21688:	e00d883a 	mov	r6,fp
   2168c:	b80f883a 	mov	r7,r23
   21690:	1009883a 	mov	r4,r2
   21694:	180b883a 	mov	r5,r3
   21698:	00222e00 	call	222e0 <__adddf3>
   2169c:	100d883a 	mov	r6,r2
   216a0:	180f883a 	mov	r7,r3
   216a4:	b009883a 	mov	r4,r22
   216a8:	a00b883a 	mov	r5,r20
   216ac:	0023de40 	call	23de4 <__subdf3>
   216b0:	880d883a 	mov	r6,r17
   216b4:	800f883a 	mov	r7,r16
   216b8:	1009883a 	mov	r4,r2
   216bc:	180b883a 	mov	r5,r3
   216c0:	0023de40 	call	23de4 <__subdf3>
   216c4:	0009883a 	mov	r4,zero
   216c8:	014ffc34 	movhi	r5,16368
   216cc:	100d883a 	mov	r6,r2
   216d0:	180f883a 	mov	r7,r3
   216d4:	0023de40 	call	23de4 <__subdf3>
   216d8:	d9000217 	ldw	r4,8(sp)
   216dc:	190b883a 	add	r5,r3,r4
   216e0:	2809d53a 	srai	r4,r5,20
   216e4:	0100cd0e 	bge	zero,r4,21a1c <__ieee754_pow+0x1078>
   216e8:	1009883a 	mov	r4,r2
   216ec:	000d883a 	mov	r6,zero
   216f0:	980f883a 	mov	r7,r19
   216f4:	00236cc0 	call	236cc <__muldf3>
   216f8:	003ce606 	br	20a94 <__alt_data_end+0xfffe0a94>
   216fc:	00b00434 	movhi	r2,49168
   21700:	8885883a 	add	r2,r17,r2
   21704:	1544b03a 	or	r2,r2,r21
   21708:	1000b326 	beq	r2,zero,219d8 <__ieee754_pow+0x1034>
   2170c:	00800044 	movi	r2,1
   21710:	a8bd181e 	bne	r21,r2,20b74 <__alt_data_end+0xfffe0b74>
   21714:	18e0003c 	xorhi	r3,r3,32768
   21718:	b805883a 	mov	r2,r23
   2171c:	003cdd06 	br	20a94 <__alt_data_end+0xfffe0a94>
   21720:	800d883a 	mov	r6,r16
   21724:	980f883a 	mov	r7,r19
   21728:	8009883a 	mov	r4,r16
   2172c:	980b883a 	mov	r5,r19
   21730:	00236cc0 	call	236cc <__muldf3>
   21734:	003cd706 	br	20a94 <__alt_data_end+0xfffe0a94>
   21738:	05600034 	movhi	r21,32768
   2173c:	ad7fffc4 	addi	r21,r21,-1
   21740:	00902474 	movhi	r2,16529
   21744:	1d6a703a 	and	r21,r3,r21
   21748:	10b2ffc4 	addi	r2,r2,-13313
   2174c:	15409d0e 	bge	r2,r21,219c4 <__ieee754_pow+0x1020>
   21750:	008fdbf4 	movhi	r2,16239
   21754:	108d0004 	addi	r2,r2,13312
   21758:	1885883a 	add	r2,r3,r2
   2175c:	15c4b03a 	or	r2,r2,r23
   21760:	10000b1e 	bne	r2,zero,21790 <__ieee754_pow+0xdec>
   21764:	900d883a 	mov	r6,r18
   21768:	880f883a 	mov	r7,r17
   2176c:	b809883a 	mov	r4,r23
   21770:	180b883a 	mov	r5,r3
   21774:	0023de40 	call	23de4 <__subdf3>
   21778:	100d883a 	mov	r6,r2
   2177c:	180f883a 	mov	r7,r3
   21780:	b009883a 	mov	r4,r22
   21784:	a00b883a 	mov	r5,r20
   21788:	00235d80 	call	235d8 <__ledf2>
   2178c:	00befc16 	blt	zero,r2,21380 <__alt_data_end+0xfffe1380>
   21790:	01b0be74 	movhi	r6,49913
   21794:	01c06974 	movhi	r7,421
   21798:	980b883a 	mov	r5,r19
   2179c:	31bcd644 	addi	r6,r6,-3239
   217a0:	39db87c4 	addi	r7,r7,28191
   217a4:	0009883a 	mov	r4,zero
   217a8:	00236cc0 	call	236cc <__muldf3>
   217ac:	01b0be74 	movhi	r6,49913
   217b0:	01c06974 	movhi	r7,421
   217b4:	31bcd644 	addi	r6,r6,-3239
   217b8:	39db87c4 	addi	r7,r7,28191
   217bc:	1009883a 	mov	r4,r2
   217c0:	180b883a 	mov	r5,r3
   217c4:	00236cc0 	call	236cc <__muldf3>
   217c8:	003cb206 	br	20a94 <__alt_data_end+0xfffe0a94>
   217cc:	04effc34 	movhi	r19,49136
   217d0:	003ea706 	br	21270 <__alt_data_end+0xfffe1270>
   217d4:	e03cdc0e 	bge	fp,zero,20b48 <__alt_data_end+0xfffe0b48>
   217d8:	0005883a 	mov	r2,zero
   217dc:	e0e0003c 	xorhi	r3,fp,32768
   217e0:	003cac06 	br	20a94 <__alt_data_end+0xfffe0a94>
   217e4:	0019883a 	mov	r12,zero
   217e8:	003d3206 	br	20cb4 <__alt_data_end+0xfffe0cb4>
   217ec:	008ffc34 	movhi	r2,16368
   217f0:	10bfff84 	addi	r2,r2,-2
   217f4:	147cd30e 	bge	r2,r17,20b44 <__alt_data_end+0xfffe0b44>
   217f8:	01cffc34 	movhi	r7,16368
   217fc:	3c7cea16 	blt	r7,r17,20ba8 <__alt_data_end+0xfffe0ba8>
   21800:	b809883a 	mov	r4,r23
   21804:	000d883a 	mov	r6,zero
   21808:	180b883a 	mov	r5,r3
   2180c:	dac00b15 	stw	r11,44(sp)
   21810:	0023de40 	call	23de4 <__subdf3>
   21814:	01cffdf4 	movhi	r7,16375
   21818:	39c551c4 	addi	r7,r7,5447
   2181c:	01980034 	movhi	r6,24576
   21820:	1009883a 	mov	r4,r2
   21824:	180b883a 	mov	r5,r3
   21828:	1023883a 	mov	r17,r2
   2182c:	1821883a 	mov	r16,r3
   21830:	00236cc0 	call	236cc <__muldf3>
   21834:	01be17b4 	movhi	r6,63582
   21838:	01cf9574 	movhi	r7,15957
   2183c:	8809883a 	mov	r4,r17
   21840:	800b883a 	mov	r5,r16
   21844:	31b7d104 	addi	r6,r6,-8380
   21848:	39eb82c4 	addi	r7,r7,-20981
   2184c:	1027883a 	mov	r19,r2
   21850:	1825883a 	mov	r18,r3
   21854:	00236cc0 	call	236cc <__muldf3>
   21858:	8809883a 	mov	r4,r17
   2185c:	800b883a 	mov	r5,r16
   21860:	000d883a 	mov	r6,zero
   21864:	01cff434 	movhi	r7,16336
   21868:	1829883a 	mov	r20,r3
   2186c:	d8800a15 	stw	r2,40(sp)
   21870:	00236cc0 	call	236cc <__muldf3>
   21874:	01155574 	movhi	r4,21845
   21878:	014ff574 	movhi	r5,16341
   2187c:	100d883a 	mov	r6,r2
   21880:	180f883a 	mov	r7,r3
   21884:	21155544 	addi	r4,r4,21845
   21888:	29555544 	addi	r5,r5,21845
   2188c:	0023de40 	call	23de4 <__subdf3>
   21890:	880d883a 	mov	r6,r17
   21894:	800f883a 	mov	r7,r16
   21898:	1009883a 	mov	r4,r2
   2189c:	180b883a 	mov	r5,r3
   218a0:	00236cc0 	call	236cc <__muldf3>
   218a4:	100d883a 	mov	r6,r2
   218a8:	180f883a 	mov	r7,r3
   218ac:	0009883a 	mov	r4,zero
   218b0:	014ff834 	movhi	r5,16352
   218b4:	0023de40 	call	23de4 <__subdf3>
   218b8:	880d883a 	mov	r6,r17
   218bc:	800f883a 	mov	r7,r16
   218c0:	8809883a 	mov	r4,r17
   218c4:	800b883a 	mov	r5,r16
   218c8:	102f883a 	mov	r23,r2
   218cc:	d8c00815 	stw	r3,32(sp)
   218d0:	00236cc0 	call	236cc <__muldf3>
   218d4:	da400817 	ldw	r9,32(sp)
   218d8:	100d883a 	mov	r6,r2
   218dc:	180f883a 	mov	r7,r3
   218e0:	480b883a 	mov	r5,r9
   218e4:	b809883a 	mov	r4,r23
   218e8:	00236cc0 	call	236cc <__muldf3>
   218ec:	01994b34 	movhi	r6,25900
   218f0:	01cffdf4 	movhi	r7,16375
   218f4:	31a0bf84 	addi	r6,r6,-32002
   218f8:	39c551c4 	addi	r7,r7,5447
   218fc:	1009883a 	mov	r4,r2
   21900:	180b883a 	mov	r5,r3
   21904:	00236cc0 	call	236cc <__muldf3>
   21908:	da000a17 	ldw	r8,40(sp)
   2190c:	a00b883a 	mov	r5,r20
   21910:	100d883a 	mov	r6,r2
   21914:	4009883a 	mov	r4,r8
   21918:	180f883a 	mov	r7,r3
   2191c:	0023de40 	call	23de4 <__subdf3>
   21920:	100d883a 	mov	r6,r2
   21924:	180f883a 	mov	r7,r3
   21928:	9809883a 	mov	r4,r19
   2192c:	900b883a 	mov	r5,r18
   21930:	1029883a 	mov	r20,r2
   21934:	1823883a 	mov	r17,r3
   21938:	00222e00 	call	222e0 <__adddf3>
   2193c:	1821883a 	mov	r16,r3
   21940:	980d883a 	mov	r6,r19
   21944:	900f883a 	mov	r7,r18
   21948:	0009883a 	mov	r4,zero
   2194c:	180b883a 	mov	r5,r3
   21950:	003e3a06 	br	2123c <__alt_data_end+0xfffe123c>
   21954:	800d883a 	mov	r6,r16
   21958:	980f883a 	mov	r7,r19
   2195c:	0009883a 	mov	r4,zero
   21960:	900b883a 	mov	r5,r18
   21964:	0022b8c0 	call	22b8c <__divdf3>
   21968:	003c4a06 	br	20a94 <__alt_data_end+0xfffe0a94>
   2196c:	01a20034 	movhi	r6,34816
   21970:	01df8e34 	movhi	r7,32312
   21974:	980b883a 	mov	r5,r19
   21978:	319d6704 	addi	r6,r6,30108
   2197c:	39f90f04 	addi	r7,r7,-7108
   21980:	0009883a 	mov	r4,zero
   21984:	00236cc0 	call	236cc <__muldf3>
   21988:	01a20034 	movhi	r6,34816
   2198c:	01df8e34 	movhi	r7,32312
   21990:	319d6704 	addi	r6,r6,30108
   21994:	39f90f04 	addi	r7,r7,-7108
   21998:	1009883a 	mov	r4,r2
   2199c:	180b883a 	mov	r5,r3
   219a0:	00236cc0 	call	236cc <__muldf3>
   219a4:	003c3b06 	br	20a94 <__alt_data_end+0xfffe0a94>
   219a8:	303c551e 	bne	r6,zero,20b00 <__alt_data_end+0xfffe0b00>
   219ac:	1885c83a 	sub	r2,r3,r2
   219b0:	9087d83a 	sra	r3,r18,r2
   219b4:	1884983a 	sll	r2,r3,r2
   219b8:	90801f26 	beq	r18,r2,21a38 <__ieee754_pow+0x1094>
   219bc:	002b883a 	mov	r21,zero
   219c0:	003c1806 	br	20a24 <__alt_data_end+0xfffe0a24>
   219c4:	008ff834 	movhi	r2,16352
   219c8:	157e6d16 	blt	r2,r21,21380 <__alt_data_end+0xfffe1380>
   219cc:	d8000215 	stw	zero,8(sp)
   219d0:	d8000015 	stw	zero,0(sp)
   219d4:	003e8f06 	br	21414 <__alt_data_end+0xfffe1414>
   219d8:	b80d883a 	mov	r6,r23
   219dc:	180f883a 	mov	r7,r3
   219e0:	003c9e06 	br	20c5c <__alt_data_end+0xfffe0c5c>
   219e4:	008ff8f4 	movhi	r2,16355
   219e8:	10ae00c4 	addi	r2,r2,-18429
   219ec:	0250f434 	movhi	r9,17360
   219f0:	020f9374 	movhi	r8,15949
   219f4:	d8800215 	stw	r2,8(sp)
   219f8:	4a740184 	addi	r9,r9,-12282
   219fc:	423f7ac4 	addi	r8,r8,-533
   21a00:	04d00034 	movhi	r19,16384
   21a04:	02800134 	movhi	r10,4
   21a08:	048ffe34 	movhi	r18,16376
   21a0c:	003cbf06 	br	20d0c <__alt_data_end+0xfffe0d0c>
   21a10:	00c9c83a 	sub	r4,zero,r3
   21a14:	d9000015 	stw	r4,0(sp)
   21a18:	003e6d06 	br	213d0 <__alt_data_end+0xfffe13d0>
   21a1c:	d9800017 	ldw	r6,0(sp)
   21a20:	1009883a 	mov	r4,r2
   21a24:	180b883a 	mov	r5,r3
   21a28:	0021f740 	call	21f74 <scalbn>
   21a2c:	1009883a 	mov	r4,r2
   21a30:	180b883a 	mov	r5,r3
   21a34:	003f2d06 	br	216ec <__alt_data_end+0xfffe16ec>
   21a38:	18c0004c 	andi	r3,r3,1
   21a3c:	02800084 	movi	r10,2
   21a40:	50ebc83a 	sub	r21,r10,r3
   21a44:	003bf706 	br	20a24 <__alt_data_end+0xfffe0a24>

00021a48 <__ieee754_sqrt>:
   21a48:	defffd04 	addi	sp,sp,-12
   21a4c:	dc400115 	stw	r17,4(sp)
   21a50:	dc000015 	stw	r16,0(sp)
   21a54:	dfc00215 	stw	ra,8(sp)
   21a58:	28dffc2c 	andhi	r3,r5,32752
   21a5c:	009ffc34 	movhi	r2,32752
   21a60:	2821883a 	mov	r16,r5
   21a64:	2023883a 	mov	r17,r4
   21a68:	200d883a 	mov	r6,r4
   21a6c:	18807b26 	beq	r3,r2,21c5c <__ieee754_sqrt+0x214>
   21a70:	01405f0e 	bge	zero,r5,21bf0 <__ieee754_sqrt+0x1a8>
   21a74:	2815d53a 	srai	r10,r5,20
   21a78:	50006a26 	beq	r10,zero,21c24 <__ieee754_sqrt+0x1dc>
   21a7c:	00c00434 	movhi	r3,16
   21a80:	52bf0044 	addi	r10,r10,-1023
   21a84:	18ffffc4 	addi	r3,r3,-1
   21a88:	80c6703a 	and	r3,r16,r3
   21a8c:	5080004c 	andi	r2,r10,1
   21a90:	18c00434 	orhi	r3,r3,16
   21a94:	1000511e 	bne	r2,zero,21bdc <__ieee754_sqrt+0x194>
   21a98:	3004d7fa 	srli	r2,r6,31
   21a9c:	5015d07a 	srai	r10,r10,1
   21aa0:	18c7883a 	add	r3,r3,r3
   21aa4:	10c5883a 	add	r2,r2,r3
   21aa8:	01400584 	movi	r5,22
   21aac:	3187883a 	add	r3,r6,r6
   21ab0:	0013883a 	mov	r9,zero
   21ab4:	000f883a 	mov	r7,zero
   21ab8:	01000834 	movhi	r4,32
   21abc:	390d883a 	add	r6,r7,r4
   21ac0:	1810d7fa 	srli	r8,r3,31
   21ac4:	297fffc4 	addi	r5,r5,-1
   21ac8:	11800316 	blt	r2,r6,21ad8 <__ieee754_sqrt+0x90>
   21acc:	1185c83a 	sub	r2,r2,r6
   21ad0:	310f883a 	add	r7,r6,r4
   21ad4:	4913883a 	add	r9,r9,r4
   21ad8:	1085883a 	add	r2,r2,r2
   21adc:	4085883a 	add	r2,r8,r2
   21ae0:	18c7883a 	add	r3,r3,r3
   21ae4:	2008d07a 	srli	r4,r4,1
   21ae8:	283ff41e 	bne	r5,zero,21abc <__alt_data_end+0xfffe1abc>
   21aec:	01200034 	movhi	r4,32768
   21af0:	01800804 	movi	r6,32
   21af4:	0011883a 	mov	r8,zero
   21af8:	0019883a 	mov	r12,zero
   21afc:	201b883a 	mov	r13,r4
   21b00:	00000806 	br	21b24 <__ieee754_sqrt+0xdc>
   21b04:	38801726 	beq	r7,r2,21b64 <__ieee754_sqrt+0x11c>
   21b08:	180ad7fa 	srli	r5,r3,31
   21b0c:	1085883a 	add	r2,r2,r2
   21b10:	31bfffc4 	addi	r6,r6,-1
   21b14:	2885883a 	add	r2,r5,r2
   21b18:	18c7883a 	add	r3,r3,r3
   21b1c:	2008d07a 	srli	r4,r4,1
   21b20:	30001726 	beq	r6,zero,21b80 <__ieee754_sqrt+0x138>
   21b24:	230b883a 	add	r5,r4,r12
   21b28:	38bff60e 	bge	r7,r2,21b04 <__alt_data_end+0xfffe1b04>
   21b2c:	2ae0002c 	andhi	r11,r5,32768
   21b30:	2919883a 	add	r12,r5,r4
   21b34:	5b400826 	beq	r11,r13,21b58 <__ieee754_sqrt+0x110>
   21b38:	3817883a 	mov	r11,r7
   21b3c:	11c5c83a 	sub	r2,r2,r7
   21b40:	1940012e 	bgeu	r3,r5,21b48 <__ieee754_sqrt+0x100>
   21b44:	10bfffc4 	addi	r2,r2,-1
   21b48:	1947c83a 	sub	r3,r3,r5
   21b4c:	4111883a 	add	r8,r8,r4
   21b50:	580f883a 	mov	r7,r11
   21b54:	003fec06 	br	21b08 <__alt_data_end+0xfffe1b08>
   21b58:	603ff716 	blt	r12,zero,21b38 <__alt_data_end+0xfffe1b38>
   21b5c:	3ac00044 	addi	r11,r7,1
   21b60:	003ff606 	br	21b3c <__alt_data_end+0xfffe1b3c>
   21b64:	19401936 	bltu	r3,r5,21bcc <__ieee754_sqrt+0x184>
   21b68:	2ae0002c 	andhi	r11,r5,32768
   21b6c:	2919883a 	add	r12,r5,r4
   21b70:	5b404526 	beq	r11,r13,21c88 <__ieee754_sqrt+0x240>
   21b74:	1017883a 	mov	r11,r2
   21b78:	0005883a 	mov	r2,zero
   21b7c:	003ff206 	br	21b48 <__alt_data_end+0xfffe1b48>
   21b80:	10c4b03a 	or	r2,r2,r3
   21b84:	10000426 	beq	r2,zero,21b98 <__ieee754_sqrt+0x150>
   21b88:	00bfffc4 	movi	r2,-1
   21b8c:	40804026 	beq	r8,r2,21c90 <__ieee754_sqrt+0x248>
   21b90:	4080004c 	andi	r2,r8,1
   21b94:	4091883a 	add	r8,r8,r2
   21b98:	4004d07a 	srli	r2,r8,1
   21b9c:	4807d07a 	srai	r3,r9,1
   21ba0:	010ff834 	movhi	r4,16352
   21ba4:	4a40004c 	andi	r9,r9,1
   21ba8:	1909883a 	add	r4,r3,r4
   21bac:	4800091e 	bne	r9,zero,21bd4 <__ieee754_sqrt+0x18c>
   21bb0:	5006953a 	slli	r3,r10,20
   21bb4:	1907883a 	add	r3,r3,r4
   21bb8:	dfc00217 	ldw	ra,8(sp)
   21bbc:	dc400117 	ldw	r17,4(sp)
   21bc0:	dc000017 	ldw	r16,0(sp)
   21bc4:	dec00304 	addi	sp,sp,12
   21bc8:	f800283a 	ret
   21bcc:	3805883a 	mov	r2,r7
   21bd0:	003fcd06 	br	21b08 <__alt_data_end+0xfffe1b08>
   21bd4:	10a00034 	orhi	r2,r2,32768
   21bd8:	003ff506 	br	21bb0 <__alt_data_end+0xfffe1bb0>
   21bdc:	3004d7fa 	srli	r2,r6,31
   21be0:	18c7883a 	add	r3,r3,r3
   21be4:	318d883a 	add	r6,r6,r6
   21be8:	10c7883a 	add	r3,r2,r3
   21bec:	003faa06 	br	21a98 <__alt_data_end+0xfffe1a98>
   21bf0:	00a00034 	movhi	r2,32768
   21bf4:	10bfffc4 	addi	r2,r2,-1
   21bf8:	2884703a 	and	r2,r5,r2
   21bfc:	1104b03a 	or	r2,r2,r4
   21c00:	10001e26 	beq	r2,zero,21c7c <__ieee754_sqrt+0x234>
   21c04:	2800291e 	bne	r5,zero,21cac <__ieee754_sqrt+0x264>
   21c08:	0015883a 	mov	r10,zero
   21c0c:	3020d2fa 	srli	r16,r6,11
   21c10:	52bffac4 	addi	r10,r10,-21
   21c14:	300c957a 	slli	r6,r6,21
   21c18:	803ffc26 	beq	r16,zero,21c0c <__alt_data_end+0xfffe1c0c>
   21c1c:	8080042c 	andhi	r2,r16,16
   21c20:	10001e1e 	bne	r2,zero,21c9c <__ieee754_sqrt+0x254>
   21c24:	0005883a 	mov	r2,zero
   21c28:	00000106 	br	21c30 <__ieee754_sqrt+0x1e8>
   21c2c:	1805883a 	mov	r2,r3
   21c30:	8421883a 	add	r16,r16,r16
   21c34:	8100042c 	andhi	r4,r16,16
   21c38:	10c00044 	addi	r3,r2,1
   21c3c:	203ffb26 	beq	r4,zero,21c2c <__alt_data_end+0xfffe1c2c>
   21c40:	01000804 	movi	r4,32
   21c44:	20c9c83a 	sub	r4,r4,r3
   21c48:	3108d83a 	srl	r4,r6,r4
   21c4c:	5095c83a 	sub	r10,r10,r2
   21c50:	30cc983a 	sll	r6,r6,r3
   21c54:	2420b03a 	or	r16,r4,r16
   21c58:	003f8806 	br	21a7c <__alt_data_end+0xfffe1a7c>
   21c5c:	280f883a 	mov	r7,r5
   21c60:	00236cc0 	call	236cc <__muldf3>
   21c64:	880d883a 	mov	r6,r17
   21c68:	800f883a 	mov	r7,r16
   21c6c:	1009883a 	mov	r4,r2
   21c70:	180b883a 	mov	r5,r3
   21c74:	00222e00 	call	222e0 <__adddf3>
   21c78:	003fcf06 	br	21bb8 <__alt_data_end+0xfffe1bb8>
   21c7c:	2005883a 	mov	r2,r4
   21c80:	2807883a 	mov	r3,r5
   21c84:	003fcc06 	br	21bb8 <__alt_data_end+0xfffe1bb8>
   21c88:	603fba16 	blt	r12,zero,21b74 <__alt_data_end+0xfffe1b74>
   21c8c:	003fb306 	br	21b5c <__alt_data_end+0xfffe1b5c>
   21c90:	4a400044 	addi	r9,r9,1
   21c94:	0005883a 	mov	r2,zero
   21c98:	003fc006 	br	21b9c <__alt_data_end+0xfffe1b9c>
   21c9c:	01000804 	movi	r4,32
   21ca0:	00bfffc4 	movi	r2,-1
   21ca4:	0007883a 	mov	r3,zero
   21ca8:	003fe706 	br	21c48 <__alt_data_end+0xfffe1c48>
   21cac:	200d883a 	mov	r6,r4
   21cb0:	280f883a 	mov	r7,r5
   21cb4:	0023de40 	call	23de4 <__subdf3>
   21cb8:	100d883a 	mov	r6,r2
   21cbc:	180f883a 	mov	r7,r3
   21cc0:	1009883a 	mov	r4,r2
   21cc4:	180b883a 	mov	r5,r3
   21cc8:	0022b8c0 	call	22b8c <__divdf3>
   21ccc:	003fba06 	br	21bb8 <__alt_data_end+0xfffe1bb8>

00021cd0 <fabs>:
   21cd0:	00e00034 	movhi	r3,32768
   21cd4:	18ffffc4 	addi	r3,r3,-1
   21cd8:	2005883a 	mov	r2,r4
   21cdc:	28c6703a 	and	r3,r5,r3
   21ce0:	f800283a 	ret

00021ce4 <finite>:
   21ce4:	00a00034 	movhi	r2,32768
   21ce8:	10bfffc4 	addi	r2,r2,-1
   21cec:	288a703a 	and	r5,r5,r2
   21cf0:	00e00434 	movhi	r3,32784
   21cf4:	28c5883a 	add	r2,r5,r3
   21cf8:	1004d7fa 	srli	r2,r2,31
   21cfc:	f800283a 	ret

00021d00 <__fpclassifyd>:
   21d00:	00a00034 	movhi	r2,32768
   21d04:	10bfffc4 	addi	r2,r2,-1
   21d08:	2884703a 	and	r2,r5,r2
   21d0c:	10000726 	beq	r2,zero,21d2c <__fpclassifyd+0x2c>
   21d10:	00fffc34 	movhi	r3,65520
   21d14:	019ff834 	movhi	r6,32736
   21d18:	28c7883a 	add	r3,r5,r3
   21d1c:	31bfffc4 	addi	r6,r6,-1
   21d20:	30c00536 	bltu	r6,r3,21d38 <__fpclassifyd+0x38>
   21d24:	00800104 	movi	r2,4
   21d28:	f800283a 	ret
   21d2c:	2000021e 	bne	r4,zero,21d38 <__fpclassifyd+0x38>
   21d30:	00800084 	movi	r2,2
   21d34:	f800283a 	ret
   21d38:	00dffc34 	movhi	r3,32752
   21d3c:	019ff834 	movhi	r6,32736
   21d40:	28cb883a 	add	r5,r5,r3
   21d44:	31bfffc4 	addi	r6,r6,-1
   21d48:	317ff62e 	bgeu	r6,r5,21d24 <__alt_data_end+0xfffe1d24>
   21d4c:	01400434 	movhi	r5,16
   21d50:	297fffc4 	addi	r5,r5,-1
   21d54:	28800236 	bltu	r5,r2,21d60 <__fpclassifyd+0x60>
   21d58:	008000c4 	movi	r2,3
   21d5c:	f800283a 	ret
   21d60:	10c00226 	beq	r2,r3,21d6c <__fpclassifyd+0x6c>
   21d64:	0005883a 	mov	r2,zero
   21d68:	f800283a 	ret
   21d6c:	2005003a 	cmpeq	r2,r4,zero
   21d70:	f800283a 	ret

00021d74 <matherr>:
   21d74:	0005883a 	mov	r2,zero
   21d78:	f800283a 	ret

00021d7c <nan>:
   21d7c:	0005883a 	mov	r2,zero
   21d80:	00dffe34 	movhi	r3,32760
   21d84:	f800283a 	ret

00021d88 <rint>:
   21d88:	2813d53a 	srai	r9,r5,20
   21d8c:	defff904 	addi	sp,sp,-28
   21d90:	dc000215 	stw	r16,8(sp)
   21d94:	4a41ffcc 	andi	r9,r9,2047
   21d98:	dfc00615 	stw	ra,24(sp)
   21d9c:	dcc00515 	stw	r19,20(sp)
   21da0:	dc800415 	stw	r18,16(sp)
   21da4:	dc400315 	stw	r17,12(sp)
   21da8:	01c004c4 	movi	r7,19
   21dac:	49bf0044 	addi	r6,r9,-1023
   21db0:	2811883a 	mov	r8,r5
   21db4:	2005883a 	mov	r2,r4
   21db8:	2807883a 	mov	r3,r5
   21dbc:	2015883a 	mov	r10,r4
   21dc0:	2820d7fa 	srli	r16,r5,31
   21dc4:	39801316 	blt	r7,r6,21e14 <rint+0x8c>
   21dc8:	30003d16 	blt	r6,zero,21ec0 <rint+0x138>
   21dcc:	01000434 	movhi	r4,16
   21dd0:	213fffc4 	addi	r4,r4,-1
   21dd4:	2189d83a 	sra	r4,r4,r6
   21dd8:	290a703a 	and	r5,r5,r4
   21ddc:	288ab03a 	or	r5,r5,r2
   21de0:	28001026 	beq	r5,zero,21e24 <rint+0x9c>
   21de4:	2008d07a 	srli	r4,r4,1
   21de8:	4104703a 	and	r2,r8,r4
   21dec:	1294b03a 	or	r10,r2,r10
   21df0:	50005626 	beq	r10,zero,21f4c <rint+0x1c4>
   21df4:	31c05d26 	beq	r6,r7,21f6c <rint+0x1e4>
   21df8:	0015883a 	mov	r10,zero
   21dfc:	00c00134 	movhi	r3,4
   21e00:	1987d83a 	sra	r3,r3,r6
   21e04:	0108303a 	nor	r4,zero,r4
   21e08:	2210703a 	and	r8,r4,r8
   21e0c:	40c6b03a 	or	r3,r8,r3
   21e10:	00001806 	br	21e74 <rint+0xec>
   21e14:	01c00cc4 	movi	r7,51
   21e18:	3980090e 	bge	r7,r6,21e40 <rint+0xb8>
   21e1c:	01c10004 	movi	r7,1024
   21e20:	31c04e26 	beq	r6,r7,21f5c <rint+0x1d4>
   21e24:	dfc00617 	ldw	ra,24(sp)
   21e28:	dcc00517 	ldw	r19,20(sp)
   21e2c:	dc800417 	ldw	r18,16(sp)
   21e30:	dc400317 	ldw	r17,12(sp)
   21e34:	dc000217 	ldw	r16,8(sp)
   21e38:	dec00704 	addi	sp,sp,28
   21e3c:	f800283a 	ret
   21e40:	4a7efb44 	addi	r9,r9,-1043
   21e44:	013fffc4 	movi	r4,-1
   21e48:	2248d83a 	srl	r4,r4,r9
   21e4c:	110a703a 	and	r5,r2,r4
   21e50:	28004026 	beq	r5,zero,21f54 <rint+0x1cc>
   21e54:	2008d07a 	srli	r4,r4,1
   21e58:	1104703a 	and	r2,r2,r4
   21e5c:	10000526 	beq	r2,zero,21e74 <rint+0xec>
   21e60:	00900034 	movhi	r2,16384
   21e64:	1253d83a 	sra	r9,r2,r9
   21e68:	0108303a 	nor	r4,zero,r4
   21e6c:	2294703a 	and	r10,r4,r10
   21e70:	4a94b03a 	or	r10,r9,r10
   21e74:	802090fa 	slli	r16,r16,3
   21e78:	180b883a 	mov	r5,r3
   21e7c:	00c000f4 	movhi	r3,3
   21e80:	18c49804 	addi	r3,r3,4704
   21e84:	1c21883a 	add	r16,r3,r16
   21e88:	84400017 	ldw	r17,0(r16)
   21e8c:	84000117 	ldw	r16,4(r16)
   21e90:	5009883a 	mov	r4,r10
   21e94:	880d883a 	mov	r6,r17
   21e98:	800f883a 	mov	r7,r16
   21e9c:	00222e00 	call	222e0 <__adddf3>
   21ea0:	d8800015 	stw	r2,0(sp)
   21ea4:	d8c00115 	stw	r3,4(sp)
   21ea8:	d9000017 	ldw	r4,0(sp)
   21eac:	d9400117 	ldw	r5,4(sp)
   21eb0:	880d883a 	mov	r6,r17
   21eb4:	800f883a 	mov	r7,r16
   21eb8:	0023de40 	call	23de4 <__subdf3>
   21ebc:	003fd906 	br	21e24 <__alt_data_end+0xfffe1e24>
   21ec0:	04600034 	movhi	r17,32768
   21ec4:	8c7fffc4 	addi	r17,r17,-1
   21ec8:	2c46703a 	and	r3,r5,r17
   21ecc:	1906b03a 	or	r3,r3,r4
   21ed0:	18002026 	beq	r3,zero,21f54 <rint+0x1cc>
   21ed4:	01800434 	movhi	r6,16
   21ed8:	31bfffc4 	addi	r6,r6,-1
   21edc:	298c703a 	and	r6,r5,r6
   21ee0:	3104b03a 	or	r2,r6,r4
   21ee4:	008bc83a 	sub	r5,zero,r2
   21ee8:	800690fa 	slli	r3,r16,3
   21eec:	2884b03a 	or	r2,r5,r2
   21ef0:	014000f4 	movhi	r5,3
   21ef4:	29449804 	addi	r5,r5,4704
   21ef8:	28c7883a 	add	r3,r5,r3
   21efc:	1004d33a 	srli	r2,r2,12
   21f00:	1cc00017 	ldw	r19,0(r3)
   21f04:	1c800117 	ldw	r18,4(r3)
   21f08:	417fffac 	andhi	r5,r8,65534
   21f0c:	1080022c 	andhi	r2,r2,8
   21f10:	980d883a 	mov	r6,r19
   21f14:	900f883a 	mov	r7,r18
   21f18:	114ab03a 	or	r5,r2,r5
   21f1c:	00222e00 	call	222e0 <__adddf3>
   21f20:	d8800015 	stw	r2,0(sp)
   21f24:	d8c00115 	stw	r3,4(sp)
   21f28:	d9000017 	ldw	r4,0(sp)
   21f2c:	d9400117 	ldw	r5,4(sp)
   21f30:	980d883a 	mov	r6,r19
   21f34:	900f883a 	mov	r7,r18
   21f38:	0023de40 	call	23de4 <__subdf3>
   21f3c:	800897fa 	slli	r4,r16,31
   21f40:	1c46703a 	and	r3,r3,r17
   21f44:	1906b03a 	or	r3,r3,r4
   21f48:	003fb606 	br	21e24 <__alt_data_end+0xfffe1e24>
   21f4c:	0015883a 	mov	r10,zero
   21f50:	003fc806 	br	21e74 <__alt_data_end+0xfffe1e74>
   21f54:	4007883a 	mov	r3,r8
   21f58:	003fb206 	br	21e24 <__alt_data_end+0xfffe1e24>
   21f5c:	200d883a 	mov	r6,r4
   21f60:	280f883a 	mov	r7,r5
   21f64:	00222e00 	call	222e0 <__adddf3>
   21f68:	003fae06 	br	21e24 <__alt_data_end+0xfffe1e24>
   21f6c:	02a00034 	movhi	r10,32768
   21f70:	003fa206 	br	21dfc <__alt_data_end+0xfffe1dfc>

00021f74 <scalbn>:
   21f74:	2a1ffc2c 	andhi	r8,r5,32752
   21f78:	4011d53a 	srai	r8,r8,20
   21f7c:	defffe04 	addi	sp,sp,-8
   21f80:	dc000015 	stw	r16,0(sp)
   21f84:	dfc00115 	stw	ra,4(sp)
   21f88:	280f883a 	mov	r7,r5
   21f8c:	2015883a 	mov	r10,r4
   21f90:	3021883a 	mov	r16,r6
   21f94:	40001e1e 	bne	r8,zero,22010 <scalbn+0x9c>
   21f98:	00a00034 	movhi	r2,32768
   21f9c:	10bfffc4 	addi	r2,r2,-1
   21fa0:	2884703a 	and	r2,r5,r2
   21fa4:	1104b03a 	or	r2,r2,r4
   21fa8:	10002226 	beq	r2,zero,22034 <scalbn+0xc0>
   21fac:	01d0d434 	movhi	r7,17232
   21fb0:	000d883a 	mov	r6,zero
   21fb4:	00236cc0 	call	236cc <__muldf3>
   21fb8:	013ffff4 	movhi	r4,65535
   21fbc:	210f2c04 	addi	r4,r4,15536
   21fc0:	1015883a 	mov	r10,r2
   21fc4:	180f883a 	mov	r7,r3
   21fc8:	81002a16 	blt	r16,r4,22074 <scalbn+0x100>
   21fcc:	191ffc2c 	andhi	r4,r3,32752
   21fd0:	2009d53a 	srai	r4,r4,20
   21fd4:	223ff284 	addi	r8,r4,-54
   21fd8:	8211883a 	add	r8,r16,r8
   21fdc:	0081ff84 	movi	r2,2046
   21fe0:	12002f16 	blt	r2,r8,220a0 <scalbn+0x12c>
   21fe4:	0200190e 	bge	zero,r8,2204c <scalbn+0xd8>
   21fe8:	4010953a 	slli	r8,r8,20
   21fec:	01600434 	movhi	r5,32784
   21ff0:	297fffc4 	addi	r5,r5,-1
   21ff4:	194e703a 	and	r7,r3,r5
   21ff8:	5005883a 	mov	r2,r10
   21ffc:	3a06b03a 	or	r3,r7,r8
   22000:	dfc00117 	ldw	ra,4(sp)
   22004:	dc000017 	ldw	r16,0(sp)
   22008:	dec00204 	addi	sp,sp,8
   2200c:	f800283a 	ret
   22010:	0081ffc4 	movi	r2,2047
   22014:	2807883a 	mov	r3,r5
   22018:	40bfef1e 	bne	r8,r2,21fd8 <__alt_data_end+0xfffe1fd8>
   2201c:	200d883a 	mov	r6,r4
   22020:	00222e00 	call	222e0 <__adddf3>
   22024:	dfc00117 	ldw	ra,4(sp)
   22028:	dc000017 	ldw	r16,0(sp)
   2202c:	dec00204 	addi	sp,sp,8
   22030:	f800283a 	ret
   22034:	2005883a 	mov	r2,r4
   22038:	2807883a 	mov	r3,r5
   2203c:	dfc00117 	ldw	ra,4(sp)
   22040:	dc000017 	ldw	r16,0(sp)
   22044:	dec00204 	addi	sp,sp,8
   22048:	f800283a 	ret
   2204c:	00bff2c4 	movi	r2,-53
   22050:	4080240e 	bge	r8,r2,220e4 <scalbn+0x170>
   22054:	00b0d414 	movui	r2,50000
   22058:	14001116 	blt	r2,r16,220a0 <scalbn+0x12c>
   2205c:	0130be74 	movhi	r4,49913
   22060:	01406974 	movhi	r5,421
   22064:	213cd644 	addi	r4,r4,-3239
   22068:	295b87c4 	addi	r5,r5,28191
   2206c:	500d883a 	mov	r6,r10
   22070:	00221100 	call	22110 <copysign>
   22074:	01b0be74 	movhi	r6,49913
   22078:	01c06974 	movhi	r7,421
   2207c:	31bcd644 	addi	r6,r6,-3239
   22080:	39db87c4 	addi	r7,r7,28191
   22084:	1009883a 	mov	r4,r2
   22088:	180b883a 	mov	r5,r3
   2208c:	00236cc0 	call	236cc <__muldf3>
   22090:	dfc00117 	ldw	ra,4(sp)
   22094:	dc000017 	ldw	r16,0(sp)
   22098:	dec00204 	addi	sp,sp,8
   2209c:	f800283a 	ret
   220a0:	01220034 	movhi	r4,34816
   220a4:	015f8e34 	movhi	r5,32312
   220a8:	500d883a 	mov	r6,r10
   220ac:	211d6704 	addi	r4,r4,30108
   220b0:	29790f04 	addi	r5,r5,-7108
   220b4:	00221100 	call	22110 <copysign>
   220b8:	01a20034 	movhi	r6,34816
   220bc:	01df8e34 	movhi	r7,32312
   220c0:	319d6704 	addi	r6,r6,30108
   220c4:	39f90f04 	addi	r7,r7,-7108
   220c8:	1009883a 	mov	r4,r2
   220cc:	180b883a 	mov	r5,r3
   220d0:	00236cc0 	call	236cc <__muldf3>
   220d4:	dfc00117 	ldw	ra,4(sp)
   220d8:	dc000017 	ldw	r16,0(sp)
   220dc:	dec00204 	addi	sp,sp,8
   220e0:	f800283a 	ret
   220e4:	42000d84 	addi	r8,r8,54
   220e8:	4012953a 	slli	r9,r8,20
   220ec:	01e00434 	movhi	r7,32784
   220f0:	39ffffc4 	addi	r7,r7,-1
   220f4:	19ca703a 	and	r5,r3,r7
   220f8:	000d883a 	mov	r6,zero
   220fc:	01cf2434 	movhi	r7,15504
   22100:	5009883a 	mov	r4,r10
   22104:	494ab03a 	or	r5,r9,r5
   22108:	00236cc0 	call	236cc <__muldf3>
   2210c:	003fbc06 	br	22000 <__alt_data_end+0xfffe2000>

00022110 <copysign>:
   22110:	2005883a 	mov	r2,r4
   22114:	01200034 	movhi	r4,32768
   22118:	213fffc4 	addi	r4,r4,-1
   2211c:	38e0002c 	andhi	r3,r7,32768
   22120:	290a703a 	and	r5,r5,r4
   22124:	28c6b03a 	or	r3,r5,r3
   22128:	f800283a 	ret

0002212c <__divsi3>:
   2212c:	20001b16 	blt	r4,zero,2219c <__divsi3+0x70>
   22130:	000f883a 	mov	r7,zero
   22134:	28001616 	blt	r5,zero,22190 <__divsi3+0x64>
   22138:	200d883a 	mov	r6,r4
   2213c:	29001a2e 	bgeu	r5,r4,221a8 <__divsi3+0x7c>
   22140:	00800804 	movi	r2,32
   22144:	00c00044 	movi	r3,1
   22148:	00000106 	br	22150 <__divsi3+0x24>
   2214c:	10000d26 	beq	r2,zero,22184 <__divsi3+0x58>
   22150:	294b883a 	add	r5,r5,r5
   22154:	10bfffc4 	addi	r2,r2,-1
   22158:	18c7883a 	add	r3,r3,r3
   2215c:	293ffb36 	bltu	r5,r4,2214c <__alt_data_end+0xfffe214c>
   22160:	0005883a 	mov	r2,zero
   22164:	18000726 	beq	r3,zero,22184 <__divsi3+0x58>
   22168:	0005883a 	mov	r2,zero
   2216c:	31400236 	bltu	r6,r5,22178 <__divsi3+0x4c>
   22170:	314dc83a 	sub	r6,r6,r5
   22174:	10c4b03a 	or	r2,r2,r3
   22178:	1806d07a 	srli	r3,r3,1
   2217c:	280ad07a 	srli	r5,r5,1
   22180:	183ffa1e 	bne	r3,zero,2216c <__alt_data_end+0xfffe216c>
   22184:	38000126 	beq	r7,zero,2218c <__divsi3+0x60>
   22188:	0085c83a 	sub	r2,zero,r2
   2218c:	f800283a 	ret
   22190:	014bc83a 	sub	r5,zero,r5
   22194:	39c0005c 	xori	r7,r7,1
   22198:	003fe706 	br	22138 <__alt_data_end+0xfffe2138>
   2219c:	0109c83a 	sub	r4,zero,r4
   221a0:	01c00044 	movi	r7,1
   221a4:	003fe306 	br	22134 <__alt_data_end+0xfffe2134>
   221a8:	00c00044 	movi	r3,1
   221ac:	003fee06 	br	22168 <__alt_data_end+0xfffe2168>

000221b0 <__modsi3>:
   221b0:	20001716 	blt	r4,zero,22210 <__modsi3+0x60>
   221b4:	000f883a 	mov	r7,zero
   221b8:	2005883a 	mov	r2,r4
   221bc:	28001216 	blt	r5,zero,22208 <__modsi3+0x58>
   221c0:	2900162e 	bgeu	r5,r4,2221c <__modsi3+0x6c>
   221c4:	01800804 	movi	r6,32
   221c8:	00c00044 	movi	r3,1
   221cc:	00000106 	br	221d4 <__modsi3+0x24>
   221d0:	30000a26 	beq	r6,zero,221fc <__modsi3+0x4c>
   221d4:	294b883a 	add	r5,r5,r5
   221d8:	31bfffc4 	addi	r6,r6,-1
   221dc:	18c7883a 	add	r3,r3,r3
   221e0:	293ffb36 	bltu	r5,r4,221d0 <__alt_data_end+0xfffe21d0>
   221e4:	18000526 	beq	r3,zero,221fc <__modsi3+0x4c>
   221e8:	1806d07a 	srli	r3,r3,1
   221ec:	11400136 	bltu	r2,r5,221f4 <__modsi3+0x44>
   221f0:	1145c83a 	sub	r2,r2,r5
   221f4:	280ad07a 	srli	r5,r5,1
   221f8:	183ffb1e 	bne	r3,zero,221e8 <__alt_data_end+0xfffe21e8>
   221fc:	38000126 	beq	r7,zero,22204 <__modsi3+0x54>
   22200:	0085c83a 	sub	r2,zero,r2
   22204:	f800283a 	ret
   22208:	014bc83a 	sub	r5,zero,r5
   2220c:	003fec06 	br	221c0 <__alt_data_end+0xfffe21c0>
   22210:	0109c83a 	sub	r4,zero,r4
   22214:	01c00044 	movi	r7,1
   22218:	003fe706 	br	221b8 <__alt_data_end+0xfffe21b8>
   2221c:	00c00044 	movi	r3,1
   22220:	003ff106 	br	221e8 <__alt_data_end+0xfffe21e8>

00022224 <__udivsi3>:
   22224:	200d883a 	mov	r6,r4
   22228:	2900152e 	bgeu	r5,r4,22280 <__udivsi3+0x5c>
   2222c:	28001416 	blt	r5,zero,22280 <__udivsi3+0x5c>
   22230:	00800804 	movi	r2,32
   22234:	00c00044 	movi	r3,1
   22238:	00000206 	br	22244 <__udivsi3+0x20>
   2223c:	10000e26 	beq	r2,zero,22278 <__udivsi3+0x54>
   22240:	28000516 	blt	r5,zero,22258 <__udivsi3+0x34>
   22244:	294b883a 	add	r5,r5,r5
   22248:	10bfffc4 	addi	r2,r2,-1
   2224c:	18c7883a 	add	r3,r3,r3
   22250:	293ffa36 	bltu	r5,r4,2223c <__alt_data_end+0xfffe223c>
   22254:	18000826 	beq	r3,zero,22278 <__udivsi3+0x54>
   22258:	0005883a 	mov	r2,zero
   2225c:	31400236 	bltu	r6,r5,22268 <__udivsi3+0x44>
   22260:	314dc83a 	sub	r6,r6,r5
   22264:	10c4b03a 	or	r2,r2,r3
   22268:	1806d07a 	srli	r3,r3,1
   2226c:	280ad07a 	srli	r5,r5,1
   22270:	183ffa1e 	bne	r3,zero,2225c <__alt_data_end+0xfffe225c>
   22274:	f800283a 	ret
   22278:	0005883a 	mov	r2,zero
   2227c:	f800283a 	ret
   22280:	00c00044 	movi	r3,1
   22284:	003ff406 	br	22258 <__alt_data_end+0xfffe2258>

00022288 <__umodsi3>:
   22288:	2005883a 	mov	r2,r4
   2228c:	2900122e 	bgeu	r5,r4,222d8 <__umodsi3+0x50>
   22290:	28001116 	blt	r5,zero,222d8 <__umodsi3+0x50>
   22294:	01800804 	movi	r6,32
   22298:	00c00044 	movi	r3,1
   2229c:	00000206 	br	222a8 <__umodsi3+0x20>
   222a0:	30000c26 	beq	r6,zero,222d4 <__umodsi3+0x4c>
   222a4:	28000516 	blt	r5,zero,222bc <__umodsi3+0x34>
   222a8:	294b883a 	add	r5,r5,r5
   222ac:	31bfffc4 	addi	r6,r6,-1
   222b0:	18c7883a 	add	r3,r3,r3
   222b4:	293ffa36 	bltu	r5,r4,222a0 <__alt_data_end+0xfffe22a0>
   222b8:	18000626 	beq	r3,zero,222d4 <__umodsi3+0x4c>
   222bc:	1806d07a 	srli	r3,r3,1
   222c0:	11400136 	bltu	r2,r5,222c8 <__umodsi3+0x40>
   222c4:	1145c83a 	sub	r2,r2,r5
   222c8:	280ad07a 	srli	r5,r5,1
   222cc:	183ffb1e 	bne	r3,zero,222bc <__alt_data_end+0xfffe22bc>
   222d0:	f800283a 	ret
   222d4:	f800283a 	ret
   222d8:	00c00044 	movi	r3,1
   222dc:	003ff706 	br	222bc <__alt_data_end+0xfffe22bc>

000222e0 <__adddf3>:
   222e0:	02c00434 	movhi	r11,16
   222e4:	5affffc4 	addi	r11,r11,-1
   222e8:	2806d7fa 	srli	r3,r5,31
   222ec:	2ad4703a 	and	r10,r5,r11
   222f0:	3ad2703a 	and	r9,r7,r11
   222f4:	3804d53a 	srli	r2,r7,20
   222f8:	3018d77a 	srli	r12,r6,29
   222fc:	280ad53a 	srli	r5,r5,20
   22300:	501490fa 	slli	r10,r10,3
   22304:	2010d77a 	srli	r8,r4,29
   22308:	481290fa 	slli	r9,r9,3
   2230c:	380ed7fa 	srli	r7,r7,31
   22310:	defffb04 	addi	sp,sp,-20
   22314:	dc800215 	stw	r18,8(sp)
   22318:	dc400115 	stw	r17,4(sp)
   2231c:	dc000015 	stw	r16,0(sp)
   22320:	dfc00415 	stw	ra,16(sp)
   22324:	dcc00315 	stw	r19,12(sp)
   22328:	1c803fcc 	andi	r18,r3,255
   2232c:	2c01ffcc 	andi	r16,r5,2047
   22330:	5210b03a 	or	r8,r10,r8
   22334:	202290fa 	slli	r17,r4,3
   22338:	1081ffcc 	andi	r2,r2,2047
   2233c:	4b12b03a 	or	r9,r9,r12
   22340:	300c90fa 	slli	r6,r6,3
   22344:	91c07526 	beq	r18,r7,2251c <__adddf3+0x23c>
   22348:	8087c83a 	sub	r3,r16,r2
   2234c:	00c0ab0e 	bge	zero,r3,225fc <__adddf3+0x31c>
   22350:	10002a1e 	bne	r2,zero,223fc <__adddf3+0x11c>
   22354:	4984b03a 	or	r2,r9,r6
   22358:	1000961e 	bne	r2,zero,225b4 <__adddf3+0x2d4>
   2235c:	888001cc 	andi	r2,r17,7
   22360:	10000726 	beq	r2,zero,22380 <__adddf3+0xa0>
   22364:	888003cc 	andi	r2,r17,15
   22368:	00c00104 	movi	r3,4
   2236c:	10c00426 	beq	r2,r3,22380 <__adddf3+0xa0>
   22370:	88c7883a 	add	r3,r17,r3
   22374:	1c63803a 	cmpltu	r17,r3,r17
   22378:	4451883a 	add	r8,r8,r17
   2237c:	1823883a 	mov	r17,r3
   22380:	4080202c 	andhi	r2,r8,128
   22384:	10005926 	beq	r2,zero,224ec <__adddf3+0x20c>
   22388:	84000044 	addi	r16,r16,1
   2238c:	0081ffc4 	movi	r2,2047
   22390:	8080ba26 	beq	r16,r2,2267c <__adddf3+0x39c>
   22394:	00bfe034 	movhi	r2,65408
   22398:	10bfffc4 	addi	r2,r2,-1
   2239c:	4090703a 	and	r8,r8,r2
   223a0:	4004977a 	slli	r2,r8,29
   223a4:	4010927a 	slli	r8,r8,9
   223a8:	8822d0fa 	srli	r17,r17,3
   223ac:	8401ffcc 	andi	r16,r16,2047
   223b0:	4010d33a 	srli	r8,r8,12
   223b4:	9007883a 	mov	r3,r18
   223b8:	1444b03a 	or	r2,r2,r17
   223bc:	8401ffcc 	andi	r16,r16,2047
   223c0:	8020953a 	slli	r16,r16,20
   223c4:	18c03fcc 	andi	r3,r3,255
   223c8:	01000434 	movhi	r4,16
   223cc:	213fffc4 	addi	r4,r4,-1
   223d0:	180697fa 	slli	r3,r3,31
   223d4:	4110703a 	and	r8,r8,r4
   223d8:	4410b03a 	or	r8,r8,r16
   223dc:	40c6b03a 	or	r3,r8,r3
   223e0:	dfc00417 	ldw	ra,16(sp)
   223e4:	dcc00317 	ldw	r19,12(sp)
   223e8:	dc800217 	ldw	r18,8(sp)
   223ec:	dc400117 	ldw	r17,4(sp)
   223f0:	dc000017 	ldw	r16,0(sp)
   223f4:	dec00504 	addi	sp,sp,20
   223f8:	f800283a 	ret
   223fc:	0081ffc4 	movi	r2,2047
   22400:	80bfd626 	beq	r16,r2,2235c <__alt_data_end+0xfffe235c>
   22404:	4a402034 	orhi	r9,r9,128
   22408:	00800e04 	movi	r2,56
   2240c:	10c09f16 	blt	r2,r3,2268c <__adddf3+0x3ac>
   22410:	008007c4 	movi	r2,31
   22414:	10c0c216 	blt	r2,r3,22720 <__adddf3+0x440>
   22418:	00800804 	movi	r2,32
   2241c:	10c5c83a 	sub	r2,r2,r3
   22420:	488a983a 	sll	r5,r9,r2
   22424:	30c8d83a 	srl	r4,r6,r3
   22428:	3084983a 	sll	r2,r6,r2
   2242c:	48c6d83a 	srl	r3,r9,r3
   22430:	290cb03a 	or	r6,r5,r4
   22434:	1004c03a 	cmpne	r2,r2,zero
   22438:	308cb03a 	or	r6,r6,r2
   2243c:	898dc83a 	sub	r6,r17,r6
   22440:	89a3803a 	cmpltu	r17,r17,r6
   22444:	40d1c83a 	sub	r8,r8,r3
   22448:	4451c83a 	sub	r8,r8,r17
   2244c:	3023883a 	mov	r17,r6
   22450:	4080202c 	andhi	r2,r8,128
   22454:	10002326 	beq	r2,zero,224e4 <__adddf3+0x204>
   22458:	04c02034 	movhi	r19,128
   2245c:	9cffffc4 	addi	r19,r19,-1
   22460:	44e6703a 	and	r19,r8,r19
   22464:	98007626 	beq	r19,zero,22640 <__adddf3+0x360>
   22468:	9809883a 	mov	r4,r19
   2246c:	002483c0 	call	2483c <__clzsi2>
   22470:	10fffe04 	addi	r3,r2,-8
   22474:	010007c4 	movi	r4,31
   22478:	20c07716 	blt	r4,r3,22658 <__adddf3+0x378>
   2247c:	00800804 	movi	r2,32
   22480:	10c5c83a 	sub	r2,r2,r3
   22484:	8884d83a 	srl	r2,r17,r2
   22488:	98d0983a 	sll	r8,r19,r3
   2248c:	88e2983a 	sll	r17,r17,r3
   22490:	1204b03a 	or	r2,r2,r8
   22494:	1c007416 	blt	r3,r16,22668 <__adddf3+0x388>
   22498:	1c21c83a 	sub	r16,r3,r16
   2249c:	82000044 	addi	r8,r16,1
   224a0:	00c007c4 	movi	r3,31
   224a4:	1a009116 	blt	r3,r8,226ec <__adddf3+0x40c>
   224a8:	00c00804 	movi	r3,32
   224ac:	1a07c83a 	sub	r3,r3,r8
   224b0:	8a08d83a 	srl	r4,r17,r8
   224b4:	88e2983a 	sll	r17,r17,r3
   224b8:	10c6983a 	sll	r3,r2,r3
   224bc:	1210d83a 	srl	r8,r2,r8
   224c0:	8804c03a 	cmpne	r2,r17,zero
   224c4:	1906b03a 	or	r3,r3,r4
   224c8:	18a2b03a 	or	r17,r3,r2
   224cc:	0021883a 	mov	r16,zero
   224d0:	003fa206 	br	2235c <__alt_data_end+0xfffe235c>
   224d4:	1890b03a 	or	r8,r3,r2
   224d8:	40017d26 	beq	r8,zero,22ad0 <__adddf3+0x7f0>
   224dc:	1011883a 	mov	r8,r2
   224e0:	1823883a 	mov	r17,r3
   224e4:	888001cc 	andi	r2,r17,7
   224e8:	103f9e1e 	bne	r2,zero,22364 <__alt_data_end+0xfffe2364>
   224ec:	4004977a 	slli	r2,r8,29
   224f0:	8822d0fa 	srli	r17,r17,3
   224f4:	4010d0fa 	srli	r8,r8,3
   224f8:	9007883a 	mov	r3,r18
   224fc:	1444b03a 	or	r2,r2,r17
   22500:	0101ffc4 	movi	r4,2047
   22504:	81002426 	beq	r16,r4,22598 <__adddf3+0x2b8>
   22508:	8120703a 	and	r16,r16,r4
   2250c:	01000434 	movhi	r4,16
   22510:	213fffc4 	addi	r4,r4,-1
   22514:	4110703a 	and	r8,r8,r4
   22518:	003fa806 	br	223bc <__alt_data_end+0xfffe23bc>
   2251c:	8089c83a 	sub	r4,r16,r2
   22520:	01005e0e 	bge	zero,r4,2269c <__adddf3+0x3bc>
   22524:	10002b26 	beq	r2,zero,225d4 <__adddf3+0x2f4>
   22528:	0081ffc4 	movi	r2,2047
   2252c:	80bf8b26 	beq	r16,r2,2235c <__alt_data_end+0xfffe235c>
   22530:	4a402034 	orhi	r9,r9,128
   22534:	00800e04 	movi	r2,56
   22538:	1100a40e 	bge	r2,r4,227cc <__adddf3+0x4ec>
   2253c:	498cb03a 	or	r6,r9,r6
   22540:	300ac03a 	cmpne	r5,r6,zero
   22544:	0013883a 	mov	r9,zero
   22548:	2c4b883a 	add	r5,r5,r17
   2254c:	2c63803a 	cmpltu	r17,r5,r17
   22550:	4a11883a 	add	r8,r9,r8
   22554:	8a11883a 	add	r8,r17,r8
   22558:	2823883a 	mov	r17,r5
   2255c:	4080202c 	andhi	r2,r8,128
   22560:	103fe026 	beq	r2,zero,224e4 <__alt_data_end+0xfffe24e4>
   22564:	84000044 	addi	r16,r16,1
   22568:	0081ffc4 	movi	r2,2047
   2256c:	8080d226 	beq	r16,r2,228b8 <__adddf3+0x5d8>
   22570:	00bfe034 	movhi	r2,65408
   22574:	10bfffc4 	addi	r2,r2,-1
   22578:	4090703a 	and	r8,r8,r2
   2257c:	880ad07a 	srli	r5,r17,1
   22580:	400897fa 	slli	r4,r8,31
   22584:	88c0004c 	andi	r3,r17,1
   22588:	28e2b03a 	or	r17,r5,r3
   2258c:	4010d07a 	srli	r8,r8,1
   22590:	2462b03a 	or	r17,r4,r17
   22594:	003f7106 	br	2235c <__alt_data_end+0xfffe235c>
   22598:	4088b03a 	or	r4,r8,r2
   2259c:	20014526 	beq	r4,zero,22ab4 <__adddf3+0x7d4>
   225a0:	01000434 	movhi	r4,16
   225a4:	42000234 	orhi	r8,r8,8
   225a8:	213fffc4 	addi	r4,r4,-1
   225ac:	4110703a 	and	r8,r8,r4
   225b0:	003f8206 	br	223bc <__alt_data_end+0xfffe23bc>
   225b4:	18ffffc4 	addi	r3,r3,-1
   225b8:	1800491e 	bne	r3,zero,226e0 <__adddf3+0x400>
   225bc:	898bc83a 	sub	r5,r17,r6
   225c0:	8963803a 	cmpltu	r17,r17,r5
   225c4:	4251c83a 	sub	r8,r8,r9
   225c8:	4451c83a 	sub	r8,r8,r17
   225cc:	2823883a 	mov	r17,r5
   225d0:	003f9f06 	br	22450 <__alt_data_end+0xfffe2450>
   225d4:	4984b03a 	or	r2,r9,r6
   225d8:	103f6026 	beq	r2,zero,2235c <__alt_data_end+0xfffe235c>
   225dc:	213fffc4 	addi	r4,r4,-1
   225e0:	2000931e 	bne	r4,zero,22830 <__adddf3+0x550>
   225e4:	898d883a 	add	r6,r17,r6
   225e8:	3463803a 	cmpltu	r17,r6,r17
   225ec:	4251883a 	add	r8,r8,r9
   225f0:	8a11883a 	add	r8,r17,r8
   225f4:	3023883a 	mov	r17,r6
   225f8:	003fd806 	br	2255c <__alt_data_end+0xfffe255c>
   225fc:	1800541e 	bne	r3,zero,22750 <__adddf3+0x470>
   22600:	80800044 	addi	r2,r16,1
   22604:	1081ffcc 	andi	r2,r2,2047
   22608:	00c00044 	movi	r3,1
   2260c:	1880a00e 	bge	r3,r2,22890 <__adddf3+0x5b0>
   22610:	8989c83a 	sub	r4,r17,r6
   22614:	8905803a 	cmpltu	r2,r17,r4
   22618:	4267c83a 	sub	r19,r8,r9
   2261c:	98a7c83a 	sub	r19,r19,r2
   22620:	9880202c 	andhi	r2,r19,128
   22624:	10006326 	beq	r2,zero,227b4 <__adddf3+0x4d4>
   22628:	3463c83a 	sub	r17,r6,r17
   2262c:	4a07c83a 	sub	r3,r9,r8
   22630:	344d803a 	cmpltu	r6,r6,r17
   22634:	19a7c83a 	sub	r19,r3,r6
   22638:	3825883a 	mov	r18,r7
   2263c:	983f8a1e 	bne	r19,zero,22468 <__alt_data_end+0xfffe2468>
   22640:	8809883a 	mov	r4,r17
   22644:	002483c0 	call	2483c <__clzsi2>
   22648:	10800804 	addi	r2,r2,32
   2264c:	10fffe04 	addi	r3,r2,-8
   22650:	010007c4 	movi	r4,31
   22654:	20ff890e 	bge	r4,r3,2247c <__alt_data_end+0xfffe247c>
   22658:	10bff604 	addi	r2,r2,-40
   2265c:	8884983a 	sll	r2,r17,r2
   22660:	0023883a 	mov	r17,zero
   22664:	1c3f8c0e 	bge	r3,r16,22498 <__alt_data_end+0xfffe2498>
   22668:	023fe034 	movhi	r8,65408
   2266c:	423fffc4 	addi	r8,r8,-1
   22670:	80e1c83a 	sub	r16,r16,r3
   22674:	1210703a 	and	r8,r2,r8
   22678:	003f3806 	br	2235c <__alt_data_end+0xfffe235c>
   2267c:	9007883a 	mov	r3,r18
   22680:	0011883a 	mov	r8,zero
   22684:	0005883a 	mov	r2,zero
   22688:	003f4c06 	br	223bc <__alt_data_end+0xfffe23bc>
   2268c:	498cb03a 	or	r6,r9,r6
   22690:	300cc03a 	cmpne	r6,r6,zero
   22694:	0007883a 	mov	r3,zero
   22698:	003f6806 	br	2243c <__alt_data_end+0xfffe243c>
   2269c:	20009c1e 	bne	r4,zero,22910 <__adddf3+0x630>
   226a0:	80800044 	addi	r2,r16,1
   226a4:	1141ffcc 	andi	r5,r2,2047
   226a8:	01000044 	movi	r4,1
   226ac:	2140670e 	bge	r4,r5,2284c <__adddf3+0x56c>
   226b0:	0101ffc4 	movi	r4,2047
   226b4:	11007f26 	beq	r2,r4,228b4 <__adddf3+0x5d4>
   226b8:	898d883a 	add	r6,r17,r6
   226bc:	4247883a 	add	r3,r8,r9
   226c0:	3451803a 	cmpltu	r8,r6,r17
   226c4:	40d1883a 	add	r8,r8,r3
   226c8:	402297fa 	slli	r17,r8,31
   226cc:	300cd07a 	srli	r6,r6,1
   226d0:	4010d07a 	srli	r8,r8,1
   226d4:	1021883a 	mov	r16,r2
   226d8:	89a2b03a 	or	r17,r17,r6
   226dc:	003f1f06 	br	2235c <__alt_data_end+0xfffe235c>
   226e0:	0081ffc4 	movi	r2,2047
   226e4:	80bf481e 	bne	r16,r2,22408 <__alt_data_end+0xfffe2408>
   226e8:	003f1c06 	br	2235c <__alt_data_end+0xfffe235c>
   226ec:	843ff844 	addi	r16,r16,-31
   226f0:	01000804 	movi	r4,32
   226f4:	1406d83a 	srl	r3,r2,r16
   226f8:	41005026 	beq	r8,r4,2283c <__adddf3+0x55c>
   226fc:	01001004 	movi	r4,64
   22700:	2211c83a 	sub	r8,r4,r8
   22704:	1204983a 	sll	r2,r2,r8
   22708:	88a2b03a 	or	r17,r17,r2
   2270c:	8822c03a 	cmpne	r17,r17,zero
   22710:	1c62b03a 	or	r17,r3,r17
   22714:	0011883a 	mov	r8,zero
   22718:	0021883a 	mov	r16,zero
   2271c:	003f7106 	br	224e4 <__alt_data_end+0xfffe24e4>
   22720:	193ff804 	addi	r4,r3,-32
   22724:	00800804 	movi	r2,32
   22728:	4908d83a 	srl	r4,r9,r4
   2272c:	18804526 	beq	r3,r2,22844 <__adddf3+0x564>
   22730:	00801004 	movi	r2,64
   22734:	10c5c83a 	sub	r2,r2,r3
   22738:	4886983a 	sll	r3,r9,r2
   2273c:	198cb03a 	or	r6,r3,r6
   22740:	300cc03a 	cmpne	r6,r6,zero
   22744:	218cb03a 	or	r6,r4,r6
   22748:	0007883a 	mov	r3,zero
   2274c:	003f3b06 	br	2243c <__alt_data_end+0xfffe243c>
   22750:	80002a26 	beq	r16,zero,227fc <__adddf3+0x51c>
   22754:	0101ffc4 	movi	r4,2047
   22758:	11006826 	beq	r2,r4,228fc <__adddf3+0x61c>
   2275c:	00c7c83a 	sub	r3,zero,r3
   22760:	42002034 	orhi	r8,r8,128
   22764:	01000e04 	movi	r4,56
   22768:	20c07c16 	blt	r4,r3,2295c <__adddf3+0x67c>
   2276c:	010007c4 	movi	r4,31
   22770:	20c0da16 	blt	r4,r3,22adc <__adddf3+0x7fc>
   22774:	01000804 	movi	r4,32
   22778:	20c9c83a 	sub	r4,r4,r3
   2277c:	4114983a 	sll	r10,r8,r4
   22780:	88cad83a 	srl	r5,r17,r3
   22784:	8908983a 	sll	r4,r17,r4
   22788:	40c6d83a 	srl	r3,r8,r3
   2278c:	5162b03a 	or	r17,r10,r5
   22790:	2008c03a 	cmpne	r4,r4,zero
   22794:	8922b03a 	or	r17,r17,r4
   22798:	3463c83a 	sub	r17,r6,r17
   2279c:	48c7c83a 	sub	r3,r9,r3
   227a0:	344d803a 	cmpltu	r6,r6,r17
   227a4:	1991c83a 	sub	r8,r3,r6
   227a8:	1021883a 	mov	r16,r2
   227ac:	3825883a 	mov	r18,r7
   227b0:	003f2706 	br	22450 <__alt_data_end+0xfffe2450>
   227b4:	24d0b03a 	or	r8,r4,r19
   227b8:	40001b1e 	bne	r8,zero,22828 <__adddf3+0x548>
   227bc:	0005883a 	mov	r2,zero
   227c0:	0007883a 	mov	r3,zero
   227c4:	0021883a 	mov	r16,zero
   227c8:	003f4d06 	br	22500 <__alt_data_end+0xfffe2500>
   227cc:	008007c4 	movi	r2,31
   227d0:	11003c16 	blt	r2,r4,228c4 <__adddf3+0x5e4>
   227d4:	00800804 	movi	r2,32
   227d8:	1105c83a 	sub	r2,r2,r4
   227dc:	488e983a 	sll	r7,r9,r2
   227e0:	310ad83a 	srl	r5,r6,r4
   227e4:	3084983a 	sll	r2,r6,r2
   227e8:	4912d83a 	srl	r9,r9,r4
   227ec:	394ab03a 	or	r5,r7,r5
   227f0:	1004c03a 	cmpne	r2,r2,zero
   227f4:	288ab03a 	or	r5,r5,r2
   227f8:	003f5306 	br	22548 <__alt_data_end+0xfffe2548>
   227fc:	4448b03a 	or	r4,r8,r17
   22800:	20003e26 	beq	r4,zero,228fc <__adddf3+0x61c>
   22804:	00c6303a 	nor	r3,zero,r3
   22808:	18003a1e 	bne	r3,zero,228f4 <__adddf3+0x614>
   2280c:	3463c83a 	sub	r17,r6,r17
   22810:	4a07c83a 	sub	r3,r9,r8
   22814:	344d803a 	cmpltu	r6,r6,r17
   22818:	1991c83a 	sub	r8,r3,r6
   2281c:	1021883a 	mov	r16,r2
   22820:	3825883a 	mov	r18,r7
   22824:	003f0a06 	br	22450 <__alt_data_end+0xfffe2450>
   22828:	2023883a 	mov	r17,r4
   2282c:	003f0d06 	br	22464 <__alt_data_end+0xfffe2464>
   22830:	0081ffc4 	movi	r2,2047
   22834:	80bf3f1e 	bne	r16,r2,22534 <__alt_data_end+0xfffe2534>
   22838:	003ec806 	br	2235c <__alt_data_end+0xfffe235c>
   2283c:	0005883a 	mov	r2,zero
   22840:	003fb106 	br	22708 <__alt_data_end+0xfffe2708>
   22844:	0007883a 	mov	r3,zero
   22848:	003fbc06 	br	2273c <__alt_data_end+0xfffe273c>
   2284c:	4444b03a 	or	r2,r8,r17
   22850:	8000871e 	bne	r16,zero,22a70 <__adddf3+0x790>
   22854:	1000ba26 	beq	r2,zero,22b40 <__adddf3+0x860>
   22858:	4984b03a 	or	r2,r9,r6
   2285c:	103ebf26 	beq	r2,zero,2235c <__alt_data_end+0xfffe235c>
   22860:	8985883a 	add	r2,r17,r6
   22864:	4247883a 	add	r3,r8,r9
   22868:	1451803a 	cmpltu	r8,r2,r17
   2286c:	40d1883a 	add	r8,r8,r3
   22870:	40c0202c 	andhi	r3,r8,128
   22874:	1023883a 	mov	r17,r2
   22878:	183f1a26 	beq	r3,zero,224e4 <__alt_data_end+0xfffe24e4>
   2287c:	00bfe034 	movhi	r2,65408
   22880:	10bfffc4 	addi	r2,r2,-1
   22884:	2021883a 	mov	r16,r4
   22888:	4090703a 	and	r8,r8,r2
   2288c:	003eb306 	br	2235c <__alt_data_end+0xfffe235c>
   22890:	4444b03a 	or	r2,r8,r17
   22894:	8000291e 	bne	r16,zero,2293c <__adddf3+0x65c>
   22898:	10004b1e 	bne	r2,zero,229c8 <__adddf3+0x6e8>
   2289c:	4990b03a 	or	r8,r9,r6
   228a0:	40008b26 	beq	r8,zero,22ad0 <__adddf3+0x7f0>
   228a4:	4811883a 	mov	r8,r9
   228a8:	3023883a 	mov	r17,r6
   228ac:	3825883a 	mov	r18,r7
   228b0:	003eaa06 	br	2235c <__alt_data_end+0xfffe235c>
   228b4:	1021883a 	mov	r16,r2
   228b8:	0011883a 	mov	r8,zero
   228bc:	0005883a 	mov	r2,zero
   228c0:	003f0f06 	br	22500 <__alt_data_end+0xfffe2500>
   228c4:	217ff804 	addi	r5,r4,-32
   228c8:	00800804 	movi	r2,32
   228cc:	494ad83a 	srl	r5,r9,r5
   228d0:	20807d26 	beq	r4,r2,22ac8 <__adddf3+0x7e8>
   228d4:	00801004 	movi	r2,64
   228d8:	1109c83a 	sub	r4,r2,r4
   228dc:	4912983a 	sll	r9,r9,r4
   228e0:	498cb03a 	or	r6,r9,r6
   228e4:	300cc03a 	cmpne	r6,r6,zero
   228e8:	298ab03a 	or	r5,r5,r6
   228ec:	0013883a 	mov	r9,zero
   228f0:	003f1506 	br	22548 <__alt_data_end+0xfffe2548>
   228f4:	0101ffc4 	movi	r4,2047
   228f8:	113f9a1e 	bne	r2,r4,22764 <__alt_data_end+0xfffe2764>
   228fc:	4811883a 	mov	r8,r9
   22900:	3023883a 	mov	r17,r6
   22904:	1021883a 	mov	r16,r2
   22908:	3825883a 	mov	r18,r7
   2290c:	003e9306 	br	2235c <__alt_data_end+0xfffe235c>
   22910:	8000161e 	bne	r16,zero,2296c <__adddf3+0x68c>
   22914:	444ab03a 	or	r5,r8,r17
   22918:	28005126 	beq	r5,zero,22a60 <__adddf3+0x780>
   2291c:	0108303a 	nor	r4,zero,r4
   22920:	20004d1e 	bne	r4,zero,22a58 <__adddf3+0x778>
   22924:	89a3883a 	add	r17,r17,r6
   22928:	4253883a 	add	r9,r8,r9
   2292c:	898d803a 	cmpltu	r6,r17,r6
   22930:	3251883a 	add	r8,r6,r9
   22934:	1021883a 	mov	r16,r2
   22938:	003f0806 	br	2255c <__alt_data_end+0xfffe255c>
   2293c:	1000301e 	bne	r2,zero,22a00 <__adddf3+0x720>
   22940:	4984b03a 	or	r2,r9,r6
   22944:	10007126 	beq	r2,zero,22b0c <__adddf3+0x82c>
   22948:	4811883a 	mov	r8,r9
   2294c:	3023883a 	mov	r17,r6
   22950:	3825883a 	mov	r18,r7
   22954:	0401ffc4 	movi	r16,2047
   22958:	003e8006 	br	2235c <__alt_data_end+0xfffe235c>
   2295c:	4462b03a 	or	r17,r8,r17
   22960:	8822c03a 	cmpne	r17,r17,zero
   22964:	0007883a 	mov	r3,zero
   22968:	003f8b06 	br	22798 <__alt_data_end+0xfffe2798>
   2296c:	0141ffc4 	movi	r5,2047
   22970:	11403b26 	beq	r2,r5,22a60 <__adddf3+0x780>
   22974:	0109c83a 	sub	r4,zero,r4
   22978:	42002034 	orhi	r8,r8,128
   2297c:	01400e04 	movi	r5,56
   22980:	29006716 	blt	r5,r4,22b20 <__adddf3+0x840>
   22984:	014007c4 	movi	r5,31
   22988:	29007016 	blt	r5,r4,22b4c <__adddf3+0x86c>
   2298c:	01400804 	movi	r5,32
   22990:	290bc83a 	sub	r5,r5,r4
   22994:	4154983a 	sll	r10,r8,r5
   22998:	890ed83a 	srl	r7,r17,r4
   2299c:	894a983a 	sll	r5,r17,r5
   229a0:	4108d83a 	srl	r4,r8,r4
   229a4:	51e2b03a 	or	r17,r10,r7
   229a8:	280ac03a 	cmpne	r5,r5,zero
   229ac:	8962b03a 	or	r17,r17,r5
   229b0:	89a3883a 	add	r17,r17,r6
   229b4:	2253883a 	add	r9,r4,r9
   229b8:	898d803a 	cmpltu	r6,r17,r6
   229bc:	3251883a 	add	r8,r6,r9
   229c0:	1021883a 	mov	r16,r2
   229c4:	003ee506 	br	2255c <__alt_data_end+0xfffe255c>
   229c8:	4984b03a 	or	r2,r9,r6
   229cc:	103e6326 	beq	r2,zero,2235c <__alt_data_end+0xfffe235c>
   229d0:	8987c83a 	sub	r3,r17,r6
   229d4:	88c9803a 	cmpltu	r4,r17,r3
   229d8:	4245c83a 	sub	r2,r8,r9
   229dc:	1105c83a 	sub	r2,r2,r4
   229e0:	1100202c 	andhi	r4,r2,128
   229e4:	203ebb26 	beq	r4,zero,224d4 <__alt_data_end+0xfffe24d4>
   229e8:	3463c83a 	sub	r17,r6,r17
   229ec:	4a07c83a 	sub	r3,r9,r8
   229f0:	344d803a 	cmpltu	r6,r6,r17
   229f4:	1991c83a 	sub	r8,r3,r6
   229f8:	3825883a 	mov	r18,r7
   229fc:	003e5706 	br	2235c <__alt_data_end+0xfffe235c>
   22a00:	4984b03a 	or	r2,r9,r6
   22a04:	10002e26 	beq	r2,zero,22ac0 <__adddf3+0x7e0>
   22a08:	4004d0fa 	srli	r2,r8,3
   22a0c:	8822d0fa 	srli	r17,r17,3
   22a10:	4010977a 	slli	r8,r8,29
   22a14:	10c0022c 	andhi	r3,r2,8
   22a18:	4462b03a 	or	r17,r8,r17
   22a1c:	18000826 	beq	r3,zero,22a40 <__adddf3+0x760>
   22a20:	4808d0fa 	srli	r4,r9,3
   22a24:	20c0022c 	andhi	r3,r4,8
   22a28:	1800051e 	bne	r3,zero,22a40 <__adddf3+0x760>
   22a2c:	300cd0fa 	srli	r6,r6,3
   22a30:	4806977a 	slli	r3,r9,29
   22a34:	2005883a 	mov	r2,r4
   22a38:	3825883a 	mov	r18,r7
   22a3c:	19a2b03a 	or	r17,r3,r6
   22a40:	8810d77a 	srli	r8,r17,29
   22a44:	100490fa 	slli	r2,r2,3
   22a48:	882290fa 	slli	r17,r17,3
   22a4c:	0401ffc4 	movi	r16,2047
   22a50:	4090b03a 	or	r8,r8,r2
   22a54:	003e4106 	br	2235c <__alt_data_end+0xfffe235c>
   22a58:	0141ffc4 	movi	r5,2047
   22a5c:	117fc71e 	bne	r2,r5,2297c <__alt_data_end+0xfffe297c>
   22a60:	4811883a 	mov	r8,r9
   22a64:	3023883a 	mov	r17,r6
   22a68:	1021883a 	mov	r16,r2
   22a6c:	003e3b06 	br	2235c <__alt_data_end+0xfffe235c>
   22a70:	10002f26 	beq	r2,zero,22b30 <__adddf3+0x850>
   22a74:	4984b03a 	or	r2,r9,r6
   22a78:	10001126 	beq	r2,zero,22ac0 <__adddf3+0x7e0>
   22a7c:	4004d0fa 	srli	r2,r8,3
   22a80:	8822d0fa 	srli	r17,r17,3
   22a84:	4010977a 	slli	r8,r8,29
   22a88:	10c0022c 	andhi	r3,r2,8
   22a8c:	4462b03a 	or	r17,r8,r17
   22a90:	183feb26 	beq	r3,zero,22a40 <__alt_data_end+0xfffe2a40>
   22a94:	4808d0fa 	srli	r4,r9,3
   22a98:	20c0022c 	andhi	r3,r4,8
   22a9c:	183fe81e 	bne	r3,zero,22a40 <__alt_data_end+0xfffe2a40>
   22aa0:	300cd0fa 	srli	r6,r6,3
   22aa4:	4806977a 	slli	r3,r9,29
   22aa8:	2005883a 	mov	r2,r4
   22aac:	19a2b03a 	or	r17,r3,r6
   22ab0:	003fe306 	br	22a40 <__alt_data_end+0xfffe2a40>
   22ab4:	0011883a 	mov	r8,zero
   22ab8:	0005883a 	mov	r2,zero
   22abc:	003e3f06 	br	223bc <__alt_data_end+0xfffe23bc>
   22ac0:	0401ffc4 	movi	r16,2047
   22ac4:	003e2506 	br	2235c <__alt_data_end+0xfffe235c>
   22ac8:	0013883a 	mov	r9,zero
   22acc:	003f8406 	br	228e0 <__alt_data_end+0xfffe28e0>
   22ad0:	0005883a 	mov	r2,zero
   22ad4:	0007883a 	mov	r3,zero
   22ad8:	003e8906 	br	22500 <__alt_data_end+0xfffe2500>
   22adc:	197ff804 	addi	r5,r3,-32
   22ae0:	01000804 	movi	r4,32
   22ae4:	414ad83a 	srl	r5,r8,r5
   22ae8:	19002426 	beq	r3,r4,22b7c <__adddf3+0x89c>
   22aec:	01001004 	movi	r4,64
   22af0:	20c7c83a 	sub	r3,r4,r3
   22af4:	40c6983a 	sll	r3,r8,r3
   22af8:	1c46b03a 	or	r3,r3,r17
   22afc:	1806c03a 	cmpne	r3,r3,zero
   22b00:	28e2b03a 	or	r17,r5,r3
   22b04:	0007883a 	mov	r3,zero
   22b08:	003f2306 	br	22798 <__alt_data_end+0xfffe2798>
   22b0c:	0007883a 	mov	r3,zero
   22b10:	5811883a 	mov	r8,r11
   22b14:	00bfffc4 	movi	r2,-1
   22b18:	0401ffc4 	movi	r16,2047
   22b1c:	003e7806 	br	22500 <__alt_data_end+0xfffe2500>
   22b20:	4462b03a 	or	r17,r8,r17
   22b24:	8822c03a 	cmpne	r17,r17,zero
   22b28:	0009883a 	mov	r4,zero
   22b2c:	003fa006 	br	229b0 <__alt_data_end+0xfffe29b0>
   22b30:	4811883a 	mov	r8,r9
   22b34:	3023883a 	mov	r17,r6
   22b38:	0401ffc4 	movi	r16,2047
   22b3c:	003e0706 	br	2235c <__alt_data_end+0xfffe235c>
   22b40:	4811883a 	mov	r8,r9
   22b44:	3023883a 	mov	r17,r6
   22b48:	003e0406 	br	2235c <__alt_data_end+0xfffe235c>
   22b4c:	21fff804 	addi	r7,r4,-32
   22b50:	01400804 	movi	r5,32
   22b54:	41ced83a 	srl	r7,r8,r7
   22b58:	21400a26 	beq	r4,r5,22b84 <__adddf3+0x8a4>
   22b5c:	01401004 	movi	r5,64
   22b60:	2909c83a 	sub	r4,r5,r4
   22b64:	4108983a 	sll	r4,r8,r4
   22b68:	2448b03a 	or	r4,r4,r17
   22b6c:	2008c03a 	cmpne	r4,r4,zero
   22b70:	3922b03a 	or	r17,r7,r4
   22b74:	0009883a 	mov	r4,zero
   22b78:	003f8d06 	br	229b0 <__alt_data_end+0xfffe29b0>
   22b7c:	0007883a 	mov	r3,zero
   22b80:	003fdd06 	br	22af8 <__alt_data_end+0xfffe2af8>
   22b84:	0009883a 	mov	r4,zero
   22b88:	003ff706 	br	22b68 <__alt_data_end+0xfffe2b68>

00022b8c <__divdf3>:
   22b8c:	defff204 	addi	sp,sp,-56
   22b90:	dd400915 	stw	r21,36(sp)
   22b94:	282ad53a 	srli	r21,r5,20
   22b98:	dd000815 	stw	r20,32(sp)
   22b9c:	2828d7fa 	srli	r20,r5,31
   22ba0:	dc000415 	stw	r16,16(sp)
   22ba4:	04000434 	movhi	r16,16
   22ba8:	df000c15 	stw	fp,48(sp)
   22bac:	843fffc4 	addi	r16,r16,-1
   22bb0:	dfc00d15 	stw	ra,52(sp)
   22bb4:	ddc00b15 	stw	r23,44(sp)
   22bb8:	dd800a15 	stw	r22,40(sp)
   22bbc:	dcc00715 	stw	r19,28(sp)
   22bc0:	dc800615 	stw	r18,24(sp)
   22bc4:	dc400515 	stw	r17,20(sp)
   22bc8:	ad41ffcc 	andi	r21,r21,2047
   22bcc:	2c20703a 	and	r16,r5,r16
   22bd0:	a7003fcc 	andi	fp,r20,255
   22bd4:	a8006126 	beq	r21,zero,22d5c <__divdf3+0x1d0>
   22bd8:	0081ffc4 	movi	r2,2047
   22bdc:	2025883a 	mov	r18,r4
   22be0:	a8803726 	beq	r21,r2,22cc0 <__divdf3+0x134>
   22be4:	80800434 	orhi	r2,r16,16
   22be8:	100490fa 	slli	r2,r2,3
   22bec:	2020d77a 	srli	r16,r4,29
   22bf0:	202490fa 	slli	r18,r4,3
   22bf4:	ad7f0044 	addi	r21,r21,-1023
   22bf8:	80a0b03a 	or	r16,r16,r2
   22bfc:	0027883a 	mov	r19,zero
   22c00:	0013883a 	mov	r9,zero
   22c04:	3804d53a 	srli	r2,r7,20
   22c08:	382cd7fa 	srli	r22,r7,31
   22c0c:	04400434 	movhi	r17,16
   22c10:	8c7fffc4 	addi	r17,r17,-1
   22c14:	1081ffcc 	andi	r2,r2,2047
   22c18:	3011883a 	mov	r8,r6
   22c1c:	3c62703a 	and	r17,r7,r17
   22c20:	b5c03fcc 	andi	r23,r22,255
   22c24:	10006c26 	beq	r2,zero,22dd8 <__divdf3+0x24c>
   22c28:	00c1ffc4 	movi	r3,2047
   22c2c:	10c06426 	beq	r2,r3,22dc0 <__divdf3+0x234>
   22c30:	88c00434 	orhi	r3,r17,16
   22c34:	180690fa 	slli	r3,r3,3
   22c38:	3022d77a 	srli	r17,r6,29
   22c3c:	301090fa 	slli	r8,r6,3
   22c40:	10bf0044 	addi	r2,r2,-1023
   22c44:	88e2b03a 	or	r17,r17,r3
   22c48:	000f883a 	mov	r7,zero
   22c4c:	a58cf03a 	xor	r6,r20,r22
   22c50:	3cc8b03a 	or	r4,r7,r19
   22c54:	a8abc83a 	sub	r21,r21,r2
   22c58:	008003c4 	movi	r2,15
   22c5c:	3007883a 	mov	r3,r6
   22c60:	34c03fcc 	andi	r19,r6,255
   22c64:	11009036 	bltu	r2,r4,22ea8 <__divdf3+0x31c>
   22c68:	200890ba 	slli	r4,r4,2
   22c6c:	008000b4 	movhi	r2,2
   22c70:	108b2004 	addi	r2,r2,11392
   22c74:	2089883a 	add	r4,r4,r2
   22c78:	20800017 	ldw	r2,0(r4)
   22c7c:	1000683a 	jmp	r2
   22c80:	00022ea8 	cmpgeui	zero,zero,2234
   22c84:	00022cf8 	rdprs	zero,zero,2227
   22c88:	00022e98 	cmpnei	zero,zero,2234
   22c8c:	00022cec 	andhi	zero,zero,2227
   22c90:	00022e98 	cmpnei	zero,zero,2234
   22c94:	00022e6c 	andhi	zero,zero,2233
   22c98:	00022e98 	cmpnei	zero,zero,2234
   22c9c:	00022cec 	andhi	zero,zero,2227
   22ca0:	00022cf8 	rdprs	zero,zero,2227
   22ca4:	00022cf8 	rdprs	zero,zero,2227
   22ca8:	00022e6c 	andhi	zero,zero,2233
   22cac:	00022cec 	andhi	zero,zero,2227
   22cb0:	00022cdc 	xori	zero,zero,2227
   22cb4:	00022cdc 	xori	zero,zero,2227
   22cb8:	00022cdc 	xori	zero,zero,2227
   22cbc:	0002318c 	andi	zero,zero,2246
   22cc0:	2404b03a 	or	r2,r4,r16
   22cc4:	1000661e 	bne	r2,zero,22e60 <__divdf3+0x2d4>
   22cc8:	04c00204 	movi	r19,8
   22ccc:	0021883a 	mov	r16,zero
   22cd0:	0025883a 	mov	r18,zero
   22cd4:	02400084 	movi	r9,2
   22cd8:	003fca06 	br	22c04 <__alt_data_end+0xfffe2c04>
   22cdc:	8023883a 	mov	r17,r16
   22ce0:	9011883a 	mov	r8,r18
   22ce4:	e02f883a 	mov	r23,fp
   22ce8:	480f883a 	mov	r7,r9
   22cec:	00800084 	movi	r2,2
   22cf0:	3881311e 	bne	r7,r2,231b8 <__divdf3+0x62c>
   22cf4:	b827883a 	mov	r19,r23
   22cf8:	98c0004c 	andi	r3,r19,1
   22cfc:	0081ffc4 	movi	r2,2047
   22d00:	000b883a 	mov	r5,zero
   22d04:	0025883a 	mov	r18,zero
   22d08:	1004953a 	slli	r2,r2,20
   22d0c:	18c03fcc 	andi	r3,r3,255
   22d10:	04400434 	movhi	r17,16
   22d14:	8c7fffc4 	addi	r17,r17,-1
   22d18:	180697fa 	slli	r3,r3,31
   22d1c:	2c4a703a 	and	r5,r5,r17
   22d20:	288ab03a 	or	r5,r5,r2
   22d24:	28c6b03a 	or	r3,r5,r3
   22d28:	9005883a 	mov	r2,r18
   22d2c:	dfc00d17 	ldw	ra,52(sp)
   22d30:	df000c17 	ldw	fp,48(sp)
   22d34:	ddc00b17 	ldw	r23,44(sp)
   22d38:	dd800a17 	ldw	r22,40(sp)
   22d3c:	dd400917 	ldw	r21,36(sp)
   22d40:	dd000817 	ldw	r20,32(sp)
   22d44:	dcc00717 	ldw	r19,28(sp)
   22d48:	dc800617 	ldw	r18,24(sp)
   22d4c:	dc400517 	ldw	r17,20(sp)
   22d50:	dc000417 	ldw	r16,16(sp)
   22d54:	dec00e04 	addi	sp,sp,56
   22d58:	f800283a 	ret
   22d5c:	2404b03a 	or	r2,r4,r16
   22d60:	2027883a 	mov	r19,r4
   22d64:	10003926 	beq	r2,zero,22e4c <__divdf3+0x2c0>
   22d68:	80012e26 	beq	r16,zero,23224 <__divdf3+0x698>
   22d6c:	8009883a 	mov	r4,r16
   22d70:	d9800315 	stw	r6,12(sp)
   22d74:	d9c00215 	stw	r7,8(sp)
   22d78:	002483c0 	call	2483c <__clzsi2>
   22d7c:	d9800317 	ldw	r6,12(sp)
   22d80:	d9c00217 	ldw	r7,8(sp)
   22d84:	113ffd44 	addi	r4,r2,-11
   22d88:	00c00704 	movi	r3,28
   22d8c:	19012116 	blt	r3,r4,23214 <__divdf3+0x688>
   22d90:	00c00744 	movi	r3,29
   22d94:	147ffe04 	addi	r17,r2,-8
   22d98:	1907c83a 	sub	r3,r3,r4
   22d9c:	8460983a 	sll	r16,r16,r17
   22da0:	98c6d83a 	srl	r3,r19,r3
   22da4:	9c64983a 	sll	r18,r19,r17
   22da8:	1c20b03a 	or	r16,r3,r16
   22dac:	1080fcc4 	addi	r2,r2,1011
   22db0:	00abc83a 	sub	r21,zero,r2
   22db4:	0027883a 	mov	r19,zero
   22db8:	0013883a 	mov	r9,zero
   22dbc:	003f9106 	br	22c04 <__alt_data_end+0xfffe2c04>
   22dc0:	3446b03a 	or	r3,r6,r17
   22dc4:	18001f1e 	bne	r3,zero,22e44 <__divdf3+0x2b8>
   22dc8:	0023883a 	mov	r17,zero
   22dcc:	0011883a 	mov	r8,zero
   22dd0:	01c00084 	movi	r7,2
   22dd4:	003f9d06 	br	22c4c <__alt_data_end+0xfffe2c4c>
   22dd8:	3446b03a 	or	r3,r6,r17
   22ddc:	18001526 	beq	r3,zero,22e34 <__divdf3+0x2a8>
   22de0:	88011b26 	beq	r17,zero,23250 <__divdf3+0x6c4>
   22de4:	8809883a 	mov	r4,r17
   22de8:	d9800315 	stw	r6,12(sp)
   22dec:	da400115 	stw	r9,4(sp)
   22df0:	002483c0 	call	2483c <__clzsi2>
   22df4:	d9800317 	ldw	r6,12(sp)
   22df8:	da400117 	ldw	r9,4(sp)
   22dfc:	113ffd44 	addi	r4,r2,-11
   22e00:	00c00704 	movi	r3,28
   22e04:	19010e16 	blt	r3,r4,23240 <__divdf3+0x6b4>
   22e08:	00c00744 	movi	r3,29
   22e0c:	123ffe04 	addi	r8,r2,-8
   22e10:	1907c83a 	sub	r3,r3,r4
   22e14:	8a22983a 	sll	r17,r17,r8
   22e18:	30c6d83a 	srl	r3,r6,r3
   22e1c:	3210983a 	sll	r8,r6,r8
   22e20:	1c62b03a 	or	r17,r3,r17
   22e24:	1080fcc4 	addi	r2,r2,1011
   22e28:	0085c83a 	sub	r2,zero,r2
   22e2c:	000f883a 	mov	r7,zero
   22e30:	003f8606 	br	22c4c <__alt_data_end+0xfffe2c4c>
   22e34:	0023883a 	mov	r17,zero
   22e38:	0011883a 	mov	r8,zero
   22e3c:	01c00044 	movi	r7,1
   22e40:	003f8206 	br	22c4c <__alt_data_end+0xfffe2c4c>
   22e44:	01c000c4 	movi	r7,3
   22e48:	003f8006 	br	22c4c <__alt_data_end+0xfffe2c4c>
   22e4c:	04c00104 	movi	r19,4
   22e50:	0021883a 	mov	r16,zero
   22e54:	0025883a 	mov	r18,zero
   22e58:	02400044 	movi	r9,1
   22e5c:	003f6906 	br	22c04 <__alt_data_end+0xfffe2c04>
   22e60:	04c00304 	movi	r19,12
   22e64:	024000c4 	movi	r9,3
   22e68:	003f6606 	br	22c04 <__alt_data_end+0xfffe2c04>
   22e6c:	01400434 	movhi	r5,16
   22e70:	0007883a 	mov	r3,zero
   22e74:	297fffc4 	addi	r5,r5,-1
   22e78:	04bfffc4 	movi	r18,-1
   22e7c:	0081ffc4 	movi	r2,2047
   22e80:	003fa106 	br	22d08 <__alt_data_end+0xfffe2d08>
   22e84:	00c00044 	movi	r3,1
   22e88:	1887c83a 	sub	r3,r3,r2
   22e8c:	01000e04 	movi	r4,56
   22e90:	20c1210e 	bge	r4,r3,23318 <__divdf3+0x78c>
   22e94:	98c0004c 	andi	r3,r19,1
   22e98:	0005883a 	mov	r2,zero
   22e9c:	000b883a 	mov	r5,zero
   22ea0:	0025883a 	mov	r18,zero
   22ea4:	003f9806 	br	22d08 <__alt_data_end+0xfffe2d08>
   22ea8:	8c00fd36 	bltu	r17,r16,232a0 <__divdf3+0x714>
   22eac:	8440fb26 	beq	r16,r17,2329c <__divdf3+0x710>
   22eb0:	8007883a 	mov	r3,r16
   22eb4:	ad7fffc4 	addi	r21,r21,-1
   22eb8:	0021883a 	mov	r16,zero
   22ebc:	4004d63a 	srli	r2,r8,24
   22ec0:	8822923a 	slli	r17,r17,8
   22ec4:	1809883a 	mov	r4,r3
   22ec8:	402c923a 	slli	r22,r8,8
   22ecc:	88b8b03a 	or	fp,r17,r2
   22ed0:	e028d43a 	srli	r20,fp,16
   22ed4:	d8c00015 	stw	r3,0(sp)
   22ed8:	e5ffffcc 	andi	r23,fp,65535
   22edc:	a00b883a 	mov	r5,r20
   22ee0:	00222240 	call	22224 <__udivsi3>
   22ee4:	d8c00017 	ldw	r3,0(sp)
   22ee8:	a00b883a 	mov	r5,r20
   22eec:	d8800315 	stw	r2,12(sp)
   22ef0:	1809883a 	mov	r4,r3
   22ef4:	00222880 	call	22288 <__umodsi3>
   22ef8:	d9800317 	ldw	r6,12(sp)
   22efc:	1006943a 	slli	r3,r2,16
   22f00:	9004d43a 	srli	r2,r18,16
   22f04:	b9a3383a 	mul	r17,r23,r6
   22f08:	10c4b03a 	or	r2,r2,r3
   22f0c:	1440062e 	bgeu	r2,r17,22f28 <__divdf3+0x39c>
   22f10:	1705883a 	add	r2,r2,fp
   22f14:	30ffffc4 	addi	r3,r6,-1
   22f18:	1700ee36 	bltu	r2,fp,232d4 <__divdf3+0x748>
   22f1c:	1440ed2e 	bgeu	r2,r17,232d4 <__divdf3+0x748>
   22f20:	31bfff84 	addi	r6,r6,-2
   22f24:	1705883a 	add	r2,r2,fp
   22f28:	1463c83a 	sub	r17,r2,r17
   22f2c:	a00b883a 	mov	r5,r20
   22f30:	8809883a 	mov	r4,r17
   22f34:	d9800315 	stw	r6,12(sp)
   22f38:	00222240 	call	22224 <__udivsi3>
   22f3c:	a00b883a 	mov	r5,r20
   22f40:	8809883a 	mov	r4,r17
   22f44:	d8800215 	stw	r2,8(sp)
   22f48:	00222880 	call	22288 <__umodsi3>
   22f4c:	d9c00217 	ldw	r7,8(sp)
   22f50:	1004943a 	slli	r2,r2,16
   22f54:	94bfffcc 	andi	r18,r18,65535
   22f58:	b9d1383a 	mul	r8,r23,r7
   22f5c:	90a4b03a 	or	r18,r18,r2
   22f60:	d9800317 	ldw	r6,12(sp)
   22f64:	9200062e 	bgeu	r18,r8,22f80 <__divdf3+0x3f4>
   22f68:	9725883a 	add	r18,r18,fp
   22f6c:	38bfffc4 	addi	r2,r7,-1
   22f70:	9700d636 	bltu	r18,fp,232cc <__divdf3+0x740>
   22f74:	9200d52e 	bgeu	r18,r8,232cc <__divdf3+0x740>
   22f78:	39ffff84 	addi	r7,r7,-2
   22f7c:	9725883a 	add	r18,r18,fp
   22f80:	3004943a 	slli	r2,r6,16
   22f84:	b012d43a 	srli	r9,r22,16
   22f88:	b1bfffcc 	andi	r6,r22,65535
   22f8c:	11e2b03a 	or	r17,r2,r7
   22f90:	8806d43a 	srli	r3,r17,16
   22f94:	893fffcc 	andi	r4,r17,65535
   22f98:	218b383a 	mul	r5,r4,r6
   22f9c:	30c5383a 	mul	r2,r6,r3
   22fa0:	2249383a 	mul	r4,r4,r9
   22fa4:	280ed43a 	srli	r7,r5,16
   22fa8:	9225c83a 	sub	r18,r18,r8
   22fac:	2089883a 	add	r4,r4,r2
   22fb0:	3909883a 	add	r4,r7,r4
   22fb4:	1a47383a 	mul	r3,r3,r9
   22fb8:	2080022e 	bgeu	r4,r2,22fc4 <__divdf3+0x438>
   22fbc:	00800074 	movhi	r2,1
   22fc0:	1887883a 	add	r3,r3,r2
   22fc4:	2004d43a 	srli	r2,r4,16
   22fc8:	2008943a 	slli	r4,r4,16
   22fcc:	297fffcc 	andi	r5,r5,65535
   22fd0:	10c7883a 	add	r3,r2,r3
   22fd4:	2149883a 	add	r4,r4,r5
   22fd8:	90c0a536 	bltu	r18,r3,23270 <__divdf3+0x6e4>
   22fdc:	90c0bf26 	beq	r18,r3,232dc <__divdf3+0x750>
   22fe0:	90c7c83a 	sub	r3,r18,r3
   22fe4:	810fc83a 	sub	r7,r16,r4
   22fe8:	81e5803a 	cmpltu	r18,r16,r7
   22fec:	1ca5c83a 	sub	r18,r3,r18
   22ff0:	e480c126 	beq	fp,r18,232f8 <__divdf3+0x76c>
   22ff4:	a00b883a 	mov	r5,r20
   22ff8:	9009883a 	mov	r4,r18
   22ffc:	d9800315 	stw	r6,12(sp)
   23000:	d9c00215 	stw	r7,8(sp)
   23004:	da400115 	stw	r9,4(sp)
   23008:	00222240 	call	22224 <__udivsi3>
   2300c:	a00b883a 	mov	r5,r20
   23010:	9009883a 	mov	r4,r18
   23014:	d8800015 	stw	r2,0(sp)
   23018:	00222880 	call	22288 <__umodsi3>
   2301c:	d9c00217 	ldw	r7,8(sp)
   23020:	da000017 	ldw	r8,0(sp)
   23024:	1006943a 	slli	r3,r2,16
   23028:	3804d43a 	srli	r2,r7,16
   2302c:	ba21383a 	mul	r16,r23,r8
   23030:	d9800317 	ldw	r6,12(sp)
   23034:	10c4b03a 	or	r2,r2,r3
   23038:	da400117 	ldw	r9,4(sp)
   2303c:	1400062e 	bgeu	r2,r16,23058 <__divdf3+0x4cc>
   23040:	1705883a 	add	r2,r2,fp
   23044:	40ffffc4 	addi	r3,r8,-1
   23048:	1700ad36 	bltu	r2,fp,23300 <__divdf3+0x774>
   2304c:	1400ac2e 	bgeu	r2,r16,23300 <__divdf3+0x774>
   23050:	423fff84 	addi	r8,r8,-2
   23054:	1705883a 	add	r2,r2,fp
   23058:	1421c83a 	sub	r16,r2,r16
   2305c:	a00b883a 	mov	r5,r20
   23060:	8009883a 	mov	r4,r16
   23064:	d9800315 	stw	r6,12(sp)
   23068:	d9c00215 	stw	r7,8(sp)
   2306c:	da000015 	stw	r8,0(sp)
   23070:	da400115 	stw	r9,4(sp)
   23074:	00222240 	call	22224 <__udivsi3>
   23078:	8009883a 	mov	r4,r16
   2307c:	a00b883a 	mov	r5,r20
   23080:	1025883a 	mov	r18,r2
   23084:	00222880 	call	22288 <__umodsi3>
   23088:	d9c00217 	ldw	r7,8(sp)
   2308c:	1004943a 	slli	r2,r2,16
   23090:	bcaf383a 	mul	r23,r23,r18
   23094:	393fffcc 	andi	r4,r7,65535
   23098:	2088b03a 	or	r4,r4,r2
   2309c:	d9800317 	ldw	r6,12(sp)
   230a0:	da000017 	ldw	r8,0(sp)
   230a4:	da400117 	ldw	r9,4(sp)
   230a8:	25c0062e 	bgeu	r4,r23,230c4 <__divdf3+0x538>
   230ac:	2709883a 	add	r4,r4,fp
   230b0:	90bfffc4 	addi	r2,r18,-1
   230b4:	27009436 	bltu	r4,fp,23308 <__divdf3+0x77c>
   230b8:	25c0932e 	bgeu	r4,r23,23308 <__divdf3+0x77c>
   230bc:	94bfff84 	addi	r18,r18,-2
   230c0:	2709883a 	add	r4,r4,fp
   230c4:	4004943a 	slli	r2,r8,16
   230c8:	25efc83a 	sub	r23,r4,r23
   230cc:	1490b03a 	or	r8,r2,r18
   230d0:	4008d43a 	srli	r4,r8,16
   230d4:	40ffffcc 	andi	r3,r8,65535
   230d8:	30c5383a 	mul	r2,r6,r3
   230dc:	1a47383a 	mul	r3,r3,r9
   230e0:	310d383a 	mul	r6,r6,r4
   230e4:	100ad43a 	srli	r5,r2,16
   230e8:	4913383a 	mul	r9,r9,r4
   230ec:	1987883a 	add	r3,r3,r6
   230f0:	28c7883a 	add	r3,r5,r3
   230f4:	1980022e 	bgeu	r3,r6,23100 <__divdf3+0x574>
   230f8:	01000074 	movhi	r4,1
   230fc:	4913883a 	add	r9,r9,r4
   23100:	1808d43a 	srli	r4,r3,16
   23104:	1806943a 	slli	r3,r3,16
   23108:	10bfffcc 	andi	r2,r2,65535
   2310c:	2253883a 	add	r9,r4,r9
   23110:	1887883a 	add	r3,r3,r2
   23114:	ba403836 	bltu	r23,r9,231f8 <__divdf3+0x66c>
   23118:	ba403626 	beq	r23,r9,231f4 <__divdf3+0x668>
   2311c:	42000054 	ori	r8,r8,1
   23120:	a880ffc4 	addi	r2,r21,1023
   23124:	00bf570e 	bge	zero,r2,22e84 <__alt_data_end+0xfffe2e84>
   23128:	40c001cc 	andi	r3,r8,7
   2312c:	18000726 	beq	r3,zero,2314c <__divdf3+0x5c0>
   23130:	40c003cc 	andi	r3,r8,15
   23134:	01000104 	movi	r4,4
   23138:	19000426 	beq	r3,r4,2314c <__divdf3+0x5c0>
   2313c:	4107883a 	add	r3,r8,r4
   23140:	1a11803a 	cmpltu	r8,r3,r8
   23144:	8a23883a 	add	r17,r17,r8
   23148:	1811883a 	mov	r8,r3
   2314c:	88c0402c 	andhi	r3,r17,256
   23150:	18000426 	beq	r3,zero,23164 <__divdf3+0x5d8>
   23154:	00ffc034 	movhi	r3,65280
   23158:	18ffffc4 	addi	r3,r3,-1
   2315c:	a8810004 	addi	r2,r21,1024
   23160:	88e2703a 	and	r17,r17,r3
   23164:	00c1ff84 	movi	r3,2046
   23168:	18bee316 	blt	r3,r2,22cf8 <__alt_data_end+0xfffe2cf8>
   2316c:	8824977a 	slli	r18,r17,29
   23170:	4010d0fa 	srli	r8,r8,3
   23174:	8822927a 	slli	r17,r17,9
   23178:	1081ffcc 	andi	r2,r2,2047
   2317c:	9224b03a 	or	r18,r18,r8
   23180:	880ad33a 	srli	r5,r17,12
   23184:	98c0004c 	andi	r3,r19,1
   23188:	003edf06 	br	22d08 <__alt_data_end+0xfffe2d08>
   2318c:	8080022c 	andhi	r2,r16,8
   23190:	10001226 	beq	r2,zero,231dc <__divdf3+0x650>
   23194:	8880022c 	andhi	r2,r17,8
   23198:	1000101e 	bne	r2,zero,231dc <__divdf3+0x650>
   2319c:	00800434 	movhi	r2,16
   231a0:	89400234 	orhi	r5,r17,8
   231a4:	10bfffc4 	addi	r2,r2,-1
   231a8:	b007883a 	mov	r3,r22
   231ac:	288a703a 	and	r5,r5,r2
   231b0:	4025883a 	mov	r18,r8
   231b4:	003f3106 	br	22e7c <__alt_data_end+0xfffe2e7c>
   231b8:	008000c4 	movi	r2,3
   231bc:	3880a626 	beq	r7,r2,23458 <__divdf3+0x8cc>
   231c0:	00800044 	movi	r2,1
   231c4:	3880521e 	bne	r7,r2,23310 <__divdf3+0x784>
   231c8:	b807883a 	mov	r3,r23
   231cc:	0005883a 	mov	r2,zero
   231d0:	000b883a 	mov	r5,zero
   231d4:	0025883a 	mov	r18,zero
   231d8:	003ecb06 	br	22d08 <__alt_data_end+0xfffe2d08>
   231dc:	00800434 	movhi	r2,16
   231e0:	81400234 	orhi	r5,r16,8
   231e4:	10bfffc4 	addi	r2,r2,-1
   231e8:	a007883a 	mov	r3,r20
   231ec:	288a703a 	and	r5,r5,r2
   231f0:	003f2206 	br	22e7c <__alt_data_end+0xfffe2e7c>
   231f4:	183fca26 	beq	r3,zero,23120 <__alt_data_end+0xfffe3120>
   231f8:	e5ef883a 	add	r23,fp,r23
   231fc:	40bfffc4 	addi	r2,r8,-1
   23200:	bf00392e 	bgeu	r23,fp,232e8 <__divdf3+0x75c>
   23204:	1011883a 	mov	r8,r2
   23208:	ba7fc41e 	bne	r23,r9,2311c <__alt_data_end+0xfffe311c>
   2320c:	b0ffc31e 	bne	r22,r3,2311c <__alt_data_end+0xfffe311c>
   23210:	003fc306 	br	23120 <__alt_data_end+0xfffe3120>
   23214:	143ff604 	addi	r16,r2,-40
   23218:	9c20983a 	sll	r16,r19,r16
   2321c:	0025883a 	mov	r18,zero
   23220:	003ee206 	br	22dac <__alt_data_end+0xfffe2dac>
   23224:	d9800315 	stw	r6,12(sp)
   23228:	d9c00215 	stw	r7,8(sp)
   2322c:	002483c0 	call	2483c <__clzsi2>
   23230:	10800804 	addi	r2,r2,32
   23234:	d9c00217 	ldw	r7,8(sp)
   23238:	d9800317 	ldw	r6,12(sp)
   2323c:	003ed106 	br	22d84 <__alt_data_end+0xfffe2d84>
   23240:	147ff604 	addi	r17,r2,-40
   23244:	3462983a 	sll	r17,r6,r17
   23248:	0011883a 	mov	r8,zero
   2324c:	003ef506 	br	22e24 <__alt_data_end+0xfffe2e24>
   23250:	3009883a 	mov	r4,r6
   23254:	d9800315 	stw	r6,12(sp)
   23258:	da400115 	stw	r9,4(sp)
   2325c:	002483c0 	call	2483c <__clzsi2>
   23260:	10800804 	addi	r2,r2,32
   23264:	da400117 	ldw	r9,4(sp)
   23268:	d9800317 	ldw	r6,12(sp)
   2326c:	003ee306 	br	22dfc <__alt_data_end+0xfffe2dfc>
   23270:	85a1883a 	add	r16,r16,r22
   23274:	8585803a 	cmpltu	r2,r16,r22
   23278:	1705883a 	add	r2,r2,fp
   2327c:	14a5883a 	add	r18,r2,r18
   23280:	88bfffc4 	addi	r2,r17,-1
   23284:	e4800c2e 	bgeu	fp,r18,232b8 <__divdf3+0x72c>
   23288:	90c03e36 	bltu	r18,r3,23384 <__divdf3+0x7f8>
   2328c:	1c806926 	beq	r3,r18,23434 <__divdf3+0x8a8>
   23290:	90c7c83a 	sub	r3,r18,r3
   23294:	1023883a 	mov	r17,r2
   23298:	003f5206 	br	22fe4 <__alt_data_end+0xfffe2fe4>
   2329c:	923f0436 	bltu	r18,r8,22eb0 <__alt_data_end+0xfffe2eb0>
   232a0:	800897fa 	slli	r4,r16,31
   232a4:	9004d07a 	srli	r2,r18,1
   232a8:	8006d07a 	srli	r3,r16,1
   232ac:	902097fa 	slli	r16,r18,31
   232b0:	20a4b03a 	or	r18,r4,r2
   232b4:	003f0106 	br	22ebc <__alt_data_end+0xfffe2ebc>
   232b8:	e4bff51e 	bne	fp,r18,23290 <__alt_data_end+0xfffe3290>
   232bc:	85bff22e 	bgeu	r16,r22,23288 <__alt_data_end+0xfffe3288>
   232c0:	e0c7c83a 	sub	r3,fp,r3
   232c4:	1023883a 	mov	r17,r2
   232c8:	003f4606 	br	22fe4 <__alt_data_end+0xfffe2fe4>
   232cc:	100f883a 	mov	r7,r2
   232d0:	003f2b06 	br	22f80 <__alt_data_end+0xfffe2f80>
   232d4:	180d883a 	mov	r6,r3
   232d8:	003f1306 	br	22f28 <__alt_data_end+0xfffe2f28>
   232dc:	813fe436 	bltu	r16,r4,23270 <__alt_data_end+0xfffe3270>
   232e0:	0007883a 	mov	r3,zero
   232e4:	003f3f06 	br	22fe4 <__alt_data_end+0xfffe2fe4>
   232e8:	ba402c36 	bltu	r23,r9,2339c <__divdf3+0x810>
   232ec:	4dc05426 	beq	r9,r23,23440 <__divdf3+0x8b4>
   232f0:	1011883a 	mov	r8,r2
   232f4:	003f8906 	br	2311c <__alt_data_end+0xfffe311c>
   232f8:	023fffc4 	movi	r8,-1
   232fc:	003f8806 	br	23120 <__alt_data_end+0xfffe3120>
   23300:	1811883a 	mov	r8,r3
   23304:	003f5406 	br	23058 <__alt_data_end+0xfffe3058>
   23308:	1025883a 	mov	r18,r2
   2330c:	003f6d06 	br	230c4 <__alt_data_end+0xfffe30c4>
   23310:	b827883a 	mov	r19,r23
   23314:	003f8206 	br	23120 <__alt_data_end+0xfffe3120>
   23318:	010007c4 	movi	r4,31
   2331c:	20c02616 	blt	r4,r3,233b8 <__divdf3+0x82c>
   23320:	00800804 	movi	r2,32
   23324:	10c5c83a 	sub	r2,r2,r3
   23328:	888a983a 	sll	r5,r17,r2
   2332c:	40c8d83a 	srl	r4,r8,r3
   23330:	4084983a 	sll	r2,r8,r2
   23334:	88e2d83a 	srl	r17,r17,r3
   23338:	2906b03a 	or	r3,r5,r4
   2333c:	1004c03a 	cmpne	r2,r2,zero
   23340:	1886b03a 	or	r3,r3,r2
   23344:	188001cc 	andi	r2,r3,7
   23348:	10000726 	beq	r2,zero,23368 <__divdf3+0x7dc>
   2334c:	188003cc 	andi	r2,r3,15
   23350:	01000104 	movi	r4,4
   23354:	11000426 	beq	r2,r4,23368 <__divdf3+0x7dc>
   23358:	1805883a 	mov	r2,r3
   2335c:	10c00104 	addi	r3,r2,4
   23360:	1885803a 	cmpltu	r2,r3,r2
   23364:	88a3883a 	add	r17,r17,r2
   23368:	8880202c 	andhi	r2,r17,128
   2336c:	10002726 	beq	r2,zero,2340c <__divdf3+0x880>
   23370:	98c0004c 	andi	r3,r19,1
   23374:	00800044 	movi	r2,1
   23378:	000b883a 	mov	r5,zero
   2337c:	0025883a 	mov	r18,zero
   23380:	003e6106 	br	22d08 <__alt_data_end+0xfffe2d08>
   23384:	85a1883a 	add	r16,r16,r22
   23388:	8585803a 	cmpltu	r2,r16,r22
   2338c:	1705883a 	add	r2,r2,fp
   23390:	14a5883a 	add	r18,r2,r18
   23394:	8c7fff84 	addi	r17,r17,-2
   23398:	003f1106 	br	22fe0 <__alt_data_end+0xfffe2fe0>
   2339c:	b589883a 	add	r4,r22,r22
   233a0:	25ad803a 	cmpltu	r22,r4,r22
   233a4:	b739883a 	add	fp,r22,fp
   233a8:	40bfff84 	addi	r2,r8,-2
   233ac:	bf2f883a 	add	r23,r23,fp
   233b0:	202d883a 	mov	r22,r4
   233b4:	003f9306 	br	23204 <__alt_data_end+0xfffe3204>
   233b8:	013ff844 	movi	r4,-31
   233bc:	2085c83a 	sub	r2,r4,r2
   233c0:	8888d83a 	srl	r4,r17,r2
   233c4:	00800804 	movi	r2,32
   233c8:	18802126 	beq	r3,r2,23450 <__divdf3+0x8c4>
   233cc:	00801004 	movi	r2,64
   233d0:	10c5c83a 	sub	r2,r2,r3
   233d4:	8884983a 	sll	r2,r17,r2
   233d8:	1204b03a 	or	r2,r2,r8
   233dc:	1004c03a 	cmpne	r2,r2,zero
   233e0:	2084b03a 	or	r2,r4,r2
   233e4:	144001cc 	andi	r17,r2,7
   233e8:	88000d1e 	bne	r17,zero,23420 <__divdf3+0x894>
   233ec:	000b883a 	mov	r5,zero
   233f0:	1024d0fa 	srli	r18,r2,3
   233f4:	98c0004c 	andi	r3,r19,1
   233f8:	0005883a 	mov	r2,zero
   233fc:	9464b03a 	or	r18,r18,r17
   23400:	003e4106 	br	22d08 <__alt_data_end+0xfffe2d08>
   23404:	1007883a 	mov	r3,r2
   23408:	0023883a 	mov	r17,zero
   2340c:	880a927a 	slli	r5,r17,9
   23410:	1805883a 	mov	r2,r3
   23414:	8822977a 	slli	r17,r17,29
   23418:	280ad33a 	srli	r5,r5,12
   2341c:	003ff406 	br	233f0 <__alt_data_end+0xfffe33f0>
   23420:	10c003cc 	andi	r3,r2,15
   23424:	01000104 	movi	r4,4
   23428:	193ff626 	beq	r3,r4,23404 <__alt_data_end+0xfffe3404>
   2342c:	0023883a 	mov	r17,zero
   23430:	003fca06 	br	2335c <__alt_data_end+0xfffe335c>
   23434:	813fd336 	bltu	r16,r4,23384 <__alt_data_end+0xfffe3384>
   23438:	1023883a 	mov	r17,r2
   2343c:	003fa806 	br	232e0 <__alt_data_end+0xfffe32e0>
   23440:	b0ffd636 	bltu	r22,r3,2339c <__alt_data_end+0xfffe339c>
   23444:	1011883a 	mov	r8,r2
   23448:	b0ff341e 	bne	r22,r3,2311c <__alt_data_end+0xfffe311c>
   2344c:	003f3406 	br	23120 <__alt_data_end+0xfffe3120>
   23450:	0005883a 	mov	r2,zero
   23454:	003fe006 	br	233d8 <__alt_data_end+0xfffe33d8>
   23458:	00800434 	movhi	r2,16
   2345c:	89400234 	orhi	r5,r17,8
   23460:	10bfffc4 	addi	r2,r2,-1
   23464:	b807883a 	mov	r3,r23
   23468:	288a703a 	and	r5,r5,r2
   2346c:	4025883a 	mov	r18,r8
   23470:	003e8206 	br	22e7c <__alt_data_end+0xfffe2e7c>

00023474 <__eqdf2>:
   23474:	2804d53a 	srli	r2,r5,20
   23478:	3806d53a 	srli	r3,r7,20
   2347c:	02000434 	movhi	r8,16
   23480:	423fffc4 	addi	r8,r8,-1
   23484:	1081ffcc 	andi	r2,r2,2047
   23488:	0281ffc4 	movi	r10,2047
   2348c:	2a12703a 	and	r9,r5,r8
   23490:	18c1ffcc 	andi	r3,r3,2047
   23494:	3a10703a 	and	r8,r7,r8
   23498:	280ad7fa 	srli	r5,r5,31
   2349c:	380ed7fa 	srli	r7,r7,31
   234a0:	12801026 	beq	r2,r10,234e4 <__eqdf2+0x70>
   234a4:	0281ffc4 	movi	r10,2047
   234a8:	1a800a26 	beq	r3,r10,234d4 <__eqdf2+0x60>
   234ac:	10c00226 	beq	r2,r3,234b8 <__eqdf2+0x44>
   234b0:	00800044 	movi	r2,1
   234b4:	f800283a 	ret
   234b8:	4a3ffd1e 	bne	r9,r8,234b0 <__alt_data_end+0xfffe34b0>
   234bc:	21bffc1e 	bne	r4,r6,234b0 <__alt_data_end+0xfffe34b0>
   234c0:	29c00c26 	beq	r5,r7,234f4 <__eqdf2+0x80>
   234c4:	103ffa1e 	bne	r2,zero,234b0 <__alt_data_end+0xfffe34b0>
   234c8:	2244b03a 	or	r2,r4,r9
   234cc:	1004c03a 	cmpne	r2,r2,zero
   234d0:	f800283a 	ret
   234d4:	3214b03a 	or	r10,r6,r8
   234d8:	503ff426 	beq	r10,zero,234ac <__alt_data_end+0xfffe34ac>
   234dc:	00800044 	movi	r2,1
   234e0:	f800283a 	ret
   234e4:	2254b03a 	or	r10,r4,r9
   234e8:	503fee26 	beq	r10,zero,234a4 <__alt_data_end+0xfffe34a4>
   234ec:	00800044 	movi	r2,1
   234f0:	f800283a 	ret
   234f4:	0005883a 	mov	r2,zero
   234f8:	f800283a 	ret

000234fc <__gedf2>:
   234fc:	2804d53a 	srli	r2,r5,20
   23500:	3806d53a 	srli	r3,r7,20
   23504:	02000434 	movhi	r8,16
   23508:	423fffc4 	addi	r8,r8,-1
   2350c:	1081ffcc 	andi	r2,r2,2047
   23510:	0241ffc4 	movi	r9,2047
   23514:	2a14703a 	and	r10,r5,r8
   23518:	18c1ffcc 	andi	r3,r3,2047
   2351c:	3a10703a 	and	r8,r7,r8
   23520:	280ad7fa 	srli	r5,r5,31
   23524:	380ed7fa 	srli	r7,r7,31
   23528:	12401d26 	beq	r2,r9,235a0 <__gedf2+0xa4>
   2352c:	0241ffc4 	movi	r9,2047
   23530:	1a401226 	beq	r3,r9,2357c <__gedf2+0x80>
   23534:	1000081e 	bne	r2,zero,23558 <__gedf2+0x5c>
   23538:	2296b03a 	or	r11,r4,r10
   2353c:	5813003a 	cmpeq	r9,r11,zero
   23540:	1800091e 	bne	r3,zero,23568 <__gedf2+0x6c>
   23544:	3218b03a 	or	r12,r6,r8
   23548:	6000071e 	bne	r12,zero,23568 <__gedf2+0x6c>
   2354c:	0005883a 	mov	r2,zero
   23550:	5800101e 	bne	r11,zero,23594 <__gedf2+0x98>
   23554:	f800283a 	ret
   23558:	18000c1e 	bne	r3,zero,2358c <__gedf2+0x90>
   2355c:	3212b03a 	or	r9,r6,r8
   23560:	48000c26 	beq	r9,zero,23594 <__gedf2+0x98>
   23564:	0013883a 	mov	r9,zero
   23568:	39c03fcc 	andi	r7,r7,255
   2356c:	48000826 	beq	r9,zero,23590 <__gedf2+0x94>
   23570:	38000926 	beq	r7,zero,23598 <__gedf2+0x9c>
   23574:	00800044 	movi	r2,1
   23578:	f800283a 	ret
   2357c:	3212b03a 	or	r9,r6,r8
   23580:	483fec26 	beq	r9,zero,23534 <__alt_data_end+0xfffe3534>
   23584:	00bfff84 	movi	r2,-2
   23588:	f800283a 	ret
   2358c:	39c03fcc 	andi	r7,r7,255
   23590:	29c00626 	beq	r5,r7,235ac <__gedf2+0xb0>
   23594:	283ff726 	beq	r5,zero,23574 <__alt_data_end+0xfffe3574>
   23598:	00bfffc4 	movi	r2,-1
   2359c:	f800283a 	ret
   235a0:	2292b03a 	or	r9,r4,r10
   235a4:	483fe126 	beq	r9,zero,2352c <__alt_data_end+0xfffe352c>
   235a8:	003ff606 	br	23584 <__alt_data_end+0xfffe3584>
   235ac:	18bff916 	blt	r3,r2,23594 <__alt_data_end+0xfffe3594>
   235b0:	10c00316 	blt	r2,r3,235c0 <__gedf2+0xc4>
   235b4:	42bff736 	bltu	r8,r10,23594 <__alt_data_end+0xfffe3594>
   235b8:	52000326 	beq	r10,r8,235c8 <__gedf2+0xcc>
   235bc:	5200042e 	bgeu	r10,r8,235d0 <__gedf2+0xd4>
   235c0:	283fec1e 	bne	r5,zero,23574 <__alt_data_end+0xfffe3574>
   235c4:	003ff406 	br	23598 <__alt_data_end+0xfffe3598>
   235c8:	313ff236 	bltu	r6,r4,23594 <__alt_data_end+0xfffe3594>
   235cc:	21bffc36 	bltu	r4,r6,235c0 <__alt_data_end+0xfffe35c0>
   235d0:	0005883a 	mov	r2,zero
   235d4:	f800283a 	ret

000235d8 <__ledf2>:
   235d8:	2804d53a 	srli	r2,r5,20
   235dc:	3810d53a 	srli	r8,r7,20
   235e0:	00c00434 	movhi	r3,16
   235e4:	18ffffc4 	addi	r3,r3,-1
   235e8:	1081ffcc 	andi	r2,r2,2047
   235ec:	0241ffc4 	movi	r9,2047
   235f0:	28d4703a 	and	r10,r5,r3
   235f4:	4201ffcc 	andi	r8,r8,2047
   235f8:	38c6703a 	and	r3,r7,r3
   235fc:	280ad7fa 	srli	r5,r5,31
   23600:	380ed7fa 	srli	r7,r7,31
   23604:	12401f26 	beq	r2,r9,23684 <__ledf2+0xac>
   23608:	0241ffc4 	movi	r9,2047
   2360c:	42401426 	beq	r8,r9,23660 <__ledf2+0x88>
   23610:	1000091e 	bne	r2,zero,23638 <__ledf2+0x60>
   23614:	2296b03a 	or	r11,r4,r10
   23618:	5813003a 	cmpeq	r9,r11,zero
   2361c:	29403fcc 	andi	r5,r5,255
   23620:	40000a1e 	bne	r8,zero,2364c <__ledf2+0x74>
   23624:	30d8b03a 	or	r12,r6,r3
   23628:	6000081e 	bne	r12,zero,2364c <__ledf2+0x74>
   2362c:	0005883a 	mov	r2,zero
   23630:	5800111e 	bne	r11,zero,23678 <__ledf2+0xa0>
   23634:	f800283a 	ret
   23638:	29403fcc 	andi	r5,r5,255
   2363c:	40000c1e 	bne	r8,zero,23670 <__ledf2+0x98>
   23640:	30d2b03a 	or	r9,r6,r3
   23644:	48000c26 	beq	r9,zero,23678 <__ledf2+0xa0>
   23648:	0013883a 	mov	r9,zero
   2364c:	39c03fcc 	andi	r7,r7,255
   23650:	48000826 	beq	r9,zero,23674 <__ledf2+0x9c>
   23654:	38001126 	beq	r7,zero,2369c <__ledf2+0xc4>
   23658:	00800044 	movi	r2,1
   2365c:	f800283a 	ret
   23660:	30d2b03a 	or	r9,r6,r3
   23664:	483fea26 	beq	r9,zero,23610 <__alt_data_end+0xfffe3610>
   23668:	00800084 	movi	r2,2
   2366c:	f800283a 	ret
   23670:	39c03fcc 	andi	r7,r7,255
   23674:	39400726 	beq	r7,r5,23694 <__ledf2+0xbc>
   23678:	2800081e 	bne	r5,zero,2369c <__ledf2+0xc4>
   2367c:	00800044 	movi	r2,1
   23680:	f800283a 	ret
   23684:	2292b03a 	or	r9,r4,r10
   23688:	483fdf26 	beq	r9,zero,23608 <__alt_data_end+0xfffe3608>
   2368c:	00800084 	movi	r2,2
   23690:	f800283a 	ret
   23694:	4080030e 	bge	r8,r2,236a4 <__ledf2+0xcc>
   23698:	383fef26 	beq	r7,zero,23658 <__alt_data_end+0xfffe3658>
   2369c:	00bfffc4 	movi	r2,-1
   236a0:	f800283a 	ret
   236a4:	123feb16 	blt	r2,r8,23654 <__alt_data_end+0xfffe3654>
   236a8:	1abff336 	bltu	r3,r10,23678 <__alt_data_end+0xfffe3678>
   236ac:	50c00326 	beq	r10,r3,236bc <__ledf2+0xe4>
   236b0:	50c0042e 	bgeu	r10,r3,236c4 <__ledf2+0xec>
   236b4:	283fe81e 	bne	r5,zero,23658 <__alt_data_end+0xfffe3658>
   236b8:	003ff806 	br	2369c <__alt_data_end+0xfffe369c>
   236bc:	313fee36 	bltu	r6,r4,23678 <__alt_data_end+0xfffe3678>
   236c0:	21bffc36 	bltu	r4,r6,236b4 <__alt_data_end+0xfffe36b4>
   236c4:	0005883a 	mov	r2,zero
   236c8:	f800283a 	ret

000236cc <__muldf3>:
   236cc:	defff304 	addi	sp,sp,-52
   236d0:	2804d53a 	srli	r2,r5,20
   236d4:	dd800915 	stw	r22,36(sp)
   236d8:	282cd7fa 	srli	r22,r5,31
   236dc:	dc000315 	stw	r16,12(sp)
   236e0:	04000434 	movhi	r16,16
   236e4:	dd400815 	stw	r21,32(sp)
   236e8:	dc800515 	stw	r18,20(sp)
   236ec:	843fffc4 	addi	r16,r16,-1
   236f0:	dfc00c15 	stw	ra,48(sp)
   236f4:	df000b15 	stw	fp,44(sp)
   236f8:	ddc00a15 	stw	r23,40(sp)
   236fc:	dd000715 	stw	r20,28(sp)
   23700:	dcc00615 	stw	r19,24(sp)
   23704:	dc400415 	stw	r17,16(sp)
   23708:	1481ffcc 	andi	r18,r2,2047
   2370c:	2c20703a 	and	r16,r5,r16
   23710:	b02b883a 	mov	r21,r22
   23714:	b2403fcc 	andi	r9,r22,255
   23718:	90006026 	beq	r18,zero,2389c <__muldf3+0x1d0>
   2371c:	0081ffc4 	movi	r2,2047
   23720:	2029883a 	mov	r20,r4
   23724:	90803626 	beq	r18,r2,23800 <__muldf3+0x134>
   23728:	80800434 	orhi	r2,r16,16
   2372c:	100490fa 	slli	r2,r2,3
   23730:	2020d77a 	srli	r16,r4,29
   23734:	202890fa 	slli	r20,r4,3
   23738:	94bf0044 	addi	r18,r18,-1023
   2373c:	80a0b03a 	or	r16,r16,r2
   23740:	0027883a 	mov	r19,zero
   23744:	0039883a 	mov	fp,zero
   23748:	3804d53a 	srli	r2,r7,20
   2374c:	382ed7fa 	srli	r23,r7,31
   23750:	04400434 	movhi	r17,16
   23754:	8c7fffc4 	addi	r17,r17,-1
   23758:	1081ffcc 	andi	r2,r2,2047
   2375c:	3011883a 	mov	r8,r6
   23760:	3c62703a 	and	r17,r7,r17
   23764:	ba803fcc 	andi	r10,r23,255
   23768:	10006d26 	beq	r2,zero,23920 <__muldf3+0x254>
   2376c:	00c1ffc4 	movi	r3,2047
   23770:	10c06526 	beq	r2,r3,23908 <__muldf3+0x23c>
   23774:	88c00434 	orhi	r3,r17,16
   23778:	180690fa 	slli	r3,r3,3
   2377c:	3022d77a 	srli	r17,r6,29
   23780:	301090fa 	slli	r8,r6,3
   23784:	10bf0044 	addi	r2,r2,-1023
   23788:	88e2b03a 	or	r17,r17,r3
   2378c:	000b883a 	mov	r5,zero
   23790:	9085883a 	add	r2,r18,r2
   23794:	2cc8b03a 	or	r4,r5,r19
   23798:	00c003c4 	movi	r3,15
   2379c:	bdacf03a 	xor	r22,r23,r22
   237a0:	12c00044 	addi	r11,r2,1
   237a4:	19009936 	bltu	r3,r4,23a0c <__muldf3+0x340>
   237a8:	200890ba 	slli	r4,r4,2
   237ac:	00c000b4 	movhi	r3,2
   237b0:	18cdf004 	addi	r3,r3,14272
   237b4:	20c9883a 	add	r4,r4,r3
   237b8:	20c00017 	ldw	r3,0(r4)
   237bc:	1800683a 	jmp	r3
   237c0:	00023a0c 	andi	zero,zero,2280
   237c4:	00023820 	cmpeqi	zero,zero,2272
   237c8:	00023820 	cmpeqi	zero,zero,2272
   237cc:	0002381c 	xori	zero,zero,2272
   237d0:	000239e8 	cmpgeui	zero,zero,2279
   237d4:	000239e8 	cmpgeui	zero,zero,2279
   237d8:	000239d0 	cmplti	zero,zero,2279
   237dc:	0002381c 	xori	zero,zero,2272
   237e0:	000239e8 	cmpgeui	zero,zero,2279
   237e4:	000239d0 	cmplti	zero,zero,2279
   237e8:	000239e8 	cmpgeui	zero,zero,2279
   237ec:	0002381c 	xori	zero,zero,2272
   237f0:	000239f8 	rdprs	zero,zero,2279
   237f4:	000239f8 	rdprs	zero,zero,2279
   237f8:	000239f8 	rdprs	zero,zero,2279
   237fc:	00023c14 	movui	zero,2288
   23800:	2404b03a 	or	r2,r4,r16
   23804:	10006f1e 	bne	r2,zero,239c4 <__muldf3+0x2f8>
   23808:	04c00204 	movi	r19,8
   2380c:	0021883a 	mov	r16,zero
   23810:	0029883a 	mov	r20,zero
   23814:	07000084 	movi	fp,2
   23818:	003fcb06 	br	23748 <__alt_data_end+0xfffe3748>
   2381c:	502d883a 	mov	r22,r10
   23820:	00800084 	movi	r2,2
   23824:	28805726 	beq	r5,r2,23984 <__muldf3+0x2b8>
   23828:	008000c4 	movi	r2,3
   2382c:	28816626 	beq	r5,r2,23dc8 <__muldf3+0x6fc>
   23830:	00800044 	movi	r2,1
   23834:	2881411e 	bne	r5,r2,23d3c <__muldf3+0x670>
   23838:	b02b883a 	mov	r21,r22
   2383c:	0005883a 	mov	r2,zero
   23840:	000b883a 	mov	r5,zero
   23844:	0029883a 	mov	r20,zero
   23848:	1004953a 	slli	r2,r2,20
   2384c:	a8c03fcc 	andi	r3,r21,255
   23850:	04400434 	movhi	r17,16
   23854:	8c7fffc4 	addi	r17,r17,-1
   23858:	180697fa 	slli	r3,r3,31
   2385c:	2c4a703a 	and	r5,r5,r17
   23860:	288ab03a 	or	r5,r5,r2
   23864:	28c6b03a 	or	r3,r5,r3
   23868:	a005883a 	mov	r2,r20
   2386c:	dfc00c17 	ldw	ra,48(sp)
   23870:	df000b17 	ldw	fp,44(sp)
   23874:	ddc00a17 	ldw	r23,40(sp)
   23878:	dd800917 	ldw	r22,36(sp)
   2387c:	dd400817 	ldw	r21,32(sp)
   23880:	dd000717 	ldw	r20,28(sp)
   23884:	dcc00617 	ldw	r19,24(sp)
   23888:	dc800517 	ldw	r18,20(sp)
   2388c:	dc400417 	ldw	r17,16(sp)
   23890:	dc000317 	ldw	r16,12(sp)
   23894:	dec00d04 	addi	sp,sp,52
   23898:	f800283a 	ret
   2389c:	2404b03a 	or	r2,r4,r16
   238a0:	2027883a 	mov	r19,r4
   238a4:	10004226 	beq	r2,zero,239b0 <__muldf3+0x2e4>
   238a8:	8000fc26 	beq	r16,zero,23c9c <__muldf3+0x5d0>
   238ac:	8009883a 	mov	r4,r16
   238b0:	d9800215 	stw	r6,8(sp)
   238b4:	d9c00015 	stw	r7,0(sp)
   238b8:	da400115 	stw	r9,4(sp)
   238bc:	002483c0 	call	2483c <__clzsi2>
   238c0:	d9800217 	ldw	r6,8(sp)
   238c4:	d9c00017 	ldw	r7,0(sp)
   238c8:	da400117 	ldw	r9,4(sp)
   238cc:	113ffd44 	addi	r4,r2,-11
   238d0:	00c00704 	movi	r3,28
   238d4:	1900ed16 	blt	r3,r4,23c8c <__muldf3+0x5c0>
   238d8:	00c00744 	movi	r3,29
   238dc:	147ffe04 	addi	r17,r2,-8
   238e0:	1907c83a 	sub	r3,r3,r4
   238e4:	8460983a 	sll	r16,r16,r17
   238e8:	98c6d83a 	srl	r3,r19,r3
   238ec:	9c68983a 	sll	r20,r19,r17
   238f0:	1c20b03a 	or	r16,r3,r16
   238f4:	1080fcc4 	addi	r2,r2,1011
   238f8:	00a5c83a 	sub	r18,zero,r2
   238fc:	0027883a 	mov	r19,zero
   23900:	0039883a 	mov	fp,zero
   23904:	003f9006 	br	23748 <__alt_data_end+0xfffe3748>
   23908:	3446b03a 	or	r3,r6,r17
   2390c:	1800261e 	bne	r3,zero,239a8 <__muldf3+0x2dc>
   23910:	0023883a 	mov	r17,zero
   23914:	0011883a 	mov	r8,zero
   23918:	01400084 	movi	r5,2
   2391c:	003f9c06 	br	23790 <__alt_data_end+0xfffe3790>
   23920:	3446b03a 	or	r3,r6,r17
   23924:	18001c26 	beq	r3,zero,23998 <__muldf3+0x2cc>
   23928:	8800ce26 	beq	r17,zero,23c64 <__muldf3+0x598>
   2392c:	8809883a 	mov	r4,r17
   23930:	d9800215 	stw	r6,8(sp)
   23934:	da400115 	stw	r9,4(sp)
   23938:	da800015 	stw	r10,0(sp)
   2393c:	002483c0 	call	2483c <__clzsi2>
   23940:	d9800217 	ldw	r6,8(sp)
   23944:	da400117 	ldw	r9,4(sp)
   23948:	da800017 	ldw	r10,0(sp)
   2394c:	113ffd44 	addi	r4,r2,-11
   23950:	00c00704 	movi	r3,28
   23954:	1900bf16 	blt	r3,r4,23c54 <__muldf3+0x588>
   23958:	00c00744 	movi	r3,29
   2395c:	123ffe04 	addi	r8,r2,-8
   23960:	1907c83a 	sub	r3,r3,r4
   23964:	8a22983a 	sll	r17,r17,r8
   23968:	30c6d83a 	srl	r3,r6,r3
   2396c:	3210983a 	sll	r8,r6,r8
   23970:	1c62b03a 	or	r17,r3,r17
   23974:	1080fcc4 	addi	r2,r2,1011
   23978:	0085c83a 	sub	r2,zero,r2
   2397c:	000b883a 	mov	r5,zero
   23980:	003f8306 	br	23790 <__alt_data_end+0xfffe3790>
   23984:	b02b883a 	mov	r21,r22
   23988:	0081ffc4 	movi	r2,2047
   2398c:	000b883a 	mov	r5,zero
   23990:	0029883a 	mov	r20,zero
   23994:	003fac06 	br	23848 <__alt_data_end+0xfffe3848>
   23998:	0023883a 	mov	r17,zero
   2399c:	0011883a 	mov	r8,zero
   239a0:	01400044 	movi	r5,1
   239a4:	003f7a06 	br	23790 <__alt_data_end+0xfffe3790>
   239a8:	014000c4 	movi	r5,3
   239ac:	003f7806 	br	23790 <__alt_data_end+0xfffe3790>
   239b0:	04c00104 	movi	r19,4
   239b4:	0021883a 	mov	r16,zero
   239b8:	0029883a 	mov	r20,zero
   239bc:	07000044 	movi	fp,1
   239c0:	003f6106 	br	23748 <__alt_data_end+0xfffe3748>
   239c4:	04c00304 	movi	r19,12
   239c8:	070000c4 	movi	fp,3
   239cc:	003f5e06 	br	23748 <__alt_data_end+0xfffe3748>
   239d0:	01400434 	movhi	r5,16
   239d4:	002b883a 	mov	r21,zero
   239d8:	297fffc4 	addi	r5,r5,-1
   239dc:	053fffc4 	movi	r20,-1
   239e0:	0081ffc4 	movi	r2,2047
   239e4:	003f9806 	br	23848 <__alt_data_end+0xfffe3848>
   239e8:	8023883a 	mov	r17,r16
   239ec:	a011883a 	mov	r8,r20
   239f0:	e00b883a 	mov	r5,fp
   239f4:	003f8a06 	br	23820 <__alt_data_end+0xfffe3820>
   239f8:	8023883a 	mov	r17,r16
   239fc:	a011883a 	mov	r8,r20
   23a00:	482d883a 	mov	r22,r9
   23a04:	e00b883a 	mov	r5,fp
   23a08:	003f8506 	br	23820 <__alt_data_end+0xfffe3820>
   23a0c:	a00ad43a 	srli	r5,r20,16
   23a10:	401ad43a 	srli	r13,r8,16
   23a14:	a53fffcc 	andi	r20,r20,65535
   23a18:	423fffcc 	andi	r8,r8,65535
   23a1c:	4519383a 	mul	r12,r8,r20
   23a20:	4147383a 	mul	r3,r8,r5
   23a24:	6d09383a 	mul	r4,r13,r20
   23a28:	600cd43a 	srli	r6,r12,16
   23a2c:	2b5d383a 	mul	r14,r5,r13
   23a30:	20c9883a 	add	r4,r4,r3
   23a34:	310d883a 	add	r6,r6,r4
   23a38:	30c0022e 	bgeu	r6,r3,23a44 <__muldf3+0x378>
   23a3c:	00c00074 	movhi	r3,1
   23a40:	70dd883a 	add	r14,r14,r3
   23a44:	8826d43a 	srli	r19,r17,16
   23a48:	8bffffcc 	andi	r15,r17,65535
   23a4c:	7d23383a 	mul	r17,r15,r20
   23a50:	7949383a 	mul	r4,r15,r5
   23a54:	9d29383a 	mul	r20,r19,r20
   23a58:	8814d43a 	srli	r10,r17,16
   23a5c:	3012943a 	slli	r9,r6,16
   23a60:	a129883a 	add	r20,r20,r4
   23a64:	633fffcc 	andi	r12,r12,65535
   23a68:	5515883a 	add	r10,r10,r20
   23a6c:	3006d43a 	srli	r3,r6,16
   23a70:	4b13883a 	add	r9,r9,r12
   23a74:	2ccb383a 	mul	r5,r5,r19
   23a78:	5100022e 	bgeu	r10,r4,23a84 <__muldf3+0x3b8>
   23a7c:	01000074 	movhi	r4,1
   23a80:	290b883a 	add	r5,r5,r4
   23a84:	802ad43a 	srli	r21,r16,16
   23a88:	843fffcc 	andi	r16,r16,65535
   23a8c:	440d383a 	mul	r6,r8,r16
   23a90:	4565383a 	mul	r18,r8,r21
   23a94:	8349383a 	mul	r4,r16,r13
   23a98:	500e943a 	slli	r7,r10,16
   23a9c:	3010d43a 	srli	r8,r6,16
   23aa0:	5028d43a 	srli	r20,r10,16
   23aa4:	2489883a 	add	r4,r4,r18
   23aa8:	8abfffcc 	andi	r10,r17,65535
   23aac:	3a95883a 	add	r10,r7,r10
   23ab0:	4119883a 	add	r12,r8,r4
   23ab4:	a169883a 	add	r20,r20,r5
   23ab8:	1a87883a 	add	r3,r3,r10
   23abc:	6d5b383a 	mul	r13,r13,r21
   23ac0:	6480022e 	bgeu	r12,r18,23acc <__muldf3+0x400>
   23ac4:	01000074 	movhi	r4,1
   23ac8:	691b883a 	add	r13,r13,r4
   23acc:	7c25383a 	mul	r18,r15,r16
   23ad0:	7d4b383a 	mul	r5,r15,r21
   23ad4:	84cf383a 	mul	r7,r16,r19
   23ad8:	901ed43a 	srli	r15,r18,16
   23adc:	6008d43a 	srli	r4,r12,16
   23ae0:	6010943a 	slli	r8,r12,16
   23ae4:	394f883a 	add	r7,r7,r5
   23ae8:	333fffcc 	andi	r12,r6,65535
   23aec:	79df883a 	add	r15,r15,r7
   23af0:	235b883a 	add	r13,r4,r13
   23af4:	9d63383a 	mul	r17,r19,r21
   23af8:	4309883a 	add	r4,r8,r12
   23afc:	7940022e 	bgeu	r15,r5,23b08 <__muldf3+0x43c>
   23b00:	01400074 	movhi	r5,1
   23b04:	8963883a 	add	r17,r17,r5
   23b08:	780a943a 	slli	r5,r15,16
   23b0c:	91bfffcc 	andi	r6,r18,65535
   23b10:	70c7883a 	add	r3,r14,r3
   23b14:	298d883a 	add	r6,r5,r6
   23b18:	1a8f803a 	cmpltu	r7,r3,r10
   23b1c:	350b883a 	add	r5,r6,r20
   23b20:	20c7883a 	add	r3,r4,r3
   23b24:	3955883a 	add	r10,r7,r5
   23b28:	1909803a 	cmpltu	r4,r3,r4
   23b2c:	6a91883a 	add	r8,r13,r10
   23b30:	780cd43a 	srli	r6,r15,16
   23b34:	2219883a 	add	r12,r4,r8
   23b38:	2d0b803a 	cmpltu	r5,r5,r20
   23b3c:	51cf803a 	cmpltu	r7,r10,r7
   23b40:	29ceb03a 	or	r7,r5,r7
   23b44:	4351803a 	cmpltu	r8,r8,r13
   23b48:	610b803a 	cmpltu	r5,r12,r4
   23b4c:	4148b03a 	or	r4,r8,r5
   23b50:	398f883a 	add	r7,r7,r6
   23b54:	3909883a 	add	r4,r7,r4
   23b58:	1810927a 	slli	r8,r3,9
   23b5c:	2449883a 	add	r4,r4,r17
   23b60:	2008927a 	slli	r4,r4,9
   23b64:	6022d5fa 	srli	r17,r12,23
   23b68:	1806d5fa 	srli	r3,r3,23
   23b6c:	4252b03a 	or	r9,r8,r9
   23b70:	600a927a 	slli	r5,r12,9
   23b74:	4810c03a 	cmpne	r8,r9,zero
   23b78:	2462b03a 	or	r17,r4,r17
   23b7c:	40c6b03a 	or	r3,r8,r3
   23b80:	8900402c 	andhi	r4,r17,256
   23b84:	1950b03a 	or	r8,r3,r5
   23b88:	20000726 	beq	r4,zero,23ba8 <__muldf3+0x4dc>
   23b8c:	4006d07a 	srli	r3,r8,1
   23b90:	880497fa 	slli	r2,r17,31
   23b94:	4200004c 	andi	r8,r8,1
   23b98:	8822d07a 	srli	r17,r17,1
   23b9c:	1a10b03a 	or	r8,r3,r8
   23ba0:	1210b03a 	or	r8,r2,r8
   23ba4:	5805883a 	mov	r2,r11
   23ba8:	1140ffc4 	addi	r5,r2,1023
   23bac:	0140440e 	bge	zero,r5,23cc0 <__muldf3+0x5f4>
   23bb0:	40c001cc 	andi	r3,r8,7
   23bb4:	18000726 	beq	r3,zero,23bd4 <__muldf3+0x508>
   23bb8:	40c003cc 	andi	r3,r8,15
   23bbc:	01000104 	movi	r4,4
   23bc0:	19000426 	beq	r3,r4,23bd4 <__muldf3+0x508>
   23bc4:	4107883a 	add	r3,r8,r4
   23bc8:	1a11803a 	cmpltu	r8,r3,r8
   23bcc:	8a23883a 	add	r17,r17,r8
   23bd0:	1811883a 	mov	r8,r3
   23bd4:	88c0402c 	andhi	r3,r17,256
   23bd8:	18000426 	beq	r3,zero,23bec <__muldf3+0x520>
   23bdc:	11410004 	addi	r5,r2,1024
   23be0:	00bfc034 	movhi	r2,65280
   23be4:	10bfffc4 	addi	r2,r2,-1
   23be8:	88a2703a 	and	r17,r17,r2
   23bec:	0081ff84 	movi	r2,2046
   23bf0:	117f6416 	blt	r2,r5,23984 <__alt_data_end+0xfffe3984>
   23bf4:	8828977a 	slli	r20,r17,29
   23bf8:	4010d0fa 	srli	r8,r8,3
   23bfc:	8822927a 	slli	r17,r17,9
   23c00:	2881ffcc 	andi	r2,r5,2047
   23c04:	a228b03a 	or	r20,r20,r8
   23c08:	880ad33a 	srli	r5,r17,12
   23c0c:	b02b883a 	mov	r21,r22
   23c10:	003f0d06 	br	23848 <__alt_data_end+0xfffe3848>
   23c14:	8080022c 	andhi	r2,r16,8
   23c18:	10000926 	beq	r2,zero,23c40 <__muldf3+0x574>
   23c1c:	8880022c 	andhi	r2,r17,8
   23c20:	1000071e 	bne	r2,zero,23c40 <__muldf3+0x574>
   23c24:	00800434 	movhi	r2,16
   23c28:	89400234 	orhi	r5,r17,8
   23c2c:	10bfffc4 	addi	r2,r2,-1
   23c30:	b82b883a 	mov	r21,r23
   23c34:	288a703a 	and	r5,r5,r2
   23c38:	4029883a 	mov	r20,r8
   23c3c:	003f6806 	br	239e0 <__alt_data_end+0xfffe39e0>
   23c40:	00800434 	movhi	r2,16
   23c44:	81400234 	orhi	r5,r16,8
   23c48:	10bfffc4 	addi	r2,r2,-1
   23c4c:	288a703a 	and	r5,r5,r2
   23c50:	003f6306 	br	239e0 <__alt_data_end+0xfffe39e0>
   23c54:	147ff604 	addi	r17,r2,-40
   23c58:	3462983a 	sll	r17,r6,r17
   23c5c:	0011883a 	mov	r8,zero
   23c60:	003f4406 	br	23974 <__alt_data_end+0xfffe3974>
   23c64:	3009883a 	mov	r4,r6
   23c68:	d9800215 	stw	r6,8(sp)
   23c6c:	da400115 	stw	r9,4(sp)
   23c70:	da800015 	stw	r10,0(sp)
   23c74:	002483c0 	call	2483c <__clzsi2>
   23c78:	10800804 	addi	r2,r2,32
   23c7c:	da800017 	ldw	r10,0(sp)
   23c80:	da400117 	ldw	r9,4(sp)
   23c84:	d9800217 	ldw	r6,8(sp)
   23c88:	003f3006 	br	2394c <__alt_data_end+0xfffe394c>
   23c8c:	143ff604 	addi	r16,r2,-40
   23c90:	9c20983a 	sll	r16,r19,r16
   23c94:	0029883a 	mov	r20,zero
   23c98:	003f1606 	br	238f4 <__alt_data_end+0xfffe38f4>
   23c9c:	d9800215 	stw	r6,8(sp)
   23ca0:	d9c00015 	stw	r7,0(sp)
   23ca4:	da400115 	stw	r9,4(sp)
   23ca8:	002483c0 	call	2483c <__clzsi2>
   23cac:	10800804 	addi	r2,r2,32
   23cb0:	da400117 	ldw	r9,4(sp)
   23cb4:	d9c00017 	ldw	r7,0(sp)
   23cb8:	d9800217 	ldw	r6,8(sp)
   23cbc:	003f0306 	br	238cc <__alt_data_end+0xfffe38cc>
   23cc0:	00c00044 	movi	r3,1
   23cc4:	1947c83a 	sub	r3,r3,r5
   23cc8:	00800e04 	movi	r2,56
   23ccc:	10feda16 	blt	r2,r3,23838 <__alt_data_end+0xfffe3838>
   23cd0:	008007c4 	movi	r2,31
   23cd4:	10c01b16 	blt	r2,r3,23d44 <__muldf3+0x678>
   23cd8:	00800804 	movi	r2,32
   23cdc:	10c5c83a 	sub	r2,r2,r3
   23ce0:	888a983a 	sll	r5,r17,r2
   23ce4:	40c8d83a 	srl	r4,r8,r3
   23ce8:	4084983a 	sll	r2,r8,r2
   23cec:	88e2d83a 	srl	r17,r17,r3
   23cf0:	2906b03a 	or	r3,r5,r4
   23cf4:	1004c03a 	cmpne	r2,r2,zero
   23cf8:	1886b03a 	or	r3,r3,r2
   23cfc:	188001cc 	andi	r2,r3,7
   23d00:	10000726 	beq	r2,zero,23d20 <__muldf3+0x654>
   23d04:	188003cc 	andi	r2,r3,15
   23d08:	01000104 	movi	r4,4
   23d0c:	11000426 	beq	r2,r4,23d20 <__muldf3+0x654>
   23d10:	1805883a 	mov	r2,r3
   23d14:	10c00104 	addi	r3,r2,4
   23d18:	1885803a 	cmpltu	r2,r3,r2
   23d1c:	88a3883a 	add	r17,r17,r2
   23d20:	8880202c 	andhi	r2,r17,128
   23d24:	10001c26 	beq	r2,zero,23d98 <__muldf3+0x6cc>
   23d28:	b02b883a 	mov	r21,r22
   23d2c:	00800044 	movi	r2,1
   23d30:	000b883a 	mov	r5,zero
   23d34:	0029883a 	mov	r20,zero
   23d38:	003ec306 	br	23848 <__alt_data_end+0xfffe3848>
   23d3c:	5805883a 	mov	r2,r11
   23d40:	003f9906 	br	23ba8 <__alt_data_end+0xfffe3ba8>
   23d44:	00bff844 	movi	r2,-31
   23d48:	1145c83a 	sub	r2,r2,r5
   23d4c:	8888d83a 	srl	r4,r17,r2
   23d50:	00800804 	movi	r2,32
   23d54:	18801a26 	beq	r3,r2,23dc0 <__muldf3+0x6f4>
   23d58:	00801004 	movi	r2,64
   23d5c:	10c5c83a 	sub	r2,r2,r3
   23d60:	8884983a 	sll	r2,r17,r2
   23d64:	1204b03a 	or	r2,r2,r8
   23d68:	1004c03a 	cmpne	r2,r2,zero
   23d6c:	2084b03a 	or	r2,r4,r2
   23d70:	144001cc 	andi	r17,r2,7
   23d74:	88000d1e 	bne	r17,zero,23dac <__muldf3+0x6e0>
   23d78:	000b883a 	mov	r5,zero
   23d7c:	1028d0fa 	srli	r20,r2,3
   23d80:	b02b883a 	mov	r21,r22
   23d84:	0005883a 	mov	r2,zero
   23d88:	a468b03a 	or	r20,r20,r17
   23d8c:	003eae06 	br	23848 <__alt_data_end+0xfffe3848>
   23d90:	1007883a 	mov	r3,r2
   23d94:	0023883a 	mov	r17,zero
   23d98:	880a927a 	slli	r5,r17,9
   23d9c:	1805883a 	mov	r2,r3
   23da0:	8822977a 	slli	r17,r17,29
   23da4:	280ad33a 	srli	r5,r5,12
   23da8:	003ff406 	br	23d7c <__alt_data_end+0xfffe3d7c>
   23dac:	10c003cc 	andi	r3,r2,15
   23db0:	01000104 	movi	r4,4
   23db4:	193ff626 	beq	r3,r4,23d90 <__alt_data_end+0xfffe3d90>
   23db8:	0023883a 	mov	r17,zero
   23dbc:	003fd506 	br	23d14 <__alt_data_end+0xfffe3d14>
   23dc0:	0005883a 	mov	r2,zero
   23dc4:	003fe706 	br	23d64 <__alt_data_end+0xfffe3d64>
   23dc8:	00800434 	movhi	r2,16
   23dcc:	89400234 	orhi	r5,r17,8
   23dd0:	10bfffc4 	addi	r2,r2,-1
   23dd4:	b02b883a 	mov	r21,r22
   23dd8:	288a703a 	and	r5,r5,r2
   23ddc:	4029883a 	mov	r20,r8
   23de0:	003eff06 	br	239e0 <__alt_data_end+0xfffe39e0>

00023de4 <__subdf3>:
   23de4:	02000434 	movhi	r8,16
   23de8:	423fffc4 	addi	r8,r8,-1
   23dec:	defffb04 	addi	sp,sp,-20
   23df0:	2a14703a 	and	r10,r5,r8
   23df4:	3812d53a 	srli	r9,r7,20
   23df8:	3a10703a 	and	r8,r7,r8
   23dfc:	2006d77a 	srli	r3,r4,29
   23e00:	3004d77a 	srli	r2,r6,29
   23e04:	dc000015 	stw	r16,0(sp)
   23e08:	501490fa 	slli	r10,r10,3
   23e0c:	2820d53a 	srli	r16,r5,20
   23e10:	401090fa 	slli	r8,r8,3
   23e14:	dc800215 	stw	r18,8(sp)
   23e18:	dc400115 	stw	r17,4(sp)
   23e1c:	dfc00415 	stw	ra,16(sp)
   23e20:	202290fa 	slli	r17,r4,3
   23e24:	dcc00315 	stw	r19,12(sp)
   23e28:	4a41ffcc 	andi	r9,r9,2047
   23e2c:	0101ffc4 	movi	r4,2047
   23e30:	2824d7fa 	srli	r18,r5,31
   23e34:	8401ffcc 	andi	r16,r16,2047
   23e38:	50c6b03a 	or	r3,r10,r3
   23e3c:	380ed7fa 	srli	r7,r7,31
   23e40:	408ab03a 	or	r5,r8,r2
   23e44:	300c90fa 	slli	r6,r6,3
   23e48:	49009626 	beq	r9,r4,240a4 <__subdf3+0x2c0>
   23e4c:	39c0005c 	xori	r7,r7,1
   23e50:	8245c83a 	sub	r2,r16,r9
   23e54:	3c807426 	beq	r7,r18,24028 <__subdf3+0x244>
   23e58:	0080af0e 	bge	zero,r2,24118 <__subdf3+0x334>
   23e5c:	48002a1e 	bne	r9,zero,23f08 <__subdf3+0x124>
   23e60:	2988b03a 	or	r4,r5,r6
   23e64:	20009a1e 	bne	r4,zero,240d0 <__subdf3+0x2ec>
   23e68:	888001cc 	andi	r2,r17,7
   23e6c:	10000726 	beq	r2,zero,23e8c <__subdf3+0xa8>
   23e70:	888003cc 	andi	r2,r17,15
   23e74:	01000104 	movi	r4,4
   23e78:	11000426 	beq	r2,r4,23e8c <__subdf3+0xa8>
   23e7c:	890b883a 	add	r5,r17,r4
   23e80:	2c63803a 	cmpltu	r17,r5,r17
   23e84:	1c47883a 	add	r3,r3,r17
   23e88:	2823883a 	mov	r17,r5
   23e8c:	1880202c 	andhi	r2,r3,128
   23e90:	10005926 	beq	r2,zero,23ff8 <__subdf3+0x214>
   23e94:	84000044 	addi	r16,r16,1
   23e98:	0081ffc4 	movi	r2,2047
   23e9c:	8080be26 	beq	r16,r2,24198 <__subdf3+0x3b4>
   23ea0:	017fe034 	movhi	r5,65408
   23ea4:	297fffc4 	addi	r5,r5,-1
   23ea8:	1946703a 	and	r3,r3,r5
   23eac:	1804977a 	slli	r2,r3,29
   23eb0:	1806927a 	slli	r3,r3,9
   23eb4:	8822d0fa 	srli	r17,r17,3
   23eb8:	8401ffcc 	andi	r16,r16,2047
   23ebc:	180ad33a 	srli	r5,r3,12
   23ec0:	9100004c 	andi	r4,r18,1
   23ec4:	1444b03a 	or	r2,r2,r17
   23ec8:	80c1ffcc 	andi	r3,r16,2047
   23ecc:	1820953a 	slli	r16,r3,20
   23ed0:	20c03fcc 	andi	r3,r4,255
   23ed4:	180897fa 	slli	r4,r3,31
   23ed8:	00c00434 	movhi	r3,16
   23edc:	18ffffc4 	addi	r3,r3,-1
   23ee0:	28c6703a 	and	r3,r5,r3
   23ee4:	1c06b03a 	or	r3,r3,r16
   23ee8:	1906b03a 	or	r3,r3,r4
   23eec:	dfc00417 	ldw	ra,16(sp)
   23ef0:	dcc00317 	ldw	r19,12(sp)
   23ef4:	dc800217 	ldw	r18,8(sp)
   23ef8:	dc400117 	ldw	r17,4(sp)
   23efc:	dc000017 	ldw	r16,0(sp)
   23f00:	dec00504 	addi	sp,sp,20
   23f04:	f800283a 	ret
   23f08:	0101ffc4 	movi	r4,2047
   23f0c:	813fd626 	beq	r16,r4,23e68 <__alt_data_end+0xfffe3e68>
   23f10:	29402034 	orhi	r5,r5,128
   23f14:	01000e04 	movi	r4,56
   23f18:	2080a316 	blt	r4,r2,241a8 <__subdf3+0x3c4>
   23f1c:	010007c4 	movi	r4,31
   23f20:	2080c616 	blt	r4,r2,2423c <__subdf3+0x458>
   23f24:	01000804 	movi	r4,32
   23f28:	2089c83a 	sub	r4,r4,r2
   23f2c:	2910983a 	sll	r8,r5,r4
   23f30:	308ed83a 	srl	r7,r6,r2
   23f34:	3108983a 	sll	r4,r6,r4
   23f38:	2884d83a 	srl	r2,r5,r2
   23f3c:	41ccb03a 	or	r6,r8,r7
   23f40:	2008c03a 	cmpne	r4,r4,zero
   23f44:	310cb03a 	or	r6,r6,r4
   23f48:	898dc83a 	sub	r6,r17,r6
   23f4c:	89a3803a 	cmpltu	r17,r17,r6
   23f50:	1887c83a 	sub	r3,r3,r2
   23f54:	1c47c83a 	sub	r3,r3,r17
   23f58:	3023883a 	mov	r17,r6
   23f5c:	1880202c 	andhi	r2,r3,128
   23f60:	10002326 	beq	r2,zero,23ff0 <__subdf3+0x20c>
   23f64:	04c02034 	movhi	r19,128
   23f68:	9cffffc4 	addi	r19,r19,-1
   23f6c:	1ce6703a 	and	r19,r3,r19
   23f70:	98007a26 	beq	r19,zero,2415c <__subdf3+0x378>
   23f74:	9809883a 	mov	r4,r19
   23f78:	002483c0 	call	2483c <__clzsi2>
   23f7c:	113ffe04 	addi	r4,r2,-8
   23f80:	00c007c4 	movi	r3,31
   23f84:	19007b16 	blt	r3,r4,24174 <__subdf3+0x390>
   23f88:	00800804 	movi	r2,32
   23f8c:	1105c83a 	sub	r2,r2,r4
   23f90:	8884d83a 	srl	r2,r17,r2
   23f94:	9906983a 	sll	r3,r19,r4
   23f98:	8922983a 	sll	r17,r17,r4
   23f9c:	10c4b03a 	or	r2,r2,r3
   23fa0:	24007816 	blt	r4,r16,24184 <__subdf3+0x3a0>
   23fa4:	2421c83a 	sub	r16,r4,r16
   23fa8:	80c00044 	addi	r3,r16,1
   23fac:	010007c4 	movi	r4,31
   23fb0:	20c09516 	blt	r4,r3,24208 <__subdf3+0x424>
   23fb4:	01400804 	movi	r5,32
   23fb8:	28cbc83a 	sub	r5,r5,r3
   23fbc:	88c8d83a 	srl	r4,r17,r3
   23fc0:	8962983a 	sll	r17,r17,r5
   23fc4:	114a983a 	sll	r5,r2,r5
   23fc8:	10c6d83a 	srl	r3,r2,r3
   23fcc:	8804c03a 	cmpne	r2,r17,zero
   23fd0:	290ab03a 	or	r5,r5,r4
   23fd4:	28a2b03a 	or	r17,r5,r2
   23fd8:	0021883a 	mov	r16,zero
   23fdc:	003fa206 	br	23e68 <__alt_data_end+0xfffe3e68>
   23fe0:	2090b03a 	or	r8,r4,r2
   23fe4:	40018e26 	beq	r8,zero,24620 <__subdf3+0x83c>
   23fe8:	1007883a 	mov	r3,r2
   23fec:	2023883a 	mov	r17,r4
   23ff0:	888001cc 	andi	r2,r17,7
   23ff4:	103f9e1e 	bne	r2,zero,23e70 <__alt_data_end+0xfffe3e70>
   23ff8:	1804977a 	slli	r2,r3,29
   23ffc:	8822d0fa 	srli	r17,r17,3
   24000:	1810d0fa 	srli	r8,r3,3
   24004:	9100004c 	andi	r4,r18,1
   24008:	1444b03a 	or	r2,r2,r17
   2400c:	00c1ffc4 	movi	r3,2047
   24010:	80c02826 	beq	r16,r3,240b4 <__subdf3+0x2d0>
   24014:	01400434 	movhi	r5,16
   24018:	297fffc4 	addi	r5,r5,-1
   2401c:	80e0703a 	and	r16,r16,r3
   24020:	414a703a 	and	r5,r8,r5
   24024:	003fa806 	br	23ec8 <__alt_data_end+0xfffe3ec8>
   24028:	0080630e 	bge	zero,r2,241b8 <__subdf3+0x3d4>
   2402c:	48003026 	beq	r9,zero,240f0 <__subdf3+0x30c>
   24030:	0101ffc4 	movi	r4,2047
   24034:	813f8c26 	beq	r16,r4,23e68 <__alt_data_end+0xfffe3e68>
   24038:	29402034 	orhi	r5,r5,128
   2403c:	01000e04 	movi	r4,56
   24040:	2080a90e 	bge	r4,r2,242e8 <__subdf3+0x504>
   24044:	298cb03a 	or	r6,r5,r6
   24048:	3012c03a 	cmpne	r9,r6,zero
   2404c:	0005883a 	mov	r2,zero
   24050:	4c53883a 	add	r9,r9,r17
   24054:	4c63803a 	cmpltu	r17,r9,r17
   24058:	10c7883a 	add	r3,r2,r3
   2405c:	88c7883a 	add	r3,r17,r3
   24060:	4823883a 	mov	r17,r9
   24064:	1880202c 	andhi	r2,r3,128
   24068:	1000d026 	beq	r2,zero,243ac <__subdf3+0x5c8>
   2406c:	84000044 	addi	r16,r16,1
   24070:	0081ffc4 	movi	r2,2047
   24074:	8080fe26 	beq	r16,r2,24470 <__subdf3+0x68c>
   24078:	00bfe034 	movhi	r2,65408
   2407c:	10bfffc4 	addi	r2,r2,-1
   24080:	1886703a 	and	r3,r3,r2
   24084:	880ad07a 	srli	r5,r17,1
   24088:	180497fa 	slli	r2,r3,31
   2408c:	8900004c 	andi	r4,r17,1
   24090:	2922b03a 	or	r17,r5,r4
   24094:	1806d07a 	srli	r3,r3,1
   24098:	1462b03a 	or	r17,r2,r17
   2409c:	3825883a 	mov	r18,r7
   240a0:	003f7106 	br	23e68 <__alt_data_end+0xfffe3e68>
   240a4:	2984b03a 	or	r2,r5,r6
   240a8:	103f6826 	beq	r2,zero,23e4c <__alt_data_end+0xfffe3e4c>
   240ac:	39c03fcc 	andi	r7,r7,255
   240b0:	003f6706 	br	23e50 <__alt_data_end+0xfffe3e50>
   240b4:	4086b03a 	or	r3,r8,r2
   240b8:	18015226 	beq	r3,zero,24604 <__subdf3+0x820>
   240bc:	00c00434 	movhi	r3,16
   240c0:	41400234 	orhi	r5,r8,8
   240c4:	18ffffc4 	addi	r3,r3,-1
   240c8:	28ca703a 	and	r5,r5,r3
   240cc:	003f7e06 	br	23ec8 <__alt_data_end+0xfffe3ec8>
   240d0:	10bfffc4 	addi	r2,r2,-1
   240d4:	1000491e 	bne	r2,zero,241fc <__subdf3+0x418>
   240d8:	898fc83a 	sub	r7,r17,r6
   240dc:	89e3803a 	cmpltu	r17,r17,r7
   240e0:	1947c83a 	sub	r3,r3,r5
   240e4:	1c47c83a 	sub	r3,r3,r17
   240e8:	3823883a 	mov	r17,r7
   240ec:	003f9b06 	br	23f5c <__alt_data_end+0xfffe3f5c>
   240f0:	2988b03a 	or	r4,r5,r6
   240f4:	203f5c26 	beq	r4,zero,23e68 <__alt_data_end+0xfffe3e68>
   240f8:	10bfffc4 	addi	r2,r2,-1
   240fc:	1000931e 	bne	r2,zero,2434c <__subdf3+0x568>
   24100:	898d883a 	add	r6,r17,r6
   24104:	3463803a 	cmpltu	r17,r6,r17
   24108:	1947883a 	add	r3,r3,r5
   2410c:	88c7883a 	add	r3,r17,r3
   24110:	3023883a 	mov	r17,r6
   24114:	003fd306 	br	24064 <__alt_data_end+0xfffe4064>
   24118:	1000541e 	bne	r2,zero,2426c <__subdf3+0x488>
   2411c:	80800044 	addi	r2,r16,1
   24120:	1081ffcc 	andi	r2,r2,2047
   24124:	01000044 	movi	r4,1
   24128:	2080a20e 	bge	r4,r2,243b4 <__subdf3+0x5d0>
   2412c:	8989c83a 	sub	r4,r17,r6
   24130:	8905803a 	cmpltu	r2,r17,r4
   24134:	1967c83a 	sub	r19,r3,r5
   24138:	98a7c83a 	sub	r19,r19,r2
   2413c:	9880202c 	andhi	r2,r19,128
   24140:	10006326 	beq	r2,zero,242d0 <__subdf3+0x4ec>
   24144:	3463c83a 	sub	r17,r6,r17
   24148:	28c7c83a 	sub	r3,r5,r3
   2414c:	344d803a 	cmpltu	r6,r6,r17
   24150:	19a7c83a 	sub	r19,r3,r6
   24154:	3825883a 	mov	r18,r7
   24158:	983f861e 	bne	r19,zero,23f74 <__alt_data_end+0xfffe3f74>
   2415c:	8809883a 	mov	r4,r17
   24160:	002483c0 	call	2483c <__clzsi2>
   24164:	10800804 	addi	r2,r2,32
   24168:	113ffe04 	addi	r4,r2,-8
   2416c:	00c007c4 	movi	r3,31
   24170:	193f850e 	bge	r3,r4,23f88 <__alt_data_end+0xfffe3f88>
   24174:	10bff604 	addi	r2,r2,-40
   24178:	8884983a 	sll	r2,r17,r2
   2417c:	0023883a 	mov	r17,zero
   24180:	243f880e 	bge	r4,r16,23fa4 <__alt_data_end+0xfffe3fa4>
   24184:	00ffe034 	movhi	r3,65408
   24188:	18ffffc4 	addi	r3,r3,-1
   2418c:	8121c83a 	sub	r16,r16,r4
   24190:	10c6703a 	and	r3,r2,r3
   24194:	003f3406 	br	23e68 <__alt_data_end+0xfffe3e68>
   24198:	9100004c 	andi	r4,r18,1
   2419c:	000b883a 	mov	r5,zero
   241a0:	0005883a 	mov	r2,zero
   241a4:	003f4806 	br	23ec8 <__alt_data_end+0xfffe3ec8>
   241a8:	298cb03a 	or	r6,r5,r6
   241ac:	300cc03a 	cmpne	r6,r6,zero
   241b0:	0005883a 	mov	r2,zero
   241b4:	003f6406 	br	23f48 <__alt_data_end+0xfffe3f48>
   241b8:	10009a1e 	bne	r2,zero,24424 <__subdf3+0x640>
   241bc:	82400044 	addi	r9,r16,1
   241c0:	4881ffcc 	andi	r2,r9,2047
   241c4:	02800044 	movi	r10,1
   241c8:	5080670e 	bge	r10,r2,24368 <__subdf3+0x584>
   241cc:	0081ffc4 	movi	r2,2047
   241d0:	4880af26 	beq	r9,r2,24490 <__subdf3+0x6ac>
   241d4:	898d883a 	add	r6,r17,r6
   241d8:	1945883a 	add	r2,r3,r5
   241dc:	3447803a 	cmpltu	r3,r6,r17
   241e0:	1887883a 	add	r3,r3,r2
   241e4:	182297fa 	slli	r17,r3,31
   241e8:	300cd07a 	srli	r6,r6,1
   241ec:	1806d07a 	srli	r3,r3,1
   241f0:	4821883a 	mov	r16,r9
   241f4:	89a2b03a 	or	r17,r17,r6
   241f8:	003f1b06 	br	23e68 <__alt_data_end+0xfffe3e68>
   241fc:	0101ffc4 	movi	r4,2047
   24200:	813f441e 	bne	r16,r4,23f14 <__alt_data_end+0xfffe3f14>
   24204:	003f1806 	br	23e68 <__alt_data_end+0xfffe3e68>
   24208:	843ff844 	addi	r16,r16,-31
   2420c:	01400804 	movi	r5,32
   24210:	1408d83a 	srl	r4,r2,r16
   24214:	19405026 	beq	r3,r5,24358 <__subdf3+0x574>
   24218:	01401004 	movi	r5,64
   2421c:	28c7c83a 	sub	r3,r5,r3
   24220:	10c4983a 	sll	r2,r2,r3
   24224:	88a2b03a 	or	r17,r17,r2
   24228:	8822c03a 	cmpne	r17,r17,zero
   2422c:	2462b03a 	or	r17,r4,r17
   24230:	0007883a 	mov	r3,zero
   24234:	0021883a 	mov	r16,zero
   24238:	003f6d06 	br	23ff0 <__alt_data_end+0xfffe3ff0>
   2423c:	11fff804 	addi	r7,r2,-32
   24240:	01000804 	movi	r4,32
   24244:	29ced83a 	srl	r7,r5,r7
   24248:	11004526 	beq	r2,r4,24360 <__subdf3+0x57c>
   2424c:	01001004 	movi	r4,64
   24250:	2089c83a 	sub	r4,r4,r2
   24254:	2904983a 	sll	r2,r5,r4
   24258:	118cb03a 	or	r6,r2,r6
   2425c:	300cc03a 	cmpne	r6,r6,zero
   24260:	398cb03a 	or	r6,r7,r6
   24264:	0005883a 	mov	r2,zero
   24268:	003f3706 	br	23f48 <__alt_data_end+0xfffe3f48>
   2426c:	80002a26 	beq	r16,zero,24318 <__subdf3+0x534>
   24270:	0101ffc4 	movi	r4,2047
   24274:	49006626 	beq	r9,r4,24410 <__subdf3+0x62c>
   24278:	0085c83a 	sub	r2,zero,r2
   2427c:	18c02034 	orhi	r3,r3,128
   24280:	01000e04 	movi	r4,56
   24284:	20807e16 	blt	r4,r2,24480 <__subdf3+0x69c>
   24288:	010007c4 	movi	r4,31
   2428c:	2080e716 	blt	r4,r2,2462c <__subdf3+0x848>
   24290:	01000804 	movi	r4,32
   24294:	2089c83a 	sub	r4,r4,r2
   24298:	1914983a 	sll	r10,r3,r4
   2429c:	8890d83a 	srl	r8,r17,r2
   242a0:	8908983a 	sll	r4,r17,r4
   242a4:	1884d83a 	srl	r2,r3,r2
   242a8:	5222b03a 	or	r17,r10,r8
   242ac:	2006c03a 	cmpne	r3,r4,zero
   242b0:	88e2b03a 	or	r17,r17,r3
   242b4:	3463c83a 	sub	r17,r6,r17
   242b8:	2885c83a 	sub	r2,r5,r2
   242bc:	344d803a 	cmpltu	r6,r6,r17
   242c0:	1187c83a 	sub	r3,r2,r6
   242c4:	4821883a 	mov	r16,r9
   242c8:	3825883a 	mov	r18,r7
   242cc:	003f2306 	br	23f5c <__alt_data_end+0xfffe3f5c>
   242d0:	24d0b03a 	or	r8,r4,r19
   242d4:	40001b1e 	bne	r8,zero,24344 <__subdf3+0x560>
   242d8:	0005883a 	mov	r2,zero
   242dc:	0009883a 	mov	r4,zero
   242e0:	0021883a 	mov	r16,zero
   242e4:	003f4906 	br	2400c <__alt_data_end+0xfffe400c>
   242e8:	010007c4 	movi	r4,31
   242ec:	20803a16 	blt	r4,r2,243d8 <__subdf3+0x5f4>
   242f0:	01000804 	movi	r4,32
   242f4:	2089c83a 	sub	r4,r4,r2
   242f8:	2912983a 	sll	r9,r5,r4
   242fc:	3090d83a 	srl	r8,r6,r2
   24300:	3108983a 	sll	r4,r6,r4
   24304:	2884d83a 	srl	r2,r5,r2
   24308:	4a12b03a 	or	r9,r9,r8
   2430c:	2008c03a 	cmpne	r4,r4,zero
   24310:	4912b03a 	or	r9,r9,r4
   24314:	003f4e06 	br	24050 <__alt_data_end+0xfffe4050>
   24318:	1c48b03a 	or	r4,r3,r17
   2431c:	20003c26 	beq	r4,zero,24410 <__subdf3+0x62c>
   24320:	0084303a 	nor	r2,zero,r2
   24324:	1000381e 	bne	r2,zero,24408 <__subdf3+0x624>
   24328:	3463c83a 	sub	r17,r6,r17
   2432c:	28c5c83a 	sub	r2,r5,r3
   24330:	344d803a 	cmpltu	r6,r6,r17
   24334:	1187c83a 	sub	r3,r2,r6
   24338:	4821883a 	mov	r16,r9
   2433c:	3825883a 	mov	r18,r7
   24340:	003f0606 	br	23f5c <__alt_data_end+0xfffe3f5c>
   24344:	2023883a 	mov	r17,r4
   24348:	003f0906 	br	23f70 <__alt_data_end+0xfffe3f70>
   2434c:	0101ffc4 	movi	r4,2047
   24350:	813f3a1e 	bne	r16,r4,2403c <__alt_data_end+0xfffe403c>
   24354:	003ec406 	br	23e68 <__alt_data_end+0xfffe3e68>
   24358:	0005883a 	mov	r2,zero
   2435c:	003fb106 	br	24224 <__alt_data_end+0xfffe4224>
   24360:	0005883a 	mov	r2,zero
   24364:	003fbc06 	br	24258 <__alt_data_end+0xfffe4258>
   24368:	1c44b03a 	or	r2,r3,r17
   2436c:	80008e1e 	bne	r16,zero,245a8 <__subdf3+0x7c4>
   24370:	1000c826 	beq	r2,zero,24694 <__subdf3+0x8b0>
   24374:	2984b03a 	or	r2,r5,r6
   24378:	103ebb26 	beq	r2,zero,23e68 <__alt_data_end+0xfffe3e68>
   2437c:	8989883a 	add	r4,r17,r6
   24380:	1945883a 	add	r2,r3,r5
   24384:	2447803a 	cmpltu	r3,r4,r17
   24388:	1887883a 	add	r3,r3,r2
   2438c:	1880202c 	andhi	r2,r3,128
   24390:	2023883a 	mov	r17,r4
   24394:	103f1626 	beq	r2,zero,23ff0 <__alt_data_end+0xfffe3ff0>
   24398:	00bfe034 	movhi	r2,65408
   2439c:	10bfffc4 	addi	r2,r2,-1
   243a0:	5021883a 	mov	r16,r10
   243a4:	1886703a 	and	r3,r3,r2
   243a8:	003eaf06 	br	23e68 <__alt_data_end+0xfffe3e68>
   243ac:	3825883a 	mov	r18,r7
   243b0:	003f0f06 	br	23ff0 <__alt_data_end+0xfffe3ff0>
   243b4:	1c44b03a 	or	r2,r3,r17
   243b8:	8000251e 	bne	r16,zero,24450 <__subdf3+0x66c>
   243bc:	1000661e 	bne	r2,zero,24558 <__subdf3+0x774>
   243c0:	2990b03a 	or	r8,r5,r6
   243c4:	40009626 	beq	r8,zero,24620 <__subdf3+0x83c>
   243c8:	2807883a 	mov	r3,r5
   243cc:	3023883a 	mov	r17,r6
   243d0:	3825883a 	mov	r18,r7
   243d4:	003ea406 	br	23e68 <__alt_data_end+0xfffe3e68>
   243d8:	127ff804 	addi	r9,r2,-32
   243dc:	01000804 	movi	r4,32
   243e0:	2a52d83a 	srl	r9,r5,r9
   243e4:	11008c26 	beq	r2,r4,24618 <__subdf3+0x834>
   243e8:	01001004 	movi	r4,64
   243ec:	2085c83a 	sub	r2,r4,r2
   243f0:	2884983a 	sll	r2,r5,r2
   243f4:	118cb03a 	or	r6,r2,r6
   243f8:	300cc03a 	cmpne	r6,r6,zero
   243fc:	4992b03a 	or	r9,r9,r6
   24400:	0005883a 	mov	r2,zero
   24404:	003f1206 	br	24050 <__alt_data_end+0xfffe4050>
   24408:	0101ffc4 	movi	r4,2047
   2440c:	493f9c1e 	bne	r9,r4,24280 <__alt_data_end+0xfffe4280>
   24410:	2807883a 	mov	r3,r5
   24414:	3023883a 	mov	r17,r6
   24418:	4821883a 	mov	r16,r9
   2441c:	3825883a 	mov	r18,r7
   24420:	003e9106 	br	23e68 <__alt_data_end+0xfffe3e68>
   24424:	80001f1e 	bne	r16,zero,244a4 <__subdf3+0x6c0>
   24428:	1c48b03a 	or	r4,r3,r17
   2442c:	20005a26 	beq	r4,zero,24598 <__subdf3+0x7b4>
   24430:	0084303a 	nor	r2,zero,r2
   24434:	1000561e 	bne	r2,zero,24590 <__subdf3+0x7ac>
   24438:	89a3883a 	add	r17,r17,r6
   2443c:	1945883a 	add	r2,r3,r5
   24440:	898d803a 	cmpltu	r6,r17,r6
   24444:	3087883a 	add	r3,r6,r2
   24448:	4821883a 	mov	r16,r9
   2444c:	003f0506 	br	24064 <__alt_data_end+0xfffe4064>
   24450:	10002b1e 	bne	r2,zero,24500 <__subdf3+0x71c>
   24454:	2984b03a 	or	r2,r5,r6
   24458:	10008026 	beq	r2,zero,2465c <__subdf3+0x878>
   2445c:	2807883a 	mov	r3,r5
   24460:	3023883a 	mov	r17,r6
   24464:	3825883a 	mov	r18,r7
   24468:	0401ffc4 	movi	r16,2047
   2446c:	003e7e06 	br	23e68 <__alt_data_end+0xfffe3e68>
   24470:	3809883a 	mov	r4,r7
   24474:	0011883a 	mov	r8,zero
   24478:	0005883a 	mov	r2,zero
   2447c:	003ee306 	br	2400c <__alt_data_end+0xfffe400c>
   24480:	1c62b03a 	or	r17,r3,r17
   24484:	8822c03a 	cmpne	r17,r17,zero
   24488:	0005883a 	mov	r2,zero
   2448c:	003f8906 	br	242b4 <__alt_data_end+0xfffe42b4>
   24490:	3809883a 	mov	r4,r7
   24494:	4821883a 	mov	r16,r9
   24498:	0011883a 	mov	r8,zero
   2449c:	0005883a 	mov	r2,zero
   244a0:	003eda06 	br	2400c <__alt_data_end+0xfffe400c>
   244a4:	0101ffc4 	movi	r4,2047
   244a8:	49003b26 	beq	r9,r4,24598 <__subdf3+0x7b4>
   244ac:	0085c83a 	sub	r2,zero,r2
   244b0:	18c02034 	orhi	r3,r3,128
   244b4:	01000e04 	movi	r4,56
   244b8:	20806e16 	blt	r4,r2,24674 <__subdf3+0x890>
   244bc:	010007c4 	movi	r4,31
   244c0:	20807716 	blt	r4,r2,246a0 <__subdf3+0x8bc>
   244c4:	01000804 	movi	r4,32
   244c8:	2089c83a 	sub	r4,r4,r2
   244cc:	1914983a 	sll	r10,r3,r4
   244d0:	8890d83a 	srl	r8,r17,r2
   244d4:	8908983a 	sll	r4,r17,r4
   244d8:	1884d83a 	srl	r2,r3,r2
   244dc:	5222b03a 	or	r17,r10,r8
   244e0:	2006c03a 	cmpne	r3,r4,zero
   244e4:	88e2b03a 	or	r17,r17,r3
   244e8:	89a3883a 	add	r17,r17,r6
   244ec:	1145883a 	add	r2,r2,r5
   244f0:	898d803a 	cmpltu	r6,r17,r6
   244f4:	3087883a 	add	r3,r6,r2
   244f8:	4821883a 	mov	r16,r9
   244fc:	003ed906 	br	24064 <__alt_data_end+0xfffe4064>
   24500:	2984b03a 	or	r2,r5,r6
   24504:	10004226 	beq	r2,zero,24610 <__subdf3+0x82c>
   24508:	1808d0fa 	srli	r4,r3,3
   2450c:	8822d0fa 	srli	r17,r17,3
   24510:	1806977a 	slli	r3,r3,29
   24514:	2080022c 	andhi	r2,r4,8
   24518:	1c62b03a 	or	r17,r3,r17
   2451c:	10000826 	beq	r2,zero,24540 <__subdf3+0x75c>
   24520:	2812d0fa 	srli	r9,r5,3
   24524:	4880022c 	andhi	r2,r9,8
   24528:	1000051e 	bne	r2,zero,24540 <__subdf3+0x75c>
   2452c:	300cd0fa 	srli	r6,r6,3
   24530:	2804977a 	slli	r2,r5,29
   24534:	4809883a 	mov	r4,r9
   24538:	3825883a 	mov	r18,r7
   2453c:	11a2b03a 	or	r17,r2,r6
   24540:	8806d77a 	srli	r3,r17,29
   24544:	200890fa 	slli	r4,r4,3
   24548:	882290fa 	slli	r17,r17,3
   2454c:	0401ffc4 	movi	r16,2047
   24550:	1906b03a 	or	r3,r3,r4
   24554:	003e4406 	br	23e68 <__alt_data_end+0xfffe3e68>
   24558:	2984b03a 	or	r2,r5,r6
   2455c:	103e4226 	beq	r2,zero,23e68 <__alt_data_end+0xfffe3e68>
   24560:	8989c83a 	sub	r4,r17,r6
   24564:	8911803a 	cmpltu	r8,r17,r4
   24568:	1945c83a 	sub	r2,r3,r5
   2456c:	1205c83a 	sub	r2,r2,r8
   24570:	1200202c 	andhi	r8,r2,128
   24574:	403e9a26 	beq	r8,zero,23fe0 <__alt_data_end+0xfffe3fe0>
   24578:	3463c83a 	sub	r17,r6,r17
   2457c:	28c5c83a 	sub	r2,r5,r3
   24580:	344d803a 	cmpltu	r6,r6,r17
   24584:	1187c83a 	sub	r3,r2,r6
   24588:	3825883a 	mov	r18,r7
   2458c:	003e3606 	br	23e68 <__alt_data_end+0xfffe3e68>
   24590:	0101ffc4 	movi	r4,2047
   24594:	493fc71e 	bne	r9,r4,244b4 <__alt_data_end+0xfffe44b4>
   24598:	2807883a 	mov	r3,r5
   2459c:	3023883a 	mov	r17,r6
   245a0:	4821883a 	mov	r16,r9
   245a4:	003e3006 	br	23e68 <__alt_data_end+0xfffe3e68>
   245a8:	10003626 	beq	r2,zero,24684 <__subdf3+0x8a0>
   245ac:	2984b03a 	or	r2,r5,r6
   245b0:	10001726 	beq	r2,zero,24610 <__subdf3+0x82c>
   245b4:	1808d0fa 	srli	r4,r3,3
   245b8:	8822d0fa 	srli	r17,r17,3
   245bc:	1806977a 	slli	r3,r3,29
   245c0:	2080022c 	andhi	r2,r4,8
   245c4:	1c62b03a 	or	r17,r3,r17
   245c8:	10000726 	beq	r2,zero,245e8 <__subdf3+0x804>
   245cc:	2812d0fa 	srli	r9,r5,3
   245d0:	4880022c 	andhi	r2,r9,8
   245d4:	1000041e 	bne	r2,zero,245e8 <__subdf3+0x804>
   245d8:	300cd0fa 	srli	r6,r6,3
   245dc:	2804977a 	slli	r2,r5,29
   245e0:	4809883a 	mov	r4,r9
   245e4:	11a2b03a 	or	r17,r2,r6
   245e8:	8806d77a 	srli	r3,r17,29
   245ec:	200890fa 	slli	r4,r4,3
   245f0:	882290fa 	slli	r17,r17,3
   245f4:	3825883a 	mov	r18,r7
   245f8:	1906b03a 	or	r3,r3,r4
   245fc:	0401ffc4 	movi	r16,2047
   24600:	003e1906 	br	23e68 <__alt_data_end+0xfffe3e68>
   24604:	000b883a 	mov	r5,zero
   24608:	0005883a 	mov	r2,zero
   2460c:	003e2e06 	br	23ec8 <__alt_data_end+0xfffe3ec8>
   24610:	0401ffc4 	movi	r16,2047
   24614:	003e1406 	br	23e68 <__alt_data_end+0xfffe3e68>
   24618:	0005883a 	mov	r2,zero
   2461c:	003f7506 	br	243f4 <__alt_data_end+0xfffe43f4>
   24620:	0005883a 	mov	r2,zero
   24624:	0009883a 	mov	r4,zero
   24628:	003e7806 	br	2400c <__alt_data_end+0xfffe400c>
   2462c:	123ff804 	addi	r8,r2,-32
   24630:	01000804 	movi	r4,32
   24634:	1a10d83a 	srl	r8,r3,r8
   24638:	11002526 	beq	r2,r4,246d0 <__subdf3+0x8ec>
   2463c:	01001004 	movi	r4,64
   24640:	2085c83a 	sub	r2,r4,r2
   24644:	1884983a 	sll	r2,r3,r2
   24648:	1444b03a 	or	r2,r2,r17
   2464c:	1004c03a 	cmpne	r2,r2,zero
   24650:	40a2b03a 	or	r17,r8,r2
   24654:	0005883a 	mov	r2,zero
   24658:	003f1606 	br	242b4 <__alt_data_end+0xfffe42b4>
   2465c:	02000434 	movhi	r8,16
   24660:	0009883a 	mov	r4,zero
   24664:	423fffc4 	addi	r8,r8,-1
   24668:	00bfffc4 	movi	r2,-1
   2466c:	0401ffc4 	movi	r16,2047
   24670:	003e6606 	br	2400c <__alt_data_end+0xfffe400c>
   24674:	1c62b03a 	or	r17,r3,r17
   24678:	8822c03a 	cmpne	r17,r17,zero
   2467c:	0005883a 	mov	r2,zero
   24680:	003f9906 	br	244e8 <__alt_data_end+0xfffe44e8>
   24684:	2807883a 	mov	r3,r5
   24688:	3023883a 	mov	r17,r6
   2468c:	0401ffc4 	movi	r16,2047
   24690:	003df506 	br	23e68 <__alt_data_end+0xfffe3e68>
   24694:	2807883a 	mov	r3,r5
   24698:	3023883a 	mov	r17,r6
   2469c:	003df206 	br	23e68 <__alt_data_end+0xfffe3e68>
   246a0:	123ff804 	addi	r8,r2,-32
   246a4:	01000804 	movi	r4,32
   246a8:	1a10d83a 	srl	r8,r3,r8
   246ac:	11000a26 	beq	r2,r4,246d8 <__subdf3+0x8f4>
   246b0:	01001004 	movi	r4,64
   246b4:	2085c83a 	sub	r2,r4,r2
   246b8:	1884983a 	sll	r2,r3,r2
   246bc:	1444b03a 	or	r2,r2,r17
   246c0:	1004c03a 	cmpne	r2,r2,zero
   246c4:	40a2b03a 	or	r17,r8,r2
   246c8:	0005883a 	mov	r2,zero
   246cc:	003f8606 	br	244e8 <__alt_data_end+0xfffe44e8>
   246d0:	0005883a 	mov	r2,zero
   246d4:	003fdc06 	br	24648 <__alt_data_end+0xfffe4648>
   246d8:	0005883a 	mov	r2,zero
   246dc:	003ff706 	br	246bc <__alt_data_end+0xfffe46bc>

000246e0 <__fixdfsi>:
   246e0:	280cd53a 	srli	r6,r5,20
   246e4:	00c00434 	movhi	r3,16
   246e8:	18ffffc4 	addi	r3,r3,-1
   246ec:	3181ffcc 	andi	r6,r6,2047
   246f0:	01c0ff84 	movi	r7,1022
   246f4:	28c6703a 	and	r3,r5,r3
   246f8:	280ad7fa 	srli	r5,r5,31
   246fc:	3980120e 	bge	r7,r6,24748 <__fixdfsi+0x68>
   24700:	00810744 	movi	r2,1053
   24704:	11800c16 	blt	r2,r6,24738 <__fixdfsi+0x58>
   24708:	00810cc4 	movi	r2,1075
   2470c:	1185c83a 	sub	r2,r2,r6
   24710:	01c007c4 	movi	r7,31
   24714:	18c00434 	orhi	r3,r3,16
   24718:	38800d16 	blt	r7,r2,24750 <__fixdfsi+0x70>
   2471c:	31befb44 	addi	r6,r6,-1043
   24720:	2084d83a 	srl	r2,r4,r2
   24724:	1986983a 	sll	r3,r3,r6
   24728:	1884b03a 	or	r2,r3,r2
   2472c:	28000726 	beq	r5,zero,2474c <__fixdfsi+0x6c>
   24730:	0085c83a 	sub	r2,zero,r2
   24734:	f800283a 	ret
   24738:	00a00034 	movhi	r2,32768
   2473c:	10bfffc4 	addi	r2,r2,-1
   24740:	2885883a 	add	r2,r5,r2
   24744:	f800283a 	ret
   24748:	0005883a 	mov	r2,zero
   2474c:	f800283a 	ret
   24750:	008104c4 	movi	r2,1043
   24754:	1185c83a 	sub	r2,r2,r6
   24758:	1884d83a 	srl	r2,r3,r2
   2475c:	003ff306 	br	2472c <__alt_data_end+0xfffe472c>

00024760 <__floatsidf>:
   24760:	defffd04 	addi	sp,sp,-12
   24764:	dfc00215 	stw	ra,8(sp)
   24768:	dc400115 	stw	r17,4(sp)
   2476c:	dc000015 	stw	r16,0(sp)
   24770:	20002b26 	beq	r4,zero,24820 <__floatsidf+0xc0>
   24774:	2023883a 	mov	r17,r4
   24778:	2020d7fa 	srli	r16,r4,31
   2477c:	20002d16 	blt	r4,zero,24834 <__floatsidf+0xd4>
   24780:	8809883a 	mov	r4,r17
   24784:	002483c0 	call	2483c <__clzsi2>
   24788:	01410784 	movi	r5,1054
   2478c:	288bc83a 	sub	r5,r5,r2
   24790:	01010cc4 	movi	r4,1075
   24794:	2149c83a 	sub	r4,r4,r5
   24798:	00c007c4 	movi	r3,31
   2479c:	1900160e 	bge	r3,r4,247f8 <__floatsidf+0x98>
   247a0:	00c104c4 	movi	r3,1043
   247a4:	1947c83a 	sub	r3,r3,r5
   247a8:	88c6983a 	sll	r3,r17,r3
   247ac:	00800434 	movhi	r2,16
   247b0:	10bfffc4 	addi	r2,r2,-1
   247b4:	1886703a 	and	r3,r3,r2
   247b8:	2941ffcc 	andi	r5,r5,2047
   247bc:	800d883a 	mov	r6,r16
   247c0:	0005883a 	mov	r2,zero
   247c4:	280a953a 	slli	r5,r5,20
   247c8:	31803fcc 	andi	r6,r6,255
   247cc:	01000434 	movhi	r4,16
   247d0:	300c97fa 	slli	r6,r6,31
   247d4:	213fffc4 	addi	r4,r4,-1
   247d8:	1906703a 	and	r3,r3,r4
   247dc:	1946b03a 	or	r3,r3,r5
   247e0:	1986b03a 	or	r3,r3,r6
   247e4:	dfc00217 	ldw	ra,8(sp)
   247e8:	dc400117 	ldw	r17,4(sp)
   247ec:	dc000017 	ldw	r16,0(sp)
   247f0:	dec00304 	addi	sp,sp,12
   247f4:	f800283a 	ret
   247f8:	00c002c4 	movi	r3,11
   247fc:	1887c83a 	sub	r3,r3,r2
   24800:	88c6d83a 	srl	r3,r17,r3
   24804:	8904983a 	sll	r2,r17,r4
   24808:	01000434 	movhi	r4,16
   2480c:	213fffc4 	addi	r4,r4,-1
   24810:	2941ffcc 	andi	r5,r5,2047
   24814:	1906703a 	and	r3,r3,r4
   24818:	800d883a 	mov	r6,r16
   2481c:	003fe906 	br	247c4 <__alt_data_end+0xfffe47c4>
   24820:	000d883a 	mov	r6,zero
   24824:	000b883a 	mov	r5,zero
   24828:	0007883a 	mov	r3,zero
   2482c:	0005883a 	mov	r2,zero
   24830:	003fe406 	br	247c4 <__alt_data_end+0xfffe47c4>
   24834:	0123c83a 	sub	r17,zero,r4
   24838:	003fd106 	br	24780 <__alt_data_end+0xfffe4780>

0002483c <__clzsi2>:
   2483c:	00bfffd4 	movui	r2,65535
   24840:	11000536 	bltu	r2,r4,24858 <__clzsi2+0x1c>
   24844:	00803fc4 	movi	r2,255
   24848:	11000f36 	bltu	r2,r4,24888 <__clzsi2+0x4c>
   2484c:	00800804 	movi	r2,32
   24850:	0007883a 	mov	r3,zero
   24854:	00000506 	br	2486c <__clzsi2+0x30>
   24858:	00804034 	movhi	r2,256
   2485c:	10bfffc4 	addi	r2,r2,-1
   24860:	11000c2e 	bgeu	r2,r4,24894 <__clzsi2+0x58>
   24864:	00800204 	movi	r2,8
   24868:	00c00604 	movi	r3,24
   2486c:	20c8d83a 	srl	r4,r4,r3
   24870:	00c000f4 	movhi	r3,3
   24874:	18c49c04 	addi	r3,r3,4720
   24878:	1909883a 	add	r4,r3,r4
   2487c:	20c00003 	ldbu	r3,0(r4)
   24880:	10c5c83a 	sub	r2,r2,r3
   24884:	f800283a 	ret
   24888:	00800604 	movi	r2,24
   2488c:	00c00204 	movi	r3,8
   24890:	003ff606 	br	2486c <__alt_data_end+0xfffe486c>
   24894:	00800404 	movi	r2,16
   24898:	1007883a 	mov	r3,r2
   2489c:	003ff306 	br	2486c <__alt_data_end+0xfffe486c>

000248a0 <__errno>:
   248a0:	008000f4 	movhi	r2,3
   248a4:	108c0804 	addi	r2,r2,12320
   248a8:	10800017 	ldw	r2,0(r2)
   248ac:	f800283a 	ret

000248b0 <_printf_r>:
   248b0:	defffd04 	addi	sp,sp,-12
   248b4:	2805883a 	mov	r2,r5
   248b8:	dfc00015 	stw	ra,0(sp)
   248bc:	d9800115 	stw	r6,4(sp)
   248c0:	d9c00215 	stw	r7,8(sp)
   248c4:	21400217 	ldw	r5,8(r4)
   248c8:	d9c00104 	addi	r7,sp,4
   248cc:	100d883a 	mov	r6,r2
   248d0:	002491c0 	call	2491c <___vfprintf_internal_r>
   248d4:	dfc00017 	ldw	ra,0(sp)
   248d8:	dec00304 	addi	sp,sp,12
   248dc:	f800283a 	ret

000248e0 <printf>:
   248e0:	defffc04 	addi	sp,sp,-16
   248e4:	dfc00015 	stw	ra,0(sp)
   248e8:	d9400115 	stw	r5,4(sp)
   248ec:	d9800215 	stw	r6,8(sp)
   248f0:	d9c00315 	stw	r7,12(sp)
   248f4:	008000f4 	movhi	r2,3
   248f8:	108c0804 	addi	r2,r2,12320
   248fc:	10800017 	ldw	r2,0(r2)
   24900:	200b883a 	mov	r5,r4
   24904:	d9800104 	addi	r6,sp,4
   24908:	11000217 	ldw	r4,8(r2)
   2490c:	0026b140 	call	26b14 <__vfprintf_internal>
   24910:	dfc00017 	ldw	ra,0(sp)
   24914:	dec00404 	addi	sp,sp,16
   24918:	f800283a 	ret

0002491c <___vfprintf_internal_r>:
   2491c:	deffb804 	addi	sp,sp,-288
   24920:	dfc04715 	stw	ra,284(sp)
   24924:	ddc04515 	stw	r23,276(sp)
   24928:	dd404315 	stw	r21,268(sp)
   2492c:	d9002c15 	stw	r4,176(sp)
   24930:	282f883a 	mov	r23,r5
   24934:	302b883a 	mov	r21,r6
   24938:	d9c02d15 	stw	r7,180(sp)
   2493c:	df004615 	stw	fp,280(sp)
   24940:	dd804415 	stw	r22,272(sp)
   24944:	dd004215 	stw	r20,264(sp)
   24948:	dcc04115 	stw	r19,260(sp)
   2494c:	dc804015 	stw	r18,256(sp)
   24950:	dc403f15 	stw	r17,252(sp)
   24954:	dc003e15 	stw	r16,248(sp)
   24958:	00292780 	call	29278 <_localeconv_r>
   2495c:	10800017 	ldw	r2,0(r2)
   24960:	1009883a 	mov	r4,r2
   24964:	d8803415 	stw	r2,208(sp)
   24968:	002b22c0 	call	2b22c <strlen>
   2496c:	d8803715 	stw	r2,220(sp)
   24970:	d8802c17 	ldw	r2,176(sp)
   24974:	10000226 	beq	r2,zero,24980 <___vfprintf_internal_r+0x64>
   24978:	10800e17 	ldw	r2,56(r2)
   2497c:	1000f926 	beq	r2,zero,24d64 <___vfprintf_internal_r+0x448>
   24980:	b880030b 	ldhu	r2,12(r23)
   24984:	10c8000c 	andi	r3,r2,8192
   24988:	1800061e 	bne	r3,zero,249a4 <___vfprintf_internal_r+0x88>
   2498c:	b9001917 	ldw	r4,100(r23)
   24990:	00f7ffc4 	movi	r3,-8193
   24994:	10880014 	ori	r2,r2,8192
   24998:	20c6703a 	and	r3,r4,r3
   2499c:	b880030d 	sth	r2,12(r23)
   249a0:	b8c01915 	stw	r3,100(r23)
   249a4:	10c0020c 	andi	r3,r2,8
   249a8:	1800c126 	beq	r3,zero,24cb0 <___vfprintf_internal_r+0x394>
   249ac:	b8c00417 	ldw	r3,16(r23)
   249b0:	1800bf26 	beq	r3,zero,24cb0 <___vfprintf_internal_r+0x394>
   249b4:	1080068c 	andi	r2,r2,26
   249b8:	00c00284 	movi	r3,10
   249bc:	10c0c426 	beq	r2,r3,24cd0 <___vfprintf_internal_r+0x3b4>
   249c0:	d8c00404 	addi	r3,sp,16
   249c4:	050000f4 	movhi	r20,3
   249c8:	d9001e04 	addi	r4,sp,120
   249cc:	a504ed84 	addi	r20,r20,5046
   249d0:	d8c01e15 	stw	r3,120(sp)
   249d4:	d8002015 	stw	zero,128(sp)
   249d8:	d8001f15 	stw	zero,124(sp)
   249dc:	d8003315 	stw	zero,204(sp)
   249e0:	d8003615 	stw	zero,216(sp)
   249e4:	d8003815 	stw	zero,224(sp)
   249e8:	1811883a 	mov	r8,r3
   249ec:	d8003915 	stw	zero,228(sp)
   249f0:	d8003a15 	stw	zero,232(sp)
   249f4:	d8002f15 	stw	zero,188(sp)
   249f8:	d9002815 	stw	r4,160(sp)
   249fc:	a8800007 	ldb	r2,0(r21)
   24a00:	10027b26 	beq	r2,zero,253f0 <___vfprintf_internal_r+0xad4>
   24a04:	00c00944 	movi	r3,37
   24a08:	a821883a 	mov	r16,r21
   24a0c:	10c0021e 	bne	r2,r3,24a18 <___vfprintf_internal_r+0xfc>
   24a10:	00001406 	br	24a64 <___vfprintf_internal_r+0x148>
   24a14:	10c00326 	beq	r2,r3,24a24 <___vfprintf_internal_r+0x108>
   24a18:	84000044 	addi	r16,r16,1
   24a1c:	80800007 	ldb	r2,0(r16)
   24a20:	103ffc1e 	bne	r2,zero,24a14 <__alt_data_end+0xfffe4a14>
   24a24:	8563c83a 	sub	r17,r16,r21
   24a28:	88000e26 	beq	r17,zero,24a64 <___vfprintf_internal_r+0x148>
   24a2c:	d8c02017 	ldw	r3,128(sp)
   24a30:	d8801f17 	ldw	r2,124(sp)
   24a34:	45400015 	stw	r21,0(r8)
   24a38:	1c47883a 	add	r3,r3,r17
   24a3c:	10800044 	addi	r2,r2,1
   24a40:	d8c02015 	stw	r3,128(sp)
   24a44:	44400115 	stw	r17,4(r8)
   24a48:	d8801f15 	stw	r2,124(sp)
   24a4c:	00c001c4 	movi	r3,7
   24a50:	1880a716 	blt	r3,r2,24cf0 <___vfprintf_internal_r+0x3d4>
   24a54:	42000204 	addi	r8,r8,8
   24a58:	d9402f17 	ldw	r5,188(sp)
   24a5c:	2c4b883a 	add	r5,r5,r17
   24a60:	d9402f15 	stw	r5,188(sp)
   24a64:	80800007 	ldb	r2,0(r16)
   24a68:	1000a826 	beq	r2,zero,24d0c <___vfprintf_internal_r+0x3f0>
   24a6c:	84400047 	ldb	r17,1(r16)
   24a70:	00bfffc4 	movi	r2,-1
   24a74:	85400044 	addi	r21,r16,1
   24a78:	d8002785 	stb	zero,158(sp)
   24a7c:	0007883a 	mov	r3,zero
   24a80:	000f883a 	mov	r7,zero
   24a84:	d8802915 	stw	r2,164(sp)
   24a88:	d8003115 	stw	zero,196(sp)
   24a8c:	0025883a 	mov	r18,zero
   24a90:	01401604 	movi	r5,88
   24a94:	01800244 	movi	r6,9
   24a98:	02800a84 	movi	r10,42
   24a9c:	02401b04 	movi	r9,108
   24aa0:	ad400044 	addi	r21,r21,1
   24aa4:	88bff804 	addi	r2,r17,-32
   24aa8:	28830436 	bltu	r5,r2,256bc <___vfprintf_internal_r+0xda0>
   24aac:	100490ba 	slli	r2,r2,2
   24ab0:	010000b4 	movhi	r4,2
   24ab4:	2112b104 	addi	r4,r4,19140
   24ab8:	1105883a 	add	r2,r2,r4
   24abc:	10800017 	ldw	r2,0(r2)
   24ac0:	1000683a 	jmp	r2
   24ac4:	000255dc 	xori	zero,zero,2391
   24ac8:	000256bc 	xorhi	zero,zero,2394
   24acc:	000256bc 	xorhi	zero,zero,2394
   24ad0:	000255fc 	xorhi	zero,zero,2391
   24ad4:	000256bc 	xorhi	zero,zero,2394
   24ad8:	000256bc 	xorhi	zero,zero,2394
   24adc:	000256bc 	xorhi	zero,zero,2394
   24ae0:	000256bc 	xorhi	zero,zero,2394
   24ae4:	000256bc 	xorhi	zero,zero,2394
   24ae8:	000256bc 	xorhi	zero,zero,2394
   24aec:	00024d70 	cmpltui	zero,zero,2357
   24af0:	00025518 	cmpnei	zero,zero,2388
   24af4:	000256bc 	xorhi	zero,zero,2394
   24af8:	00024c38 	rdprs	zero,zero,2352
   24afc:	00024d98 	cmpnei	zero,zero,2358
   24b00:	000256bc 	xorhi	zero,zero,2394
   24b04:	00024dd8 	cmpnei	zero,zero,2359
   24b08:	00024de4 	muli	zero,zero,2359
   24b0c:	00024de4 	muli	zero,zero,2359
   24b10:	00024de4 	muli	zero,zero,2359
   24b14:	00024de4 	muli	zero,zero,2359
   24b18:	00024de4 	muli	zero,zero,2359
   24b1c:	00024de4 	muli	zero,zero,2359
   24b20:	00024de4 	muli	zero,zero,2359
   24b24:	00024de4 	muli	zero,zero,2359
   24b28:	00024de4 	muli	zero,zero,2359
   24b2c:	000256bc 	xorhi	zero,zero,2394
   24b30:	000256bc 	xorhi	zero,zero,2394
   24b34:	000256bc 	xorhi	zero,zero,2394
   24b38:	000256bc 	xorhi	zero,zero,2394
   24b3c:	000256bc 	xorhi	zero,zero,2394
   24b40:	000256bc 	xorhi	zero,zero,2394
   24b44:	000256bc 	xorhi	zero,zero,2394
   24b48:	000256bc 	xorhi	zero,zero,2394
   24b4c:	000256bc 	xorhi	zero,zero,2394
   24b50:	000256bc 	xorhi	zero,zero,2394
   24b54:	00024e18 	cmpnei	zero,zero,2360
   24b58:	00024ed4 	movui	zero,2363
   24b5c:	000256bc 	xorhi	zero,zero,2394
   24b60:	00024ed4 	movui	zero,2363
   24b64:	000256bc 	xorhi	zero,zero,2394
   24b68:	000256bc 	xorhi	zero,zero,2394
   24b6c:	000256bc 	xorhi	zero,zero,2394
   24b70:	000256bc 	xorhi	zero,zero,2394
   24b74:	00024f74 	movhi	zero,2365
   24b78:	000256bc 	xorhi	zero,zero,2394
   24b7c:	000256bc 	xorhi	zero,zero,2394
   24b80:	00024f80 	call	24f8 <__reset-0x1db08>
   24b84:	000256bc 	xorhi	zero,zero,2394
   24b88:	000256bc 	xorhi	zero,zero,2394
   24b8c:	000256bc 	xorhi	zero,zero,2394
   24b90:	000256bc 	xorhi	zero,zero,2394
   24b94:	000256bc 	xorhi	zero,zero,2394
   24b98:	000253f8 	rdprs	zero,zero,2383
   24b9c:	000256bc 	xorhi	zero,zero,2394
   24ba0:	000256bc 	xorhi	zero,zero,2394
   24ba4:	00025458 	cmpnei	zero,zero,2385
   24ba8:	000256bc 	xorhi	zero,zero,2394
   24bac:	000256bc 	xorhi	zero,zero,2394
   24bb0:	000256bc 	xorhi	zero,zero,2394
   24bb4:	000256bc 	xorhi	zero,zero,2394
   24bb8:	000256bc 	xorhi	zero,zero,2394
   24bbc:	000256bc 	xorhi	zero,zero,2394
   24bc0:	000256bc 	xorhi	zero,zero,2394
   24bc4:	000256bc 	xorhi	zero,zero,2394
   24bc8:	000256bc 	xorhi	zero,zero,2394
   24bcc:	000256bc 	xorhi	zero,zero,2394
   24bd0:	00025668 	cmpgeui	zero,zero,2393
   24bd4:	00025608 	cmpgei	zero,zero,2392
   24bd8:	00024ed4 	movui	zero,2363
   24bdc:	00024ed4 	movui	zero,2363
   24be0:	00024ed4 	movui	zero,2363
   24be4:	00025618 	cmpnei	zero,zero,2392
   24be8:	00025608 	cmpgei	zero,zero,2392
   24bec:	000256bc 	xorhi	zero,zero,2394
   24bf0:	000256bc 	xorhi	zero,zero,2394
   24bf4:	00025624 	muli	zero,zero,2392
   24bf8:	000256bc 	xorhi	zero,zero,2394
   24bfc:	00025634 	movhi	zero,2392
   24c00:	00025508 	cmpgei	zero,zero,2388
   24c04:	00024c44 	movi	zero,2353
   24c08:	00025528 	cmpgeui	zero,zero,2388
   24c0c:	000256bc 	xorhi	zero,zero,2394
   24c10:	00025534 	movhi	zero,2388
   24c14:	000256bc 	xorhi	zero,zero,2394
   24c18:	00025590 	cmplti	zero,zero,2390
   24c1c:	000256bc 	xorhi	zero,zero,2394
   24c20:	000256bc 	xorhi	zero,zero,2394
   24c24:	000255a0 	cmpeqi	zero,zero,2390
   24c28:	d9003117 	ldw	r4,196(sp)
   24c2c:	d8802d15 	stw	r2,180(sp)
   24c30:	0109c83a 	sub	r4,zero,r4
   24c34:	d9003115 	stw	r4,196(sp)
   24c38:	94800114 	ori	r18,r18,4
   24c3c:	ac400007 	ldb	r17,0(r21)
   24c40:	003f9706 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   24c44:	00800c04 	movi	r2,48
   24c48:	d9002d17 	ldw	r4,180(sp)
   24c4c:	d9402917 	ldw	r5,164(sp)
   24c50:	d8802705 	stb	r2,156(sp)
   24c54:	00801e04 	movi	r2,120
   24c58:	d8802745 	stb	r2,157(sp)
   24c5c:	d8002785 	stb	zero,158(sp)
   24c60:	20c00104 	addi	r3,r4,4
   24c64:	24c00017 	ldw	r19,0(r4)
   24c68:	002d883a 	mov	r22,zero
   24c6c:	90800094 	ori	r2,r18,2
   24c70:	28029a16 	blt	r5,zero,256dc <___vfprintf_internal_r+0xdc0>
   24c74:	00bfdfc4 	movi	r2,-129
   24c78:	90a4703a 	and	r18,r18,r2
   24c7c:	d8c02d15 	stw	r3,180(sp)
   24c80:	94800094 	ori	r18,r18,2
   24c84:	9802871e 	bne	r19,zero,256a4 <___vfprintf_internal_r+0xd88>
   24c88:	008000f4 	movhi	r2,3
   24c8c:	1084e604 	addi	r2,r2,5016
   24c90:	d8803915 	stw	r2,228(sp)
   24c94:	04401e04 	movi	r17,120
   24c98:	d8802917 	ldw	r2,164(sp)
   24c9c:	0039883a 	mov	fp,zero
   24ca0:	1001e926 	beq	r2,zero,25448 <___vfprintf_internal_r+0xb2c>
   24ca4:	0027883a 	mov	r19,zero
   24ca8:	002d883a 	mov	r22,zero
   24cac:	00020506 	br	254c4 <___vfprintf_internal_r+0xba8>
   24cb0:	d9002c17 	ldw	r4,176(sp)
   24cb4:	b80b883a 	mov	r5,r23
   24cb8:	0026bec0 	call	26bec <__swsetup_r>
   24cbc:	1005ac1e 	bne	r2,zero,26370 <___vfprintf_internal_r+0x1a54>
   24cc0:	b880030b 	ldhu	r2,12(r23)
   24cc4:	00c00284 	movi	r3,10
   24cc8:	1080068c 	andi	r2,r2,26
   24ccc:	10ff3c1e 	bne	r2,r3,249c0 <__alt_data_end+0xfffe49c0>
   24cd0:	b880038f 	ldh	r2,14(r23)
   24cd4:	103f3a16 	blt	r2,zero,249c0 <__alt_data_end+0xfffe49c0>
   24cd8:	d9c02d17 	ldw	r7,180(sp)
   24cdc:	d9002c17 	ldw	r4,176(sp)
   24ce0:	a80d883a 	mov	r6,r21
   24ce4:	b80b883a 	mov	r5,r23
   24ce8:	0026b300 	call	26b30 <__sbprintf>
   24cec:	00001106 	br	24d34 <___vfprintf_internal_r+0x418>
   24cf0:	d9002c17 	ldw	r4,176(sp)
   24cf4:	d9801e04 	addi	r6,sp,120
   24cf8:	b80b883a 	mov	r5,r23
   24cfc:	002b3c00 	call	2b3c0 <__sprint_r>
   24d00:	1000081e 	bne	r2,zero,24d24 <___vfprintf_internal_r+0x408>
   24d04:	da000404 	addi	r8,sp,16
   24d08:	003f5306 	br	24a58 <__alt_data_end+0xfffe4a58>
   24d0c:	d8802017 	ldw	r2,128(sp)
   24d10:	10000426 	beq	r2,zero,24d24 <___vfprintf_internal_r+0x408>
   24d14:	d9002c17 	ldw	r4,176(sp)
   24d18:	d9801e04 	addi	r6,sp,120
   24d1c:	b80b883a 	mov	r5,r23
   24d20:	002b3c00 	call	2b3c0 <__sprint_r>
   24d24:	b880030b 	ldhu	r2,12(r23)
   24d28:	1080100c 	andi	r2,r2,64
   24d2c:	1005901e 	bne	r2,zero,26370 <___vfprintf_internal_r+0x1a54>
   24d30:	d8802f17 	ldw	r2,188(sp)
   24d34:	dfc04717 	ldw	ra,284(sp)
   24d38:	df004617 	ldw	fp,280(sp)
   24d3c:	ddc04517 	ldw	r23,276(sp)
   24d40:	dd804417 	ldw	r22,272(sp)
   24d44:	dd404317 	ldw	r21,268(sp)
   24d48:	dd004217 	ldw	r20,264(sp)
   24d4c:	dcc04117 	ldw	r19,260(sp)
   24d50:	dc804017 	ldw	r18,256(sp)
   24d54:	dc403f17 	ldw	r17,252(sp)
   24d58:	dc003e17 	ldw	r16,248(sp)
   24d5c:	dec04804 	addi	sp,sp,288
   24d60:	f800283a 	ret
   24d64:	d9002c17 	ldw	r4,176(sp)
   24d68:	0028bc00 	call	28bc0 <__sinit>
   24d6c:	003f0406 	br	24980 <__alt_data_end+0xfffe4980>
   24d70:	d8802d17 	ldw	r2,180(sp)
   24d74:	d9002d17 	ldw	r4,180(sp)
   24d78:	10800017 	ldw	r2,0(r2)
   24d7c:	d8803115 	stw	r2,196(sp)
   24d80:	20800104 	addi	r2,r4,4
   24d84:	d9003117 	ldw	r4,196(sp)
   24d88:	203fa716 	blt	r4,zero,24c28 <__alt_data_end+0xfffe4c28>
   24d8c:	d8802d15 	stw	r2,180(sp)
   24d90:	ac400007 	ldb	r17,0(r21)
   24d94:	003f4206 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   24d98:	ac400007 	ldb	r17,0(r21)
   24d9c:	aac00044 	addi	r11,r21,1
   24da0:	8a872826 	beq	r17,r10,26a44 <___vfprintf_internal_r+0x2128>
   24da4:	88bff404 	addi	r2,r17,-48
   24da8:	0009883a 	mov	r4,zero
   24dac:	30867d36 	bltu	r6,r2,267a4 <___vfprintf_internal_r+0x1e88>
   24db0:	5c400007 	ldb	r17,0(r11)
   24db4:	210002a4 	muli	r4,r4,10
   24db8:	5d400044 	addi	r21,r11,1
   24dbc:	a817883a 	mov	r11,r21
   24dc0:	2089883a 	add	r4,r4,r2
   24dc4:	88bff404 	addi	r2,r17,-48
   24dc8:	30bff92e 	bgeu	r6,r2,24db0 <__alt_data_end+0xfffe4db0>
   24dcc:	2005c916 	blt	r4,zero,264f4 <___vfprintf_internal_r+0x1bd8>
   24dd0:	d9002915 	stw	r4,164(sp)
   24dd4:	003f3306 	br	24aa4 <__alt_data_end+0xfffe4aa4>
   24dd8:	94802014 	ori	r18,r18,128
   24ddc:	ac400007 	ldb	r17,0(r21)
   24de0:	003f2f06 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   24de4:	a809883a 	mov	r4,r21
   24de8:	d8003115 	stw	zero,196(sp)
   24dec:	88bff404 	addi	r2,r17,-48
   24df0:	0017883a 	mov	r11,zero
   24df4:	24400007 	ldb	r17,0(r4)
   24df8:	5ac002a4 	muli	r11,r11,10
   24dfc:	ad400044 	addi	r21,r21,1
   24e00:	a809883a 	mov	r4,r21
   24e04:	12d7883a 	add	r11,r2,r11
   24e08:	88bff404 	addi	r2,r17,-48
   24e0c:	30bff92e 	bgeu	r6,r2,24df4 <__alt_data_end+0xfffe4df4>
   24e10:	dac03115 	stw	r11,196(sp)
   24e14:	003f2306 	br	24aa4 <__alt_data_end+0xfffe4aa4>
   24e18:	18c03fcc 	andi	r3,r3,255
   24e1c:	18072b1e 	bne	r3,zero,26acc <___vfprintf_internal_r+0x21b0>
   24e20:	94800414 	ori	r18,r18,16
   24e24:	9080080c 	andi	r2,r18,32
   24e28:	10037b26 	beq	r2,zero,25c18 <___vfprintf_internal_r+0x12fc>
   24e2c:	d9402d17 	ldw	r5,180(sp)
   24e30:	28800117 	ldw	r2,4(r5)
   24e34:	2cc00017 	ldw	r19,0(r5)
   24e38:	29400204 	addi	r5,r5,8
   24e3c:	d9402d15 	stw	r5,180(sp)
   24e40:	102d883a 	mov	r22,r2
   24e44:	10044b16 	blt	r2,zero,25f74 <___vfprintf_internal_r+0x1658>
   24e48:	d9402917 	ldw	r5,164(sp)
   24e4c:	df002783 	ldbu	fp,158(sp)
   24e50:	2803bc16 	blt	r5,zero,25d44 <___vfprintf_internal_r+0x1428>
   24e54:	00ffdfc4 	movi	r3,-129
   24e58:	9d84b03a 	or	r2,r19,r22
   24e5c:	90e4703a 	and	r18,r18,r3
   24e60:	10017726 	beq	r2,zero,25440 <___vfprintf_internal_r+0xb24>
   24e64:	b0038326 	beq	r22,zero,25c74 <___vfprintf_internal_r+0x1358>
   24e68:	dc402a15 	stw	r17,168(sp)
   24e6c:	dc001e04 	addi	r16,sp,120
   24e70:	b023883a 	mov	r17,r22
   24e74:	402d883a 	mov	r22,r8
   24e78:	9809883a 	mov	r4,r19
   24e7c:	880b883a 	mov	r5,r17
   24e80:	01800284 	movi	r6,10
   24e84:	000f883a 	mov	r7,zero
   24e88:	002e3340 	call	2e334 <__umoddi3>
   24e8c:	10800c04 	addi	r2,r2,48
   24e90:	843fffc4 	addi	r16,r16,-1
   24e94:	9809883a 	mov	r4,r19
   24e98:	880b883a 	mov	r5,r17
   24e9c:	80800005 	stb	r2,0(r16)
   24ea0:	01800284 	movi	r6,10
   24ea4:	000f883a 	mov	r7,zero
   24ea8:	002ddbc0 	call	2ddbc <__udivdi3>
   24eac:	1027883a 	mov	r19,r2
   24eb0:	10c4b03a 	or	r2,r2,r3
   24eb4:	1823883a 	mov	r17,r3
   24eb8:	103fef1e 	bne	r2,zero,24e78 <__alt_data_end+0xfffe4e78>
   24ebc:	d8c02817 	ldw	r3,160(sp)
   24ec0:	dc402a17 	ldw	r17,168(sp)
   24ec4:	b011883a 	mov	r8,r22
   24ec8:	1c07c83a 	sub	r3,r3,r16
   24ecc:	d8c02e15 	stw	r3,184(sp)
   24ed0:	00005906 	br	25038 <___vfprintf_internal_r+0x71c>
   24ed4:	18c03fcc 	andi	r3,r3,255
   24ed8:	1806fa1e 	bne	r3,zero,26ac4 <___vfprintf_internal_r+0x21a8>
   24edc:	9080020c 	andi	r2,r18,8
   24ee0:	10048a26 	beq	r2,zero,2610c <___vfprintf_internal_r+0x17f0>
   24ee4:	d8c02d17 	ldw	r3,180(sp)
   24ee8:	d9002d17 	ldw	r4,180(sp)
   24eec:	d9402d17 	ldw	r5,180(sp)
   24ef0:	18c00017 	ldw	r3,0(r3)
   24ef4:	21000117 	ldw	r4,4(r4)
   24ef8:	29400204 	addi	r5,r5,8
   24efc:	d8c03615 	stw	r3,216(sp)
   24f00:	d9003815 	stw	r4,224(sp)
   24f04:	d9402d15 	stw	r5,180(sp)
   24f08:	d9003617 	ldw	r4,216(sp)
   24f0c:	d9403817 	ldw	r5,224(sp)
   24f10:	da003d15 	stw	r8,244(sp)
   24f14:	04000044 	movi	r16,1
   24f18:	0021d000 	call	21d00 <__fpclassifyd>
   24f1c:	da003d17 	ldw	r8,244(sp)
   24f20:	14041f1e 	bne	r2,r16,25fa0 <___vfprintf_internal_r+0x1684>
   24f24:	d9003617 	ldw	r4,216(sp)
   24f28:	d9403817 	ldw	r5,224(sp)
   24f2c:	000d883a 	mov	r6,zero
   24f30:	000f883a 	mov	r7,zero
   24f34:	00235d80 	call	235d8 <__ledf2>
   24f38:	da003d17 	ldw	r8,244(sp)
   24f3c:	1005be16 	blt	r2,zero,26638 <___vfprintf_internal_r+0x1d1c>
   24f40:	df002783 	ldbu	fp,158(sp)
   24f44:	008011c4 	movi	r2,71
   24f48:	1445330e 	bge	r2,r17,26418 <___vfprintf_internal_r+0x1afc>
   24f4c:	040000f4 	movhi	r16,3
   24f50:	8404de04 	addi	r16,r16,4984
   24f54:	00c000c4 	movi	r3,3
   24f58:	00bfdfc4 	movi	r2,-129
   24f5c:	d8c02a15 	stw	r3,168(sp)
   24f60:	90a4703a 	and	r18,r18,r2
   24f64:	d8c02e15 	stw	r3,184(sp)
   24f68:	d8002915 	stw	zero,164(sp)
   24f6c:	d8003215 	stw	zero,200(sp)
   24f70:	00003706 	br	25050 <___vfprintf_internal_r+0x734>
   24f74:	94800214 	ori	r18,r18,8
   24f78:	ac400007 	ldb	r17,0(r21)
   24f7c:	003ec806 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   24f80:	18c03fcc 	andi	r3,r3,255
   24f84:	1806db1e 	bne	r3,zero,26af4 <___vfprintf_internal_r+0x21d8>
   24f88:	94800414 	ori	r18,r18,16
   24f8c:	9080080c 	andi	r2,r18,32
   24f90:	1002d826 	beq	r2,zero,25af4 <___vfprintf_internal_r+0x11d8>
   24f94:	d9402d17 	ldw	r5,180(sp)
   24f98:	d8c02917 	ldw	r3,164(sp)
   24f9c:	d8002785 	stb	zero,158(sp)
   24fa0:	28800204 	addi	r2,r5,8
   24fa4:	2cc00017 	ldw	r19,0(r5)
   24fa8:	2d800117 	ldw	r22,4(r5)
   24fac:	18048f16 	blt	r3,zero,261ec <___vfprintf_internal_r+0x18d0>
   24fb0:	013fdfc4 	movi	r4,-129
   24fb4:	9d86b03a 	or	r3,r19,r22
   24fb8:	d8802d15 	stw	r2,180(sp)
   24fbc:	9124703a 	and	r18,r18,r4
   24fc0:	1802d91e 	bne	r3,zero,25b28 <___vfprintf_internal_r+0x120c>
   24fc4:	d8c02917 	ldw	r3,164(sp)
   24fc8:	0039883a 	mov	fp,zero
   24fcc:	1805c326 	beq	r3,zero,266dc <___vfprintf_internal_r+0x1dc0>
   24fd0:	0027883a 	mov	r19,zero
   24fd4:	002d883a 	mov	r22,zero
   24fd8:	dc001e04 	addi	r16,sp,120
   24fdc:	9806d0fa 	srli	r3,r19,3
   24fe0:	b008977a 	slli	r4,r22,29
   24fe4:	b02cd0fa 	srli	r22,r22,3
   24fe8:	9cc001cc 	andi	r19,r19,7
   24fec:	98800c04 	addi	r2,r19,48
   24ff0:	843fffc4 	addi	r16,r16,-1
   24ff4:	20e6b03a 	or	r19,r4,r3
   24ff8:	80800005 	stb	r2,0(r16)
   24ffc:	9d86b03a 	or	r3,r19,r22
   25000:	183ff61e 	bne	r3,zero,24fdc <__alt_data_end+0xfffe4fdc>
   25004:	90c0004c 	andi	r3,r18,1
   25008:	18013b26 	beq	r3,zero,254f8 <___vfprintf_internal_r+0xbdc>
   2500c:	10803fcc 	andi	r2,r2,255
   25010:	1080201c 	xori	r2,r2,128
   25014:	10bfe004 	addi	r2,r2,-128
   25018:	00c00c04 	movi	r3,48
   2501c:	10c13626 	beq	r2,r3,254f8 <___vfprintf_internal_r+0xbdc>
   25020:	80ffffc5 	stb	r3,-1(r16)
   25024:	d8c02817 	ldw	r3,160(sp)
   25028:	80bfffc4 	addi	r2,r16,-1
   2502c:	1021883a 	mov	r16,r2
   25030:	1887c83a 	sub	r3,r3,r2
   25034:	d8c02e15 	stw	r3,184(sp)
   25038:	d8802e17 	ldw	r2,184(sp)
   2503c:	d9002917 	ldw	r4,164(sp)
   25040:	1100010e 	bge	r2,r4,25048 <___vfprintf_internal_r+0x72c>
   25044:	2005883a 	mov	r2,r4
   25048:	d8802a15 	stw	r2,168(sp)
   2504c:	d8003215 	stw	zero,200(sp)
   25050:	e7003fcc 	andi	fp,fp,255
   25054:	e700201c 	xori	fp,fp,128
   25058:	e73fe004 	addi	fp,fp,-128
   2505c:	e0000326 	beq	fp,zero,2506c <___vfprintf_internal_r+0x750>
   25060:	d8c02a17 	ldw	r3,168(sp)
   25064:	18c00044 	addi	r3,r3,1
   25068:	d8c02a15 	stw	r3,168(sp)
   2506c:	90c0008c 	andi	r3,r18,2
   25070:	d8c02b15 	stw	r3,172(sp)
   25074:	18000326 	beq	r3,zero,25084 <___vfprintf_internal_r+0x768>
   25078:	d8c02a17 	ldw	r3,168(sp)
   2507c:	18c00084 	addi	r3,r3,2
   25080:	d8c02a15 	stw	r3,168(sp)
   25084:	90c0210c 	andi	r3,r18,132
   25088:	d8c03015 	stw	r3,192(sp)
   2508c:	1801a31e 	bne	r3,zero,2571c <___vfprintf_internal_r+0xe00>
   25090:	d9003117 	ldw	r4,196(sp)
   25094:	d8c02a17 	ldw	r3,168(sp)
   25098:	20e7c83a 	sub	r19,r4,r3
   2509c:	04c19f0e 	bge	zero,r19,2571c <___vfprintf_internal_r+0xe00>
   250a0:	02400404 	movi	r9,16
   250a4:	d8c02017 	ldw	r3,128(sp)
   250a8:	d8801f17 	ldw	r2,124(sp)
   250ac:	4cc50d0e 	bge	r9,r19,264e4 <___vfprintf_internal_r+0x1bc8>
   250b0:	014000f4 	movhi	r5,3
   250b4:	2944f184 	addi	r5,r5,5062
   250b8:	dc403b15 	stw	r17,236(sp)
   250bc:	d9403515 	stw	r5,212(sp)
   250c0:	9823883a 	mov	r17,r19
   250c4:	482d883a 	mov	r22,r9
   250c8:	9027883a 	mov	r19,r18
   250cc:	070001c4 	movi	fp,7
   250d0:	8025883a 	mov	r18,r16
   250d4:	dc002c17 	ldw	r16,176(sp)
   250d8:	00000306 	br	250e8 <___vfprintf_internal_r+0x7cc>
   250dc:	8c7ffc04 	addi	r17,r17,-16
   250e0:	42000204 	addi	r8,r8,8
   250e4:	b440130e 	bge	r22,r17,25134 <___vfprintf_internal_r+0x818>
   250e8:	010000f4 	movhi	r4,3
   250ec:	18c00404 	addi	r3,r3,16
   250f0:	10800044 	addi	r2,r2,1
   250f4:	2104f184 	addi	r4,r4,5062
   250f8:	41000015 	stw	r4,0(r8)
   250fc:	45800115 	stw	r22,4(r8)
   25100:	d8c02015 	stw	r3,128(sp)
   25104:	d8801f15 	stw	r2,124(sp)
   25108:	e0bff40e 	bge	fp,r2,250dc <__alt_data_end+0xfffe50dc>
   2510c:	d9801e04 	addi	r6,sp,120
   25110:	b80b883a 	mov	r5,r23
   25114:	8009883a 	mov	r4,r16
   25118:	002b3c00 	call	2b3c0 <__sprint_r>
   2511c:	103f011e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25120:	8c7ffc04 	addi	r17,r17,-16
   25124:	d8c02017 	ldw	r3,128(sp)
   25128:	d8801f17 	ldw	r2,124(sp)
   2512c:	da000404 	addi	r8,sp,16
   25130:	b47fed16 	blt	r22,r17,250e8 <__alt_data_end+0xfffe50e8>
   25134:	9021883a 	mov	r16,r18
   25138:	9825883a 	mov	r18,r19
   2513c:	8827883a 	mov	r19,r17
   25140:	dc403b17 	ldw	r17,236(sp)
   25144:	d9403517 	ldw	r5,212(sp)
   25148:	98c7883a 	add	r3,r19,r3
   2514c:	10800044 	addi	r2,r2,1
   25150:	41400015 	stw	r5,0(r8)
   25154:	44c00115 	stw	r19,4(r8)
   25158:	d8c02015 	stw	r3,128(sp)
   2515c:	d8801f15 	stw	r2,124(sp)
   25160:	010001c4 	movi	r4,7
   25164:	2082a316 	blt	r4,r2,25bf4 <___vfprintf_internal_r+0x12d8>
   25168:	df002787 	ldb	fp,158(sp)
   2516c:	42000204 	addi	r8,r8,8
   25170:	e0000c26 	beq	fp,zero,251a4 <___vfprintf_internal_r+0x888>
   25174:	d8801f17 	ldw	r2,124(sp)
   25178:	d9002784 	addi	r4,sp,158
   2517c:	18c00044 	addi	r3,r3,1
   25180:	10800044 	addi	r2,r2,1
   25184:	41000015 	stw	r4,0(r8)
   25188:	01000044 	movi	r4,1
   2518c:	41000115 	stw	r4,4(r8)
   25190:	d8c02015 	stw	r3,128(sp)
   25194:	d8801f15 	stw	r2,124(sp)
   25198:	010001c4 	movi	r4,7
   2519c:	20823c16 	blt	r4,r2,25a90 <___vfprintf_internal_r+0x1174>
   251a0:	42000204 	addi	r8,r8,8
   251a4:	d8802b17 	ldw	r2,172(sp)
   251a8:	10000c26 	beq	r2,zero,251dc <___vfprintf_internal_r+0x8c0>
   251ac:	d8801f17 	ldw	r2,124(sp)
   251b0:	d9002704 	addi	r4,sp,156
   251b4:	18c00084 	addi	r3,r3,2
   251b8:	10800044 	addi	r2,r2,1
   251bc:	41000015 	stw	r4,0(r8)
   251c0:	01000084 	movi	r4,2
   251c4:	41000115 	stw	r4,4(r8)
   251c8:	d8c02015 	stw	r3,128(sp)
   251cc:	d8801f15 	stw	r2,124(sp)
   251d0:	010001c4 	movi	r4,7
   251d4:	20823616 	blt	r4,r2,25ab0 <___vfprintf_internal_r+0x1194>
   251d8:	42000204 	addi	r8,r8,8
   251dc:	d9003017 	ldw	r4,192(sp)
   251e0:	00802004 	movi	r2,128
   251e4:	20819926 	beq	r4,r2,2584c <___vfprintf_internal_r+0xf30>
   251e8:	d9402917 	ldw	r5,164(sp)
   251ec:	d8802e17 	ldw	r2,184(sp)
   251f0:	28adc83a 	sub	r22,r5,r2
   251f4:	0580310e 	bge	zero,r22,252bc <___vfprintf_internal_r+0x9a0>
   251f8:	07000404 	movi	fp,16
   251fc:	d8801f17 	ldw	r2,124(sp)
   25200:	e584140e 	bge	fp,r22,26254 <___vfprintf_internal_r+0x1938>
   25204:	014000f4 	movhi	r5,3
   25208:	2944ed84 	addi	r5,r5,5046
   2520c:	dc402915 	stw	r17,164(sp)
   25210:	d9402b15 	stw	r5,172(sp)
   25214:	b023883a 	mov	r17,r22
   25218:	04c001c4 	movi	r19,7
   2521c:	a82d883a 	mov	r22,r21
   25220:	902b883a 	mov	r21,r18
   25224:	8025883a 	mov	r18,r16
   25228:	dc002c17 	ldw	r16,176(sp)
   2522c:	00000306 	br	2523c <___vfprintf_internal_r+0x920>
   25230:	8c7ffc04 	addi	r17,r17,-16
   25234:	42000204 	addi	r8,r8,8
   25238:	e440110e 	bge	fp,r17,25280 <___vfprintf_internal_r+0x964>
   2523c:	18c00404 	addi	r3,r3,16
   25240:	10800044 	addi	r2,r2,1
   25244:	45000015 	stw	r20,0(r8)
   25248:	47000115 	stw	fp,4(r8)
   2524c:	d8c02015 	stw	r3,128(sp)
   25250:	d8801f15 	stw	r2,124(sp)
   25254:	98bff60e 	bge	r19,r2,25230 <__alt_data_end+0xfffe5230>
   25258:	d9801e04 	addi	r6,sp,120
   2525c:	b80b883a 	mov	r5,r23
   25260:	8009883a 	mov	r4,r16
   25264:	002b3c00 	call	2b3c0 <__sprint_r>
   25268:	103eae1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   2526c:	8c7ffc04 	addi	r17,r17,-16
   25270:	d8c02017 	ldw	r3,128(sp)
   25274:	d8801f17 	ldw	r2,124(sp)
   25278:	da000404 	addi	r8,sp,16
   2527c:	e47fef16 	blt	fp,r17,2523c <__alt_data_end+0xfffe523c>
   25280:	9021883a 	mov	r16,r18
   25284:	a825883a 	mov	r18,r21
   25288:	b02b883a 	mov	r21,r22
   2528c:	882d883a 	mov	r22,r17
   25290:	dc402917 	ldw	r17,164(sp)
   25294:	d9002b17 	ldw	r4,172(sp)
   25298:	1d87883a 	add	r3,r3,r22
   2529c:	10800044 	addi	r2,r2,1
   252a0:	41000015 	stw	r4,0(r8)
   252a4:	45800115 	stw	r22,4(r8)
   252a8:	d8c02015 	stw	r3,128(sp)
   252ac:	d8801f15 	stw	r2,124(sp)
   252b0:	010001c4 	movi	r4,7
   252b4:	2081ee16 	blt	r4,r2,25a70 <___vfprintf_internal_r+0x1154>
   252b8:	42000204 	addi	r8,r8,8
   252bc:	9080400c 	andi	r2,r18,256
   252c0:	1001181e 	bne	r2,zero,25724 <___vfprintf_internal_r+0xe08>
   252c4:	d9402e17 	ldw	r5,184(sp)
   252c8:	d8801f17 	ldw	r2,124(sp)
   252cc:	44000015 	stw	r16,0(r8)
   252d0:	1947883a 	add	r3,r3,r5
   252d4:	10800044 	addi	r2,r2,1
   252d8:	41400115 	stw	r5,4(r8)
   252dc:	d8c02015 	stw	r3,128(sp)
   252e0:	d8801f15 	stw	r2,124(sp)
   252e4:	010001c4 	movi	r4,7
   252e8:	2081d316 	blt	r4,r2,25a38 <___vfprintf_internal_r+0x111c>
   252ec:	42000204 	addi	r8,r8,8
   252f0:	9480010c 	andi	r18,r18,4
   252f4:	90003226 	beq	r18,zero,253c0 <___vfprintf_internal_r+0xaa4>
   252f8:	d9403117 	ldw	r5,196(sp)
   252fc:	d8802a17 	ldw	r2,168(sp)
   25300:	28a1c83a 	sub	r16,r5,r2
   25304:	04002e0e 	bge	zero,r16,253c0 <___vfprintf_internal_r+0xaa4>
   25308:	04400404 	movi	r17,16
   2530c:	d8801f17 	ldw	r2,124(sp)
   25310:	8c04a20e 	bge	r17,r16,2659c <___vfprintf_internal_r+0x1c80>
   25314:	014000f4 	movhi	r5,3
   25318:	2944f184 	addi	r5,r5,5062
   2531c:	d9403515 	stw	r5,212(sp)
   25320:	048001c4 	movi	r18,7
   25324:	dcc02c17 	ldw	r19,176(sp)
   25328:	00000306 	br	25338 <___vfprintf_internal_r+0xa1c>
   2532c:	843ffc04 	addi	r16,r16,-16
   25330:	42000204 	addi	r8,r8,8
   25334:	8c00130e 	bge	r17,r16,25384 <___vfprintf_internal_r+0xa68>
   25338:	010000f4 	movhi	r4,3
   2533c:	18c00404 	addi	r3,r3,16
   25340:	10800044 	addi	r2,r2,1
   25344:	2104f184 	addi	r4,r4,5062
   25348:	41000015 	stw	r4,0(r8)
   2534c:	44400115 	stw	r17,4(r8)
   25350:	d8c02015 	stw	r3,128(sp)
   25354:	d8801f15 	stw	r2,124(sp)
   25358:	90bff40e 	bge	r18,r2,2532c <__alt_data_end+0xfffe532c>
   2535c:	d9801e04 	addi	r6,sp,120
   25360:	b80b883a 	mov	r5,r23
   25364:	9809883a 	mov	r4,r19
   25368:	002b3c00 	call	2b3c0 <__sprint_r>
   2536c:	103e6d1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25370:	843ffc04 	addi	r16,r16,-16
   25374:	d8c02017 	ldw	r3,128(sp)
   25378:	d8801f17 	ldw	r2,124(sp)
   2537c:	da000404 	addi	r8,sp,16
   25380:	8c3fed16 	blt	r17,r16,25338 <__alt_data_end+0xfffe5338>
   25384:	d9403517 	ldw	r5,212(sp)
   25388:	1c07883a 	add	r3,r3,r16
   2538c:	10800044 	addi	r2,r2,1
   25390:	41400015 	stw	r5,0(r8)
   25394:	44000115 	stw	r16,4(r8)
   25398:	d8c02015 	stw	r3,128(sp)
   2539c:	d8801f15 	stw	r2,124(sp)
   253a0:	010001c4 	movi	r4,7
   253a4:	2080060e 	bge	r4,r2,253c0 <___vfprintf_internal_r+0xaa4>
   253a8:	d9002c17 	ldw	r4,176(sp)
   253ac:	d9801e04 	addi	r6,sp,120
   253b0:	b80b883a 	mov	r5,r23
   253b4:	002b3c00 	call	2b3c0 <__sprint_r>
   253b8:	103e5a1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   253bc:	d8c02017 	ldw	r3,128(sp)
   253c0:	d8803117 	ldw	r2,196(sp)
   253c4:	d9002a17 	ldw	r4,168(sp)
   253c8:	1100010e 	bge	r2,r4,253d0 <___vfprintf_internal_r+0xab4>
   253cc:	2005883a 	mov	r2,r4
   253d0:	d9402f17 	ldw	r5,188(sp)
   253d4:	288b883a 	add	r5,r5,r2
   253d8:	d9402f15 	stw	r5,188(sp)
   253dc:	18019e1e 	bne	r3,zero,25a58 <___vfprintf_internal_r+0x113c>
   253e0:	a8800007 	ldb	r2,0(r21)
   253e4:	d8001f15 	stw	zero,124(sp)
   253e8:	da000404 	addi	r8,sp,16
   253ec:	103d851e 	bne	r2,zero,24a04 <__alt_data_end+0xfffe4a04>
   253f0:	a821883a 	mov	r16,r21
   253f4:	003d9b06 	br	24a64 <__alt_data_end+0xfffe4a64>
   253f8:	18c03fcc 	andi	r3,r3,255
   253fc:	1805c11e 	bne	r3,zero,26b04 <___vfprintf_internal_r+0x21e8>
   25400:	94800414 	ori	r18,r18,16
   25404:	9080080c 	andi	r2,r18,32
   25408:	10020c26 	beq	r2,zero,25c3c <___vfprintf_internal_r+0x1320>
   2540c:	d8802d17 	ldw	r2,180(sp)
   25410:	d9002917 	ldw	r4,164(sp)
   25414:	d8002785 	stb	zero,158(sp)
   25418:	10c00204 	addi	r3,r2,8
   2541c:	14c00017 	ldw	r19,0(r2)
   25420:	15800117 	ldw	r22,4(r2)
   25424:	20040f16 	blt	r4,zero,26464 <___vfprintf_internal_r+0x1b48>
   25428:	013fdfc4 	movi	r4,-129
   2542c:	9d84b03a 	or	r2,r19,r22
   25430:	d8c02d15 	stw	r3,180(sp)
   25434:	9124703a 	and	r18,r18,r4
   25438:	0039883a 	mov	fp,zero
   2543c:	103e891e 	bne	r2,zero,24e64 <__alt_data_end+0xfffe4e64>
   25440:	d9002917 	ldw	r4,164(sp)
   25444:	2002c11e 	bne	r4,zero,25f4c <___vfprintf_internal_r+0x1630>
   25448:	d8002915 	stw	zero,164(sp)
   2544c:	d8002e15 	stw	zero,184(sp)
   25450:	dc001e04 	addi	r16,sp,120
   25454:	003ef806 	br	25038 <__alt_data_end+0xfffe5038>
   25458:	18c03fcc 	andi	r3,r3,255
   2545c:	18059d1e 	bne	r3,zero,26ad4 <___vfprintf_internal_r+0x21b8>
   25460:	014000f4 	movhi	r5,3
   25464:	2944e104 	addi	r5,r5,4996
   25468:	d9403915 	stw	r5,228(sp)
   2546c:	9080080c 	andi	r2,r18,32
   25470:	10005226 	beq	r2,zero,255bc <___vfprintf_internal_r+0xca0>
   25474:	d8802d17 	ldw	r2,180(sp)
   25478:	14c00017 	ldw	r19,0(r2)
   2547c:	15800117 	ldw	r22,4(r2)
   25480:	10800204 	addi	r2,r2,8
   25484:	d8802d15 	stw	r2,180(sp)
   25488:	9080004c 	andi	r2,r18,1
   2548c:	10019026 	beq	r2,zero,25ad0 <___vfprintf_internal_r+0x11b4>
   25490:	9d84b03a 	or	r2,r19,r22
   25494:	10036926 	beq	r2,zero,2623c <___vfprintf_internal_r+0x1920>
   25498:	d8c02917 	ldw	r3,164(sp)
   2549c:	00800c04 	movi	r2,48
   254a0:	d8802705 	stb	r2,156(sp)
   254a4:	dc402745 	stb	r17,157(sp)
   254a8:	d8002785 	stb	zero,158(sp)
   254ac:	90800094 	ori	r2,r18,2
   254b0:	18045d16 	blt	r3,zero,26628 <___vfprintf_internal_r+0x1d0c>
   254b4:	00bfdfc4 	movi	r2,-129
   254b8:	90a4703a 	and	r18,r18,r2
   254bc:	94800094 	ori	r18,r18,2
   254c0:	0039883a 	mov	fp,zero
   254c4:	d9003917 	ldw	r4,228(sp)
   254c8:	dc001e04 	addi	r16,sp,120
   254cc:	988003cc 	andi	r2,r19,15
   254d0:	b006973a 	slli	r3,r22,28
   254d4:	2085883a 	add	r2,r4,r2
   254d8:	9826d13a 	srli	r19,r19,4
   254dc:	10800003 	ldbu	r2,0(r2)
   254e0:	b02cd13a 	srli	r22,r22,4
   254e4:	843fffc4 	addi	r16,r16,-1
   254e8:	1ce6b03a 	or	r19,r3,r19
   254ec:	80800005 	stb	r2,0(r16)
   254f0:	9d84b03a 	or	r2,r19,r22
   254f4:	103ff51e 	bne	r2,zero,254cc <__alt_data_end+0xfffe54cc>
   254f8:	d8c02817 	ldw	r3,160(sp)
   254fc:	1c07c83a 	sub	r3,r3,r16
   25500:	d8c02e15 	stw	r3,184(sp)
   25504:	003ecc06 	br	25038 <__alt_data_end+0xfffe5038>
   25508:	18c03fcc 	andi	r3,r3,255
   2550c:	183e9f26 	beq	r3,zero,24f8c <__alt_data_end+0xfffe4f8c>
   25510:	d9c02785 	stb	r7,158(sp)
   25514:	003e9d06 	br	24f8c <__alt_data_end+0xfffe4f8c>
   25518:	00c00044 	movi	r3,1
   2551c:	01c00ac4 	movi	r7,43
   25520:	ac400007 	ldb	r17,0(r21)
   25524:	003d5e06 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   25528:	94800814 	ori	r18,r18,32
   2552c:	ac400007 	ldb	r17,0(r21)
   25530:	003d5b06 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   25534:	d8c02d17 	ldw	r3,180(sp)
   25538:	d8002785 	stb	zero,158(sp)
   2553c:	1c000017 	ldw	r16,0(r3)
   25540:	1cc00104 	addi	r19,r3,4
   25544:	80041926 	beq	r16,zero,265ac <___vfprintf_internal_r+0x1c90>
   25548:	d9002917 	ldw	r4,164(sp)
   2554c:	2003d016 	blt	r4,zero,26490 <___vfprintf_internal_r+0x1b74>
   25550:	200d883a 	mov	r6,r4
   25554:	000b883a 	mov	r5,zero
   25558:	8009883a 	mov	r4,r16
   2555c:	da003d15 	stw	r8,244(sp)
   25560:	0029c700 	call	29c70 <memchr>
   25564:	da003d17 	ldw	r8,244(sp)
   25568:	10045426 	beq	r2,zero,266bc <___vfprintf_internal_r+0x1da0>
   2556c:	1405c83a 	sub	r2,r2,r16
   25570:	d8802e15 	stw	r2,184(sp)
   25574:	1003cc16 	blt	r2,zero,264a8 <___vfprintf_internal_r+0x1b8c>
   25578:	df002783 	ldbu	fp,158(sp)
   2557c:	d8802a15 	stw	r2,168(sp)
   25580:	dcc02d15 	stw	r19,180(sp)
   25584:	d8002915 	stw	zero,164(sp)
   25588:	d8003215 	stw	zero,200(sp)
   2558c:	003eb006 	br	25050 <__alt_data_end+0xfffe5050>
   25590:	18c03fcc 	andi	r3,r3,255
   25594:	183f9b26 	beq	r3,zero,25404 <__alt_data_end+0xfffe5404>
   25598:	d9c02785 	stb	r7,158(sp)
   2559c:	003f9906 	br	25404 <__alt_data_end+0xfffe5404>
   255a0:	18c03fcc 	andi	r3,r3,255
   255a4:	1805551e 	bne	r3,zero,26afc <___vfprintf_internal_r+0x21e0>
   255a8:	014000f4 	movhi	r5,3
   255ac:	2944e604 	addi	r5,r5,5016
   255b0:	d9403915 	stw	r5,228(sp)
   255b4:	9080080c 	andi	r2,r18,32
   255b8:	103fae1e 	bne	r2,zero,25474 <__alt_data_end+0xfffe5474>
   255bc:	9080040c 	andi	r2,r18,16
   255c0:	1002de26 	beq	r2,zero,2613c <___vfprintf_internal_r+0x1820>
   255c4:	d8c02d17 	ldw	r3,180(sp)
   255c8:	002d883a 	mov	r22,zero
   255cc:	1cc00017 	ldw	r19,0(r3)
   255d0:	18c00104 	addi	r3,r3,4
   255d4:	d8c02d15 	stw	r3,180(sp)
   255d8:	003fab06 	br	25488 <__alt_data_end+0xfffe5488>
   255dc:	38803fcc 	andi	r2,r7,255
   255e0:	1080201c 	xori	r2,r2,128
   255e4:	10bfe004 	addi	r2,r2,-128
   255e8:	1002d21e 	bne	r2,zero,26134 <___vfprintf_internal_r+0x1818>
   255ec:	00c00044 	movi	r3,1
   255f0:	01c00804 	movi	r7,32
   255f4:	ac400007 	ldb	r17,0(r21)
   255f8:	003d2906 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   255fc:	94800054 	ori	r18,r18,1
   25600:	ac400007 	ldb	r17,0(r21)
   25604:	003d2606 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   25608:	18c03fcc 	andi	r3,r3,255
   2560c:	183e0526 	beq	r3,zero,24e24 <__alt_data_end+0xfffe4e24>
   25610:	d9c02785 	stb	r7,158(sp)
   25614:	003e0306 	br	24e24 <__alt_data_end+0xfffe4e24>
   25618:	94801014 	ori	r18,r18,64
   2561c:	ac400007 	ldb	r17,0(r21)
   25620:	003d1f06 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   25624:	ac400007 	ldb	r17,0(r21)
   25628:	8a438726 	beq	r17,r9,26448 <___vfprintf_internal_r+0x1b2c>
   2562c:	94800414 	ori	r18,r18,16
   25630:	003d1b06 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   25634:	18c03fcc 	andi	r3,r3,255
   25638:	1805341e 	bne	r3,zero,26b0c <___vfprintf_internal_r+0x21f0>
   2563c:	9080080c 	andi	r2,r18,32
   25640:	1002cd26 	beq	r2,zero,26178 <___vfprintf_internal_r+0x185c>
   25644:	d9402d17 	ldw	r5,180(sp)
   25648:	d9002f17 	ldw	r4,188(sp)
   2564c:	28800017 	ldw	r2,0(r5)
   25650:	2007d7fa 	srai	r3,r4,31
   25654:	29400104 	addi	r5,r5,4
   25658:	d9402d15 	stw	r5,180(sp)
   2565c:	11000015 	stw	r4,0(r2)
   25660:	10c00115 	stw	r3,4(r2)
   25664:	003ce506 	br	249fc <__alt_data_end+0xfffe49fc>
   25668:	d8c02d17 	ldw	r3,180(sp)
   2566c:	d9002d17 	ldw	r4,180(sp)
   25670:	d8002785 	stb	zero,158(sp)
   25674:	18800017 	ldw	r2,0(r3)
   25678:	21000104 	addi	r4,r4,4
   2567c:	00c00044 	movi	r3,1
   25680:	d8c02a15 	stw	r3,168(sp)
   25684:	d8801405 	stb	r2,80(sp)
   25688:	d9002d15 	stw	r4,180(sp)
   2568c:	d8c02e15 	stw	r3,184(sp)
   25690:	d8002915 	stw	zero,164(sp)
   25694:	d8003215 	stw	zero,200(sp)
   25698:	dc001404 	addi	r16,sp,80
   2569c:	0039883a 	mov	fp,zero
   256a0:	003e7206 	br	2506c <__alt_data_end+0xfffe506c>
   256a4:	010000f4 	movhi	r4,3
   256a8:	2104e604 	addi	r4,r4,5016
   256ac:	0039883a 	mov	fp,zero
   256b0:	d9003915 	stw	r4,228(sp)
   256b4:	04401e04 	movi	r17,120
   256b8:	003f8206 	br	254c4 <__alt_data_end+0xfffe54c4>
   256bc:	18c03fcc 	andi	r3,r3,255
   256c0:	1805061e 	bne	r3,zero,26adc <___vfprintf_internal_r+0x21c0>
   256c4:	883d9126 	beq	r17,zero,24d0c <__alt_data_end+0xfffe4d0c>
   256c8:	00c00044 	movi	r3,1
   256cc:	d8c02a15 	stw	r3,168(sp)
   256d0:	dc401405 	stb	r17,80(sp)
   256d4:	d8002785 	stb	zero,158(sp)
   256d8:	003fec06 	br	2568c <__alt_data_end+0xfffe568c>
   256dc:	014000f4 	movhi	r5,3
   256e0:	2944e604 	addi	r5,r5,5016
   256e4:	d9403915 	stw	r5,228(sp)
   256e8:	d8c02d15 	stw	r3,180(sp)
   256ec:	1025883a 	mov	r18,r2
   256f0:	04401e04 	movi	r17,120
   256f4:	9d84b03a 	or	r2,r19,r22
   256f8:	1000fc1e 	bne	r2,zero,25aec <___vfprintf_internal_r+0x11d0>
   256fc:	0039883a 	mov	fp,zero
   25700:	00800084 	movi	r2,2
   25704:	10803fcc 	andi	r2,r2,255
   25708:	00c00044 	movi	r3,1
   2570c:	10c20f26 	beq	r2,r3,25f4c <___vfprintf_internal_r+0x1630>
   25710:	00c00084 	movi	r3,2
   25714:	10fd6326 	beq	r2,r3,24ca4 <__alt_data_end+0xfffe4ca4>
   25718:	003e2d06 	br	24fd0 <__alt_data_end+0xfffe4fd0>
   2571c:	d8c02017 	ldw	r3,128(sp)
   25720:	003e9306 	br	25170 <__alt_data_end+0xfffe5170>
   25724:	00801944 	movi	r2,101
   25728:	14407e0e 	bge	r2,r17,25924 <___vfprintf_internal_r+0x1008>
   2572c:	d9003617 	ldw	r4,216(sp)
   25730:	d9403817 	ldw	r5,224(sp)
   25734:	000d883a 	mov	r6,zero
   25738:	000f883a 	mov	r7,zero
   2573c:	d8c03c15 	stw	r3,240(sp)
   25740:	da003d15 	stw	r8,244(sp)
   25744:	00234740 	call	23474 <__eqdf2>
   25748:	d8c03c17 	ldw	r3,240(sp)
   2574c:	da003d17 	ldw	r8,244(sp)
   25750:	1000f71e 	bne	r2,zero,25b30 <___vfprintf_internal_r+0x1214>
   25754:	d8801f17 	ldw	r2,124(sp)
   25758:	010000f4 	movhi	r4,3
   2575c:	2104ed04 	addi	r4,r4,5044
   25760:	18c00044 	addi	r3,r3,1
   25764:	10800044 	addi	r2,r2,1
   25768:	41000015 	stw	r4,0(r8)
   2576c:	01000044 	movi	r4,1
   25770:	41000115 	stw	r4,4(r8)
   25774:	d8c02015 	stw	r3,128(sp)
   25778:	d8801f15 	stw	r2,124(sp)
   2577c:	010001c4 	movi	r4,7
   25780:	2082b816 	blt	r4,r2,26264 <___vfprintf_internal_r+0x1948>
   25784:	42000204 	addi	r8,r8,8
   25788:	d8802617 	ldw	r2,152(sp)
   2578c:	d9403317 	ldw	r5,204(sp)
   25790:	11400216 	blt	r2,r5,2579c <___vfprintf_internal_r+0xe80>
   25794:	9080004c 	andi	r2,r18,1
   25798:	103ed526 	beq	r2,zero,252f0 <__alt_data_end+0xfffe52f0>
   2579c:	d8803717 	ldw	r2,220(sp)
   257a0:	d9003417 	ldw	r4,208(sp)
   257a4:	d9403717 	ldw	r5,220(sp)
   257a8:	1887883a 	add	r3,r3,r2
   257ac:	d8801f17 	ldw	r2,124(sp)
   257b0:	41000015 	stw	r4,0(r8)
   257b4:	41400115 	stw	r5,4(r8)
   257b8:	10800044 	addi	r2,r2,1
   257bc:	d8c02015 	stw	r3,128(sp)
   257c0:	d8801f15 	stw	r2,124(sp)
   257c4:	010001c4 	movi	r4,7
   257c8:	20832916 	blt	r4,r2,26470 <___vfprintf_internal_r+0x1b54>
   257cc:	42000204 	addi	r8,r8,8
   257d0:	d8803317 	ldw	r2,204(sp)
   257d4:	143fffc4 	addi	r16,r2,-1
   257d8:	043ec50e 	bge	zero,r16,252f0 <__alt_data_end+0xfffe52f0>
   257dc:	04400404 	movi	r17,16
   257e0:	d8801f17 	ldw	r2,124(sp)
   257e4:	8c00880e 	bge	r17,r16,25a08 <___vfprintf_internal_r+0x10ec>
   257e8:	014000f4 	movhi	r5,3
   257ec:	2944ed84 	addi	r5,r5,5046
   257f0:	d9402b15 	stw	r5,172(sp)
   257f4:	058001c4 	movi	r22,7
   257f8:	dcc02c17 	ldw	r19,176(sp)
   257fc:	00000306 	br	2580c <___vfprintf_internal_r+0xef0>
   25800:	42000204 	addi	r8,r8,8
   25804:	843ffc04 	addi	r16,r16,-16
   25808:	8c00820e 	bge	r17,r16,25a14 <___vfprintf_internal_r+0x10f8>
   2580c:	18c00404 	addi	r3,r3,16
   25810:	10800044 	addi	r2,r2,1
   25814:	45000015 	stw	r20,0(r8)
   25818:	44400115 	stw	r17,4(r8)
   2581c:	d8c02015 	stw	r3,128(sp)
   25820:	d8801f15 	stw	r2,124(sp)
   25824:	b0bff60e 	bge	r22,r2,25800 <__alt_data_end+0xfffe5800>
   25828:	d9801e04 	addi	r6,sp,120
   2582c:	b80b883a 	mov	r5,r23
   25830:	9809883a 	mov	r4,r19
   25834:	002b3c00 	call	2b3c0 <__sprint_r>
   25838:	103d3a1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   2583c:	d8c02017 	ldw	r3,128(sp)
   25840:	d8801f17 	ldw	r2,124(sp)
   25844:	da000404 	addi	r8,sp,16
   25848:	003fee06 	br	25804 <__alt_data_end+0xfffe5804>
   2584c:	d9403117 	ldw	r5,196(sp)
   25850:	d8802a17 	ldw	r2,168(sp)
   25854:	28adc83a 	sub	r22,r5,r2
   25858:	05be630e 	bge	zero,r22,251e8 <__alt_data_end+0xfffe51e8>
   2585c:	07000404 	movi	fp,16
   25860:	d8801f17 	ldw	r2,124(sp)
   25864:	e5838f0e 	bge	fp,r22,266a4 <___vfprintf_internal_r+0x1d88>
   25868:	014000f4 	movhi	r5,3
   2586c:	2944ed84 	addi	r5,r5,5046
   25870:	dc403015 	stw	r17,192(sp)
   25874:	d9402b15 	stw	r5,172(sp)
   25878:	b023883a 	mov	r17,r22
   2587c:	04c001c4 	movi	r19,7
   25880:	a82d883a 	mov	r22,r21
   25884:	902b883a 	mov	r21,r18
   25888:	8025883a 	mov	r18,r16
   2588c:	dc002c17 	ldw	r16,176(sp)
   25890:	00000306 	br	258a0 <___vfprintf_internal_r+0xf84>
   25894:	8c7ffc04 	addi	r17,r17,-16
   25898:	42000204 	addi	r8,r8,8
   2589c:	e440110e 	bge	fp,r17,258e4 <___vfprintf_internal_r+0xfc8>
   258a0:	18c00404 	addi	r3,r3,16
   258a4:	10800044 	addi	r2,r2,1
   258a8:	45000015 	stw	r20,0(r8)
   258ac:	47000115 	stw	fp,4(r8)
   258b0:	d8c02015 	stw	r3,128(sp)
   258b4:	d8801f15 	stw	r2,124(sp)
   258b8:	98bff60e 	bge	r19,r2,25894 <__alt_data_end+0xfffe5894>
   258bc:	d9801e04 	addi	r6,sp,120
   258c0:	b80b883a 	mov	r5,r23
   258c4:	8009883a 	mov	r4,r16
   258c8:	002b3c00 	call	2b3c0 <__sprint_r>
   258cc:	103d151e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   258d0:	8c7ffc04 	addi	r17,r17,-16
   258d4:	d8c02017 	ldw	r3,128(sp)
   258d8:	d8801f17 	ldw	r2,124(sp)
   258dc:	da000404 	addi	r8,sp,16
   258e0:	e47fef16 	blt	fp,r17,258a0 <__alt_data_end+0xfffe58a0>
   258e4:	9021883a 	mov	r16,r18
   258e8:	a825883a 	mov	r18,r21
   258ec:	b02b883a 	mov	r21,r22
   258f0:	882d883a 	mov	r22,r17
   258f4:	dc403017 	ldw	r17,192(sp)
   258f8:	d9002b17 	ldw	r4,172(sp)
   258fc:	1d87883a 	add	r3,r3,r22
   25900:	10800044 	addi	r2,r2,1
   25904:	41000015 	stw	r4,0(r8)
   25908:	45800115 	stw	r22,4(r8)
   2590c:	d8c02015 	stw	r3,128(sp)
   25910:	d8801f15 	stw	r2,124(sp)
   25914:	010001c4 	movi	r4,7
   25918:	20818e16 	blt	r4,r2,25f54 <___vfprintf_internal_r+0x1638>
   2591c:	42000204 	addi	r8,r8,8
   25920:	003e3106 	br	251e8 <__alt_data_end+0xfffe51e8>
   25924:	d9403317 	ldw	r5,204(sp)
   25928:	00800044 	movi	r2,1
   2592c:	18c00044 	addi	r3,r3,1
   25930:	1141530e 	bge	r2,r5,25e80 <___vfprintf_internal_r+0x1564>
   25934:	dc401f17 	ldw	r17,124(sp)
   25938:	00800044 	movi	r2,1
   2593c:	40800115 	stw	r2,4(r8)
   25940:	8c400044 	addi	r17,r17,1
   25944:	44000015 	stw	r16,0(r8)
   25948:	d8c02015 	stw	r3,128(sp)
   2594c:	dc401f15 	stw	r17,124(sp)
   25950:	008001c4 	movi	r2,7
   25954:	14416b16 	blt	r2,r17,25f04 <___vfprintf_internal_r+0x15e8>
   25958:	42000204 	addi	r8,r8,8
   2595c:	d8803717 	ldw	r2,220(sp)
   25960:	d9003417 	ldw	r4,208(sp)
   25964:	8c400044 	addi	r17,r17,1
   25968:	10c7883a 	add	r3,r2,r3
   2596c:	40800115 	stw	r2,4(r8)
   25970:	41000015 	stw	r4,0(r8)
   25974:	d8c02015 	stw	r3,128(sp)
   25978:	dc401f15 	stw	r17,124(sp)
   2597c:	008001c4 	movi	r2,7
   25980:	14416916 	blt	r2,r17,25f28 <___vfprintf_internal_r+0x160c>
   25984:	45800204 	addi	r22,r8,8
   25988:	d9003617 	ldw	r4,216(sp)
   2598c:	d9403817 	ldw	r5,224(sp)
   25990:	000d883a 	mov	r6,zero
   25994:	000f883a 	mov	r7,zero
   25998:	d8c03c15 	stw	r3,240(sp)
   2599c:	00234740 	call	23474 <__eqdf2>
   259a0:	d8c03c17 	ldw	r3,240(sp)
   259a4:	1000bc26 	beq	r2,zero,25c98 <___vfprintf_internal_r+0x137c>
   259a8:	d9403317 	ldw	r5,204(sp)
   259ac:	84000044 	addi	r16,r16,1
   259b0:	8c400044 	addi	r17,r17,1
   259b4:	28bfffc4 	addi	r2,r5,-1
   259b8:	1887883a 	add	r3,r3,r2
   259bc:	b0800115 	stw	r2,4(r22)
   259c0:	b4000015 	stw	r16,0(r22)
   259c4:	d8c02015 	stw	r3,128(sp)
   259c8:	dc401f15 	stw	r17,124(sp)
   259cc:	008001c4 	movi	r2,7
   259d0:	14414316 	blt	r2,r17,25ee0 <___vfprintf_internal_r+0x15c4>
   259d4:	b5800204 	addi	r22,r22,8
   259d8:	d9003a17 	ldw	r4,232(sp)
   259dc:	df0022c4 	addi	fp,sp,139
   259e0:	8c400044 	addi	r17,r17,1
   259e4:	20c7883a 	add	r3,r4,r3
   259e8:	b7000015 	stw	fp,0(r22)
   259ec:	b1000115 	stw	r4,4(r22)
   259f0:	d8c02015 	stw	r3,128(sp)
   259f4:	dc401f15 	stw	r17,124(sp)
   259f8:	008001c4 	movi	r2,7
   259fc:	14400e16 	blt	r2,r17,25a38 <___vfprintf_internal_r+0x111c>
   25a00:	b2000204 	addi	r8,r22,8
   25a04:	003e3a06 	br	252f0 <__alt_data_end+0xfffe52f0>
   25a08:	010000f4 	movhi	r4,3
   25a0c:	2104ed84 	addi	r4,r4,5046
   25a10:	d9002b15 	stw	r4,172(sp)
   25a14:	d9002b17 	ldw	r4,172(sp)
   25a18:	1c07883a 	add	r3,r3,r16
   25a1c:	44000115 	stw	r16,4(r8)
   25a20:	41000015 	stw	r4,0(r8)
   25a24:	10800044 	addi	r2,r2,1
   25a28:	d8c02015 	stw	r3,128(sp)
   25a2c:	d8801f15 	stw	r2,124(sp)
   25a30:	010001c4 	movi	r4,7
   25a34:	20be2d0e 	bge	r4,r2,252ec <__alt_data_end+0xfffe52ec>
   25a38:	d9002c17 	ldw	r4,176(sp)
   25a3c:	d9801e04 	addi	r6,sp,120
   25a40:	b80b883a 	mov	r5,r23
   25a44:	002b3c00 	call	2b3c0 <__sprint_r>
   25a48:	103cb61e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25a4c:	d8c02017 	ldw	r3,128(sp)
   25a50:	da000404 	addi	r8,sp,16
   25a54:	003e2606 	br	252f0 <__alt_data_end+0xfffe52f0>
   25a58:	d9002c17 	ldw	r4,176(sp)
   25a5c:	d9801e04 	addi	r6,sp,120
   25a60:	b80b883a 	mov	r5,r23
   25a64:	002b3c00 	call	2b3c0 <__sprint_r>
   25a68:	103e5d26 	beq	r2,zero,253e0 <__alt_data_end+0xfffe53e0>
   25a6c:	003cad06 	br	24d24 <__alt_data_end+0xfffe4d24>
   25a70:	d9002c17 	ldw	r4,176(sp)
   25a74:	d9801e04 	addi	r6,sp,120
   25a78:	b80b883a 	mov	r5,r23
   25a7c:	002b3c00 	call	2b3c0 <__sprint_r>
   25a80:	103ca81e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25a84:	d8c02017 	ldw	r3,128(sp)
   25a88:	da000404 	addi	r8,sp,16
   25a8c:	003e0b06 	br	252bc <__alt_data_end+0xfffe52bc>
   25a90:	d9002c17 	ldw	r4,176(sp)
   25a94:	d9801e04 	addi	r6,sp,120
   25a98:	b80b883a 	mov	r5,r23
   25a9c:	002b3c00 	call	2b3c0 <__sprint_r>
   25aa0:	103ca01e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25aa4:	d8c02017 	ldw	r3,128(sp)
   25aa8:	da000404 	addi	r8,sp,16
   25aac:	003dbd06 	br	251a4 <__alt_data_end+0xfffe51a4>
   25ab0:	d9002c17 	ldw	r4,176(sp)
   25ab4:	d9801e04 	addi	r6,sp,120
   25ab8:	b80b883a 	mov	r5,r23
   25abc:	002b3c00 	call	2b3c0 <__sprint_r>
   25ac0:	103c981e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25ac4:	d8c02017 	ldw	r3,128(sp)
   25ac8:	da000404 	addi	r8,sp,16
   25acc:	003dc306 	br	251dc <__alt_data_end+0xfffe51dc>
   25ad0:	d8802917 	ldw	r2,164(sp)
   25ad4:	d8002785 	stb	zero,158(sp)
   25ad8:	103f0616 	blt	r2,zero,256f4 <__alt_data_end+0xfffe56f4>
   25adc:	00ffdfc4 	movi	r3,-129
   25ae0:	9d84b03a 	or	r2,r19,r22
   25ae4:	90e4703a 	and	r18,r18,r3
   25ae8:	103c6b26 	beq	r2,zero,24c98 <__alt_data_end+0xfffe4c98>
   25aec:	0039883a 	mov	fp,zero
   25af0:	003e7406 	br	254c4 <__alt_data_end+0xfffe54c4>
   25af4:	9080040c 	andi	r2,r18,16
   25af8:	1001b326 	beq	r2,zero,261c8 <___vfprintf_internal_r+0x18ac>
   25afc:	d9002d17 	ldw	r4,180(sp)
   25b00:	d9402917 	ldw	r5,164(sp)
   25b04:	d8002785 	stb	zero,158(sp)
   25b08:	20800104 	addi	r2,r4,4
   25b0c:	24c00017 	ldw	r19,0(r4)
   25b10:	002d883a 	mov	r22,zero
   25b14:	2801b516 	blt	r5,zero,261ec <___vfprintf_internal_r+0x18d0>
   25b18:	00ffdfc4 	movi	r3,-129
   25b1c:	d8802d15 	stw	r2,180(sp)
   25b20:	90e4703a 	and	r18,r18,r3
   25b24:	983d2726 	beq	r19,zero,24fc4 <__alt_data_end+0xfffe4fc4>
   25b28:	0039883a 	mov	fp,zero
   25b2c:	003d2a06 	br	24fd8 <__alt_data_end+0xfffe4fd8>
   25b30:	dc402617 	ldw	r17,152(sp)
   25b34:	0441d30e 	bge	zero,r17,26284 <___vfprintf_internal_r+0x1968>
   25b38:	dc403217 	ldw	r17,200(sp)
   25b3c:	d8803317 	ldw	r2,204(sp)
   25b40:	1440010e 	bge	r2,r17,25b48 <___vfprintf_internal_r+0x122c>
   25b44:	1023883a 	mov	r17,r2
   25b48:	04400a0e 	bge	zero,r17,25b74 <___vfprintf_internal_r+0x1258>
   25b4c:	d8801f17 	ldw	r2,124(sp)
   25b50:	1c47883a 	add	r3,r3,r17
   25b54:	44000015 	stw	r16,0(r8)
   25b58:	10800044 	addi	r2,r2,1
   25b5c:	44400115 	stw	r17,4(r8)
   25b60:	d8c02015 	stw	r3,128(sp)
   25b64:	d8801f15 	stw	r2,124(sp)
   25b68:	010001c4 	movi	r4,7
   25b6c:	20826516 	blt	r4,r2,26504 <___vfprintf_internal_r+0x1be8>
   25b70:	42000204 	addi	r8,r8,8
   25b74:	88026116 	blt	r17,zero,264fc <___vfprintf_internal_r+0x1be0>
   25b78:	d9003217 	ldw	r4,200(sp)
   25b7c:	2463c83a 	sub	r17,r4,r17
   25b80:	04407b0e 	bge	zero,r17,25d70 <___vfprintf_internal_r+0x1454>
   25b84:	05800404 	movi	r22,16
   25b88:	d8801f17 	ldw	r2,124(sp)
   25b8c:	b4419d0e 	bge	r22,r17,26204 <___vfprintf_internal_r+0x18e8>
   25b90:	010000f4 	movhi	r4,3
   25b94:	2104ed84 	addi	r4,r4,5046
   25b98:	d9002b15 	stw	r4,172(sp)
   25b9c:	070001c4 	movi	fp,7
   25ba0:	dcc02c17 	ldw	r19,176(sp)
   25ba4:	00000306 	br	25bb4 <___vfprintf_internal_r+0x1298>
   25ba8:	42000204 	addi	r8,r8,8
   25bac:	8c7ffc04 	addi	r17,r17,-16
   25bb0:	b441970e 	bge	r22,r17,26210 <___vfprintf_internal_r+0x18f4>
   25bb4:	18c00404 	addi	r3,r3,16
   25bb8:	10800044 	addi	r2,r2,1
   25bbc:	45000015 	stw	r20,0(r8)
   25bc0:	45800115 	stw	r22,4(r8)
   25bc4:	d8c02015 	stw	r3,128(sp)
   25bc8:	d8801f15 	stw	r2,124(sp)
   25bcc:	e0bff60e 	bge	fp,r2,25ba8 <__alt_data_end+0xfffe5ba8>
   25bd0:	d9801e04 	addi	r6,sp,120
   25bd4:	b80b883a 	mov	r5,r23
   25bd8:	9809883a 	mov	r4,r19
   25bdc:	002b3c00 	call	2b3c0 <__sprint_r>
   25be0:	103c501e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25be4:	d8c02017 	ldw	r3,128(sp)
   25be8:	d8801f17 	ldw	r2,124(sp)
   25bec:	da000404 	addi	r8,sp,16
   25bf0:	003fee06 	br	25bac <__alt_data_end+0xfffe5bac>
   25bf4:	d9002c17 	ldw	r4,176(sp)
   25bf8:	d9801e04 	addi	r6,sp,120
   25bfc:	b80b883a 	mov	r5,r23
   25c00:	002b3c00 	call	2b3c0 <__sprint_r>
   25c04:	103c471e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25c08:	d8c02017 	ldw	r3,128(sp)
   25c0c:	df002787 	ldb	fp,158(sp)
   25c10:	da000404 	addi	r8,sp,16
   25c14:	003d5606 	br	25170 <__alt_data_end+0xfffe5170>
   25c18:	9080040c 	andi	r2,r18,16
   25c1c:	10016126 	beq	r2,zero,261a4 <___vfprintf_internal_r+0x1888>
   25c20:	d8802d17 	ldw	r2,180(sp)
   25c24:	14c00017 	ldw	r19,0(r2)
   25c28:	10800104 	addi	r2,r2,4
   25c2c:	d8802d15 	stw	r2,180(sp)
   25c30:	982dd7fa 	srai	r22,r19,31
   25c34:	b005883a 	mov	r2,r22
   25c38:	003c8206 	br	24e44 <__alt_data_end+0xfffe4e44>
   25c3c:	9080040c 	andi	r2,r18,16
   25c40:	10003526 	beq	r2,zero,25d18 <___vfprintf_internal_r+0x13fc>
   25c44:	d9402d17 	ldw	r5,180(sp)
   25c48:	d8c02917 	ldw	r3,164(sp)
   25c4c:	d8002785 	stb	zero,158(sp)
   25c50:	28800104 	addi	r2,r5,4
   25c54:	2cc00017 	ldw	r19,0(r5)
   25c58:	002d883a 	mov	r22,zero
   25c5c:	18003716 	blt	r3,zero,25d3c <___vfprintf_internal_r+0x1420>
   25c60:	00ffdfc4 	movi	r3,-129
   25c64:	d8802d15 	stw	r2,180(sp)
   25c68:	90e4703a 	and	r18,r18,r3
   25c6c:	0039883a 	mov	fp,zero
   25c70:	983df326 	beq	r19,zero,25440 <__alt_data_end+0xfffe5440>
   25c74:	00800244 	movi	r2,9
   25c78:	14fc7b36 	bltu	r2,r19,24e68 <__alt_data_end+0xfffe4e68>
   25c7c:	d8c02817 	ldw	r3,160(sp)
   25c80:	dc001dc4 	addi	r16,sp,119
   25c84:	9cc00c04 	addi	r19,r19,48
   25c88:	1c07c83a 	sub	r3,r3,r16
   25c8c:	dcc01dc5 	stb	r19,119(sp)
   25c90:	d8c02e15 	stw	r3,184(sp)
   25c94:	003ce806 	br	25038 <__alt_data_end+0xfffe5038>
   25c98:	d8803317 	ldw	r2,204(sp)
   25c9c:	143fffc4 	addi	r16,r2,-1
   25ca0:	043f4d0e 	bge	zero,r16,259d8 <__alt_data_end+0xfffe59d8>
   25ca4:	07000404 	movi	fp,16
   25ca8:	e400810e 	bge	fp,r16,25eb0 <___vfprintf_internal_r+0x1594>
   25cac:	014000f4 	movhi	r5,3
   25cb0:	2944ed84 	addi	r5,r5,5046
   25cb4:	d9402b15 	stw	r5,172(sp)
   25cb8:	01c001c4 	movi	r7,7
   25cbc:	dcc02c17 	ldw	r19,176(sp)
   25cc0:	00000306 	br	25cd0 <___vfprintf_internal_r+0x13b4>
   25cc4:	b5800204 	addi	r22,r22,8
   25cc8:	843ffc04 	addi	r16,r16,-16
   25ccc:	e4007b0e 	bge	fp,r16,25ebc <___vfprintf_internal_r+0x15a0>
   25cd0:	18c00404 	addi	r3,r3,16
   25cd4:	8c400044 	addi	r17,r17,1
   25cd8:	b5000015 	stw	r20,0(r22)
   25cdc:	b7000115 	stw	fp,4(r22)
   25ce0:	d8c02015 	stw	r3,128(sp)
   25ce4:	dc401f15 	stw	r17,124(sp)
   25ce8:	3c7ff60e 	bge	r7,r17,25cc4 <__alt_data_end+0xfffe5cc4>
   25cec:	d9801e04 	addi	r6,sp,120
   25cf0:	b80b883a 	mov	r5,r23
   25cf4:	9809883a 	mov	r4,r19
   25cf8:	d9c03c15 	stw	r7,240(sp)
   25cfc:	002b3c00 	call	2b3c0 <__sprint_r>
   25d00:	d9c03c17 	ldw	r7,240(sp)
   25d04:	103c071e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25d08:	d8c02017 	ldw	r3,128(sp)
   25d0c:	dc401f17 	ldw	r17,124(sp)
   25d10:	dd800404 	addi	r22,sp,16
   25d14:	003fec06 	br	25cc8 <__alt_data_end+0xfffe5cc8>
   25d18:	9080100c 	andi	r2,r18,64
   25d1c:	d8002785 	stb	zero,158(sp)
   25d20:	10010e26 	beq	r2,zero,2615c <___vfprintf_internal_r+0x1840>
   25d24:	d9002d17 	ldw	r4,180(sp)
   25d28:	d9402917 	ldw	r5,164(sp)
   25d2c:	002d883a 	mov	r22,zero
   25d30:	20800104 	addi	r2,r4,4
   25d34:	24c0000b 	ldhu	r19,0(r4)
   25d38:	283fc90e 	bge	r5,zero,25c60 <__alt_data_end+0xfffe5c60>
   25d3c:	d8802d15 	stw	r2,180(sp)
   25d40:	0039883a 	mov	fp,zero
   25d44:	9d84b03a 	or	r2,r19,r22
   25d48:	103c461e 	bne	r2,zero,24e64 <__alt_data_end+0xfffe4e64>
   25d4c:	00800044 	movi	r2,1
   25d50:	003e6c06 	br	25704 <__alt_data_end+0xfffe5704>
   25d54:	d9002c17 	ldw	r4,176(sp)
   25d58:	d9801e04 	addi	r6,sp,120
   25d5c:	b80b883a 	mov	r5,r23
   25d60:	002b3c00 	call	2b3c0 <__sprint_r>
   25d64:	103bef1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25d68:	d8c02017 	ldw	r3,128(sp)
   25d6c:	da000404 	addi	r8,sp,16
   25d70:	d9003217 	ldw	r4,200(sp)
   25d74:	d8802617 	ldw	r2,152(sp)
   25d78:	d9403317 	ldw	r5,204(sp)
   25d7c:	8123883a 	add	r17,r16,r4
   25d80:	11400216 	blt	r2,r5,25d8c <___vfprintf_internal_r+0x1470>
   25d84:	9100004c 	andi	r4,r18,1
   25d88:	20000d26 	beq	r4,zero,25dc0 <___vfprintf_internal_r+0x14a4>
   25d8c:	d9003717 	ldw	r4,220(sp)
   25d90:	d9403417 	ldw	r5,208(sp)
   25d94:	1907883a 	add	r3,r3,r4
   25d98:	d9001f17 	ldw	r4,124(sp)
   25d9c:	41400015 	stw	r5,0(r8)
   25da0:	d9403717 	ldw	r5,220(sp)
   25da4:	21000044 	addi	r4,r4,1
   25da8:	d8c02015 	stw	r3,128(sp)
   25dac:	41400115 	stw	r5,4(r8)
   25db0:	d9001f15 	stw	r4,124(sp)
   25db4:	014001c4 	movi	r5,7
   25db8:	2901e816 	blt	r5,r4,2655c <___vfprintf_internal_r+0x1c40>
   25dbc:	42000204 	addi	r8,r8,8
   25dc0:	d9003317 	ldw	r4,204(sp)
   25dc4:	8121883a 	add	r16,r16,r4
   25dc8:	2085c83a 	sub	r2,r4,r2
   25dcc:	8461c83a 	sub	r16,r16,r17
   25dd0:	1400010e 	bge	r2,r16,25dd8 <___vfprintf_internal_r+0x14bc>
   25dd4:	1021883a 	mov	r16,r2
   25dd8:	04000a0e 	bge	zero,r16,25e04 <___vfprintf_internal_r+0x14e8>
   25ddc:	d9001f17 	ldw	r4,124(sp)
   25de0:	1c07883a 	add	r3,r3,r16
   25de4:	44400015 	stw	r17,0(r8)
   25de8:	21000044 	addi	r4,r4,1
   25dec:	44000115 	stw	r16,4(r8)
   25df0:	d8c02015 	stw	r3,128(sp)
   25df4:	d9001f15 	stw	r4,124(sp)
   25df8:	014001c4 	movi	r5,7
   25dfc:	2901fb16 	blt	r5,r4,265ec <___vfprintf_internal_r+0x1cd0>
   25e00:	42000204 	addi	r8,r8,8
   25e04:	8001f716 	blt	r16,zero,265e4 <___vfprintf_internal_r+0x1cc8>
   25e08:	1421c83a 	sub	r16,r2,r16
   25e0c:	043d380e 	bge	zero,r16,252f0 <__alt_data_end+0xfffe52f0>
   25e10:	04400404 	movi	r17,16
   25e14:	d8801f17 	ldw	r2,124(sp)
   25e18:	8c3efb0e 	bge	r17,r16,25a08 <__alt_data_end+0xfffe5a08>
   25e1c:	014000f4 	movhi	r5,3
   25e20:	2944ed84 	addi	r5,r5,5046
   25e24:	d9402b15 	stw	r5,172(sp)
   25e28:	058001c4 	movi	r22,7
   25e2c:	dcc02c17 	ldw	r19,176(sp)
   25e30:	00000306 	br	25e40 <___vfprintf_internal_r+0x1524>
   25e34:	42000204 	addi	r8,r8,8
   25e38:	843ffc04 	addi	r16,r16,-16
   25e3c:	8c3ef50e 	bge	r17,r16,25a14 <__alt_data_end+0xfffe5a14>
   25e40:	18c00404 	addi	r3,r3,16
   25e44:	10800044 	addi	r2,r2,1
   25e48:	45000015 	stw	r20,0(r8)
   25e4c:	44400115 	stw	r17,4(r8)
   25e50:	d8c02015 	stw	r3,128(sp)
   25e54:	d8801f15 	stw	r2,124(sp)
   25e58:	b0bff60e 	bge	r22,r2,25e34 <__alt_data_end+0xfffe5e34>
   25e5c:	d9801e04 	addi	r6,sp,120
   25e60:	b80b883a 	mov	r5,r23
   25e64:	9809883a 	mov	r4,r19
   25e68:	002b3c00 	call	2b3c0 <__sprint_r>
   25e6c:	103bad1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25e70:	d8c02017 	ldw	r3,128(sp)
   25e74:	d8801f17 	ldw	r2,124(sp)
   25e78:	da000404 	addi	r8,sp,16
   25e7c:	003fee06 	br	25e38 <__alt_data_end+0xfffe5e38>
   25e80:	9088703a 	and	r4,r18,r2
   25e84:	203eab1e 	bne	r4,zero,25934 <__alt_data_end+0xfffe5934>
   25e88:	dc401f17 	ldw	r17,124(sp)
   25e8c:	40800115 	stw	r2,4(r8)
   25e90:	44000015 	stw	r16,0(r8)
   25e94:	8c400044 	addi	r17,r17,1
   25e98:	d8c02015 	stw	r3,128(sp)
   25e9c:	dc401f15 	stw	r17,124(sp)
   25ea0:	008001c4 	movi	r2,7
   25ea4:	14400e16 	blt	r2,r17,25ee0 <___vfprintf_internal_r+0x15c4>
   25ea8:	45800204 	addi	r22,r8,8
   25eac:	003eca06 	br	259d8 <__alt_data_end+0xfffe59d8>
   25eb0:	010000f4 	movhi	r4,3
   25eb4:	2104ed84 	addi	r4,r4,5046
   25eb8:	d9002b15 	stw	r4,172(sp)
   25ebc:	d8802b17 	ldw	r2,172(sp)
   25ec0:	1c07883a 	add	r3,r3,r16
   25ec4:	8c400044 	addi	r17,r17,1
   25ec8:	b0800015 	stw	r2,0(r22)
   25ecc:	b4000115 	stw	r16,4(r22)
   25ed0:	d8c02015 	stw	r3,128(sp)
   25ed4:	dc401f15 	stw	r17,124(sp)
   25ed8:	008001c4 	movi	r2,7
   25edc:	147ebd0e 	bge	r2,r17,259d4 <__alt_data_end+0xfffe59d4>
   25ee0:	d9002c17 	ldw	r4,176(sp)
   25ee4:	d9801e04 	addi	r6,sp,120
   25ee8:	b80b883a 	mov	r5,r23
   25eec:	002b3c00 	call	2b3c0 <__sprint_r>
   25ef0:	103b8c1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25ef4:	d8c02017 	ldw	r3,128(sp)
   25ef8:	dc401f17 	ldw	r17,124(sp)
   25efc:	dd800404 	addi	r22,sp,16
   25f00:	003eb506 	br	259d8 <__alt_data_end+0xfffe59d8>
   25f04:	d9002c17 	ldw	r4,176(sp)
   25f08:	d9801e04 	addi	r6,sp,120
   25f0c:	b80b883a 	mov	r5,r23
   25f10:	002b3c00 	call	2b3c0 <__sprint_r>
   25f14:	103b831e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25f18:	d8c02017 	ldw	r3,128(sp)
   25f1c:	dc401f17 	ldw	r17,124(sp)
   25f20:	da000404 	addi	r8,sp,16
   25f24:	003e8d06 	br	2595c <__alt_data_end+0xfffe595c>
   25f28:	d9002c17 	ldw	r4,176(sp)
   25f2c:	d9801e04 	addi	r6,sp,120
   25f30:	b80b883a 	mov	r5,r23
   25f34:	002b3c00 	call	2b3c0 <__sprint_r>
   25f38:	103b7a1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25f3c:	d8c02017 	ldw	r3,128(sp)
   25f40:	dc401f17 	ldw	r17,124(sp)
   25f44:	dd800404 	addi	r22,sp,16
   25f48:	003e8f06 	br	25988 <__alt_data_end+0xfffe5988>
   25f4c:	0027883a 	mov	r19,zero
   25f50:	003f4a06 	br	25c7c <__alt_data_end+0xfffe5c7c>
   25f54:	d9002c17 	ldw	r4,176(sp)
   25f58:	d9801e04 	addi	r6,sp,120
   25f5c:	b80b883a 	mov	r5,r23
   25f60:	002b3c00 	call	2b3c0 <__sprint_r>
   25f64:	103b6f1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   25f68:	d8c02017 	ldw	r3,128(sp)
   25f6c:	da000404 	addi	r8,sp,16
   25f70:	003c9d06 	br	251e8 <__alt_data_end+0xfffe51e8>
   25f74:	04e7c83a 	sub	r19,zero,r19
   25f78:	9804c03a 	cmpne	r2,r19,zero
   25f7c:	05adc83a 	sub	r22,zero,r22
   25f80:	b0adc83a 	sub	r22,r22,r2
   25f84:	d8802917 	ldw	r2,164(sp)
   25f88:	07000b44 	movi	fp,45
   25f8c:	df002785 	stb	fp,158(sp)
   25f90:	10017b16 	blt	r2,zero,26580 <___vfprintf_internal_r+0x1c64>
   25f94:	00bfdfc4 	movi	r2,-129
   25f98:	90a4703a 	and	r18,r18,r2
   25f9c:	003bb106 	br	24e64 <__alt_data_end+0xfffe4e64>
   25fa0:	d9003617 	ldw	r4,216(sp)
   25fa4:	d9403817 	ldw	r5,224(sp)
   25fa8:	da003d15 	stw	r8,244(sp)
   25fac:	0021d000 	call	21d00 <__fpclassifyd>
   25fb0:	da003d17 	ldw	r8,244(sp)
   25fb4:	1000f026 	beq	r2,zero,26378 <___vfprintf_internal_r+0x1a5c>
   25fb8:	d9002917 	ldw	r4,164(sp)
   25fbc:	05bff7c4 	movi	r22,-33
   25fc0:	00bfffc4 	movi	r2,-1
   25fc4:	8dac703a 	and	r22,r17,r22
   25fc8:	20820026 	beq	r4,r2,267cc <___vfprintf_internal_r+0x1eb0>
   25fcc:	008011c4 	movi	r2,71
   25fd0:	b081f726 	beq	r22,r2,267b0 <___vfprintf_internal_r+0x1e94>
   25fd4:	d9003817 	ldw	r4,224(sp)
   25fd8:	90c04014 	ori	r3,r18,256
   25fdc:	d8c02b15 	stw	r3,172(sp)
   25fe0:	20021516 	blt	r4,zero,26838 <___vfprintf_internal_r+0x1f1c>
   25fe4:	dcc03817 	ldw	r19,224(sp)
   25fe8:	d8002a05 	stb	zero,168(sp)
   25fec:	00801984 	movi	r2,102
   25ff0:	8881f926 	beq	r17,r2,267d8 <___vfprintf_internal_r+0x1ebc>
   25ff4:	00801184 	movi	r2,70
   25ff8:	88821c26 	beq	r17,r2,2686c <___vfprintf_internal_r+0x1f50>
   25ffc:	00801144 	movi	r2,69
   26000:	b081ef26 	beq	r22,r2,267c0 <___vfprintf_internal_r+0x1ea4>
   26004:	d8c02917 	ldw	r3,164(sp)
   26008:	d8802104 	addi	r2,sp,132
   2600c:	d8800315 	stw	r2,12(sp)
   26010:	d9403617 	ldw	r5,216(sp)
   26014:	d8802504 	addi	r2,sp,148
   26018:	d9002c17 	ldw	r4,176(sp)
   2601c:	d8800215 	stw	r2,8(sp)
   26020:	d8802604 	addi	r2,sp,152
   26024:	d8c00015 	stw	r3,0(sp)
   26028:	d8800115 	stw	r2,4(sp)
   2602c:	01c00084 	movi	r7,2
   26030:	980d883a 	mov	r6,r19
   26034:	d8c03c15 	stw	r3,240(sp)
   26038:	da003d15 	stw	r8,244(sp)
   2603c:	0026f400 	call	26f40 <_dtoa_r>
   26040:	1021883a 	mov	r16,r2
   26044:	008019c4 	movi	r2,103
   26048:	d8c03c17 	ldw	r3,240(sp)
   2604c:	da003d17 	ldw	r8,244(sp)
   26050:	88817126 	beq	r17,r2,26618 <___vfprintf_internal_r+0x1cfc>
   26054:	008011c4 	movi	r2,71
   26058:	88829226 	beq	r17,r2,26aa4 <___vfprintf_internal_r+0x2188>
   2605c:	80f9883a 	add	fp,r16,r3
   26060:	d9003617 	ldw	r4,216(sp)
   26064:	000d883a 	mov	r6,zero
   26068:	000f883a 	mov	r7,zero
   2606c:	980b883a 	mov	r5,r19
   26070:	da003d15 	stw	r8,244(sp)
   26074:	00234740 	call	23474 <__eqdf2>
   26078:	da003d17 	ldw	r8,244(sp)
   2607c:	10018d26 	beq	r2,zero,266b4 <___vfprintf_internal_r+0x1d98>
   26080:	d8802117 	ldw	r2,132(sp)
   26084:	1700062e 	bgeu	r2,fp,260a0 <___vfprintf_internal_r+0x1784>
   26088:	01000c04 	movi	r4,48
   2608c:	10c00044 	addi	r3,r2,1
   26090:	d8c02115 	stw	r3,132(sp)
   26094:	11000005 	stb	r4,0(r2)
   26098:	d8802117 	ldw	r2,132(sp)
   2609c:	173ffb36 	bltu	r2,fp,2608c <__alt_data_end+0xfffe608c>
   260a0:	1405c83a 	sub	r2,r2,r16
   260a4:	d8803315 	stw	r2,204(sp)
   260a8:	008011c4 	movi	r2,71
   260ac:	b0817626 	beq	r22,r2,26688 <___vfprintf_internal_r+0x1d6c>
   260b0:	00801944 	movi	r2,101
   260b4:	1442810e 	bge	r2,r17,26abc <___vfprintf_internal_r+0x21a0>
   260b8:	d8c02617 	ldw	r3,152(sp)
   260bc:	00801984 	movi	r2,102
   260c0:	d8c03215 	stw	r3,200(sp)
   260c4:	8881fe26 	beq	r17,r2,268c0 <___vfprintf_internal_r+0x1fa4>
   260c8:	d8c03217 	ldw	r3,200(sp)
   260cc:	d9003317 	ldw	r4,204(sp)
   260d0:	1901dd16 	blt	r3,r4,26848 <___vfprintf_internal_r+0x1f2c>
   260d4:	9480004c 	andi	r18,r18,1
   260d8:	90022b1e 	bne	r18,zero,26988 <___vfprintf_internal_r+0x206c>
   260dc:	1805883a 	mov	r2,r3
   260e0:	18028016 	blt	r3,zero,26ae4 <___vfprintf_internal_r+0x21c8>
   260e4:	d8c03217 	ldw	r3,200(sp)
   260e8:	044019c4 	movi	r17,103
   260ec:	d8c02e15 	stw	r3,184(sp)
   260f0:	df002a07 	ldb	fp,168(sp)
   260f4:	e001531e 	bne	fp,zero,26644 <___vfprintf_internal_r+0x1d28>
   260f8:	df002783 	ldbu	fp,158(sp)
   260fc:	d8802a15 	stw	r2,168(sp)
   26100:	dc802b17 	ldw	r18,172(sp)
   26104:	d8002915 	stw	zero,164(sp)
   26108:	003bd106 	br	25050 <__alt_data_end+0xfffe5050>
   2610c:	d8802d17 	ldw	r2,180(sp)
   26110:	d8c02d17 	ldw	r3,180(sp)
   26114:	d9002d17 	ldw	r4,180(sp)
   26118:	10800017 	ldw	r2,0(r2)
   2611c:	18c00117 	ldw	r3,4(r3)
   26120:	21000204 	addi	r4,r4,8
   26124:	d8803615 	stw	r2,216(sp)
   26128:	d8c03815 	stw	r3,224(sp)
   2612c:	d9002d15 	stw	r4,180(sp)
   26130:	003b7506 	br	24f08 <__alt_data_end+0xfffe4f08>
   26134:	ac400007 	ldb	r17,0(r21)
   26138:	003a5906 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   2613c:	9080100c 	andi	r2,r18,64
   26140:	1000a826 	beq	r2,zero,263e4 <___vfprintf_internal_r+0x1ac8>
   26144:	d9002d17 	ldw	r4,180(sp)
   26148:	002d883a 	mov	r22,zero
   2614c:	24c0000b 	ldhu	r19,0(r4)
   26150:	21000104 	addi	r4,r4,4
   26154:	d9002d15 	stw	r4,180(sp)
   26158:	003ccb06 	br	25488 <__alt_data_end+0xfffe5488>
   2615c:	d8c02d17 	ldw	r3,180(sp)
   26160:	d9002917 	ldw	r4,164(sp)
   26164:	002d883a 	mov	r22,zero
   26168:	18800104 	addi	r2,r3,4
   2616c:	1cc00017 	ldw	r19,0(r3)
   26170:	203ebb0e 	bge	r4,zero,25c60 <__alt_data_end+0xfffe5c60>
   26174:	003ef106 	br	25d3c <__alt_data_end+0xfffe5d3c>
   26178:	9080040c 	andi	r2,r18,16
   2617c:	1000921e 	bne	r2,zero,263c8 <___vfprintf_internal_r+0x1aac>
   26180:	9480100c 	andi	r18,r18,64
   26184:	90013926 	beq	r18,zero,2666c <___vfprintf_internal_r+0x1d50>
   26188:	d9002d17 	ldw	r4,180(sp)
   2618c:	d9402f17 	ldw	r5,188(sp)
   26190:	20800017 	ldw	r2,0(r4)
   26194:	21000104 	addi	r4,r4,4
   26198:	d9002d15 	stw	r4,180(sp)
   2619c:	1140000d 	sth	r5,0(r2)
   261a0:	003a1606 	br	249fc <__alt_data_end+0xfffe49fc>
   261a4:	9080100c 	andi	r2,r18,64
   261a8:	10008026 	beq	r2,zero,263ac <___vfprintf_internal_r+0x1a90>
   261ac:	d8c02d17 	ldw	r3,180(sp)
   261b0:	1cc0000f 	ldh	r19,0(r3)
   261b4:	18c00104 	addi	r3,r3,4
   261b8:	d8c02d15 	stw	r3,180(sp)
   261bc:	982dd7fa 	srai	r22,r19,31
   261c0:	b005883a 	mov	r2,r22
   261c4:	003b1f06 	br	24e44 <__alt_data_end+0xfffe4e44>
   261c8:	9080100c 	andi	r2,r18,64
   261cc:	d8002785 	stb	zero,158(sp)
   261d0:	10008a1e 	bne	r2,zero,263fc <___vfprintf_internal_r+0x1ae0>
   261d4:	d9402d17 	ldw	r5,180(sp)
   261d8:	d8c02917 	ldw	r3,164(sp)
   261dc:	002d883a 	mov	r22,zero
   261e0:	28800104 	addi	r2,r5,4
   261e4:	2cc00017 	ldw	r19,0(r5)
   261e8:	183e4b0e 	bge	r3,zero,25b18 <__alt_data_end+0xfffe5b18>
   261ec:	9d86b03a 	or	r3,r19,r22
   261f0:	d8802d15 	stw	r2,180(sp)
   261f4:	183e4c1e 	bne	r3,zero,25b28 <__alt_data_end+0xfffe5b28>
   261f8:	0039883a 	mov	fp,zero
   261fc:	0005883a 	mov	r2,zero
   26200:	003d4006 	br	25704 <__alt_data_end+0xfffe5704>
   26204:	014000f4 	movhi	r5,3
   26208:	2944ed84 	addi	r5,r5,5046
   2620c:	d9402b15 	stw	r5,172(sp)
   26210:	d9402b17 	ldw	r5,172(sp)
   26214:	1c47883a 	add	r3,r3,r17
   26218:	10800044 	addi	r2,r2,1
   2621c:	41400015 	stw	r5,0(r8)
   26220:	44400115 	stw	r17,4(r8)
   26224:	d8c02015 	stw	r3,128(sp)
   26228:	d8801f15 	stw	r2,124(sp)
   2622c:	010001c4 	movi	r4,7
   26230:	20bec816 	blt	r4,r2,25d54 <__alt_data_end+0xfffe5d54>
   26234:	42000204 	addi	r8,r8,8
   26238:	003ecd06 	br	25d70 <__alt_data_end+0xfffe5d70>
   2623c:	d9002917 	ldw	r4,164(sp)
   26240:	d8002785 	stb	zero,158(sp)
   26244:	203d2d16 	blt	r4,zero,256fc <__alt_data_end+0xfffe56fc>
   26248:	00bfdfc4 	movi	r2,-129
   2624c:	90a4703a 	and	r18,r18,r2
   26250:	003a9106 	br	24c98 <__alt_data_end+0xfffe4c98>
   26254:	010000f4 	movhi	r4,3
   26258:	2104ed84 	addi	r4,r4,5046
   2625c:	d9002b15 	stw	r4,172(sp)
   26260:	003c0c06 	br	25294 <__alt_data_end+0xfffe5294>
   26264:	d9002c17 	ldw	r4,176(sp)
   26268:	d9801e04 	addi	r6,sp,120
   2626c:	b80b883a 	mov	r5,r23
   26270:	002b3c00 	call	2b3c0 <__sprint_r>
   26274:	103aab1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   26278:	d8c02017 	ldw	r3,128(sp)
   2627c:	da000404 	addi	r8,sp,16
   26280:	003d4106 	br	25788 <__alt_data_end+0xfffe5788>
   26284:	d8801f17 	ldw	r2,124(sp)
   26288:	014000f4 	movhi	r5,3
   2628c:	01000044 	movi	r4,1
   26290:	18c00044 	addi	r3,r3,1
   26294:	10800044 	addi	r2,r2,1
   26298:	2944ed04 	addi	r5,r5,5044
   2629c:	41000115 	stw	r4,4(r8)
   262a0:	41400015 	stw	r5,0(r8)
   262a4:	d8c02015 	stw	r3,128(sp)
   262a8:	d8801f15 	stw	r2,124(sp)
   262ac:	010001c4 	movi	r4,7
   262b0:	20805c16 	blt	r4,r2,26424 <___vfprintf_internal_r+0x1b08>
   262b4:	42000204 	addi	r8,r8,8
   262b8:	8800041e 	bne	r17,zero,262cc <___vfprintf_internal_r+0x19b0>
   262bc:	d8803317 	ldw	r2,204(sp)
   262c0:	1000021e 	bne	r2,zero,262cc <___vfprintf_internal_r+0x19b0>
   262c4:	9080004c 	andi	r2,r18,1
   262c8:	103c0926 	beq	r2,zero,252f0 <__alt_data_end+0xfffe52f0>
   262cc:	d9003717 	ldw	r4,220(sp)
   262d0:	d8801f17 	ldw	r2,124(sp)
   262d4:	d9403417 	ldw	r5,208(sp)
   262d8:	20c7883a 	add	r3,r4,r3
   262dc:	10800044 	addi	r2,r2,1
   262e0:	41000115 	stw	r4,4(r8)
   262e4:	41400015 	stw	r5,0(r8)
   262e8:	d8c02015 	stw	r3,128(sp)
   262ec:	d8801f15 	stw	r2,124(sp)
   262f0:	010001c4 	movi	r4,7
   262f4:	20812116 	blt	r4,r2,2677c <___vfprintf_internal_r+0x1e60>
   262f8:	42000204 	addi	r8,r8,8
   262fc:	0463c83a 	sub	r17,zero,r17
   26300:	0440730e 	bge	zero,r17,264d0 <___vfprintf_internal_r+0x1bb4>
   26304:	05800404 	movi	r22,16
   26308:	b440860e 	bge	r22,r17,26524 <___vfprintf_internal_r+0x1c08>
   2630c:	014000f4 	movhi	r5,3
   26310:	2944ed84 	addi	r5,r5,5046
   26314:	d9402b15 	stw	r5,172(sp)
   26318:	070001c4 	movi	fp,7
   2631c:	dcc02c17 	ldw	r19,176(sp)
   26320:	00000306 	br	26330 <___vfprintf_internal_r+0x1a14>
   26324:	42000204 	addi	r8,r8,8
   26328:	8c7ffc04 	addi	r17,r17,-16
   2632c:	b440800e 	bge	r22,r17,26530 <___vfprintf_internal_r+0x1c14>
   26330:	18c00404 	addi	r3,r3,16
   26334:	10800044 	addi	r2,r2,1
   26338:	45000015 	stw	r20,0(r8)
   2633c:	45800115 	stw	r22,4(r8)
   26340:	d8c02015 	stw	r3,128(sp)
   26344:	d8801f15 	stw	r2,124(sp)
   26348:	e0bff60e 	bge	fp,r2,26324 <__alt_data_end+0xfffe6324>
   2634c:	d9801e04 	addi	r6,sp,120
   26350:	b80b883a 	mov	r5,r23
   26354:	9809883a 	mov	r4,r19
   26358:	002b3c00 	call	2b3c0 <__sprint_r>
   2635c:	103a711e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   26360:	d8c02017 	ldw	r3,128(sp)
   26364:	d8801f17 	ldw	r2,124(sp)
   26368:	da000404 	addi	r8,sp,16
   2636c:	003fee06 	br	26328 <__alt_data_end+0xfffe6328>
   26370:	00bfffc4 	movi	r2,-1
   26374:	003a6f06 	br	24d34 <__alt_data_end+0xfffe4d34>
   26378:	008011c4 	movi	r2,71
   2637c:	1440b816 	blt	r2,r17,26660 <___vfprintf_internal_r+0x1d44>
   26380:	040000f4 	movhi	r16,3
   26384:	8404df04 	addi	r16,r16,4988
   26388:	00c000c4 	movi	r3,3
   2638c:	00bfdfc4 	movi	r2,-129
   26390:	d8c02a15 	stw	r3,168(sp)
   26394:	90a4703a 	and	r18,r18,r2
   26398:	df002783 	ldbu	fp,158(sp)
   2639c:	d8c02e15 	stw	r3,184(sp)
   263a0:	d8002915 	stw	zero,164(sp)
   263a4:	d8003215 	stw	zero,200(sp)
   263a8:	003b2906 	br	25050 <__alt_data_end+0xfffe5050>
   263ac:	d9002d17 	ldw	r4,180(sp)
   263b0:	24c00017 	ldw	r19,0(r4)
   263b4:	21000104 	addi	r4,r4,4
   263b8:	d9002d15 	stw	r4,180(sp)
   263bc:	982dd7fa 	srai	r22,r19,31
   263c0:	b005883a 	mov	r2,r22
   263c4:	003a9f06 	br	24e44 <__alt_data_end+0xfffe4e44>
   263c8:	d9402d17 	ldw	r5,180(sp)
   263cc:	d8c02f17 	ldw	r3,188(sp)
   263d0:	28800017 	ldw	r2,0(r5)
   263d4:	29400104 	addi	r5,r5,4
   263d8:	d9402d15 	stw	r5,180(sp)
   263dc:	10c00015 	stw	r3,0(r2)
   263e0:	00398606 	br	249fc <__alt_data_end+0xfffe49fc>
   263e4:	d9402d17 	ldw	r5,180(sp)
   263e8:	002d883a 	mov	r22,zero
   263ec:	2cc00017 	ldw	r19,0(r5)
   263f0:	29400104 	addi	r5,r5,4
   263f4:	d9402d15 	stw	r5,180(sp)
   263f8:	003c2306 	br	25488 <__alt_data_end+0xfffe5488>
   263fc:	d8c02d17 	ldw	r3,180(sp)
   26400:	d9002917 	ldw	r4,164(sp)
   26404:	002d883a 	mov	r22,zero
   26408:	18800104 	addi	r2,r3,4
   2640c:	1cc0000b 	ldhu	r19,0(r3)
   26410:	203dc10e 	bge	r4,zero,25b18 <__alt_data_end+0xfffe5b18>
   26414:	003f7506 	br	261ec <__alt_data_end+0xfffe61ec>
   26418:	040000f4 	movhi	r16,3
   2641c:	8404dd04 	addi	r16,r16,4980
   26420:	003acc06 	br	24f54 <__alt_data_end+0xfffe4f54>
   26424:	d9002c17 	ldw	r4,176(sp)
   26428:	d9801e04 	addi	r6,sp,120
   2642c:	b80b883a 	mov	r5,r23
   26430:	002b3c00 	call	2b3c0 <__sprint_r>
   26434:	103a3b1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   26438:	dc402617 	ldw	r17,152(sp)
   2643c:	d8c02017 	ldw	r3,128(sp)
   26440:	da000404 	addi	r8,sp,16
   26444:	003f9c06 	br	262b8 <__alt_data_end+0xfffe62b8>
   26448:	ac400043 	ldbu	r17,1(r21)
   2644c:	94800814 	ori	r18,r18,32
   26450:	ad400044 	addi	r21,r21,1
   26454:	8c403fcc 	andi	r17,r17,255
   26458:	8c40201c 	xori	r17,r17,128
   2645c:	8c7fe004 	addi	r17,r17,-128
   26460:	00398f06 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   26464:	d8c02d15 	stw	r3,180(sp)
   26468:	0039883a 	mov	fp,zero
   2646c:	003e3506 	br	25d44 <__alt_data_end+0xfffe5d44>
   26470:	d9002c17 	ldw	r4,176(sp)
   26474:	d9801e04 	addi	r6,sp,120
   26478:	b80b883a 	mov	r5,r23
   2647c:	002b3c00 	call	2b3c0 <__sprint_r>
   26480:	103a281e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   26484:	d8c02017 	ldw	r3,128(sp)
   26488:	da000404 	addi	r8,sp,16
   2648c:	003cd006 	br	257d0 <__alt_data_end+0xfffe57d0>
   26490:	8009883a 	mov	r4,r16
   26494:	da003d15 	stw	r8,244(sp)
   26498:	002b22c0 	call	2b22c <strlen>
   2649c:	d8802e15 	stw	r2,184(sp)
   264a0:	da003d17 	ldw	r8,244(sp)
   264a4:	103c340e 	bge	r2,zero,25578 <__alt_data_end+0xfffe5578>
   264a8:	0005883a 	mov	r2,zero
   264ac:	003c3206 	br	25578 <__alt_data_end+0xfffe5578>
   264b0:	d9002c17 	ldw	r4,176(sp)
   264b4:	d9801e04 	addi	r6,sp,120
   264b8:	b80b883a 	mov	r5,r23
   264bc:	002b3c00 	call	2b3c0 <__sprint_r>
   264c0:	103a181e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   264c4:	d8c02017 	ldw	r3,128(sp)
   264c8:	d8801f17 	ldw	r2,124(sp)
   264cc:	da000404 	addi	r8,sp,16
   264d0:	d9403317 	ldw	r5,204(sp)
   264d4:	10800044 	addi	r2,r2,1
   264d8:	44000015 	stw	r16,0(r8)
   264dc:	28c7883a 	add	r3,r5,r3
   264e0:	003b7d06 	br	252d8 <__alt_data_end+0xfffe52d8>
   264e4:	010000f4 	movhi	r4,3
   264e8:	2104f184 	addi	r4,r4,5062
   264ec:	d9003515 	stw	r4,212(sp)
   264f0:	003b1406 	br	25144 <__alt_data_end+0xfffe5144>
   264f4:	013fffc4 	movi	r4,-1
   264f8:	003a3506 	br	24dd0 <__alt_data_end+0xfffe4dd0>
   264fc:	0023883a 	mov	r17,zero
   26500:	003d9d06 	br	25b78 <__alt_data_end+0xfffe5b78>
   26504:	d9002c17 	ldw	r4,176(sp)
   26508:	d9801e04 	addi	r6,sp,120
   2650c:	b80b883a 	mov	r5,r23
   26510:	002b3c00 	call	2b3c0 <__sprint_r>
   26514:	103a031e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   26518:	d8c02017 	ldw	r3,128(sp)
   2651c:	da000404 	addi	r8,sp,16
   26520:	003d9406 	br	25b74 <__alt_data_end+0xfffe5b74>
   26524:	010000f4 	movhi	r4,3
   26528:	2104ed84 	addi	r4,r4,5046
   2652c:	d9002b15 	stw	r4,172(sp)
   26530:	d9002b17 	ldw	r4,172(sp)
   26534:	1c47883a 	add	r3,r3,r17
   26538:	10800044 	addi	r2,r2,1
   2653c:	41000015 	stw	r4,0(r8)
   26540:	44400115 	stw	r17,4(r8)
   26544:	d8c02015 	stw	r3,128(sp)
   26548:	d8801f15 	stw	r2,124(sp)
   2654c:	010001c4 	movi	r4,7
   26550:	20bfd716 	blt	r4,r2,264b0 <__alt_data_end+0xfffe64b0>
   26554:	42000204 	addi	r8,r8,8
   26558:	003fdd06 	br	264d0 <__alt_data_end+0xfffe64d0>
   2655c:	d9002c17 	ldw	r4,176(sp)
   26560:	d9801e04 	addi	r6,sp,120
   26564:	b80b883a 	mov	r5,r23
   26568:	002b3c00 	call	2b3c0 <__sprint_r>
   2656c:	1039ed1e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   26570:	d8802617 	ldw	r2,152(sp)
   26574:	d8c02017 	ldw	r3,128(sp)
   26578:	da000404 	addi	r8,sp,16
   2657c:	003e1006 	br	25dc0 <__alt_data_end+0xfffe5dc0>
   26580:	00800044 	movi	r2,1
   26584:	10803fcc 	andi	r2,r2,255
   26588:	00c00044 	movi	r3,1
   2658c:	10fa3526 	beq	r2,r3,24e64 <__alt_data_end+0xfffe4e64>
   26590:	00c00084 	movi	r3,2
   26594:	10fbcb26 	beq	r2,r3,254c4 <__alt_data_end+0xfffe54c4>
   26598:	003a8f06 	br	24fd8 <__alt_data_end+0xfffe4fd8>
   2659c:	010000f4 	movhi	r4,3
   265a0:	2104f184 	addi	r4,r4,5062
   265a4:	d9003515 	stw	r4,212(sp)
   265a8:	003b7606 	br	25384 <__alt_data_end+0xfffe5384>
   265ac:	d8802917 	ldw	r2,164(sp)
   265b0:	00c00184 	movi	r3,6
   265b4:	1880012e 	bgeu	r3,r2,265bc <___vfprintf_internal_r+0x1ca0>
   265b8:	1805883a 	mov	r2,r3
   265bc:	d8802e15 	stw	r2,184(sp)
   265c0:	1000ef16 	blt	r2,zero,26980 <___vfprintf_internal_r+0x2064>
   265c4:	040000f4 	movhi	r16,3
   265c8:	d8802a15 	stw	r2,168(sp)
   265cc:	dcc02d15 	stw	r19,180(sp)
   265d0:	d8002915 	stw	zero,164(sp)
   265d4:	d8003215 	stw	zero,200(sp)
   265d8:	8404eb04 	addi	r16,r16,5036
   265dc:	0039883a 	mov	fp,zero
   265e0:	003aa206 	br	2506c <__alt_data_end+0xfffe506c>
   265e4:	0021883a 	mov	r16,zero
   265e8:	003e0706 	br	25e08 <__alt_data_end+0xfffe5e08>
   265ec:	d9002c17 	ldw	r4,176(sp)
   265f0:	d9801e04 	addi	r6,sp,120
   265f4:	b80b883a 	mov	r5,r23
   265f8:	002b3c00 	call	2b3c0 <__sprint_r>
   265fc:	1039c91e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   26600:	d8802617 	ldw	r2,152(sp)
   26604:	d9403317 	ldw	r5,204(sp)
   26608:	d8c02017 	ldw	r3,128(sp)
   2660c:	da000404 	addi	r8,sp,16
   26610:	2885c83a 	sub	r2,r5,r2
   26614:	003dfb06 	br	25e04 <__alt_data_end+0xfffe5e04>
   26618:	9080004c 	andi	r2,r18,1
   2661c:	103e8f1e 	bne	r2,zero,2605c <__alt_data_end+0xfffe605c>
   26620:	d8802117 	ldw	r2,132(sp)
   26624:	003e9e06 	br	260a0 <__alt_data_end+0xfffe60a0>
   26628:	1025883a 	mov	r18,r2
   2662c:	0039883a 	mov	fp,zero
   26630:	00800084 	movi	r2,2
   26634:	003fd306 	br	26584 <__alt_data_end+0xfffe6584>
   26638:	07000b44 	movi	fp,45
   2663c:	df002785 	stb	fp,158(sp)
   26640:	003a4006 	br	24f44 <__alt_data_end+0xfffe4f44>
   26644:	00c00b44 	movi	r3,45
   26648:	d8c02785 	stb	r3,158(sp)
   2664c:	d8802a15 	stw	r2,168(sp)
   26650:	dc802b17 	ldw	r18,172(sp)
   26654:	d8002915 	stw	zero,164(sp)
   26658:	07000b44 	movi	fp,45
   2665c:	003a8006 	br	25060 <__alt_data_end+0xfffe5060>
   26660:	040000f4 	movhi	r16,3
   26664:	8404e004 	addi	r16,r16,4992
   26668:	003f4706 	br	26388 <__alt_data_end+0xfffe6388>
   2666c:	d8c02d17 	ldw	r3,180(sp)
   26670:	d9002f17 	ldw	r4,188(sp)
   26674:	18800017 	ldw	r2,0(r3)
   26678:	18c00104 	addi	r3,r3,4
   2667c:	d8c02d15 	stw	r3,180(sp)
   26680:	11000015 	stw	r4,0(r2)
   26684:	0038dd06 	br	249fc <__alt_data_end+0xfffe49fc>
   26688:	dd802617 	ldw	r22,152(sp)
   2668c:	00bfff44 	movi	r2,-3
   26690:	b0801c16 	blt	r22,r2,26704 <___vfprintf_internal_r+0x1de8>
   26694:	d9402917 	ldw	r5,164(sp)
   26698:	2d801a16 	blt	r5,r22,26704 <___vfprintf_internal_r+0x1de8>
   2669c:	dd803215 	stw	r22,200(sp)
   266a0:	003e8906 	br	260c8 <__alt_data_end+0xfffe60c8>
   266a4:	010000f4 	movhi	r4,3
   266a8:	2104ed84 	addi	r4,r4,5046
   266ac:	d9002b15 	stw	r4,172(sp)
   266b0:	003c9106 	br	258f8 <__alt_data_end+0xfffe58f8>
   266b4:	e005883a 	mov	r2,fp
   266b8:	003e7906 	br	260a0 <__alt_data_end+0xfffe60a0>
   266bc:	d9402917 	ldw	r5,164(sp)
   266c0:	df002783 	ldbu	fp,158(sp)
   266c4:	dcc02d15 	stw	r19,180(sp)
   266c8:	d9402a15 	stw	r5,168(sp)
   266cc:	d9402e15 	stw	r5,184(sp)
   266d0:	d8002915 	stw	zero,164(sp)
   266d4:	d8003215 	stw	zero,200(sp)
   266d8:	003a5d06 	br	25050 <__alt_data_end+0xfffe5050>
   266dc:	9080004c 	andi	r2,r18,1
   266e0:	0039883a 	mov	fp,zero
   266e4:	10000426 	beq	r2,zero,266f8 <___vfprintf_internal_r+0x1ddc>
   266e8:	00800c04 	movi	r2,48
   266ec:	dc001dc4 	addi	r16,sp,119
   266f0:	d8801dc5 	stb	r2,119(sp)
   266f4:	003b8006 	br	254f8 <__alt_data_end+0xfffe54f8>
   266f8:	d8002e15 	stw	zero,184(sp)
   266fc:	dc001e04 	addi	r16,sp,120
   26700:	003a4d06 	br	25038 <__alt_data_end+0xfffe5038>
   26704:	8c7fff84 	addi	r17,r17,-2
   26708:	b5bfffc4 	addi	r22,r22,-1
   2670c:	dd802615 	stw	r22,152(sp)
   26710:	dc4022c5 	stb	r17,139(sp)
   26714:	b000bf16 	blt	r22,zero,26a14 <___vfprintf_internal_r+0x20f8>
   26718:	00800ac4 	movi	r2,43
   2671c:	d8802305 	stb	r2,140(sp)
   26720:	00800244 	movi	r2,9
   26724:	15807016 	blt	r2,r22,268e8 <___vfprintf_internal_r+0x1fcc>
   26728:	00800c04 	movi	r2,48
   2672c:	b5800c04 	addi	r22,r22,48
   26730:	d8802345 	stb	r2,141(sp)
   26734:	dd802385 	stb	r22,142(sp)
   26738:	d88023c4 	addi	r2,sp,143
   2673c:	df0022c4 	addi	fp,sp,139
   26740:	d8c03317 	ldw	r3,204(sp)
   26744:	1739c83a 	sub	fp,r2,fp
   26748:	d9003317 	ldw	r4,204(sp)
   2674c:	e0c7883a 	add	r3,fp,r3
   26750:	df003a15 	stw	fp,232(sp)
   26754:	d8c02e15 	stw	r3,184(sp)
   26758:	00800044 	movi	r2,1
   2675c:	1100b30e 	bge	r2,r4,26a2c <___vfprintf_internal_r+0x2110>
   26760:	d8c02e17 	ldw	r3,184(sp)
   26764:	18c00044 	addi	r3,r3,1
   26768:	d8c02e15 	stw	r3,184(sp)
   2676c:	1805883a 	mov	r2,r3
   26770:	1800ac16 	blt	r3,zero,26a24 <___vfprintf_internal_r+0x2108>
   26774:	d8003215 	stw	zero,200(sp)
   26778:	003e5d06 	br	260f0 <__alt_data_end+0xfffe60f0>
   2677c:	d9002c17 	ldw	r4,176(sp)
   26780:	d9801e04 	addi	r6,sp,120
   26784:	b80b883a 	mov	r5,r23
   26788:	002b3c00 	call	2b3c0 <__sprint_r>
   2678c:	1039651e 	bne	r2,zero,24d24 <__alt_data_end+0xfffe4d24>
   26790:	dc402617 	ldw	r17,152(sp)
   26794:	d8c02017 	ldw	r3,128(sp)
   26798:	d8801f17 	ldw	r2,124(sp)
   2679c:	da000404 	addi	r8,sp,16
   267a0:	003ed606 	br	262fc <__alt_data_end+0xfffe62fc>
   267a4:	582b883a 	mov	r21,r11
   267a8:	d8002915 	stw	zero,164(sp)
   267ac:	0038bd06 	br	24aa4 <__alt_data_end+0xfffe4aa4>
   267b0:	d8802917 	ldw	r2,164(sp)
   267b4:	103e071e 	bne	r2,zero,25fd4 <__alt_data_end+0xfffe5fd4>
   267b8:	dc002915 	stw	r16,164(sp)
   267bc:	003e0506 	br	25fd4 <__alt_data_end+0xfffe5fd4>
   267c0:	d9002917 	ldw	r4,164(sp)
   267c4:	20c00044 	addi	r3,r4,1
   267c8:	003e0f06 	br	26008 <__alt_data_end+0xfffe6008>
   267cc:	01400184 	movi	r5,6
   267d0:	d9402915 	stw	r5,164(sp)
   267d4:	003dff06 	br	25fd4 <__alt_data_end+0xfffe5fd4>
   267d8:	d8802104 	addi	r2,sp,132
   267dc:	d8800315 	stw	r2,12(sp)
   267e0:	d8802504 	addi	r2,sp,148
   267e4:	d8800215 	stw	r2,8(sp)
   267e8:	d8802604 	addi	r2,sp,152
   267ec:	d8800115 	stw	r2,4(sp)
   267f0:	d8802917 	ldw	r2,164(sp)
   267f4:	d9403617 	ldw	r5,216(sp)
   267f8:	d9002c17 	ldw	r4,176(sp)
   267fc:	d8800015 	stw	r2,0(sp)
   26800:	01c000c4 	movi	r7,3
   26804:	980d883a 	mov	r6,r19
   26808:	da003d15 	stw	r8,244(sp)
   2680c:	0026f400 	call	26f40 <_dtoa_r>
   26810:	d8c02917 	ldw	r3,164(sp)
   26814:	da003d17 	ldw	r8,244(sp)
   26818:	1021883a 	mov	r16,r2
   2681c:	10f9883a 	add	fp,r2,r3
   26820:	81000007 	ldb	r4,0(r16)
   26824:	00800c04 	movi	r2,48
   26828:	20805e26 	beq	r4,r2,269a4 <___vfprintf_internal_r+0x2088>
   2682c:	d8c02617 	ldw	r3,152(sp)
   26830:	e0f9883a 	add	fp,fp,r3
   26834:	003e0a06 	br	26060 <__alt_data_end+0xfffe6060>
   26838:	00c00b44 	movi	r3,45
   2683c:	24e0003c 	xorhi	r19,r4,32768
   26840:	d8c02a05 	stb	r3,168(sp)
   26844:	003de906 	br	25fec <__alt_data_end+0xfffe5fec>
   26848:	d8c03217 	ldw	r3,200(sp)
   2684c:	00c07a0e 	bge	zero,r3,26a38 <___vfprintf_internal_r+0x211c>
   26850:	00800044 	movi	r2,1
   26854:	d9003317 	ldw	r4,204(sp)
   26858:	1105883a 	add	r2,r2,r4
   2685c:	d8802e15 	stw	r2,184(sp)
   26860:	10004e16 	blt	r2,zero,2699c <___vfprintf_internal_r+0x2080>
   26864:	044019c4 	movi	r17,103
   26868:	003e2106 	br	260f0 <__alt_data_end+0xfffe60f0>
   2686c:	d9002917 	ldw	r4,164(sp)
   26870:	d8802104 	addi	r2,sp,132
   26874:	d8800315 	stw	r2,12(sp)
   26878:	d9000015 	stw	r4,0(sp)
   2687c:	d8802504 	addi	r2,sp,148
   26880:	d9403617 	ldw	r5,216(sp)
   26884:	d9002c17 	ldw	r4,176(sp)
   26888:	d8800215 	stw	r2,8(sp)
   2688c:	d8802604 	addi	r2,sp,152
   26890:	d8800115 	stw	r2,4(sp)
   26894:	01c000c4 	movi	r7,3
   26898:	980d883a 	mov	r6,r19
   2689c:	da003d15 	stw	r8,244(sp)
   268a0:	0026f400 	call	26f40 <_dtoa_r>
   268a4:	d8c02917 	ldw	r3,164(sp)
   268a8:	da003d17 	ldw	r8,244(sp)
   268ac:	1021883a 	mov	r16,r2
   268b0:	00801184 	movi	r2,70
   268b4:	80f9883a 	add	fp,r16,r3
   268b8:	88bfd926 	beq	r17,r2,26820 <__alt_data_end+0xfffe6820>
   268bc:	003de806 	br	26060 <__alt_data_end+0xfffe6060>
   268c0:	d9002917 	ldw	r4,164(sp)
   268c4:	00c04d0e 	bge	zero,r3,269fc <___vfprintf_internal_r+0x20e0>
   268c8:	2000441e 	bne	r4,zero,269dc <___vfprintf_internal_r+0x20c0>
   268cc:	9480004c 	andi	r18,r18,1
   268d0:	9000421e 	bne	r18,zero,269dc <___vfprintf_internal_r+0x20c0>
   268d4:	1805883a 	mov	r2,r3
   268d8:	18007016 	blt	r3,zero,26a9c <___vfprintf_internal_r+0x2180>
   268dc:	d8c03217 	ldw	r3,200(sp)
   268e0:	d8c02e15 	stw	r3,184(sp)
   268e4:	003e0206 	br	260f0 <__alt_data_end+0xfffe60f0>
   268e8:	df0022c4 	addi	fp,sp,139
   268ec:	dc002915 	stw	r16,164(sp)
   268f0:	4027883a 	mov	r19,r8
   268f4:	e021883a 	mov	r16,fp
   268f8:	b009883a 	mov	r4,r22
   268fc:	01400284 	movi	r5,10
   26900:	00221b00 	call	221b0 <__modsi3>
   26904:	10800c04 	addi	r2,r2,48
   26908:	843fffc4 	addi	r16,r16,-1
   2690c:	b009883a 	mov	r4,r22
   26910:	01400284 	movi	r5,10
   26914:	80800005 	stb	r2,0(r16)
   26918:	002212c0 	call	2212c <__divsi3>
   2691c:	102d883a 	mov	r22,r2
   26920:	00800244 	movi	r2,9
   26924:	15bff416 	blt	r2,r22,268f8 <__alt_data_end+0xfffe68f8>
   26928:	9811883a 	mov	r8,r19
   2692c:	b0800c04 	addi	r2,r22,48
   26930:	8027883a 	mov	r19,r16
   26934:	997fffc4 	addi	r5,r19,-1
   26938:	98bfffc5 	stb	r2,-1(r19)
   2693c:	dc002917 	ldw	r16,164(sp)
   26940:	2f006a2e 	bgeu	r5,fp,26aec <___vfprintf_internal_r+0x21d0>
   26944:	d9c02384 	addi	r7,sp,142
   26948:	3ccfc83a 	sub	r7,r7,r19
   2694c:	d9002344 	addi	r4,sp,141
   26950:	e1cf883a 	add	r7,fp,r7
   26954:	00000106 	br	2695c <___vfprintf_internal_r+0x2040>
   26958:	28800003 	ldbu	r2,0(r5)
   2695c:	20800005 	stb	r2,0(r4)
   26960:	21000044 	addi	r4,r4,1
   26964:	29400044 	addi	r5,r5,1
   26968:	393ffb1e 	bne	r7,r4,26958 <__alt_data_end+0xfffe6958>
   2696c:	d8802304 	addi	r2,sp,140
   26970:	14c5c83a 	sub	r2,r2,r19
   26974:	d8c02344 	addi	r3,sp,141
   26978:	1885883a 	add	r2,r3,r2
   2697c:	003f7006 	br	26740 <__alt_data_end+0xfffe6740>
   26980:	0005883a 	mov	r2,zero
   26984:	003f0f06 	br	265c4 <__alt_data_end+0xfffe65c4>
   26988:	d8c03217 	ldw	r3,200(sp)
   2698c:	18c00044 	addi	r3,r3,1
   26990:	d8c02e15 	stw	r3,184(sp)
   26994:	1805883a 	mov	r2,r3
   26998:	183fb20e 	bge	r3,zero,26864 <__alt_data_end+0xfffe6864>
   2699c:	0005883a 	mov	r2,zero
   269a0:	003fb006 	br	26864 <__alt_data_end+0xfffe6864>
   269a4:	d9003617 	ldw	r4,216(sp)
   269a8:	000d883a 	mov	r6,zero
   269ac:	000f883a 	mov	r7,zero
   269b0:	980b883a 	mov	r5,r19
   269b4:	d8c03c15 	stw	r3,240(sp)
   269b8:	da003d15 	stw	r8,244(sp)
   269bc:	00234740 	call	23474 <__eqdf2>
   269c0:	d8c03c17 	ldw	r3,240(sp)
   269c4:	da003d17 	ldw	r8,244(sp)
   269c8:	103f9826 	beq	r2,zero,2682c <__alt_data_end+0xfffe682c>
   269cc:	00800044 	movi	r2,1
   269d0:	10c7c83a 	sub	r3,r2,r3
   269d4:	d8c02615 	stw	r3,152(sp)
   269d8:	003f9506 	br	26830 <__alt_data_end+0xfffe6830>
   269dc:	d9002917 	ldw	r4,164(sp)
   269e0:	d8c03217 	ldw	r3,200(sp)
   269e4:	20800044 	addi	r2,r4,1
   269e8:	1885883a 	add	r2,r3,r2
   269ec:	d8802e15 	stw	r2,184(sp)
   269f0:	103dbf0e 	bge	r2,zero,260f0 <__alt_data_end+0xfffe60f0>
   269f4:	0005883a 	mov	r2,zero
   269f8:	003dbd06 	br	260f0 <__alt_data_end+0xfffe60f0>
   269fc:	2000211e 	bne	r4,zero,26a84 <___vfprintf_internal_r+0x2168>
   26a00:	9480004c 	andi	r18,r18,1
   26a04:	90001f1e 	bne	r18,zero,26a84 <___vfprintf_internal_r+0x2168>
   26a08:	00800044 	movi	r2,1
   26a0c:	d8802e15 	stw	r2,184(sp)
   26a10:	003db706 	br	260f0 <__alt_data_end+0xfffe60f0>
   26a14:	00800b44 	movi	r2,45
   26a18:	05adc83a 	sub	r22,zero,r22
   26a1c:	d8802305 	stb	r2,140(sp)
   26a20:	003f3f06 	br	26720 <__alt_data_end+0xfffe6720>
   26a24:	0005883a 	mov	r2,zero
   26a28:	003f5206 	br	26774 <__alt_data_end+0xfffe6774>
   26a2c:	90a4703a 	and	r18,r18,r2
   26a30:	903f4e26 	beq	r18,zero,2676c <__alt_data_end+0xfffe676c>
   26a34:	003f4a06 	br	26760 <__alt_data_end+0xfffe6760>
   26a38:	00800084 	movi	r2,2
   26a3c:	10c5c83a 	sub	r2,r2,r3
   26a40:	003f8406 	br	26854 <__alt_data_end+0xfffe6854>
   26a44:	d8802d17 	ldw	r2,180(sp)
   26a48:	d9002d17 	ldw	r4,180(sp)
   26a4c:	ac400043 	ldbu	r17,1(r21)
   26a50:	10800017 	ldw	r2,0(r2)
   26a54:	582b883a 	mov	r21,r11
   26a58:	d8802915 	stw	r2,164(sp)
   26a5c:	20800104 	addi	r2,r4,4
   26a60:	d9002917 	ldw	r4,164(sp)
   26a64:	d8802d15 	stw	r2,180(sp)
   26a68:	203e7a0e 	bge	r4,zero,26454 <__alt_data_end+0xfffe6454>
   26a6c:	8c403fcc 	andi	r17,r17,255
   26a70:	00bfffc4 	movi	r2,-1
   26a74:	8c40201c 	xori	r17,r17,128
   26a78:	d8802915 	stw	r2,164(sp)
   26a7c:	8c7fe004 	addi	r17,r17,-128
   26a80:	00380706 	br	24aa0 <__alt_data_end+0xfffe4aa0>
   26a84:	d8c02917 	ldw	r3,164(sp)
   26a88:	18c00084 	addi	r3,r3,2
   26a8c:	d8c02e15 	stw	r3,184(sp)
   26a90:	1805883a 	mov	r2,r3
   26a94:	183d960e 	bge	r3,zero,260f0 <__alt_data_end+0xfffe60f0>
   26a98:	003fd606 	br	269f4 <__alt_data_end+0xfffe69f4>
   26a9c:	0005883a 	mov	r2,zero
   26aa0:	003f8e06 	br	268dc <__alt_data_end+0xfffe68dc>
   26aa4:	9080004c 	andi	r2,r18,1
   26aa8:	103f811e 	bne	r2,zero,268b0 <__alt_data_end+0xfffe68b0>
   26aac:	d8802117 	ldw	r2,132(sp)
   26ab0:	1405c83a 	sub	r2,r2,r16
   26ab4:	d8803315 	stw	r2,204(sp)
   26ab8:	b47ef326 	beq	r22,r17,26688 <__alt_data_end+0xfffe6688>
   26abc:	dd802617 	ldw	r22,152(sp)
   26ac0:	003f1106 	br	26708 <__alt_data_end+0xfffe6708>
   26ac4:	d9c02785 	stb	r7,158(sp)
   26ac8:	00390406 	br	24edc <__alt_data_end+0xfffe4edc>
   26acc:	d9c02785 	stb	r7,158(sp)
   26ad0:	0038d306 	br	24e20 <__alt_data_end+0xfffe4e20>
   26ad4:	d9c02785 	stb	r7,158(sp)
   26ad8:	003a6106 	br	25460 <__alt_data_end+0xfffe5460>
   26adc:	d9c02785 	stb	r7,158(sp)
   26ae0:	003af806 	br	256c4 <__alt_data_end+0xfffe56c4>
   26ae4:	0005883a 	mov	r2,zero
   26ae8:	003d7e06 	br	260e4 <__alt_data_end+0xfffe60e4>
   26aec:	d8802344 	addi	r2,sp,141
   26af0:	003f1306 	br	26740 <__alt_data_end+0xfffe6740>
   26af4:	d9c02785 	stb	r7,158(sp)
   26af8:	00392306 	br	24f88 <__alt_data_end+0xfffe4f88>
   26afc:	d9c02785 	stb	r7,158(sp)
   26b00:	003aa906 	br	255a8 <__alt_data_end+0xfffe55a8>
   26b04:	d9c02785 	stb	r7,158(sp)
   26b08:	003a3d06 	br	25400 <__alt_data_end+0xfffe5400>
   26b0c:	d9c02785 	stb	r7,158(sp)
   26b10:	003aca06 	br	2563c <__alt_data_end+0xfffe563c>

00026b14 <__vfprintf_internal>:
   26b14:	008000f4 	movhi	r2,3
   26b18:	108c0804 	addi	r2,r2,12320
   26b1c:	300f883a 	mov	r7,r6
   26b20:	280d883a 	mov	r6,r5
   26b24:	200b883a 	mov	r5,r4
   26b28:	11000017 	ldw	r4,0(r2)
   26b2c:	002491c1 	jmpi	2491c <___vfprintf_internal_r>

00026b30 <__sbprintf>:
   26b30:	2880030b 	ldhu	r2,12(r5)
   26b34:	2ac01917 	ldw	r11,100(r5)
   26b38:	2a80038b 	ldhu	r10,14(r5)
   26b3c:	2a400717 	ldw	r9,28(r5)
   26b40:	2a000917 	ldw	r8,36(r5)
   26b44:	defee204 	addi	sp,sp,-1144
   26b48:	00c10004 	movi	r3,1024
   26b4c:	dc011a15 	stw	r16,1128(sp)
   26b50:	10bfff4c 	andi	r2,r2,65533
   26b54:	2821883a 	mov	r16,r5
   26b58:	d8cb883a 	add	r5,sp,r3
   26b5c:	dc811c15 	stw	r18,1136(sp)
   26b60:	dc411b15 	stw	r17,1132(sp)
   26b64:	dfc11d15 	stw	ra,1140(sp)
   26b68:	2025883a 	mov	r18,r4
   26b6c:	d881030d 	sth	r2,1036(sp)
   26b70:	dac11915 	stw	r11,1124(sp)
   26b74:	da81038d 	sth	r10,1038(sp)
   26b78:	da410715 	stw	r9,1052(sp)
   26b7c:	da010915 	stw	r8,1060(sp)
   26b80:	dec10015 	stw	sp,1024(sp)
   26b84:	dec10415 	stw	sp,1040(sp)
   26b88:	d8c10215 	stw	r3,1032(sp)
   26b8c:	d8c10515 	stw	r3,1044(sp)
   26b90:	d8010615 	stw	zero,1048(sp)
   26b94:	002491c0 	call	2491c <___vfprintf_internal_r>
   26b98:	1023883a 	mov	r17,r2
   26b9c:	10000416 	blt	r2,zero,26bb0 <__sbprintf+0x80>
   26ba0:	d9410004 	addi	r5,sp,1024
   26ba4:	9009883a 	mov	r4,r18
   26ba8:	00287e40 	call	287e4 <_fflush_r>
   26bac:	10000d1e 	bne	r2,zero,26be4 <__sbprintf+0xb4>
   26bb0:	d881030b 	ldhu	r2,1036(sp)
   26bb4:	1080100c 	andi	r2,r2,64
   26bb8:	10000326 	beq	r2,zero,26bc8 <__sbprintf+0x98>
   26bbc:	8080030b 	ldhu	r2,12(r16)
   26bc0:	10801014 	ori	r2,r2,64
   26bc4:	8080030d 	sth	r2,12(r16)
   26bc8:	8805883a 	mov	r2,r17
   26bcc:	dfc11d17 	ldw	ra,1140(sp)
   26bd0:	dc811c17 	ldw	r18,1136(sp)
   26bd4:	dc411b17 	ldw	r17,1132(sp)
   26bd8:	dc011a17 	ldw	r16,1128(sp)
   26bdc:	dec11e04 	addi	sp,sp,1144
   26be0:	f800283a 	ret
   26be4:	047fffc4 	movi	r17,-1
   26be8:	003ff106 	br	26bb0 <__alt_data_end+0xfffe6bb0>

00026bec <__swsetup_r>:
   26bec:	008000f4 	movhi	r2,3
   26bf0:	defffd04 	addi	sp,sp,-12
   26bf4:	108c0804 	addi	r2,r2,12320
   26bf8:	dc400115 	stw	r17,4(sp)
   26bfc:	2023883a 	mov	r17,r4
   26c00:	11000017 	ldw	r4,0(r2)
   26c04:	dc000015 	stw	r16,0(sp)
   26c08:	dfc00215 	stw	ra,8(sp)
   26c0c:	2821883a 	mov	r16,r5
   26c10:	20000226 	beq	r4,zero,26c1c <__swsetup_r+0x30>
   26c14:	20800e17 	ldw	r2,56(r4)
   26c18:	10003126 	beq	r2,zero,26ce0 <__swsetup_r+0xf4>
   26c1c:	8080030b 	ldhu	r2,12(r16)
   26c20:	10c0020c 	andi	r3,r2,8
   26c24:	1009883a 	mov	r4,r2
   26c28:	18000f26 	beq	r3,zero,26c68 <__swsetup_r+0x7c>
   26c2c:	80c00417 	ldw	r3,16(r16)
   26c30:	18001526 	beq	r3,zero,26c88 <__swsetup_r+0x9c>
   26c34:	1100004c 	andi	r4,r2,1
   26c38:	20001c1e 	bne	r4,zero,26cac <__swsetup_r+0xc0>
   26c3c:	1080008c 	andi	r2,r2,2
   26c40:	1000291e 	bne	r2,zero,26ce8 <__swsetup_r+0xfc>
   26c44:	80800517 	ldw	r2,20(r16)
   26c48:	80800215 	stw	r2,8(r16)
   26c4c:	18001c26 	beq	r3,zero,26cc0 <__swsetup_r+0xd4>
   26c50:	0005883a 	mov	r2,zero
   26c54:	dfc00217 	ldw	ra,8(sp)
   26c58:	dc400117 	ldw	r17,4(sp)
   26c5c:	dc000017 	ldw	r16,0(sp)
   26c60:	dec00304 	addi	sp,sp,12
   26c64:	f800283a 	ret
   26c68:	2080040c 	andi	r2,r4,16
   26c6c:	10002e26 	beq	r2,zero,26d28 <__swsetup_r+0x13c>
   26c70:	2080010c 	andi	r2,r4,4
   26c74:	10001e1e 	bne	r2,zero,26cf0 <__swsetup_r+0x104>
   26c78:	80c00417 	ldw	r3,16(r16)
   26c7c:	20800214 	ori	r2,r4,8
   26c80:	8080030d 	sth	r2,12(r16)
   26c84:	183feb1e 	bne	r3,zero,26c34 <__alt_data_end+0xfffe6c34>
   26c88:	1100a00c 	andi	r4,r2,640
   26c8c:	01408004 	movi	r5,512
   26c90:	217fe826 	beq	r4,r5,26c34 <__alt_data_end+0xfffe6c34>
   26c94:	800b883a 	mov	r5,r16
   26c98:	8809883a 	mov	r4,r17
   26c9c:	00292a80 	call	292a8 <__smakebuf_r>
   26ca0:	8080030b 	ldhu	r2,12(r16)
   26ca4:	80c00417 	ldw	r3,16(r16)
   26ca8:	003fe206 	br	26c34 <__alt_data_end+0xfffe6c34>
   26cac:	80800517 	ldw	r2,20(r16)
   26cb0:	80000215 	stw	zero,8(r16)
   26cb4:	0085c83a 	sub	r2,zero,r2
   26cb8:	80800615 	stw	r2,24(r16)
   26cbc:	183fe41e 	bne	r3,zero,26c50 <__alt_data_end+0xfffe6c50>
   26cc0:	80c0030b 	ldhu	r3,12(r16)
   26cc4:	0005883a 	mov	r2,zero
   26cc8:	1900200c 	andi	r4,r3,128
   26ccc:	203fe126 	beq	r4,zero,26c54 <__alt_data_end+0xfffe6c54>
   26cd0:	18c01014 	ori	r3,r3,64
   26cd4:	80c0030d 	sth	r3,12(r16)
   26cd8:	00bfffc4 	movi	r2,-1
   26cdc:	003fdd06 	br	26c54 <__alt_data_end+0xfffe6c54>
   26ce0:	0028bc00 	call	28bc0 <__sinit>
   26ce4:	003fcd06 	br	26c1c <__alt_data_end+0xfffe6c1c>
   26ce8:	0005883a 	mov	r2,zero
   26cec:	003fd606 	br	26c48 <__alt_data_end+0xfffe6c48>
   26cf0:	81400c17 	ldw	r5,48(r16)
   26cf4:	28000626 	beq	r5,zero,26d10 <__swsetup_r+0x124>
   26cf8:	80801004 	addi	r2,r16,64
   26cfc:	28800326 	beq	r5,r2,26d0c <__swsetup_r+0x120>
   26d00:	8809883a 	mov	r4,r17
   26d04:	0028d340 	call	28d34 <_free_r>
   26d08:	8100030b 	ldhu	r4,12(r16)
   26d0c:	80000c15 	stw	zero,48(r16)
   26d10:	80c00417 	ldw	r3,16(r16)
   26d14:	00bff6c4 	movi	r2,-37
   26d18:	1108703a 	and	r4,r2,r4
   26d1c:	80000115 	stw	zero,4(r16)
   26d20:	80c00015 	stw	r3,0(r16)
   26d24:	003fd506 	br	26c7c <__alt_data_end+0xfffe6c7c>
   26d28:	00800244 	movi	r2,9
   26d2c:	88800015 	stw	r2,0(r17)
   26d30:	20801014 	ori	r2,r4,64
   26d34:	8080030d 	sth	r2,12(r16)
   26d38:	00bfffc4 	movi	r2,-1
   26d3c:	003fc506 	br	26c54 <__alt_data_end+0xfffe6c54>

00026d40 <quorem>:
   26d40:	defff704 	addi	sp,sp,-36
   26d44:	dc800215 	stw	r18,8(sp)
   26d48:	20800417 	ldw	r2,16(r4)
   26d4c:	2c800417 	ldw	r18,16(r5)
   26d50:	dfc00815 	stw	ra,32(sp)
   26d54:	ddc00715 	stw	r23,28(sp)
   26d58:	dd800615 	stw	r22,24(sp)
   26d5c:	dd400515 	stw	r21,20(sp)
   26d60:	dd000415 	stw	r20,16(sp)
   26d64:	dcc00315 	stw	r19,12(sp)
   26d68:	dc400115 	stw	r17,4(sp)
   26d6c:	dc000015 	stw	r16,0(sp)
   26d70:	14807116 	blt	r2,r18,26f38 <quorem+0x1f8>
   26d74:	94bfffc4 	addi	r18,r18,-1
   26d78:	94ad883a 	add	r22,r18,r18
   26d7c:	b5ad883a 	add	r22,r22,r22
   26d80:	2c400504 	addi	r17,r5,20
   26d84:	8da9883a 	add	r20,r17,r22
   26d88:	25400504 	addi	r21,r4,20
   26d8c:	282f883a 	mov	r23,r5
   26d90:	adad883a 	add	r22,r21,r22
   26d94:	a1400017 	ldw	r5,0(r20)
   26d98:	2021883a 	mov	r16,r4
   26d9c:	b1000017 	ldw	r4,0(r22)
   26da0:	29400044 	addi	r5,r5,1
   26da4:	00222240 	call	22224 <__udivsi3>
   26da8:	1027883a 	mov	r19,r2
   26dac:	10002c26 	beq	r2,zero,26e60 <quorem+0x120>
   26db0:	a813883a 	mov	r9,r21
   26db4:	880b883a 	mov	r5,r17
   26db8:	0009883a 	mov	r4,zero
   26dbc:	000d883a 	mov	r6,zero
   26dc0:	2a000017 	ldw	r8,0(r5)
   26dc4:	49c00017 	ldw	r7,0(r9)
   26dc8:	29400104 	addi	r5,r5,4
   26dcc:	40bfffcc 	andi	r2,r8,65535
   26dd0:	14c5383a 	mul	r2,r2,r19
   26dd4:	4010d43a 	srli	r8,r8,16
   26dd8:	38ffffcc 	andi	r3,r7,65535
   26ddc:	1105883a 	add	r2,r2,r4
   26de0:	1008d43a 	srli	r4,r2,16
   26de4:	44d1383a 	mul	r8,r8,r19
   26de8:	198d883a 	add	r6,r3,r6
   26dec:	10ffffcc 	andi	r3,r2,65535
   26df0:	30c7c83a 	sub	r3,r6,r3
   26df4:	380ed43a 	srli	r7,r7,16
   26df8:	4105883a 	add	r2,r8,r4
   26dfc:	180dd43a 	srai	r6,r3,16
   26e00:	113fffcc 	andi	r4,r2,65535
   26e04:	390fc83a 	sub	r7,r7,r4
   26e08:	398d883a 	add	r6,r7,r6
   26e0c:	300e943a 	slli	r7,r6,16
   26e10:	18ffffcc 	andi	r3,r3,65535
   26e14:	1008d43a 	srli	r4,r2,16
   26e18:	38ceb03a 	or	r7,r7,r3
   26e1c:	49c00015 	stw	r7,0(r9)
   26e20:	300dd43a 	srai	r6,r6,16
   26e24:	4a400104 	addi	r9,r9,4
   26e28:	a17fe52e 	bgeu	r20,r5,26dc0 <__alt_data_end+0xfffe6dc0>
   26e2c:	b0800017 	ldw	r2,0(r22)
   26e30:	10000b1e 	bne	r2,zero,26e60 <quorem+0x120>
   26e34:	b0bfff04 	addi	r2,r22,-4
   26e38:	a880082e 	bgeu	r21,r2,26e5c <quorem+0x11c>
   26e3c:	b0ffff17 	ldw	r3,-4(r22)
   26e40:	18000326 	beq	r3,zero,26e50 <quorem+0x110>
   26e44:	00000506 	br	26e5c <quorem+0x11c>
   26e48:	10c00017 	ldw	r3,0(r2)
   26e4c:	1800031e 	bne	r3,zero,26e5c <quorem+0x11c>
   26e50:	10bfff04 	addi	r2,r2,-4
   26e54:	94bfffc4 	addi	r18,r18,-1
   26e58:	a8bffb36 	bltu	r21,r2,26e48 <__alt_data_end+0xfffe6e48>
   26e5c:	84800415 	stw	r18,16(r16)
   26e60:	b80b883a 	mov	r5,r23
   26e64:	8009883a 	mov	r4,r16
   26e68:	002a88c0 	call	2a88c <__mcmp>
   26e6c:	10002616 	blt	r2,zero,26f08 <quorem+0x1c8>
   26e70:	9cc00044 	addi	r19,r19,1
   26e74:	a805883a 	mov	r2,r21
   26e78:	000b883a 	mov	r5,zero
   26e7c:	11000017 	ldw	r4,0(r2)
   26e80:	89800017 	ldw	r6,0(r17)
   26e84:	10800104 	addi	r2,r2,4
   26e88:	20ffffcc 	andi	r3,r4,65535
   26e8c:	194b883a 	add	r5,r3,r5
   26e90:	30ffffcc 	andi	r3,r6,65535
   26e94:	28c7c83a 	sub	r3,r5,r3
   26e98:	300cd43a 	srli	r6,r6,16
   26e9c:	2008d43a 	srli	r4,r4,16
   26ea0:	180bd43a 	srai	r5,r3,16
   26ea4:	18ffffcc 	andi	r3,r3,65535
   26ea8:	2189c83a 	sub	r4,r4,r6
   26eac:	2149883a 	add	r4,r4,r5
   26eb0:	200c943a 	slli	r6,r4,16
   26eb4:	8c400104 	addi	r17,r17,4
   26eb8:	200bd43a 	srai	r5,r4,16
   26ebc:	30c6b03a 	or	r3,r6,r3
   26ec0:	10ffff15 	stw	r3,-4(r2)
   26ec4:	a47fed2e 	bgeu	r20,r17,26e7c <__alt_data_end+0xfffe6e7c>
   26ec8:	9485883a 	add	r2,r18,r18
   26ecc:	1085883a 	add	r2,r2,r2
   26ed0:	a887883a 	add	r3,r21,r2
   26ed4:	18800017 	ldw	r2,0(r3)
   26ed8:	10000b1e 	bne	r2,zero,26f08 <quorem+0x1c8>
   26edc:	18bfff04 	addi	r2,r3,-4
   26ee0:	a880082e 	bgeu	r21,r2,26f04 <quorem+0x1c4>
   26ee4:	18ffff17 	ldw	r3,-4(r3)
   26ee8:	18000326 	beq	r3,zero,26ef8 <quorem+0x1b8>
   26eec:	00000506 	br	26f04 <quorem+0x1c4>
   26ef0:	10c00017 	ldw	r3,0(r2)
   26ef4:	1800031e 	bne	r3,zero,26f04 <quorem+0x1c4>
   26ef8:	10bfff04 	addi	r2,r2,-4
   26efc:	94bfffc4 	addi	r18,r18,-1
   26f00:	a8bffb36 	bltu	r21,r2,26ef0 <__alt_data_end+0xfffe6ef0>
   26f04:	84800415 	stw	r18,16(r16)
   26f08:	9805883a 	mov	r2,r19
   26f0c:	dfc00817 	ldw	ra,32(sp)
   26f10:	ddc00717 	ldw	r23,28(sp)
   26f14:	dd800617 	ldw	r22,24(sp)
   26f18:	dd400517 	ldw	r21,20(sp)
   26f1c:	dd000417 	ldw	r20,16(sp)
   26f20:	dcc00317 	ldw	r19,12(sp)
   26f24:	dc800217 	ldw	r18,8(sp)
   26f28:	dc400117 	ldw	r17,4(sp)
   26f2c:	dc000017 	ldw	r16,0(sp)
   26f30:	dec00904 	addi	sp,sp,36
   26f34:	f800283a 	ret
   26f38:	0005883a 	mov	r2,zero
   26f3c:	003ff306 	br	26f0c <__alt_data_end+0xfffe6f0c>

00026f40 <_dtoa_r>:
   26f40:	20801017 	ldw	r2,64(r4)
   26f44:	deffde04 	addi	sp,sp,-136
   26f48:	df002015 	stw	fp,128(sp)
   26f4c:	dcc01b15 	stw	r19,108(sp)
   26f50:	dc801a15 	stw	r18,104(sp)
   26f54:	dc401915 	stw	r17,100(sp)
   26f58:	dc001815 	stw	r16,96(sp)
   26f5c:	dfc02115 	stw	ra,132(sp)
   26f60:	ddc01f15 	stw	r23,124(sp)
   26f64:	dd801e15 	stw	r22,120(sp)
   26f68:	dd401d15 	stw	r21,116(sp)
   26f6c:	dd001c15 	stw	r20,112(sp)
   26f70:	d9c00315 	stw	r7,12(sp)
   26f74:	2039883a 	mov	fp,r4
   26f78:	3023883a 	mov	r17,r6
   26f7c:	2825883a 	mov	r18,r5
   26f80:	dc002417 	ldw	r16,144(sp)
   26f84:	3027883a 	mov	r19,r6
   26f88:	10000826 	beq	r2,zero,26fac <_dtoa_r+0x6c>
   26f8c:	21801117 	ldw	r6,68(r4)
   26f90:	00c00044 	movi	r3,1
   26f94:	100b883a 	mov	r5,r2
   26f98:	1986983a 	sll	r3,r3,r6
   26f9c:	11800115 	stw	r6,4(r2)
   26fa0:	10c00215 	stw	r3,8(r2)
   26fa4:	002a06c0 	call	2a06c <_Bfree>
   26fa8:	e0001015 	stw	zero,64(fp)
   26fac:	88002e16 	blt	r17,zero,27068 <_dtoa_r+0x128>
   26fb0:	80000015 	stw	zero,0(r16)
   26fb4:	889ffc2c 	andhi	r2,r17,32752
   26fb8:	00dffc34 	movhi	r3,32752
   26fbc:	10c01c26 	beq	r2,r3,27030 <_dtoa_r+0xf0>
   26fc0:	000d883a 	mov	r6,zero
   26fc4:	000f883a 	mov	r7,zero
   26fc8:	9009883a 	mov	r4,r18
   26fcc:	980b883a 	mov	r5,r19
   26fd0:	00234740 	call	23474 <__eqdf2>
   26fd4:	10002b1e 	bne	r2,zero,27084 <_dtoa_r+0x144>
   26fd8:	d9c02317 	ldw	r7,140(sp)
   26fdc:	00800044 	movi	r2,1
   26fe0:	38800015 	stw	r2,0(r7)
   26fe4:	d8802517 	ldw	r2,148(sp)
   26fe8:	10019e26 	beq	r2,zero,27664 <_dtoa_r+0x724>
   26fec:	d8c02517 	ldw	r3,148(sp)
   26ff0:	008000f4 	movhi	r2,3
   26ff4:	1084ed44 	addi	r2,r2,5045
   26ff8:	18800015 	stw	r2,0(r3)
   26ffc:	10bfffc4 	addi	r2,r2,-1
   27000:	dfc02117 	ldw	ra,132(sp)
   27004:	df002017 	ldw	fp,128(sp)
   27008:	ddc01f17 	ldw	r23,124(sp)
   2700c:	dd801e17 	ldw	r22,120(sp)
   27010:	dd401d17 	ldw	r21,116(sp)
   27014:	dd001c17 	ldw	r20,112(sp)
   27018:	dcc01b17 	ldw	r19,108(sp)
   2701c:	dc801a17 	ldw	r18,104(sp)
   27020:	dc401917 	ldw	r17,100(sp)
   27024:	dc001817 	ldw	r16,96(sp)
   27028:	dec02204 	addi	sp,sp,136
   2702c:	f800283a 	ret
   27030:	d8c02317 	ldw	r3,140(sp)
   27034:	0089c3c4 	movi	r2,9999
   27038:	18800015 	stw	r2,0(r3)
   2703c:	90017726 	beq	r18,zero,2761c <_dtoa_r+0x6dc>
   27040:	008000f4 	movhi	r2,3
   27044:	1084f904 	addi	r2,r2,5092
   27048:	d9002517 	ldw	r4,148(sp)
   2704c:	203fec26 	beq	r4,zero,27000 <__alt_data_end+0xfffe7000>
   27050:	10c000c7 	ldb	r3,3(r2)
   27054:	1801781e 	bne	r3,zero,27638 <_dtoa_r+0x6f8>
   27058:	10c000c4 	addi	r3,r2,3
   2705c:	d9802517 	ldw	r6,148(sp)
   27060:	30c00015 	stw	r3,0(r6)
   27064:	003fe606 	br	27000 <__alt_data_end+0xfffe7000>
   27068:	04e00034 	movhi	r19,32768
   2706c:	9cffffc4 	addi	r19,r19,-1
   27070:	00800044 	movi	r2,1
   27074:	8ce6703a 	and	r19,r17,r19
   27078:	80800015 	stw	r2,0(r16)
   2707c:	9823883a 	mov	r17,r19
   27080:	003fcc06 	br	26fb4 <__alt_data_end+0xfffe6fb4>
   27084:	d8800204 	addi	r2,sp,8
   27088:	d8800015 	stw	r2,0(sp)
   2708c:	d9c00104 	addi	r7,sp,4
   27090:	900b883a 	mov	r5,r18
   27094:	980d883a 	mov	r6,r19
   27098:	e009883a 	mov	r4,fp
   2709c:	8820d53a 	srli	r16,r17,20
   270a0:	002ac580 	call	2ac58 <__d2b>
   270a4:	d8800915 	stw	r2,36(sp)
   270a8:	8001651e 	bne	r16,zero,27640 <_dtoa_r+0x700>
   270ac:	dd800217 	ldw	r22,8(sp)
   270b0:	dc000117 	ldw	r16,4(sp)
   270b4:	00800804 	movi	r2,32
   270b8:	b421883a 	add	r16,r22,r16
   270bc:	80c10c84 	addi	r3,r16,1074
   270c0:	10c2d10e 	bge	r2,r3,27c08 <_dtoa_r+0xcc8>
   270c4:	00801004 	movi	r2,64
   270c8:	81010484 	addi	r4,r16,1042
   270cc:	10c7c83a 	sub	r3,r2,r3
   270d0:	9108d83a 	srl	r4,r18,r4
   270d4:	88e2983a 	sll	r17,r17,r3
   270d8:	2448b03a 	or	r4,r4,r17
   270dc:	002e86c0 	call	2e86c <__floatunsidf>
   270e0:	017f8434 	movhi	r5,65040
   270e4:	01800044 	movi	r6,1
   270e8:	1009883a 	mov	r4,r2
   270ec:	194b883a 	add	r5,r3,r5
   270f0:	843fffc4 	addi	r16,r16,-1
   270f4:	d9801115 	stw	r6,68(sp)
   270f8:	000d883a 	mov	r6,zero
   270fc:	01cffe34 	movhi	r7,16376
   27100:	0023de40 	call	23de4 <__subdf3>
   27104:	0198dbf4 	movhi	r6,25455
   27108:	01cff4f4 	movhi	r7,16339
   2710c:	3190d844 	addi	r6,r6,17249
   27110:	39e1e9c4 	addi	r7,r7,-30809
   27114:	1009883a 	mov	r4,r2
   27118:	180b883a 	mov	r5,r3
   2711c:	00236cc0 	call	236cc <__muldf3>
   27120:	01a2d874 	movhi	r6,35681
   27124:	01cff1f4 	movhi	r7,16327
   27128:	31b22cc4 	addi	r6,r6,-14157
   2712c:	39e28a04 	addi	r7,r7,-30168
   27130:	180b883a 	mov	r5,r3
   27134:	1009883a 	mov	r4,r2
   27138:	00222e00 	call	222e0 <__adddf3>
   2713c:	8009883a 	mov	r4,r16
   27140:	1029883a 	mov	r20,r2
   27144:	1823883a 	mov	r17,r3
   27148:	00247600 	call	24760 <__floatsidf>
   2714c:	019427f4 	movhi	r6,20639
   27150:	01cff4f4 	movhi	r7,16339
   27154:	319e7ec4 	addi	r6,r6,31227
   27158:	39d104c4 	addi	r7,r7,17427
   2715c:	1009883a 	mov	r4,r2
   27160:	180b883a 	mov	r5,r3
   27164:	00236cc0 	call	236cc <__muldf3>
   27168:	100d883a 	mov	r6,r2
   2716c:	180f883a 	mov	r7,r3
   27170:	a009883a 	mov	r4,r20
   27174:	880b883a 	mov	r5,r17
   27178:	00222e00 	call	222e0 <__adddf3>
   2717c:	1009883a 	mov	r4,r2
   27180:	180b883a 	mov	r5,r3
   27184:	1029883a 	mov	r20,r2
   27188:	1823883a 	mov	r17,r3
   2718c:	00246e00 	call	246e0 <__fixdfsi>
   27190:	000d883a 	mov	r6,zero
   27194:	000f883a 	mov	r7,zero
   27198:	a009883a 	mov	r4,r20
   2719c:	880b883a 	mov	r5,r17
   271a0:	d8800515 	stw	r2,20(sp)
   271a4:	00235d80 	call	235d8 <__ledf2>
   271a8:	10028716 	blt	r2,zero,27bc8 <_dtoa_r+0xc88>
   271ac:	d8c00517 	ldw	r3,20(sp)
   271b0:	00800584 	movi	r2,22
   271b4:	10c27536 	bltu	r2,r3,27b8c <_dtoa_r+0xc4c>
   271b8:	180490fa 	slli	r2,r3,3
   271bc:	00c000f4 	movhi	r3,3
   271c0:	18c51404 	addi	r3,r3,5200
   271c4:	1885883a 	add	r2,r3,r2
   271c8:	11000017 	ldw	r4,0(r2)
   271cc:	11400117 	ldw	r5,4(r2)
   271d0:	900d883a 	mov	r6,r18
   271d4:	980f883a 	mov	r7,r19
   271d8:	00234fc0 	call	234fc <__gedf2>
   271dc:	00828d0e 	bge	zero,r2,27c14 <_dtoa_r+0xcd4>
   271e0:	d9000517 	ldw	r4,20(sp)
   271e4:	d8000e15 	stw	zero,56(sp)
   271e8:	213fffc4 	addi	r4,r4,-1
   271ec:	d9000515 	stw	r4,20(sp)
   271f0:	b42dc83a 	sub	r22,r22,r16
   271f4:	b5bfffc4 	addi	r22,r22,-1
   271f8:	b0026f16 	blt	r22,zero,27bb8 <_dtoa_r+0xc78>
   271fc:	d8000815 	stw	zero,32(sp)
   27200:	d9c00517 	ldw	r7,20(sp)
   27204:	38026416 	blt	r7,zero,27b98 <_dtoa_r+0xc58>
   27208:	b1ed883a 	add	r22,r22,r7
   2720c:	d9c00d15 	stw	r7,52(sp)
   27210:	d8000a15 	stw	zero,40(sp)
   27214:	d9800317 	ldw	r6,12(sp)
   27218:	00800244 	movi	r2,9
   2721c:	11811436 	bltu	r2,r6,27670 <_dtoa_r+0x730>
   27220:	00800144 	movi	r2,5
   27224:	1184e10e 	bge	r2,r6,285ac <_dtoa_r+0x166c>
   27228:	31bfff04 	addi	r6,r6,-4
   2722c:	d9800315 	stw	r6,12(sp)
   27230:	0023883a 	mov	r17,zero
   27234:	d9800317 	ldw	r6,12(sp)
   27238:	008000c4 	movi	r2,3
   2723c:	30836726 	beq	r6,r2,27fdc <_dtoa_r+0x109c>
   27240:	1183410e 	bge	r2,r6,27f48 <_dtoa_r+0x1008>
   27244:	d9c00317 	ldw	r7,12(sp)
   27248:	00800104 	movi	r2,4
   2724c:	38827c26 	beq	r7,r2,27c40 <_dtoa_r+0xd00>
   27250:	00800144 	movi	r2,5
   27254:	3884c41e 	bne	r7,r2,28568 <_dtoa_r+0x1628>
   27258:	00800044 	movi	r2,1
   2725c:	d8800b15 	stw	r2,44(sp)
   27260:	d8c00517 	ldw	r3,20(sp)
   27264:	d9002217 	ldw	r4,136(sp)
   27268:	1907883a 	add	r3,r3,r4
   2726c:	19800044 	addi	r6,r3,1
   27270:	d8c00c15 	stw	r3,48(sp)
   27274:	d9800615 	stw	r6,24(sp)
   27278:	0183a40e 	bge	zero,r6,2810c <_dtoa_r+0x11cc>
   2727c:	d9800617 	ldw	r6,24(sp)
   27280:	3021883a 	mov	r16,r6
   27284:	e0001115 	stw	zero,68(fp)
   27288:	008005c4 	movi	r2,23
   2728c:	1184c92e 	bgeu	r2,r6,285b4 <_dtoa_r+0x1674>
   27290:	00c00044 	movi	r3,1
   27294:	00800104 	movi	r2,4
   27298:	1085883a 	add	r2,r2,r2
   2729c:	11000504 	addi	r4,r2,20
   272a0:	180b883a 	mov	r5,r3
   272a4:	18c00044 	addi	r3,r3,1
   272a8:	313ffb2e 	bgeu	r6,r4,27298 <__alt_data_end+0xfffe7298>
   272ac:	e1401115 	stw	r5,68(fp)
   272b0:	e009883a 	mov	r4,fp
   272b4:	0029fc40 	call	29fc4 <_Balloc>
   272b8:	d8800715 	stw	r2,28(sp)
   272bc:	e0801015 	stw	r2,64(fp)
   272c0:	00800384 	movi	r2,14
   272c4:	1400f736 	bltu	r2,r16,276a4 <_dtoa_r+0x764>
   272c8:	8800f626 	beq	r17,zero,276a4 <_dtoa_r+0x764>
   272cc:	d9c00517 	ldw	r7,20(sp)
   272d0:	01c39a0e 	bge	zero,r7,2813c <_dtoa_r+0x11fc>
   272d4:	388003cc 	andi	r2,r7,15
   272d8:	100490fa 	slli	r2,r2,3
   272dc:	382bd13a 	srai	r21,r7,4
   272e0:	00c000f4 	movhi	r3,3
   272e4:	18c51404 	addi	r3,r3,5200
   272e8:	1885883a 	add	r2,r3,r2
   272ec:	a8c0040c 	andi	r3,r21,16
   272f0:	12400017 	ldw	r9,0(r2)
   272f4:	12000117 	ldw	r8,4(r2)
   272f8:	18037926 	beq	r3,zero,280e0 <_dtoa_r+0x11a0>
   272fc:	008000f4 	movhi	r2,3
   27300:	10850a04 	addi	r2,r2,5160
   27304:	11800817 	ldw	r6,32(r2)
   27308:	11c00917 	ldw	r7,36(r2)
   2730c:	9009883a 	mov	r4,r18
   27310:	980b883a 	mov	r5,r19
   27314:	da001715 	stw	r8,92(sp)
   27318:	da401615 	stw	r9,88(sp)
   2731c:	0022b8c0 	call	22b8c <__divdf3>
   27320:	da001717 	ldw	r8,92(sp)
   27324:	da401617 	ldw	r9,88(sp)
   27328:	ad4003cc 	andi	r21,r21,15
   2732c:	040000c4 	movi	r16,3
   27330:	1023883a 	mov	r17,r2
   27334:	1829883a 	mov	r20,r3
   27338:	a8001126 	beq	r21,zero,27380 <_dtoa_r+0x440>
   2733c:	05c000f4 	movhi	r23,3
   27340:	bdc50a04 	addi	r23,r23,5160
   27344:	4805883a 	mov	r2,r9
   27348:	4007883a 	mov	r3,r8
   2734c:	a980004c 	andi	r6,r21,1
   27350:	1009883a 	mov	r4,r2
   27354:	a82bd07a 	srai	r21,r21,1
   27358:	180b883a 	mov	r5,r3
   2735c:	30000426 	beq	r6,zero,27370 <_dtoa_r+0x430>
   27360:	b9800017 	ldw	r6,0(r23)
   27364:	b9c00117 	ldw	r7,4(r23)
   27368:	84000044 	addi	r16,r16,1
   2736c:	00236cc0 	call	236cc <__muldf3>
   27370:	bdc00204 	addi	r23,r23,8
   27374:	a83ff51e 	bne	r21,zero,2734c <__alt_data_end+0xfffe734c>
   27378:	1013883a 	mov	r9,r2
   2737c:	1811883a 	mov	r8,r3
   27380:	480d883a 	mov	r6,r9
   27384:	400f883a 	mov	r7,r8
   27388:	8809883a 	mov	r4,r17
   2738c:	a00b883a 	mov	r5,r20
   27390:	0022b8c0 	call	22b8c <__divdf3>
   27394:	d8800f15 	stw	r2,60(sp)
   27398:	d8c01015 	stw	r3,64(sp)
   2739c:	d8c00e17 	ldw	r3,56(sp)
   273a0:	18000626 	beq	r3,zero,273bc <_dtoa_r+0x47c>
   273a4:	d9000f17 	ldw	r4,60(sp)
   273a8:	d9401017 	ldw	r5,64(sp)
   273ac:	000d883a 	mov	r6,zero
   273b0:	01cffc34 	movhi	r7,16368
   273b4:	00235d80 	call	235d8 <__ledf2>
   273b8:	10040b16 	blt	r2,zero,283e8 <_dtoa_r+0x14a8>
   273bc:	8009883a 	mov	r4,r16
   273c0:	00247600 	call	24760 <__floatsidf>
   273c4:	d9800f17 	ldw	r6,60(sp)
   273c8:	d9c01017 	ldw	r7,64(sp)
   273cc:	1009883a 	mov	r4,r2
   273d0:	180b883a 	mov	r5,r3
   273d4:	00236cc0 	call	236cc <__muldf3>
   273d8:	000d883a 	mov	r6,zero
   273dc:	01d00734 	movhi	r7,16412
   273e0:	1009883a 	mov	r4,r2
   273e4:	180b883a 	mov	r5,r3
   273e8:	00222e00 	call	222e0 <__adddf3>
   273ec:	1021883a 	mov	r16,r2
   273f0:	d8800617 	ldw	r2,24(sp)
   273f4:	047f3034 	movhi	r17,64704
   273f8:	1c63883a 	add	r17,r3,r17
   273fc:	10031826 	beq	r2,zero,28060 <_dtoa_r+0x1120>
   27400:	d8c00517 	ldw	r3,20(sp)
   27404:	db000617 	ldw	r12,24(sp)
   27408:	d8c01315 	stw	r3,76(sp)
   2740c:	d9000b17 	ldw	r4,44(sp)
   27410:	20038f26 	beq	r4,zero,28250 <_dtoa_r+0x1310>
   27414:	60bfffc4 	addi	r2,r12,-1
   27418:	100490fa 	slli	r2,r2,3
   2741c:	00c000f4 	movhi	r3,3
   27420:	18c51404 	addi	r3,r3,5200
   27424:	1885883a 	add	r2,r3,r2
   27428:	11800017 	ldw	r6,0(r2)
   2742c:	11c00117 	ldw	r7,4(r2)
   27430:	d8800717 	ldw	r2,28(sp)
   27434:	0009883a 	mov	r4,zero
   27438:	014ff834 	movhi	r5,16352
   2743c:	db001615 	stw	r12,88(sp)
   27440:	15c00044 	addi	r23,r2,1
   27444:	0022b8c0 	call	22b8c <__divdf3>
   27448:	800d883a 	mov	r6,r16
   2744c:	880f883a 	mov	r7,r17
   27450:	1009883a 	mov	r4,r2
   27454:	180b883a 	mov	r5,r3
   27458:	0023de40 	call	23de4 <__subdf3>
   2745c:	d9401017 	ldw	r5,64(sp)
   27460:	d9000f17 	ldw	r4,60(sp)
   27464:	102b883a 	mov	r21,r2
   27468:	d8c01215 	stw	r3,72(sp)
   2746c:	00246e00 	call	246e0 <__fixdfsi>
   27470:	1009883a 	mov	r4,r2
   27474:	1029883a 	mov	r20,r2
   27478:	00247600 	call	24760 <__floatsidf>
   2747c:	d9000f17 	ldw	r4,60(sp)
   27480:	d9401017 	ldw	r5,64(sp)
   27484:	100d883a 	mov	r6,r2
   27488:	180f883a 	mov	r7,r3
   2748c:	0023de40 	call	23de4 <__subdf3>
   27490:	1823883a 	mov	r17,r3
   27494:	d8c00717 	ldw	r3,28(sp)
   27498:	d9401217 	ldw	r5,72(sp)
   2749c:	a2000c04 	addi	r8,r20,48
   274a0:	1021883a 	mov	r16,r2
   274a4:	1a000005 	stb	r8,0(r3)
   274a8:	800d883a 	mov	r6,r16
   274ac:	880f883a 	mov	r7,r17
   274b0:	a809883a 	mov	r4,r21
   274b4:	4029883a 	mov	r20,r8
   274b8:	00234fc0 	call	234fc <__gedf2>
   274bc:	00841d16 	blt	zero,r2,28534 <_dtoa_r+0x15f4>
   274c0:	800d883a 	mov	r6,r16
   274c4:	880f883a 	mov	r7,r17
   274c8:	0009883a 	mov	r4,zero
   274cc:	014ffc34 	movhi	r5,16368
   274d0:	0023de40 	call	23de4 <__subdf3>
   274d4:	d9401217 	ldw	r5,72(sp)
   274d8:	100d883a 	mov	r6,r2
   274dc:	180f883a 	mov	r7,r3
   274e0:	a809883a 	mov	r4,r21
   274e4:	00234fc0 	call	234fc <__gedf2>
   274e8:	db001617 	ldw	r12,88(sp)
   274ec:	00840e16 	blt	zero,r2,28528 <_dtoa_r+0x15e8>
   274f0:	00800044 	movi	r2,1
   274f4:	13006b0e 	bge	r2,r12,276a4 <_dtoa_r+0x764>
   274f8:	d9000717 	ldw	r4,28(sp)
   274fc:	dd800f15 	stw	r22,60(sp)
   27500:	dcc01015 	stw	r19,64(sp)
   27504:	2319883a 	add	r12,r4,r12
   27508:	dcc01217 	ldw	r19,72(sp)
   2750c:	602d883a 	mov	r22,r12
   27510:	dc801215 	stw	r18,72(sp)
   27514:	b825883a 	mov	r18,r23
   27518:	00000906 	br	27540 <_dtoa_r+0x600>
   2751c:	0023de40 	call	23de4 <__subdf3>
   27520:	a80d883a 	mov	r6,r21
   27524:	980f883a 	mov	r7,r19
   27528:	1009883a 	mov	r4,r2
   2752c:	180b883a 	mov	r5,r3
   27530:	00235d80 	call	235d8 <__ledf2>
   27534:	1003e816 	blt	r2,zero,284d8 <_dtoa_r+0x1598>
   27538:	b825883a 	mov	r18,r23
   2753c:	bd83e926 	beq	r23,r22,284e4 <_dtoa_r+0x15a4>
   27540:	a809883a 	mov	r4,r21
   27544:	980b883a 	mov	r5,r19
   27548:	000d883a 	mov	r6,zero
   2754c:	01d00934 	movhi	r7,16420
   27550:	00236cc0 	call	236cc <__muldf3>
   27554:	000d883a 	mov	r6,zero
   27558:	01d00934 	movhi	r7,16420
   2755c:	8009883a 	mov	r4,r16
   27560:	880b883a 	mov	r5,r17
   27564:	102b883a 	mov	r21,r2
   27568:	1827883a 	mov	r19,r3
   2756c:	00236cc0 	call	236cc <__muldf3>
   27570:	180b883a 	mov	r5,r3
   27574:	1009883a 	mov	r4,r2
   27578:	1821883a 	mov	r16,r3
   2757c:	1023883a 	mov	r17,r2
   27580:	00246e00 	call	246e0 <__fixdfsi>
   27584:	1009883a 	mov	r4,r2
   27588:	1029883a 	mov	r20,r2
   2758c:	00247600 	call	24760 <__floatsidf>
   27590:	8809883a 	mov	r4,r17
   27594:	800b883a 	mov	r5,r16
   27598:	100d883a 	mov	r6,r2
   2759c:	180f883a 	mov	r7,r3
   275a0:	0023de40 	call	23de4 <__subdf3>
   275a4:	a5000c04 	addi	r20,r20,48
   275a8:	a80d883a 	mov	r6,r21
   275ac:	980f883a 	mov	r7,r19
   275b0:	1009883a 	mov	r4,r2
   275b4:	180b883a 	mov	r5,r3
   275b8:	95000005 	stb	r20,0(r18)
   275bc:	1021883a 	mov	r16,r2
   275c0:	1823883a 	mov	r17,r3
   275c4:	00235d80 	call	235d8 <__ledf2>
   275c8:	bdc00044 	addi	r23,r23,1
   275cc:	800d883a 	mov	r6,r16
   275d0:	880f883a 	mov	r7,r17
   275d4:	0009883a 	mov	r4,zero
   275d8:	014ffc34 	movhi	r5,16368
   275dc:	103fcf0e 	bge	r2,zero,2751c <__alt_data_end+0xfffe751c>
   275e0:	d8c01317 	ldw	r3,76(sp)
   275e4:	d8c00515 	stw	r3,20(sp)
   275e8:	d9400917 	ldw	r5,36(sp)
   275ec:	e009883a 	mov	r4,fp
   275f0:	002a06c0 	call	2a06c <_Bfree>
   275f4:	d9000517 	ldw	r4,20(sp)
   275f8:	d9802317 	ldw	r6,140(sp)
   275fc:	d9c02517 	ldw	r7,148(sp)
   27600:	b8000005 	stb	zero,0(r23)
   27604:	20800044 	addi	r2,r4,1
   27608:	30800015 	stw	r2,0(r6)
   2760c:	3802aa26 	beq	r7,zero,280b8 <_dtoa_r+0x1178>
   27610:	3dc00015 	stw	r23,0(r7)
   27614:	d8800717 	ldw	r2,28(sp)
   27618:	003e7906 	br	27000 <__alt_data_end+0xfffe7000>
   2761c:	00800434 	movhi	r2,16
   27620:	10bfffc4 	addi	r2,r2,-1
   27624:	88a2703a 	and	r17,r17,r2
   27628:	883e851e 	bne	r17,zero,27040 <__alt_data_end+0xfffe7040>
   2762c:	008000f4 	movhi	r2,3
   27630:	1084f604 	addi	r2,r2,5080
   27634:	003e8406 	br	27048 <__alt_data_end+0xfffe7048>
   27638:	10c00204 	addi	r3,r2,8
   2763c:	003e8706 	br	2705c <__alt_data_end+0xfffe705c>
   27640:	01400434 	movhi	r5,16
   27644:	297fffc4 	addi	r5,r5,-1
   27648:	994a703a 	and	r5,r19,r5
   2764c:	9009883a 	mov	r4,r18
   27650:	843f0044 	addi	r16,r16,-1023
   27654:	294ffc34 	orhi	r5,r5,16368
   27658:	dd800217 	ldw	r22,8(sp)
   2765c:	d8001115 	stw	zero,68(sp)
   27660:	003ea506 	br	270f8 <__alt_data_end+0xfffe70f8>
   27664:	008000f4 	movhi	r2,3
   27668:	1084ed04 	addi	r2,r2,5044
   2766c:	003e6406 	br	27000 <__alt_data_end+0xfffe7000>
   27670:	e0001115 	stw	zero,68(fp)
   27674:	000b883a 	mov	r5,zero
   27678:	e009883a 	mov	r4,fp
   2767c:	0029fc40 	call	29fc4 <_Balloc>
   27680:	01bfffc4 	movi	r6,-1
   27684:	01c00044 	movi	r7,1
   27688:	d8800715 	stw	r2,28(sp)
   2768c:	d9800c15 	stw	r6,48(sp)
   27690:	e0801015 	stw	r2,64(fp)
   27694:	d8000315 	stw	zero,12(sp)
   27698:	d9c00b15 	stw	r7,44(sp)
   2769c:	d9800615 	stw	r6,24(sp)
   276a0:	d8002215 	stw	zero,136(sp)
   276a4:	d8800117 	ldw	r2,4(sp)
   276a8:	10008916 	blt	r2,zero,278d0 <_dtoa_r+0x990>
   276ac:	d9000517 	ldw	r4,20(sp)
   276b0:	00c00384 	movi	r3,14
   276b4:	19008616 	blt	r3,r4,278d0 <_dtoa_r+0x990>
   276b8:	200490fa 	slli	r2,r4,3
   276bc:	00c000f4 	movhi	r3,3
   276c0:	d9802217 	ldw	r6,136(sp)
   276c4:	18c51404 	addi	r3,r3,5200
   276c8:	1885883a 	add	r2,r3,r2
   276cc:	14000017 	ldw	r16,0(r2)
   276d0:	14400117 	ldw	r17,4(r2)
   276d4:	30016316 	blt	r6,zero,27c64 <_dtoa_r+0xd24>
   276d8:	800d883a 	mov	r6,r16
   276dc:	880f883a 	mov	r7,r17
   276e0:	9009883a 	mov	r4,r18
   276e4:	980b883a 	mov	r5,r19
   276e8:	0022b8c0 	call	22b8c <__divdf3>
   276ec:	180b883a 	mov	r5,r3
   276f0:	1009883a 	mov	r4,r2
   276f4:	00246e00 	call	246e0 <__fixdfsi>
   276f8:	1009883a 	mov	r4,r2
   276fc:	102b883a 	mov	r21,r2
   27700:	00247600 	call	24760 <__floatsidf>
   27704:	800d883a 	mov	r6,r16
   27708:	880f883a 	mov	r7,r17
   2770c:	1009883a 	mov	r4,r2
   27710:	180b883a 	mov	r5,r3
   27714:	00236cc0 	call	236cc <__muldf3>
   27718:	100d883a 	mov	r6,r2
   2771c:	180f883a 	mov	r7,r3
   27720:	9009883a 	mov	r4,r18
   27724:	980b883a 	mov	r5,r19
   27728:	0023de40 	call	23de4 <__subdf3>
   2772c:	d9c00717 	ldw	r7,28(sp)
   27730:	1009883a 	mov	r4,r2
   27734:	a8800c04 	addi	r2,r21,48
   27738:	38800005 	stb	r2,0(r7)
   2773c:	3dc00044 	addi	r23,r7,1
   27740:	d9c00617 	ldw	r7,24(sp)
   27744:	01800044 	movi	r6,1
   27748:	180b883a 	mov	r5,r3
   2774c:	2005883a 	mov	r2,r4
   27750:	39803826 	beq	r7,r6,27834 <_dtoa_r+0x8f4>
   27754:	000d883a 	mov	r6,zero
   27758:	01d00934 	movhi	r7,16420
   2775c:	00236cc0 	call	236cc <__muldf3>
   27760:	000d883a 	mov	r6,zero
   27764:	000f883a 	mov	r7,zero
   27768:	1009883a 	mov	r4,r2
   2776c:	180b883a 	mov	r5,r3
   27770:	1025883a 	mov	r18,r2
   27774:	1827883a 	mov	r19,r3
   27778:	00234740 	call	23474 <__eqdf2>
   2777c:	103f9a26 	beq	r2,zero,275e8 <__alt_data_end+0xfffe75e8>
   27780:	d9c00617 	ldw	r7,24(sp)
   27784:	d8c00717 	ldw	r3,28(sp)
   27788:	b829883a 	mov	r20,r23
   2778c:	38bfffc4 	addi	r2,r7,-1
   27790:	18ad883a 	add	r22,r3,r2
   27794:	00000a06 	br	277c0 <_dtoa_r+0x880>
   27798:	00236cc0 	call	236cc <__muldf3>
   2779c:	000d883a 	mov	r6,zero
   277a0:	000f883a 	mov	r7,zero
   277a4:	1009883a 	mov	r4,r2
   277a8:	180b883a 	mov	r5,r3
   277ac:	1025883a 	mov	r18,r2
   277b0:	1827883a 	mov	r19,r3
   277b4:	b829883a 	mov	r20,r23
   277b8:	00234740 	call	23474 <__eqdf2>
   277bc:	103f8a26 	beq	r2,zero,275e8 <__alt_data_end+0xfffe75e8>
   277c0:	800d883a 	mov	r6,r16
   277c4:	880f883a 	mov	r7,r17
   277c8:	9009883a 	mov	r4,r18
   277cc:	980b883a 	mov	r5,r19
   277d0:	0022b8c0 	call	22b8c <__divdf3>
   277d4:	180b883a 	mov	r5,r3
   277d8:	1009883a 	mov	r4,r2
   277dc:	00246e00 	call	246e0 <__fixdfsi>
   277e0:	1009883a 	mov	r4,r2
   277e4:	102b883a 	mov	r21,r2
   277e8:	00247600 	call	24760 <__floatsidf>
   277ec:	800d883a 	mov	r6,r16
   277f0:	880f883a 	mov	r7,r17
   277f4:	1009883a 	mov	r4,r2
   277f8:	180b883a 	mov	r5,r3
   277fc:	00236cc0 	call	236cc <__muldf3>
   27800:	100d883a 	mov	r6,r2
   27804:	180f883a 	mov	r7,r3
   27808:	9009883a 	mov	r4,r18
   2780c:	980b883a 	mov	r5,r19
   27810:	0023de40 	call	23de4 <__subdf3>
   27814:	aa000c04 	addi	r8,r21,48
   27818:	a2000005 	stb	r8,0(r20)
   2781c:	000d883a 	mov	r6,zero
   27820:	01d00934 	movhi	r7,16420
   27824:	1009883a 	mov	r4,r2
   27828:	180b883a 	mov	r5,r3
   2782c:	a5c00044 	addi	r23,r20,1
   27830:	b53fd91e 	bne	r22,r20,27798 <__alt_data_end+0xfffe7798>
   27834:	100d883a 	mov	r6,r2
   27838:	180f883a 	mov	r7,r3
   2783c:	1009883a 	mov	r4,r2
   27840:	180b883a 	mov	r5,r3
   27844:	00222e00 	call	222e0 <__adddf3>
   27848:	100d883a 	mov	r6,r2
   2784c:	180f883a 	mov	r7,r3
   27850:	8009883a 	mov	r4,r16
   27854:	880b883a 	mov	r5,r17
   27858:	1027883a 	mov	r19,r2
   2785c:	1825883a 	mov	r18,r3
   27860:	00235d80 	call	235d8 <__ledf2>
   27864:	10000816 	blt	r2,zero,27888 <_dtoa_r+0x948>
   27868:	980d883a 	mov	r6,r19
   2786c:	900f883a 	mov	r7,r18
   27870:	8009883a 	mov	r4,r16
   27874:	880b883a 	mov	r5,r17
   27878:	00234740 	call	23474 <__eqdf2>
   2787c:	103f5a1e 	bne	r2,zero,275e8 <__alt_data_end+0xfffe75e8>
   27880:	ad40004c 	andi	r21,r21,1
   27884:	a83f5826 	beq	r21,zero,275e8 <__alt_data_end+0xfffe75e8>
   27888:	bd3fffc3 	ldbu	r20,-1(r23)
   2788c:	b8bfffc4 	addi	r2,r23,-1
   27890:	1007883a 	mov	r3,r2
   27894:	01400e44 	movi	r5,57
   27898:	d9800717 	ldw	r6,28(sp)
   2789c:	00000506 	br	278b4 <_dtoa_r+0x974>
   278a0:	18ffffc4 	addi	r3,r3,-1
   278a4:	11824726 	beq	r2,r6,281c4 <_dtoa_r+0x1284>
   278a8:	1d000003 	ldbu	r20,0(r3)
   278ac:	102f883a 	mov	r23,r2
   278b0:	10bfffc4 	addi	r2,r2,-1
   278b4:	a1003fcc 	andi	r4,r20,255
   278b8:	2100201c 	xori	r4,r4,128
   278bc:	213fe004 	addi	r4,r4,-128
   278c0:	217ff726 	beq	r4,r5,278a0 <__alt_data_end+0xfffe78a0>
   278c4:	a2000044 	addi	r8,r20,1
   278c8:	12000005 	stb	r8,0(r2)
   278cc:	003f4606 	br	275e8 <__alt_data_end+0xfffe75e8>
   278d0:	d9000b17 	ldw	r4,44(sp)
   278d4:	2000c826 	beq	r4,zero,27bf8 <_dtoa_r+0xcb8>
   278d8:	d9800317 	ldw	r6,12(sp)
   278dc:	00c00044 	movi	r3,1
   278e0:	1980f90e 	bge	r3,r6,27cc8 <_dtoa_r+0xd88>
   278e4:	d8800617 	ldw	r2,24(sp)
   278e8:	d8c00a17 	ldw	r3,40(sp)
   278ec:	157fffc4 	addi	r21,r2,-1
   278f0:	1d41f316 	blt	r3,r21,280c0 <_dtoa_r+0x1180>
   278f4:	1d6bc83a 	sub	r21,r3,r21
   278f8:	d9c00617 	ldw	r7,24(sp)
   278fc:	3802aa16 	blt	r7,zero,283a8 <_dtoa_r+0x1468>
   27900:	dd000817 	ldw	r20,32(sp)
   27904:	d8800617 	ldw	r2,24(sp)
   27908:	d8c00817 	ldw	r3,32(sp)
   2790c:	01400044 	movi	r5,1
   27910:	e009883a 	mov	r4,fp
   27914:	1887883a 	add	r3,r3,r2
   27918:	d8c00815 	stw	r3,32(sp)
   2791c:	b0ad883a 	add	r22,r22,r2
   27920:	002a3d00 	call	2a3d0 <__i2b>
   27924:	1023883a 	mov	r17,r2
   27928:	a0000826 	beq	r20,zero,2794c <_dtoa_r+0xa0c>
   2792c:	0580070e 	bge	zero,r22,2794c <_dtoa_r+0xa0c>
   27930:	a005883a 	mov	r2,r20
   27934:	b500b916 	blt	r22,r20,27c1c <_dtoa_r+0xcdc>
   27938:	d9000817 	ldw	r4,32(sp)
   2793c:	a0a9c83a 	sub	r20,r20,r2
   27940:	b0adc83a 	sub	r22,r22,r2
   27944:	2089c83a 	sub	r4,r4,r2
   27948:	d9000815 	stw	r4,32(sp)
   2794c:	d9800a17 	ldw	r6,40(sp)
   27950:	0181810e 	bge	zero,r6,27f58 <_dtoa_r+0x1018>
   27954:	d9c00b17 	ldw	r7,44(sp)
   27958:	3800b326 	beq	r7,zero,27c28 <_dtoa_r+0xce8>
   2795c:	a800b226 	beq	r21,zero,27c28 <_dtoa_r+0xce8>
   27960:	880b883a 	mov	r5,r17
   27964:	a80d883a 	mov	r6,r21
   27968:	e009883a 	mov	r4,fp
   2796c:	002a6040 	call	2a604 <__pow5mult>
   27970:	d9800917 	ldw	r6,36(sp)
   27974:	100b883a 	mov	r5,r2
   27978:	e009883a 	mov	r4,fp
   2797c:	1023883a 	mov	r17,r2
   27980:	002a40c0 	call	2a40c <__multiply>
   27984:	1021883a 	mov	r16,r2
   27988:	d8800a17 	ldw	r2,40(sp)
   2798c:	d9400917 	ldw	r5,36(sp)
   27990:	e009883a 	mov	r4,fp
   27994:	1545c83a 	sub	r2,r2,r21
   27998:	d8800a15 	stw	r2,40(sp)
   2799c:	002a06c0 	call	2a06c <_Bfree>
   279a0:	d8c00a17 	ldw	r3,40(sp)
   279a4:	18009f1e 	bne	r3,zero,27c24 <_dtoa_r+0xce4>
   279a8:	05c00044 	movi	r23,1
   279ac:	e009883a 	mov	r4,fp
   279b0:	b80b883a 	mov	r5,r23
   279b4:	002a3d00 	call	2a3d0 <__i2b>
   279b8:	d9000d17 	ldw	r4,52(sp)
   279bc:	102b883a 	mov	r21,r2
   279c0:	2000ce26 	beq	r4,zero,27cfc <_dtoa_r+0xdbc>
   279c4:	200d883a 	mov	r6,r4
   279c8:	100b883a 	mov	r5,r2
   279cc:	e009883a 	mov	r4,fp
   279d0:	002a6040 	call	2a604 <__pow5mult>
   279d4:	d9800317 	ldw	r6,12(sp)
   279d8:	102b883a 	mov	r21,r2
   279dc:	b981810e 	bge	r23,r6,27fe4 <_dtoa_r+0x10a4>
   279e0:	0027883a 	mov	r19,zero
   279e4:	a8800417 	ldw	r2,16(r21)
   279e8:	05c00804 	movi	r23,32
   279ec:	10800104 	addi	r2,r2,4
   279f0:	1085883a 	add	r2,r2,r2
   279f4:	1085883a 	add	r2,r2,r2
   279f8:	a885883a 	add	r2,r21,r2
   279fc:	11000017 	ldw	r4,0(r2)
   27a00:	002a2b80 	call	2a2b8 <__hi0bits>
   27a04:	b885c83a 	sub	r2,r23,r2
   27a08:	1585883a 	add	r2,r2,r22
   27a0c:	108007cc 	andi	r2,r2,31
   27a10:	1000b326 	beq	r2,zero,27ce0 <_dtoa_r+0xda0>
   27a14:	00c00804 	movi	r3,32
   27a18:	1887c83a 	sub	r3,r3,r2
   27a1c:	01000104 	movi	r4,4
   27a20:	20c2cd0e 	bge	r4,r3,28558 <_dtoa_r+0x1618>
   27a24:	00c00704 	movi	r3,28
   27a28:	1885c83a 	sub	r2,r3,r2
   27a2c:	d8c00817 	ldw	r3,32(sp)
   27a30:	a0a9883a 	add	r20,r20,r2
   27a34:	b0ad883a 	add	r22,r22,r2
   27a38:	1887883a 	add	r3,r3,r2
   27a3c:	d8c00815 	stw	r3,32(sp)
   27a40:	d9800817 	ldw	r6,32(sp)
   27a44:	0180040e 	bge	zero,r6,27a58 <_dtoa_r+0xb18>
   27a48:	800b883a 	mov	r5,r16
   27a4c:	e009883a 	mov	r4,fp
   27a50:	002a7440 	call	2a744 <__lshift>
   27a54:	1021883a 	mov	r16,r2
   27a58:	0580050e 	bge	zero,r22,27a70 <_dtoa_r+0xb30>
   27a5c:	a80b883a 	mov	r5,r21
   27a60:	b00d883a 	mov	r6,r22
   27a64:	e009883a 	mov	r4,fp
   27a68:	002a7440 	call	2a744 <__lshift>
   27a6c:	102b883a 	mov	r21,r2
   27a70:	d9c00e17 	ldw	r7,56(sp)
   27a74:	3801211e 	bne	r7,zero,27efc <_dtoa_r+0xfbc>
   27a78:	d9800617 	ldw	r6,24(sp)
   27a7c:	0181380e 	bge	zero,r6,27f60 <_dtoa_r+0x1020>
   27a80:	d8c00b17 	ldw	r3,44(sp)
   27a84:	1800ab1e 	bne	r3,zero,27d34 <_dtoa_r+0xdf4>
   27a88:	dc800717 	ldw	r18,28(sp)
   27a8c:	dcc00617 	ldw	r19,24(sp)
   27a90:	9029883a 	mov	r20,r18
   27a94:	00000206 	br	27aa0 <_dtoa_r+0xb60>
   27a98:	002a0940 	call	2a094 <__multadd>
   27a9c:	1021883a 	mov	r16,r2
   27aa0:	a80b883a 	mov	r5,r21
   27aa4:	8009883a 	mov	r4,r16
   27aa8:	0026d400 	call	26d40 <quorem>
   27aac:	10800c04 	addi	r2,r2,48
   27ab0:	90800005 	stb	r2,0(r18)
   27ab4:	94800044 	addi	r18,r18,1
   27ab8:	9507c83a 	sub	r3,r18,r20
   27abc:	000f883a 	mov	r7,zero
   27ac0:	01800284 	movi	r6,10
   27ac4:	800b883a 	mov	r5,r16
   27ac8:	e009883a 	mov	r4,fp
   27acc:	1cfff216 	blt	r3,r19,27a98 <__alt_data_end+0xfffe7a98>
   27ad0:	1011883a 	mov	r8,r2
   27ad4:	d8800617 	ldw	r2,24(sp)
   27ad8:	0082370e 	bge	zero,r2,283b8 <_dtoa_r+0x1478>
   27adc:	d9000717 	ldw	r4,28(sp)
   27ae0:	0025883a 	mov	r18,zero
   27ae4:	20af883a 	add	r23,r4,r2
   27ae8:	01800044 	movi	r6,1
   27aec:	800b883a 	mov	r5,r16
   27af0:	e009883a 	mov	r4,fp
   27af4:	da001715 	stw	r8,92(sp)
   27af8:	002a7440 	call	2a744 <__lshift>
   27afc:	a80b883a 	mov	r5,r21
   27b00:	1009883a 	mov	r4,r2
   27b04:	d8800915 	stw	r2,36(sp)
   27b08:	002a88c0 	call	2a88c <__mcmp>
   27b0c:	da001717 	ldw	r8,92(sp)
   27b10:	0081800e 	bge	zero,r2,28114 <_dtoa_r+0x11d4>
   27b14:	b93fffc3 	ldbu	r4,-1(r23)
   27b18:	b8bfffc4 	addi	r2,r23,-1
   27b1c:	1007883a 	mov	r3,r2
   27b20:	01800e44 	movi	r6,57
   27b24:	d9c00717 	ldw	r7,28(sp)
   27b28:	00000506 	br	27b40 <_dtoa_r+0xc00>
   27b2c:	18ffffc4 	addi	r3,r3,-1
   27b30:	11c12326 	beq	r2,r7,27fc0 <_dtoa_r+0x1080>
   27b34:	19000003 	ldbu	r4,0(r3)
   27b38:	102f883a 	mov	r23,r2
   27b3c:	10bfffc4 	addi	r2,r2,-1
   27b40:	21403fcc 	andi	r5,r4,255
   27b44:	2940201c 	xori	r5,r5,128
   27b48:	297fe004 	addi	r5,r5,-128
   27b4c:	29bff726 	beq	r5,r6,27b2c <__alt_data_end+0xfffe7b2c>
   27b50:	21000044 	addi	r4,r4,1
   27b54:	11000005 	stb	r4,0(r2)
   27b58:	a80b883a 	mov	r5,r21
   27b5c:	e009883a 	mov	r4,fp
   27b60:	002a06c0 	call	2a06c <_Bfree>
   27b64:	883ea026 	beq	r17,zero,275e8 <__alt_data_end+0xfffe75e8>
   27b68:	90000426 	beq	r18,zero,27b7c <_dtoa_r+0xc3c>
   27b6c:	94400326 	beq	r18,r17,27b7c <_dtoa_r+0xc3c>
   27b70:	900b883a 	mov	r5,r18
   27b74:	e009883a 	mov	r4,fp
   27b78:	002a06c0 	call	2a06c <_Bfree>
   27b7c:	880b883a 	mov	r5,r17
   27b80:	e009883a 	mov	r4,fp
   27b84:	002a06c0 	call	2a06c <_Bfree>
   27b88:	003e9706 	br	275e8 <__alt_data_end+0xfffe75e8>
   27b8c:	01800044 	movi	r6,1
   27b90:	d9800e15 	stw	r6,56(sp)
   27b94:	003d9606 	br	271f0 <__alt_data_end+0xfffe71f0>
   27b98:	d8800817 	ldw	r2,32(sp)
   27b9c:	d8c00517 	ldw	r3,20(sp)
   27ba0:	d8000d15 	stw	zero,52(sp)
   27ba4:	10c5c83a 	sub	r2,r2,r3
   27ba8:	00c9c83a 	sub	r4,zero,r3
   27bac:	d8800815 	stw	r2,32(sp)
   27bb0:	d9000a15 	stw	r4,40(sp)
   27bb4:	003d9706 	br	27214 <__alt_data_end+0xfffe7214>
   27bb8:	05adc83a 	sub	r22,zero,r22
   27bbc:	dd800815 	stw	r22,32(sp)
   27bc0:	002d883a 	mov	r22,zero
   27bc4:	003d8e06 	br	27200 <__alt_data_end+0xfffe7200>
   27bc8:	d9000517 	ldw	r4,20(sp)
   27bcc:	00247600 	call	24760 <__floatsidf>
   27bd0:	100d883a 	mov	r6,r2
   27bd4:	180f883a 	mov	r7,r3
   27bd8:	a009883a 	mov	r4,r20
   27bdc:	880b883a 	mov	r5,r17
   27be0:	00234740 	call	23474 <__eqdf2>
   27be4:	103d7126 	beq	r2,zero,271ac <__alt_data_end+0xfffe71ac>
   27be8:	d9c00517 	ldw	r7,20(sp)
   27bec:	39ffffc4 	addi	r7,r7,-1
   27bf0:	d9c00515 	stw	r7,20(sp)
   27bf4:	003d6d06 	br	271ac <__alt_data_end+0xfffe71ac>
   27bf8:	dd400a17 	ldw	r21,40(sp)
   27bfc:	dd000817 	ldw	r20,32(sp)
   27c00:	0023883a 	mov	r17,zero
   27c04:	003f4806 	br	27928 <__alt_data_end+0xfffe7928>
   27c08:	10e3c83a 	sub	r17,r2,r3
   27c0c:	9448983a 	sll	r4,r18,r17
   27c10:	003d3206 	br	270dc <__alt_data_end+0xfffe70dc>
   27c14:	d8000e15 	stw	zero,56(sp)
   27c18:	003d7506 	br	271f0 <__alt_data_end+0xfffe71f0>
   27c1c:	b005883a 	mov	r2,r22
   27c20:	003f4506 	br	27938 <__alt_data_end+0xfffe7938>
   27c24:	dc000915 	stw	r16,36(sp)
   27c28:	d9800a17 	ldw	r6,40(sp)
   27c2c:	d9400917 	ldw	r5,36(sp)
   27c30:	e009883a 	mov	r4,fp
   27c34:	002a6040 	call	2a604 <__pow5mult>
   27c38:	1021883a 	mov	r16,r2
   27c3c:	003f5a06 	br	279a8 <__alt_data_end+0xfffe79a8>
   27c40:	01c00044 	movi	r7,1
   27c44:	d9c00b15 	stw	r7,44(sp)
   27c48:	d8802217 	ldw	r2,136(sp)
   27c4c:	0081280e 	bge	zero,r2,280f0 <_dtoa_r+0x11b0>
   27c50:	100d883a 	mov	r6,r2
   27c54:	1021883a 	mov	r16,r2
   27c58:	d8800c15 	stw	r2,48(sp)
   27c5c:	d8800615 	stw	r2,24(sp)
   27c60:	003d8806 	br	27284 <__alt_data_end+0xfffe7284>
   27c64:	d8800617 	ldw	r2,24(sp)
   27c68:	00be9b16 	blt	zero,r2,276d8 <__alt_data_end+0xfffe76d8>
   27c6c:	10010f1e 	bne	r2,zero,280ac <_dtoa_r+0x116c>
   27c70:	880b883a 	mov	r5,r17
   27c74:	000d883a 	mov	r6,zero
   27c78:	01d00534 	movhi	r7,16404
   27c7c:	8009883a 	mov	r4,r16
   27c80:	00236cc0 	call	236cc <__muldf3>
   27c84:	900d883a 	mov	r6,r18
   27c88:	980f883a 	mov	r7,r19
   27c8c:	1009883a 	mov	r4,r2
   27c90:	180b883a 	mov	r5,r3
   27c94:	00234fc0 	call	234fc <__gedf2>
   27c98:	002b883a 	mov	r21,zero
   27c9c:	0023883a 	mov	r17,zero
   27ca0:	1000bf16 	blt	r2,zero,27fa0 <_dtoa_r+0x1060>
   27ca4:	d9802217 	ldw	r6,136(sp)
   27ca8:	ddc00717 	ldw	r23,28(sp)
   27cac:	018c303a 	nor	r6,zero,r6
   27cb0:	d9800515 	stw	r6,20(sp)
   27cb4:	a80b883a 	mov	r5,r21
   27cb8:	e009883a 	mov	r4,fp
   27cbc:	002a06c0 	call	2a06c <_Bfree>
   27cc0:	883e4926 	beq	r17,zero,275e8 <__alt_data_end+0xfffe75e8>
   27cc4:	003fad06 	br	27b7c <__alt_data_end+0xfffe7b7c>
   27cc8:	d9c01117 	ldw	r7,68(sp)
   27ccc:	3801bc26 	beq	r7,zero,283c0 <_dtoa_r+0x1480>
   27cd0:	10810cc4 	addi	r2,r2,1075
   27cd4:	dd400a17 	ldw	r21,40(sp)
   27cd8:	dd000817 	ldw	r20,32(sp)
   27cdc:	003f0a06 	br	27908 <__alt_data_end+0xfffe7908>
   27ce0:	00800704 	movi	r2,28
   27ce4:	d9000817 	ldw	r4,32(sp)
   27ce8:	a0a9883a 	add	r20,r20,r2
   27cec:	b0ad883a 	add	r22,r22,r2
   27cf0:	2089883a 	add	r4,r4,r2
   27cf4:	d9000815 	stw	r4,32(sp)
   27cf8:	003f5106 	br	27a40 <__alt_data_end+0xfffe7a40>
   27cfc:	d8c00317 	ldw	r3,12(sp)
   27d00:	b8c1fc0e 	bge	r23,r3,284f4 <_dtoa_r+0x15b4>
   27d04:	0027883a 	mov	r19,zero
   27d08:	b805883a 	mov	r2,r23
   27d0c:	003f3e06 	br	27a08 <__alt_data_end+0xfffe7a08>
   27d10:	880b883a 	mov	r5,r17
   27d14:	e009883a 	mov	r4,fp
   27d18:	000f883a 	mov	r7,zero
   27d1c:	01800284 	movi	r6,10
   27d20:	002a0940 	call	2a094 <__multadd>
   27d24:	d9000c17 	ldw	r4,48(sp)
   27d28:	1023883a 	mov	r17,r2
   27d2c:	0102040e 	bge	zero,r4,28540 <_dtoa_r+0x1600>
   27d30:	d9000615 	stw	r4,24(sp)
   27d34:	0500050e 	bge	zero,r20,27d4c <_dtoa_r+0xe0c>
   27d38:	880b883a 	mov	r5,r17
   27d3c:	a00d883a 	mov	r6,r20
   27d40:	e009883a 	mov	r4,fp
   27d44:	002a7440 	call	2a744 <__lshift>
   27d48:	1023883a 	mov	r17,r2
   27d4c:	9801241e 	bne	r19,zero,281e0 <_dtoa_r+0x12a0>
   27d50:	8829883a 	mov	r20,r17
   27d54:	d9000617 	ldw	r4,24(sp)
   27d58:	dcc00717 	ldw	r19,28(sp)
   27d5c:	9480004c 	andi	r18,r18,1
   27d60:	20bfffc4 	addi	r2,r4,-1
   27d64:	9885883a 	add	r2,r19,r2
   27d68:	d8800415 	stw	r2,16(sp)
   27d6c:	dc800615 	stw	r18,24(sp)
   27d70:	a80b883a 	mov	r5,r21
   27d74:	8009883a 	mov	r4,r16
   27d78:	0026d400 	call	26d40 <quorem>
   27d7c:	880b883a 	mov	r5,r17
   27d80:	8009883a 	mov	r4,r16
   27d84:	102f883a 	mov	r23,r2
   27d88:	002a88c0 	call	2a88c <__mcmp>
   27d8c:	a80b883a 	mov	r5,r21
   27d90:	a00d883a 	mov	r6,r20
   27d94:	e009883a 	mov	r4,fp
   27d98:	102d883a 	mov	r22,r2
   27d9c:	002a8ec0 	call	2a8ec <__mdiff>
   27da0:	1007883a 	mov	r3,r2
   27da4:	10800317 	ldw	r2,12(r2)
   27da8:	bc800c04 	addi	r18,r23,48
   27dac:	180b883a 	mov	r5,r3
   27db0:	10004e1e 	bne	r2,zero,27eec <_dtoa_r+0xfac>
   27db4:	8009883a 	mov	r4,r16
   27db8:	d8c01615 	stw	r3,88(sp)
   27dbc:	002a88c0 	call	2a88c <__mcmp>
   27dc0:	d8c01617 	ldw	r3,88(sp)
   27dc4:	e009883a 	mov	r4,fp
   27dc8:	d8801615 	stw	r2,88(sp)
   27dcc:	180b883a 	mov	r5,r3
   27dd0:	002a06c0 	call	2a06c <_Bfree>
   27dd4:	d8801617 	ldw	r2,88(sp)
   27dd8:	1000041e 	bne	r2,zero,27dec <_dtoa_r+0xeac>
   27ddc:	d9800317 	ldw	r6,12(sp)
   27de0:	3000021e 	bne	r6,zero,27dec <_dtoa_r+0xeac>
   27de4:	d8c00617 	ldw	r3,24(sp)
   27de8:	18003726 	beq	r3,zero,27ec8 <_dtoa_r+0xf88>
   27dec:	b0002016 	blt	r22,zero,27e70 <_dtoa_r+0xf30>
   27df0:	b000041e 	bne	r22,zero,27e04 <_dtoa_r+0xec4>
   27df4:	d9000317 	ldw	r4,12(sp)
   27df8:	2000021e 	bne	r4,zero,27e04 <_dtoa_r+0xec4>
   27dfc:	d8c00617 	ldw	r3,24(sp)
   27e00:	18001b26 	beq	r3,zero,27e70 <_dtoa_r+0xf30>
   27e04:	00810716 	blt	zero,r2,28224 <_dtoa_r+0x12e4>
   27e08:	d8c00417 	ldw	r3,16(sp)
   27e0c:	9d800044 	addi	r22,r19,1
   27e10:	9c800005 	stb	r18,0(r19)
   27e14:	b02f883a 	mov	r23,r22
   27e18:	98c10626 	beq	r19,r3,28234 <_dtoa_r+0x12f4>
   27e1c:	800b883a 	mov	r5,r16
   27e20:	000f883a 	mov	r7,zero
   27e24:	01800284 	movi	r6,10
   27e28:	e009883a 	mov	r4,fp
   27e2c:	002a0940 	call	2a094 <__multadd>
   27e30:	1021883a 	mov	r16,r2
   27e34:	000f883a 	mov	r7,zero
   27e38:	01800284 	movi	r6,10
   27e3c:	880b883a 	mov	r5,r17
   27e40:	e009883a 	mov	r4,fp
   27e44:	8d002526 	beq	r17,r20,27edc <_dtoa_r+0xf9c>
   27e48:	002a0940 	call	2a094 <__multadd>
   27e4c:	a00b883a 	mov	r5,r20
   27e50:	000f883a 	mov	r7,zero
   27e54:	01800284 	movi	r6,10
   27e58:	e009883a 	mov	r4,fp
   27e5c:	1023883a 	mov	r17,r2
   27e60:	002a0940 	call	2a094 <__multadd>
   27e64:	1029883a 	mov	r20,r2
   27e68:	b027883a 	mov	r19,r22
   27e6c:	003fc006 	br	27d70 <__alt_data_end+0xfffe7d70>
   27e70:	9011883a 	mov	r8,r18
   27e74:	00800e0e 	bge	zero,r2,27eb0 <_dtoa_r+0xf70>
   27e78:	800b883a 	mov	r5,r16
   27e7c:	01800044 	movi	r6,1
   27e80:	e009883a 	mov	r4,fp
   27e84:	da001715 	stw	r8,92(sp)
   27e88:	002a7440 	call	2a744 <__lshift>
   27e8c:	a80b883a 	mov	r5,r21
   27e90:	1009883a 	mov	r4,r2
   27e94:	1021883a 	mov	r16,r2
   27e98:	002a88c0 	call	2a88c <__mcmp>
   27e9c:	da001717 	ldw	r8,92(sp)
   27ea0:	0081960e 	bge	zero,r2,284fc <_dtoa_r+0x15bc>
   27ea4:	00800e44 	movi	r2,57
   27ea8:	40817026 	beq	r8,r2,2846c <_dtoa_r+0x152c>
   27eac:	ba000c44 	addi	r8,r23,49
   27eb0:	8825883a 	mov	r18,r17
   27eb4:	9dc00044 	addi	r23,r19,1
   27eb8:	9a000005 	stb	r8,0(r19)
   27ebc:	a023883a 	mov	r17,r20
   27ec0:	dc000915 	stw	r16,36(sp)
   27ec4:	003f2406 	br	27b58 <__alt_data_end+0xfffe7b58>
   27ec8:	00800e44 	movi	r2,57
   27ecc:	9011883a 	mov	r8,r18
   27ed0:	90816626 	beq	r18,r2,2846c <_dtoa_r+0x152c>
   27ed4:	05bff516 	blt	zero,r22,27eac <__alt_data_end+0xfffe7eac>
   27ed8:	003ff506 	br	27eb0 <__alt_data_end+0xfffe7eb0>
   27edc:	002a0940 	call	2a094 <__multadd>
   27ee0:	1023883a 	mov	r17,r2
   27ee4:	1029883a 	mov	r20,r2
   27ee8:	003fdf06 	br	27e68 <__alt_data_end+0xfffe7e68>
   27eec:	e009883a 	mov	r4,fp
   27ef0:	002a06c0 	call	2a06c <_Bfree>
   27ef4:	00800044 	movi	r2,1
   27ef8:	003fbc06 	br	27dec <__alt_data_end+0xfffe7dec>
   27efc:	a80b883a 	mov	r5,r21
   27f00:	8009883a 	mov	r4,r16
   27f04:	002a88c0 	call	2a88c <__mcmp>
   27f08:	103edb0e 	bge	r2,zero,27a78 <__alt_data_end+0xfffe7a78>
   27f0c:	800b883a 	mov	r5,r16
   27f10:	000f883a 	mov	r7,zero
   27f14:	01800284 	movi	r6,10
   27f18:	e009883a 	mov	r4,fp
   27f1c:	002a0940 	call	2a094 <__multadd>
   27f20:	1021883a 	mov	r16,r2
   27f24:	d8800517 	ldw	r2,20(sp)
   27f28:	d8c00b17 	ldw	r3,44(sp)
   27f2c:	10bfffc4 	addi	r2,r2,-1
   27f30:	d8800515 	stw	r2,20(sp)
   27f34:	183f761e 	bne	r3,zero,27d10 <__alt_data_end+0xfffe7d10>
   27f38:	d9000c17 	ldw	r4,48(sp)
   27f3c:	0101730e 	bge	zero,r4,2850c <_dtoa_r+0x15cc>
   27f40:	d9000615 	stw	r4,24(sp)
   27f44:	003ed006 	br	27a88 <__alt_data_end+0xfffe7a88>
   27f48:	00800084 	movi	r2,2
   27f4c:	3081861e 	bne	r6,r2,28568 <_dtoa_r+0x1628>
   27f50:	d8000b15 	stw	zero,44(sp)
   27f54:	003f3c06 	br	27c48 <__alt_data_end+0xfffe7c48>
   27f58:	dc000917 	ldw	r16,36(sp)
   27f5c:	003e9206 	br	279a8 <__alt_data_end+0xfffe79a8>
   27f60:	d9c00317 	ldw	r7,12(sp)
   27f64:	00800084 	movi	r2,2
   27f68:	11fec50e 	bge	r2,r7,27a80 <__alt_data_end+0xfffe7a80>
   27f6c:	d9000617 	ldw	r4,24(sp)
   27f70:	20013c1e 	bne	r4,zero,28464 <_dtoa_r+0x1524>
   27f74:	a80b883a 	mov	r5,r21
   27f78:	000f883a 	mov	r7,zero
   27f7c:	01800144 	movi	r6,5
   27f80:	e009883a 	mov	r4,fp
   27f84:	002a0940 	call	2a094 <__multadd>
   27f88:	100b883a 	mov	r5,r2
   27f8c:	8009883a 	mov	r4,r16
   27f90:	102b883a 	mov	r21,r2
   27f94:	002a88c0 	call	2a88c <__mcmp>
   27f98:	dc000915 	stw	r16,36(sp)
   27f9c:	00bf410e 	bge	zero,r2,27ca4 <__alt_data_end+0xfffe7ca4>
   27fa0:	d9c00717 	ldw	r7,28(sp)
   27fa4:	00800c44 	movi	r2,49
   27fa8:	38800005 	stb	r2,0(r7)
   27fac:	d8800517 	ldw	r2,20(sp)
   27fb0:	3dc00044 	addi	r23,r7,1
   27fb4:	10800044 	addi	r2,r2,1
   27fb8:	d8800515 	stw	r2,20(sp)
   27fbc:	003f3d06 	br	27cb4 <__alt_data_end+0xfffe7cb4>
   27fc0:	d9800517 	ldw	r6,20(sp)
   27fc4:	d9c00717 	ldw	r7,28(sp)
   27fc8:	00800c44 	movi	r2,49
   27fcc:	31800044 	addi	r6,r6,1
   27fd0:	d9800515 	stw	r6,20(sp)
   27fd4:	38800005 	stb	r2,0(r7)
   27fd8:	003edf06 	br	27b58 <__alt_data_end+0xfffe7b58>
   27fdc:	d8000b15 	stw	zero,44(sp)
   27fe0:	003c9f06 	br	27260 <__alt_data_end+0xfffe7260>
   27fe4:	903e7e1e 	bne	r18,zero,279e0 <__alt_data_end+0xfffe79e0>
   27fe8:	00800434 	movhi	r2,16
   27fec:	10bfffc4 	addi	r2,r2,-1
   27ff0:	9884703a 	and	r2,r19,r2
   27ff4:	1000ea1e 	bne	r2,zero,283a0 <_dtoa_r+0x1460>
   27ff8:	9cdffc2c 	andhi	r19,r19,32752
   27ffc:	9800e826 	beq	r19,zero,283a0 <_dtoa_r+0x1460>
   28000:	d9c00817 	ldw	r7,32(sp)
   28004:	b5800044 	addi	r22,r22,1
   28008:	04c00044 	movi	r19,1
   2800c:	39c00044 	addi	r7,r7,1
   28010:	d9c00815 	stw	r7,32(sp)
   28014:	d8800d17 	ldw	r2,52(sp)
   28018:	103e721e 	bne	r2,zero,279e4 <__alt_data_end+0xfffe79e4>
   2801c:	00800044 	movi	r2,1
   28020:	003e7906 	br	27a08 <__alt_data_end+0xfffe7a08>
   28024:	8009883a 	mov	r4,r16
   28028:	00247600 	call	24760 <__floatsidf>
   2802c:	d9800f17 	ldw	r6,60(sp)
   28030:	d9c01017 	ldw	r7,64(sp)
   28034:	1009883a 	mov	r4,r2
   28038:	180b883a 	mov	r5,r3
   2803c:	00236cc0 	call	236cc <__muldf3>
   28040:	000d883a 	mov	r6,zero
   28044:	01d00734 	movhi	r7,16412
   28048:	1009883a 	mov	r4,r2
   2804c:	180b883a 	mov	r5,r3
   28050:	00222e00 	call	222e0 <__adddf3>
   28054:	047f3034 	movhi	r17,64704
   28058:	1021883a 	mov	r16,r2
   2805c:	1c63883a 	add	r17,r3,r17
   28060:	d9000f17 	ldw	r4,60(sp)
   28064:	d9401017 	ldw	r5,64(sp)
   28068:	000d883a 	mov	r6,zero
   2806c:	01d00534 	movhi	r7,16404
   28070:	0023de40 	call	23de4 <__subdf3>
   28074:	800d883a 	mov	r6,r16
   28078:	880f883a 	mov	r7,r17
   2807c:	1009883a 	mov	r4,r2
   28080:	180b883a 	mov	r5,r3
   28084:	102b883a 	mov	r21,r2
   28088:	1829883a 	mov	r20,r3
   2808c:	00234fc0 	call	234fc <__gedf2>
   28090:	00806c16 	blt	zero,r2,28244 <_dtoa_r+0x1304>
   28094:	89e0003c 	xorhi	r7,r17,32768
   28098:	800d883a 	mov	r6,r16
   2809c:	a809883a 	mov	r4,r21
   280a0:	a00b883a 	mov	r5,r20
   280a4:	00235d80 	call	235d8 <__ledf2>
   280a8:	103d7e0e 	bge	r2,zero,276a4 <__alt_data_end+0xfffe76a4>
   280ac:	002b883a 	mov	r21,zero
   280b0:	0023883a 	mov	r17,zero
   280b4:	003efb06 	br	27ca4 <__alt_data_end+0xfffe7ca4>
   280b8:	d8800717 	ldw	r2,28(sp)
   280bc:	003bd006 	br	27000 <__alt_data_end+0xfffe7000>
   280c0:	d9000a17 	ldw	r4,40(sp)
   280c4:	d9800d17 	ldw	r6,52(sp)
   280c8:	dd400a15 	stw	r21,40(sp)
   280cc:	a905c83a 	sub	r2,r21,r4
   280d0:	308d883a 	add	r6,r6,r2
   280d4:	d9800d15 	stw	r6,52(sp)
   280d8:	002b883a 	mov	r21,zero
   280dc:	003e0606 	br	278f8 <__alt_data_end+0xfffe78f8>
   280e0:	9023883a 	mov	r17,r18
   280e4:	9829883a 	mov	r20,r19
   280e8:	04000084 	movi	r16,2
   280ec:	003c9206 	br	27338 <__alt_data_end+0xfffe7338>
   280f0:	04000044 	movi	r16,1
   280f4:	dc000c15 	stw	r16,48(sp)
   280f8:	dc000615 	stw	r16,24(sp)
   280fc:	dc002215 	stw	r16,136(sp)
   28100:	e0001115 	stw	zero,68(fp)
   28104:	000b883a 	mov	r5,zero
   28108:	003c6906 	br	272b0 <__alt_data_end+0xfffe72b0>
   2810c:	3021883a 	mov	r16,r6
   28110:	003ffb06 	br	28100 <__alt_data_end+0xfffe8100>
   28114:	1000021e 	bne	r2,zero,28120 <_dtoa_r+0x11e0>
   28118:	4200004c 	andi	r8,r8,1
   2811c:	403e7d1e 	bne	r8,zero,27b14 <__alt_data_end+0xfffe7b14>
   28120:	01000c04 	movi	r4,48
   28124:	00000106 	br	2812c <_dtoa_r+0x11ec>
   28128:	102f883a 	mov	r23,r2
   2812c:	b8bfffc4 	addi	r2,r23,-1
   28130:	10c00007 	ldb	r3,0(r2)
   28134:	193ffc26 	beq	r3,r4,28128 <__alt_data_end+0xfffe8128>
   28138:	003e8706 	br	27b58 <__alt_data_end+0xfffe7b58>
   2813c:	d8800517 	ldw	r2,20(sp)
   28140:	00a3c83a 	sub	r17,zero,r2
   28144:	8800a426 	beq	r17,zero,283d8 <_dtoa_r+0x1498>
   28148:	888003cc 	andi	r2,r17,15
   2814c:	100490fa 	slli	r2,r2,3
   28150:	00c000f4 	movhi	r3,3
   28154:	18c51404 	addi	r3,r3,5200
   28158:	1885883a 	add	r2,r3,r2
   2815c:	11800017 	ldw	r6,0(r2)
   28160:	11c00117 	ldw	r7,4(r2)
   28164:	9009883a 	mov	r4,r18
   28168:	980b883a 	mov	r5,r19
   2816c:	8823d13a 	srai	r17,r17,4
   28170:	00236cc0 	call	236cc <__muldf3>
   28174:	d8800f15 	stw	r2,60(sp)
   28178:	d8c01015 	stw	r3,64(sp)
   2817c:	8800e826 	beq	r17,zero,28520 <_dtoa_r+0x15e0>
   28180:	050000f4 	movhi	r20,3
   28184:	a5050a04 	addi	r20,r20,5160
   28188:	04000084 	movi	r16,2
   2818c:	8980004c 	andi	r6,r17,1
   28190:	1009883a 	mov	r4,r2
   28194:	8823d07a 	srai	r17,r17,1
   28198:	180b883a 	mov	r5,r3
   2819c:	30000426 	beq	r6,zero,281b0 <_dtoa_r+0x1270>
   281a0:	a1800017 	ldw	r6,0(r20)
   281a4:	a1c00117 	ldw	r7,4(r20)
   281a8:	84000044 	addi	r16,r16,1
   281ac:	00236cc0 	call	236cc <__muldf3>
   281b0:	a5000204 	addi	r20,r20,8
   281b4:	883ff51e 	bne	r17,zero,2818c <__alt_data_end+0xfffe818c>
   281b8:	d8800f15 	stw	r2,60(sp)
   281bc:	d8c01015 	stw	r3,64(sp)
   281c0:	003c7606 	br	2739c <__alt_data_end+0xfffe739c>
   281c4:	00c00c04 	movi	r3,48
   281c8:	10c00005 	stb	r3,0(r2)
   281cc:	d8c00517 	ldw	r3,20(sp)
   281d0:	bd3fffc3 	ldbu	r20,-1(r23)
   281d4:	18c00044 	addi	r3,r3,1
   281d8:	d8c00515 	stw	r3,20(sp)
   281dc:	003db906 	br	278c4 <__alt_data_end+0xfffe78c4>
   281e0:	89400117 	ldw	r5,4(r17)
   281e4:	e009883a 	mov	r4,fp
   281e8:	0029fc40 	call	29fc4 <_Balloc>
   281ec:	89800417 	ldw	r6,16(r17)
   281f0:	89400304 	addi	r5,r17,12
   281f4:	11000304 	addi	r4,r2,12
   281f8:	31800084 	addi	r6,r6,2
   281fc:	318d883a 	add	r6,r6,r6
   28200:	318d883a 	add	r6,r6,r6
   28204:	1027883a 	mov	r19,r2
   28208:	0029d540 	call	29d54 <memcpy>
   2820c:	01800044 	movi	r6,1
   28210:	980b883a 	mov	r5,r19
   28214:	e009883a 	mov	r4,fp
   28218:	002a7440 	call	2a744 <__lshift>
   2821c:	1029883a 	mov	r20,r2
   28220:	003ecc06 	br	27d54 <__alt_data_end+0xfffe7d54>
   28224:	00800e44 	movi	r2,57
   28228:	90809026 	beq	r18,r2,2846c <_dtoa_r+0x152c>
   2822c:	92000044 	addi	r8,r18,1
   28230:	003f1f06 	br	27eb0 <__alt_data_end+0xfffe7eb0>
   28234:	9011883a 	mov	r8,r18
   28238:	8825883a 	mov	r18,r17
   2823c:	a023883a 	mov	r17,r20
   28240:	003e2906 	br	27ae8 <__alt_data_end+0xfffe7ae8>
   28244:	002b883a 	mov	r21,zero
   28248:	0023883a 	mov	r17,zero
   2824c:	003f5406 	br	27fa0 <__alt_data_end+0xfffe7fa0>
   28250:	61bfffc4 	addi	r6,r12,-1
   28254:	300490fa 	slli	r2,r6,3
   28258:	00c000f4 	movhi	r3,3
   2825c:	18c51404 	addi	r3,r3,5200
   28260:	1885883a 	add	r2,r3,r2
   28264:	11000017 	ldw	r4,0(r2)
   28268:	11400117 	ldw	r5,4(r2)
   2826c:	d8800717 	ldw	r2,28(sp)
   28270:	880f883a 	mov	r7,r17
   28274:	d9801215 	stw	r6,72(sp)
   28278:	800d883a 	mov	r6,r16
   2827c:	db001615 	stw	r12,88(sp)
   28280:	15c00044 	addi	r23,r2,1
   28284:	00236cc0 	call	236cc <__muldf3>
   28288:	d9401017 	ldw	r5,64(sp)
   2828c:	d9000f17 	ldw	r4,60(sp)
   28290:	d8c01515 	stw	r3,84(sp)
   28294:	d8801415 	stw	r2,80(sp)
   28298:	00246e00 	call	246e0 <__fixdfsi>
   2829c:	1009883a 	mov	r4,r2
   282a0:	1021883a 	mov	r16,r2
   282a4:	00247600 	call	24760 <__floatsidf>
   282a8:	d9000f17 	ldw	r4,60(sp)
   282ac:	d9401017 	ldw	r5,64(sp)
   282b0:	100d883a 	mov	r6,r2
   282b4:	180f883a 	mov	r7,r3
   282b8:	0023de40 	call	23de4 <__subdf3>
   282bc:	1829883a 	mov	r20,r3
   282c0:	d8c00717 	ldw	r3,28(sp)
   282c4:	84000c04 	addi	r16,r16,48
   282c8:	1023883a 	mov	r17,r2
   282cc:	1c000005 	stb	r16,0(r3)
   282d0:	db001617 	ldw	r12,88(sp)
   282d4:	00800044 	movi	r2,1
   282d8:	60802226 	beq	r12,r2,28364 <_dtoa_r+0x1424>
   282dc:	d9c00717 	ldw	r7,28(sp)
   282e0:	8805883a 	mov	r2,r17
   282e4:	b82b883a 	mov	r21,r23
   282e8:	3b19883a 	add	r12,r7,r12
   282ec:	6023883a 	mov	r17,r12
   282f0:	a007883a 	mov	r3,r20
   282f4:	dc800f15 	stw	r18,60(sp)
   282f8:	000d883a 	mov	r6,zero
   282fc:	01d00934 	movhi	r7,16420
   28300:	1009883a 	mov	r4,r2
   28304:	180b883a 	mov	r5,r3
   28308:	00236cc0 	call	236cc <__muldf3>
   2830c:	180b883a 	mov	r5,r3
   28310:	1009883a 	mov	r4,r2
   28314:	1829883a 	mov	r20,r3
   28318:	1025883a 	mov	r18,r2
   2831c:	00246e00 	call	246e0 <__fixdfsi>
   28320:	1009883a 	mov	r4,r2
   28324:	1021883a 	mov	r16,r2
   28328:	00247600 	call	24760 <__floatsidf>
   2832c:	100d883a 	mov	r6,r2
   28330:	180f883a 	mov	r7,r3
   28334:	9009883a 	mov	r4,r18
   28338:	a00b883a 	mov	r5,r20
   2833c:	84000c04 	addi	r16,r16,48
   28340:	0023de40 	call	23de4 <__subdf3>
   28344:	ad400044 	addi	r21,r21,1
   28348:	ac3fffc5 	stb	r16,-1(r21)
   2834c:	ac7fea1e 	bne	r21,r17,282f8 <__alt_data_end+0xfffe82f8>
   28350:	1023883a 	mov	r17,r2
   28354:	d8801217 	ldw	r2,72(sp)
   28358:	dc800f17 	ldw	r18,60(sp)
   2835c:	1829883a 	mov	r20,r3
   28360:	b8af883a 	add	r23,r23,r2
   28364:	d9001417 	ldw	r4,80(sp)
   28368:	d9401517 	ldw	r5,84(sp)
   2836c:	000d883a 	mov	r6,zero
   28370:	01cff834 	movhi	r7,16352
   28374:	00222e00 	call	222e0 <__adddf3>
   28378:	880d883a 	mov	r6,r17
   2837c:	a00f883a 	mov	r7,r20
   28380:	1009883a 	mov	r4,r2
   28384:	180b883a 	mov	r5,r3
   28388:	00235d80 	call	235d8 <__ledf2>
   2838c:	10003e0e 	bge	r2,zero,28488 <_dtoa_r+0x1548>
   28390:	d9001317 	ldw	r4,76(sp)
   28394:	bd3fffc3 	ldbu	r20,-1(r23)
   28398:	d9000515 	stw	r4,20(sp)
   2839c:	003d3b06 	br	2788c <__alt_data_end+0xfffe788c>
   283a0:	0027883a 	mov	r19,zero
   283a4:	003f1b06 	br	28014 <__alt_data_end+0xfffe8014>
   283a8:	d8800817 	ldw	r2,32(sp)
   283ac:	11e9c83a 	sub	r20,r2,r7
   283b0:	0005883a 	mov	r2,zero
   283b4:	003d5406 	br	27908 <__alt_data_end+0xfffe7908>
   283b8:	00800044 	movi	r2,1
   283bc:	003dc706 	br	27adc <__alt_data_end+0xfffe7adc>
   283c0:	d8c00217 	ldw	r3,8(sp)
   283c4:	00800d84 	movi	r2,54
   283c8:	dd400a17 	ldw	r21,40(sp)
   283cc:	10c5c83a 	sub	r2,r2,r3
   283d0:	dd000817 	ldw	r20,32(sp)
   283d4:	003d4c06 	br	27908 <__alt_data_end+0xfffe7908>
   283d8:	dc800f15 	stw	r18,60(sp)
   283dc:	dcc01015 	stw	r19,64(sp)
   283e0:	04000084 	movi	r16,2
   283e4:	003bed06 	br	2739c <__alt_data_end+0xfffe739c>
   283e8:	d9000617 	ldw	r4,24(sp)
   283ec:	203f0d26 	beq	r4,zero,28024 <__alt_data_end+0xfffe8024>
   283f0:	d9800c17 	ldw	r6,48(sp)
   283f4:	01bcab0e 	bge	zero,r6,276a4 <__alt_data_end+0xfffe76a4>
   283f8:	d9401017 	ldw	r5,64(sp)
   283fc:	d9000f17 	ldw	r4,60(sp)
   28400:	000d883a 	mov	r6,zero
   28404:	01d00934 	movhi	r7,16420
   28408:	00236cc0 	call	236cc <__muldf3>
   2840c:	81000044 	addi	r4,r16,1
   28410:	d8800f15 	stw	r2,60(sp)
   28414:	d8c01015 	stw	r3,64(sp)
   28418:	00247600 	call	24760 <__floatsidf>
   2841c:	d9800f17 	ldw	r6,60(sp)
   28420:	d9c01017 	ldw	r7,64(sp)
   28424:	1009883a 	mov	r4,r2
   28428:	180b883a 	mov	r5,r3
   2842c:	00236cc0 	call	236cc <__muldf3>
   28430:	01d00734 	movhi	r7,16412
   28434:	000d883a 	mov	r6,zero
   28438:	1009883a 	mov	r4,r2
   2843c:	180b883a 	mov	r5,r3
   28440:	00222e00 	call	222e0 <__adddf3>
   28444:	d9c00517 	ldw	r7,20(sp)
   28448:	047f3034 	movhi	r17,64704
   2844c:	1021883a 	mov	r16,r2
   28450:	39ffffc4 	addi	r7,r7,-1
   28454:	d9c01315 	stw	r7,76(sp)
   28458:	1c63883a 	add	r17,r3,r17
   2845c:	db000c17 	ldw	r12,48(sp)
   28460:	003bea06 	br	2740c <__alt_data_end+0xfffe740c>
   28464:	dc000915 	stw	r16,36(sp)
   28468:	003e0e06 	br	27ca4 <__alt_data_end+0xfffe7ca4>
   2846c:	01000e44 	movi	r4,57
   28470:	8825883a 	mov	r18,r17
   28474:	9dc00044 	addi	r23,r19,1
   28478:	99000005 	stb	r4,0(r19)
   2847c:	a023883a 	mov	r17,r20
   28480:	dc000915 	stw	r16,36(sp)
   28484:	003da406 	br	27b18 <__alt_data_end+0xfffe7b18>
   28488:	d9801417 	ldw	r6,80(sp)
   2848c:	d9c01517 	ldw	r7,84(sp)
   28490:	0009883a 	mov	r4,zero
   28494:	014ff834 	movhi	r5,16352
   28498:	0023de40 	call	23de4 <__subdf3>
   2849c:	880d883a 	mov	r6,r17
   284a0:	a00f883a 	mov	r7,r20
   284a4:	1009883a 	mov	r4,r2
   284a8:	180b883a 	mov	r5,r3
   284ac:	00234fc0 	call	234fc <__gedf2>
   284b0:	00bc7c0e 	bge	zero,r2,276a4 <__alt_data_end+0xfffe76a4>
   284b4:	01000c04 	movi	r4,48
   284b8:	00000106 	br	284c0 <_dtoa_r+0x1580>
   284bc:	102f883a 	mov	r23,r2
   284c0:	b8bfffc4 	addi	r2,r23,-1
   284c4:	10c00007 	ldb	r3,0(r2)
   284c8:	193ffc26 	beq	r3,r4,284bc <__alt_data_end+0xfffe84bc>
   284cc:	d9801317 	ldw	r6,76(sp)
   284d0:	d9800515 	stw	r6,20(sp)
   284d4:	003c4406 	br	275e8 <__alt_data_end+0xfffe75e8>
   284d8:	d9801317 	ldw	r6,76(sp)
   284dc:	d9800515 	stw	r6,20(sp)
   284e0:	003cea06 	br	2788c <__alt_data_end+0xfffe788c>
   284e4:	dd800f17 	ldw	r22,60(sp)
   284e8:	dcc01017 	ldw	r19,64(sp)
   284ec:	dc801217 	ldw	r18,72(sp)
   284f0:	003c6c06 	br	276a4 <__alt_data_end+0xfffe76a4>
   284f4:	903e031e 	bne	r18,zero,27d04 <__alt_data_end+0xfffe7d04>
   284f8:	003ebb06 	br	27fe8 <__alt_data_end+0xfffe7fe8>
   284fc:	103e6c1e 	bne	r2,zero,27eb0 <__alt_data_end+0xfffe7eb0>
   28500:	4080004c 	andi	r2,r8,1
   28504:	103e6a26 	beq	r2,zero,27eb0 <__alt_data_end+0xfffe7eb0>
   28508:	003e6606 	br	27ea4 <__alt_data_end+0xfffe7ea4>
   2850c:	d8c00317 	ldw	r3,12(sp)
   28510:	00800084 	movi	r2,2
   28514:	10c02916 	blt	r2,r3,285bc <_dtoa_r+0x167c>
   28518:	d9000c17 	ldw	r4,48(sp)
   2851c:	003e8806 	br	27f40 <__alt_data_end+0xfffe7f40>
   28520:	04000084 	movi	r16,2
   28524:	003b9d06 	br	2739c <__alt_data_end+0xfffe739c>
   28528:	d9001317 	ldw	r4,76(sp)
   2852c:	d9000515 	stw	r4,20(sp)
   28530:	003cd606 	br	2788c <__alt_data_end+0xfffe788c>
   28534:	d8801317 	ldw	r2,76(sp)
   28538:	d8800515 	stw	r2,20(sp)
   2853c:	003c2a06 	br	275e8 <__alt_data_end+0xfffe75e8>
   28540:	d9800317 	ldw	r6,12(sp)
   28544:	00800084 	movi	r2,2
   28548:	11801516 	blt	r2,r6,285a0 <_dtoa_r+0x1660>
   2854c:	d9c00c17 	ldw	r7,48(sp)
   28550:	d9c00615 	stw	r7,24(sp)
   28554:	003df706 	br	27d34 <__alt_data_end+0xfffe7d34>
   28558:	193d3926 	beq	r3,r4,27a40 <__alt_data_end+0xfffe7a40>
   2855c:	00c00f04 	movi	r3,60
   28560:	1885c83a 	sub	r2,r3,r2
   28564:	003ddf06 	br	27ce4 <__alt_data_end+0xfffe7ce4>
   28568:	e009883a 	mov	r4,fp
   2856c:	e0001115 	stw	zero,68(fp)
   28570:	000b883a 	mov	r5,zero
   28574:	0029fc40 	call	29fc4 <_Balloc>
   28578:	d8800715 	stw	r2,28(sp)
   2857c:	d8c00717 	ldw	r3,28(sp)
   28580:	00bfffc4 	movi	r2,-1
   28584:	01000044 	movi	r4,1
   28588:	d8800c15 	stw	r2,48(sp)
   2858c:	e0c01015 	stw	r3,64(fp)
   28590:	d9000b15 	stw	r4,44(sp)
   28594:	d8800615 	stw	r2,24(sp)
   28598:	d8002215 	stw	zero,136(sp)
   2859c:	003c4106 	br	276a4 <__alt_data_end+0xfffe76a4>
   285a0:	d8c00c17 	ldw	r3,48(sp)
   285a4:	d8c00615 	stw	r3,24(sp)
   285a8:	003e7006 	br	27f6c <__alt_data_end+0xfffe7f6c>
   285ac:	04400044 	movi	r17,1
   285b0:	003b2006 	br	27234 <__alt_data_end+0xfffe7234>
   285b4:	000b883a 	mov	r5,zero
   285b8:	003b3d06 	br	272b0 <__alt_data_end+0xfffe72b0>
   285bc:	d8800c17 	ldw	r2,48(sp)
   285c0:	d8800615 	stw	r2,24(sp)
   285c4:	003e6906 	br	27f6c <__alt_data_end+0xfffe7f6c>

000285c8 <__sflush_r>:
   285c8:	2880030b 	ldhu	r2,12(r5)
   285cc:	defffb04 	addi	sp,sp,-20
   285d0:	dcc00315 	stw	r19,12(sp)
   285d4:	dc400115 	stw	r17,4(sp)
   285d8:	dfc00415 	stw	ra,16(sp)
   285dc:	dc800215 	stw	r18,8(sp)
   285e0:	dc000015 	stw	r16,0(sp)
   285e4:	10c0020c 	andi	r3,r2,8
   285e8:	2823883a 	mov	r17,r5
   285ec:	2027883a 	mov	r19,r4
   285f0:	1800311e 	bne	r3,zero,286b8 <__sflush_r+0xf0>
   285f4:	28c00117 	ldw	r3,4(r5)
   285f8:	10820014 	ori	r2,r2,2048
   285fc:	2880030d 	sth	r2,12(r5)
   28600:	00c04b0e 	bge	zero,r3,28730 <__sflush_r+0x168>
   28604:	8a000a17 	ldw	r8,40(r17)
   28608:	40002326 	beq	r8,zero,28698 <__sflush_r+0xd0>
   2860c:	9c000017 	ldw	r16,0(r19)
   28610:	10c4000c 	andi	r3,r2,4096
   28614:	98000015 	stw	zero,0(r19)
   28618:	18004826 	beq	r3,zero,2873c <__sflush_r+0x174>
   2861c:	89801417 	ldw	r6,80(r17)
   28620:	10c0010c 	andi	r3,r2,4
   28624:	18000626 	beq	r3,zero,28640 <__sflush_r+0x78>
   28628:	88c00117 	ldw	r3,4(r17)
   2862c:	88800c17 	ldw	r2,48(r17)
   28630:	30cdc83a 	sub	r6,r6,r3
   28634:	10000226 	beq	r2,zero,28640 <__sflush_r+0x78>
   28638:	88800f17 	ldw	r2,60(r17)
   2863c:	308dc83a 	sub	r6,r6,r2
   28640:	89400717 	ldw	r5,28(r17)
   28644:	000f883a 	mov	r7,zero
   28648:	9809883a 	mov	r4,r19
   2864c:	403ee83a 	callr	r8
   28650:	00ffffc4 	movi	r3,-1
   28654:	10c04426 	beq	r2,r3,28768 <__sflush_r+0x1a0>
   28658:	88c0030b 	ldhu	r3,12(r17)
   2865c:	89000417 	ldw	r4,16(r17)
   28660:	88000115 	stw	zero,4(r17)
   28664:	197dffcc 	andi	r5,r3,63487
   28668:	8940030d 	sth	r5,12(r17)
   2866c:	89000015 	stw	r4,0(r17)
   28670:	18c4000c 	andi	r3,r3,4096
   28674:	18002c1e 	bne	r3,zero,28728 <__sflush_r+0x160>
   28678:	89400c17 	ldw	r5,48(r17)
   2867c:	9c000015 	stw	r16,0(r19)
   28680:	28000526 	beq	r5,zero,28698 <__sflush_r+0xd0>
   28684:	88801004 	addi	r2,r17,64
   28688:	28800226 	beq	r5,r2,28694 <__sflush_r+0xcc>
   2868c:	9809883a 	mov	r4,r19
   28690:	0028d340 	call	28d34 <_free_r>
   28694:	88000c15 	stw	zero,48(r17)
   28698:	0005883a 	mov	r2,zero
   2869c:	dfc00417 	ldw	ra,16(sp)
   286a0:	dcc00317 	ldw	r19,12(sp)
   286a4:	dc800217 	ldw	r18,8(sp)
   286a8:	dc400117 	ldw	r17,4(sp)
   286ac:	dc000017 	ldw	r16,0(sp)
   286b0:	dec00504 	addi	sp,sp,20
   286b4:	f800283a 	ret
   286b8:	2c800417 	ldw	r18,16(r5)
   286bc:	903ff626 	beq	r18,zero,28698 <__alt_data_end+0xfffe8698>
   286c0:	2c000017 	ldw	r16,0(r5)
   286c4:	108000cc 	andi	r2,r2,3
   286c8:	2c800015 	stw	r18,0(r5)
   286cc:	84a1c83a 	sub	r16,r16,r18
   286d0:	1000131e 	bne	r2,zero,28720 <__sflush_r+0x158>
   286d4:	28800517 	ldw	r2,20(r5)
   286d8:	88800215 	stw	r2,8(r17)
   286dc:	04000316 	blt	zero,r16,286ec <__sflush_r+0x124>
   286e0:	003fed06 	br	28698 <__alt_data_end+0xfffe8698>
   286e4:	90a5883a 	add	r18,r18,r2
   286e8:	043feb0e 	bge	zero,r16,28698 <__alt_data_end+0xfffe8698>
   286ec:	88800917 	ldw	r2,36(r17)
   286f0:	89400717 	ldw	r5,28(r17)
   286f4:	800f883a 	mov	r7,r16
   286f8:	900d883a 	mov	r6,r18
   286fc:	9809883a 	mov	r4,r19
   28700:	103ee83a 	callr	r2
   28704:	80a1c83a 	sub	r16,r16,r2
   28708:	00bff616 	blt	zero,r2,286e4 <__alt_data_end+0xfffe86e4>
   2870c:	88c0030b 	ldhu	r3,12(r17)
   28710:	00bfffc4 	movi	r2,-1
   28714:	18c01014 	ori	r3,r3,64
   28718:	88c0030d 	sth	r3,12(r17)
   2871c:	003fdf06 	br	2869c <__alt_data_end+0xfffe869c>
   28720:	0005883a 	mov	r2,zero
   28724:	003fec06 	br	286d8 <__alt_data_end+0xfffe86d8>
   28728:	88801415 	stw	r2,80(r17)
   2872c:	003fd206 	br	28678 <__alt_data_end+0xfffe8678>
   28730:	28c00f17 	ldw	r3,60(r5)
   28734:	00ffb316 	blt	zero,r3,28604 <__alt_data_end+0xfffe8604>
   28738:	003fd706 	br	28698 <__alt_data_end+0xfffe8698>
   2873c:	89400717 	ldw	r5,28(r17)
   28740:	000d883a 	mov	r6,zero
   28744:	01c00044 	movi	r7,1
   28748:	9809883a 	mov	r4,r19
   2874c:	403ee83a 	callr	r8
   28750:	100d883a 	mov	r6,r2
   28754:	00bfffc4 	movi	r2,-1
   28758:	30801426 	beq	r6,r2,287ac <__sflush_r+0x1e4>
   2875c:	8880030b 	ldhu	r2,12(r17)
   28760:	8a000a17 	ldw	r8,40(r17)
   28764:	003fae06 	br	28620 <__alt_data_end+0xfffe8620>
   28768:	98c00017 	ldw	r3,0(r19)
   2876c:	183fba26 	beq	r3,zero,28658 <__alt_data_end+0xfffe8658>
   28770:	01000744 	movi	r4,29
   28774:	19000626 	beq	r3,r4,28790 <__sflush_r+0x1c8>
   28778:	01000584 	movi	r4,22
   2877c:	19000426 	beq	r3,r4,28790 <__sflush_r+0x1c8>
   28780:	88c0030b 	ldhu	r3,12(r17)
   28784:	18c01014 	ori	r3,r3,64
   28788:	88c0030d 	sth	r3,12(r17)
   2878c:	003fc306 	br	2869c <__alt_data_end+0xfffe869c>
   28790:	8880030b 	ldhu	r2,12(r17)
   28794:	88c00417 	ldw	r3,16(r17)
   28798:	88000115 	stw	zero,4(r17)
   2879c:	10bdffcc 	andi	r2,r2,63487
   287a0:	8880030d 	sth	r2,12(r17)
   287a4:	88c00015 	stw	r3,0(r17)
   287a8:	003fb306 	br	28678 <__alt_data_end+0xfffe8678>
   287ac:	98800017 	ldw	r2,0(r19)
   287b0:	103fea26 	beq	r2,zero,2875c <__alt_data_end+0xfffe875c>
   287b4:	00c00744 	movi	r3,29
   287b8:	10c00226 	beq	r2,r3,287c4 <__sflush_r+0x1fc>
   287bc:	00c00584 	movi	r3,22
   287c0:	10c0031e 	bne	r2,r3,287d0 <__sflush_r+0x208>
   287c4:	9c000015 	stw	r16,0(r19)
   287c8:	0005883a 	mov	r2,zero
   287cc:	003fb306 	br	2869c <__alt_data_end+0xfffe869c>
   287d0:	88c0030b 	ldhu	r3,12(r17)
   287d4:	3005883a 	mov	r2,r6
   287d8:	18c01014 	ori	r3,r3,64
   287dc:	88c0030d 	sth	r3,12(r17)
   287e0:	003fae06 	br	2869c <__alt_data_end+0xfffe869c>

000287e4 <_fflush_r>:
   287e4:	defffd04 	addi	sp,sp,-12
   287e8:	dc000115 	stw	r16,4(sp)
   287ec:	dfc00215 	stw	ra,8(sp)
   287f0:	2021883a 	mov	r16,r4
   287f4:	20000226 	beq	r4,zero,28800 <_fflush_r+0x1c>
   287f8:	20800e17 	ldw	r2,56(r4)
   287fc:	10000c26 	beq	r2,zero,28830 <_fflush_r+0x4c>
   28800:	2880030f 	ldh	r2,12(r5)
   28804:	1000051e 	bne	r2,zero,2881c <_fflush_r+0x38>
   28808:	0005883a 	mov	r2,zero
   2880c:	dfc00217 	ldw	ra,8(sp)
   28810:	dc000117 	ldw	r16,4(sp)
   28814:	dec00304 	addi	sp,sp,12
   28818:	f800283a 	ret
   2881c:	8009883a 	mov	r4,r16
   28820:	dfc00217 	ldw	ra,8(sp)
   28824:	dc000117 	ldw	r16,4(sp)
   28828:	dec00304 	addi	sp,sp,12
   2882c:	00285c81 	jmpi	285c8 <__sflush_r>
   28830:	d9400015 	stw	r5,0(sp)
   28834:	0028bc00 	call	28bc0 <__sinit>
   28838:	d9400017 	ldw	r5,0(sp)
   2883c:	003ff006 	br	28800 <__alt_data_end+0xfffe8800>

00028840 <fflush>:
   28840:	20000526 	beq	r4,zero,28858 <fflush+0x18>
   28844:	008000f4 	movhi	r2,3
   28848:	108c0804 	addi	r2,r2,12320
   2884c:	200b883a 	mov	r5,r4
   28850:	11000017 	ldw	r4,0(r2)
   28854:	00287e41 	jmpi	287e4 <_fflush_r>
   28858:	008000f4 	movhi	r2,3
   2885c:	108c0704 	addi	r2,r2,12316
   28860:	11000017 	ldw	r4,0(r2)
   28864:	014000f4 	movhi	r5,3
   28868:	2961f904 	addi	r5,r5,-30748
   2886c:	00291081 	jmpi	29108 <_fwalk_reent>

00028870 <__fp_unlock>:
   28870:	0005883a 	mov	r2,zero
   28874:	f800283a 	ret

00028878 <_cleanup_r>:
   28878:	014000f4 	movhi	r5,3
   2887c:	2972a104 	addi	r5,r5,-13692
   28880:	00291081 	jmpi	29108 <_fwalk_reent>

00028884 <__sinit.part.1>:
   28884:	defff704 	addi	sp,sp,-36
   28888:	00c000f4 	movhi	r3,3
   2888c:	dfc00815 	stw	ra,32(sp)
   28890:	ddc00715 	stw	r23,28(sp)
   28894:	dd800615 	stw	r22,24(sp)
   28898:	dd400515 	stw	r21,20(sp)
   2889c:	dd000415 	stw	r20,16(sp)
   288a0:	dcc00315 	stw	r19,12(sp)
   288a4:	dc800215 	stw	r18,8(sp)
   288a8:	dc400115 	stw	r17,4(sp)
   288ac:	dc000015 	stw	r16,0(sp)
   288b0:	18e21e04 	addi	r3,r3,-30600
   288b4:	24000117 	ldw	r16,4(r4)
   288b8:	20c00f15 	stw	r3,60(r4)
   288bc:	2080bb04 	addi	r2,r4,748
   288c0:	00c000c4 	movi	r3,3
   288c4:	20c0b915 	stw	r3,740(r4)
   288c8:	2080ba15 	stw	r2,744(r4)
   288cc:	2000b815 	stw	zero,736(r4)
   288d0:	05c00204 	movi	r23,8
   288d4:	00800104 	movi	r2,4
   288d8:	2025883a 	mov	r18,r4
   288dc:	b80d883a 	mov	r6,r23
   288e0:	81001704 	addi	r4,r16,92
   288e4:	000b883a 	mov	r5,zero
   288e8:	80000015 	stw	zero,0(r16)
   288ec:	80000115 	stw	zero,4(r16)
   288f0:	80000215 	stw	zero,8(r16)
   288f4:	8080030d 	sth	r2,12(r16)
   288f8:	80001915 	stw	zero,100(r16)
   288fc:	8000038d 	sth	zero,14(r16)
   28900:	80000415 	stw	zero,16(r16)
   28904:	80000515 	stw	zero,20(r16)
   28908:	80000615 	stw	zero,24(r16)
   2890c:	0029e9c0 	call	29e9c <memset>
   28910:	058000f4 	movhi	r22,3
   28914:	94400217 	ldw	r17,8(r18)
   28918:	054000f4 	movhi	r21,3
   2891c:	050000f4 	movhi	r20,3
   28920:	04c000f4 	movhi	r19,3
   28924:	b5ac0504 	addi	r22,r22,-20460
   28928:	ad6c1c04 	addi	r21,r21,-20368
   2892c:	a52c3b04 	addi	r20,r20,-20244
   28930:	9cec5204 	addi	r19,r19,-20152
   28934:	85800815 	stw	r22,32(r16)
   28938:	85400915 	stw	r21,36(r16)
   2893c:	85000a15 	stw	r20,40(r16)
   28940:	84c00b15 	stw	r19,44(r16)
   28944:	84000715 	stw	r16,28(r16)
   28948:	00800284 	movi	r2,10
   2894c:	8880030d 	sth	r2,12(r17)
   28950:	00800044 	movi	r2,1
   28954:	b80d883a 	mov	r6,r23
   28958:	89001704 	addi	r4,r17,92
   2895c:	000b883a 	mov	r5,zero
   28960:	88000015 	stw	zero,0(r17)
   28964:	88000115 	stw	zero,4(r17)
   28968:	88000215 	stw	zero,8(r17)
   2896c:	88001915 	stw	zero,100(r17)
   28970:	8880038d 	sth	r2,14(r17)
   28974:	88000415 	stw	zero,16(r17)
   28978:	88000515 	stw	zero,20(r17)
   2897c:	88000615 	stw	zero,24(r17)
   28980:	0029e9c0 	call	29e9c <memset>
   28984:	94000317 	ldw	r16,12(r18)
   28988:	00800484 	movi	r2,18
   2898c:	8c400715 	stw	r17,28(r17)
   28990:	8d800815 	stw	r22,32(r17)
   28994:	8d400915 	stw	r21,36(r17)
   28998:	8d000a15 	stw	r20,40(r17)
   2899c:	8cc00b15 	stw	r19,44(r17)
   289a0:	8080030d 	sth	r2,12(r16)
   289a4:	00800084 	movi	r2,2
   289a8:	80000015 	stw	zero,0(r16)
   289ac:	80000115 	stw	zero,4(r16)
   289b0:	80000215 	stw	zero,8(r16)
   289b4:	80001915 	stw	zero,100(r16)
   289b8:	8080038d 	sth	r2,14(r16)
   289bc:	80000415 	stw	zero,16(r16)
   289c0:	80000515 	stw	zero,20(r16)
   289c4:	80000615 	stw	zero,24(r16)
   289c8:	b80d883a 	mov	r6,r23
   289cc:	000b883a 	mov	r5,zero
   289d0:	81001704 	addi	r4,r16,92
   289d4:	0029e9c0 	call	29e9c <memset>
   289d8:	00800044 	movi	r2,1
   289dc:	84000715 	stw	r16,28(r16)
   289e0:	85800815 	stw	r22,32(r16)
   289e4:	85400915 	stw	r21,36(r16)
   289e8:	85000a15 	stw	r20,40(r16)
   289ec:	84c00b15 	stw	r19,44(r16)
   289f0:	90800e15 	stw	r2,56(r18)
   289f4:	dfc00817 	ldw	ra,32(sp)
   289f8:	ddc00717 	ldw	r23,28(sp)
   289fc:	dd800617 	ldw	r22,24(sp)
   28a00:	dd400517 	ldw	r21,20(sp)
   28a04:	dd000417 	ldw	r20,16(sp)
   28a08:	dcc00317 	ldw	r19,12(sp)
   28a0c:	dc800217 	ldw	r18,8(sp)
   28a10:	dc400117 	ldw	r17,4(sp)
   28a14:	dc000017 	ldw	r16,0(sp)
   28a18:	dec00904 	addi	sp,sp,36
   28a1c:	f800283a 	ret

00028a20 <__fp_lock>:
   28a20:	0005883a 	mov	r2,zero
   28a24:	f800283a 	ret

00028a28 <__sfmoreglue>:
   28a28:	defffc04 	addi	sp,sp,-16
   28a2c:	dc400115 	stw	r17,4(sp)
   28a30:	2c7fffc4 	addi	r17,r5,-1
   28a34:	8c401a24 	muli	r17,r17,104
   28a38:	dc800215 	stw	r18,8(sp)
   28a3c:	2825883a 	mov	r18,r5
   28a40:	89401d04 	addi	r5,r17,116
   28a44:	dc000015 	stw	r16,0(sp)
   28a48:	dfc00315 	stw	ra,12(sp)
   28a4c:	00294640 	call	29464 <_malloc_r>
   28a50:	1021883a 	mov	r16,r2
   28a54:	10000726 	beq	r2,zero,28a74 <__sfmoreglue+0x4c>
   28a58:	11000304 	addi	r4,r2,12
   28a5c:	10000015 	stw	zero,0(r2)
   28a60:	14800115 	stw	r18,4(r2)
   28a64:	11000215 	stw	r4,8(r2)
   28a68:	89801a04 	addi	r6,r17,104
   28a6c:	000b883a 	mov	r5,zero
   28a70:	0029e9c0 	call	29e9c <memset>
   28a74:	8005883a 	mov	r2,r16
   28a78:	dfc00317 	ldw	ra,12(sp)
   28a7c:	dc800217 	ldw	r18,8(sp)
   28a80:	dc400117 	ldw	r17,4(sp)
   28a84:	dc000017 	ldw	r16,0(sp)
   28a88:	dec00404 	addi	sp,sp,16
   28a8c:	f800283a 	ret

00028a90 <__sfp>:
   28a90:	defffb04 	addi	sp,sp,-20
   28a94:	dc000015 	stw	r16,0(sp)
   28a98:	040000f4 	movhi	r16,3
   28a9c:	840c0704 	addi	r16,r16,12316
   28aa0:	dcc00315 	stw	r19,12(sp)
   28aa4:	2027883a 	mov	r19,r4
   28aa8:	81000017 	ldw	r4,0(r16)
   28aac:	dfc00415 	stw	ra,16(sp)
   28ab0:	dc800215 	stw	r18,8(sp)
   28ab4:	20800e17 	ldw	r2,56(r4)
   28ab8:	dc400115 	stw	r17,4(sp)
   28abc:	1000021e 	bne	r2,zero,28ac8 <__sfp+0x38>
   28ac0:	00288840 	call	28884 <__sinit.part.1>
   28ac4:	81000017 	ldw	r4,0(r16)
   28ac8:	2480b804 	addi	r18,r4,736
   28acc:	047fffc4 	movi	r17,-1
   28ad0:	91000117 	ldw	r4,4(r18)
   28ad4:	94000217 	ldw	r16,8(r18)
   28ad8:	213fffc4 	addi	r4,r4,-1
   28adc:	20000a16 	blt	r4,zero,28b08 <__sfp+0x78>
   28ae0:	8080030f 	ldh	r2,12(r16)
   28ae4:	10000c26 	beq	r2,zero,28b18 <__sfp+0x88>
   28ae8:	80c01d04 	addi	r3,r16,116
   28aec:	00000206 	br	28af8 <__sfp+0x68>
   28af0:	18bfe60f 	ldh	r2,-104(r3)
   28af4:	10000826 	beq	r2,zero,28b18 <__sfp+0x88>
   28af8:	213fffc4 	addi	r4,r4,-1
   28afc:	1c3ffd04 	addi	r16,r3,-12
   28b00:	18c01a04 	addi	r3,r3,104
   28b04:	247ffa1e 	bne	r4,r17,28af0 <__alt_data_end+0xfffe8af0>
   28b08:	90800017 	ldw	r2,0(r18)
   28b0c:	10001d26 	beq	r2,zero,28b84 <__sfp+0xf4>
   28b10:	1025883a 	mov	r18,r2
   28b14:	003fee06 	br	28ad0 <__alt_data_end+0xfffe8ad0>
   28b18:	00bfffc4 	movi	r2,-1
   28b1c:	8080038d 	sth	r2,14(r16)
   28b20:	00800044 	movi	r2,1
   28b24:	8080030d 	sth	r2,12(r16)
   28b28:	80001915 	stw	zero,100(r16)
   28b2c:	80000015 	stw	zero,0(r16)
   28b30:	80000215 	stw	zero,8(r16)
   28b34:	80000115 	stw	zero,4(r16)
   28b38:	80000415 	stw	zero,16(r16)
   28b3c:	80000515 	stw	zero,20(r16)
   28b40:	80000615 	stw	zero,24(r16)
   28b44:	01800204 	movi	r6,8
   28b48:	000b883a 	mov	r5,zero
   28b4c:	81001704 	addi	r4,r16,92
   28b50:	0029e9c0 	call	29e9c <memset>
   28b54:	8005883a 	mov	r2,r16
   28b58:	80000c15 	stw	zero,48(r16)
   28b5c:	80000d15 	stw	zero,52(r16)
   28b60:	80001115 	stw	zero,68(r16)
   28b64:	80001215 	stw	zero,72(r16)
   28b68:	dfc00417 	ldw	ra,16(sp)
   28b6c:	dcc00317 	ldw	r19,12(sp)
   28b70:	dc800217 	ldw	r18,8(sp)
   28b74:	dc400117 	ldw	r17,4(sp)
   28b78:	dc000017 	ldw	r16,0(sp)
   28b7c:	dec00504 	addi	sp,sp,20
   28b80:	f800283a 	ret
   28b84:	01400104 	movi	r5,4
   28b88:	9809883a 	mov	r4,r19
   28b8c:	0028a280 	call	28a28 <__sfmoreglue>
   28b90:	90800015 	stw	r2,0(r18)
   28b94:	103fde1e 	bne	r2,zero,28b10 <__alt_data_end+0xfffe8b10>
   28b98:	00800304 	movi	r2,12
   28b9c:	98800015 	stw	r2,0(r19)
   28ba0:	0005883a 	mov	r2,zero
   28ba4:	003ff006 	br	28b68 <__alt_data_end+0xfffe8b68>

00028ba8 <_cleanup>:
   28ba8:	008000f4 	movhi	r2,3
   28bac:	108c0704 	addi	r2,r2,12316
   28bb0:	11000017 	ldw	r4,0(r2)
   28bb4:	014000f4 	movhi	r5,3
   28bb8:	2972a104 	addi	r5,r5,-13692
   28bbc:	00291081 	jmpi	29108 <_fwalk_reent>

00028bc0 <__sinit>:
   28bc0:	20800e17 	ldw	r2,56(r4)
   28bc4:	10000126 	beq	r2,zero,28bcc <__sinit+0xc>
   28bc8:	f800283a 	ret
   28bcc:	00288841 	jmpi	28884 <__sinit.part.1>

00028bd0 <__sfp_lock_acquire>:
   28bd0:	f800283a 	ret

00028bd4 <__sfp_lock_release>:
   28bd4:	f800283a 	ret

00028bd8 <__sinit_lock_acquire>:
   28bd8:	f800283a 	ret

00028bdc <__sinit_lock_release>:
   28bdc:	f800283a 	ret

00028be0 <__fp_lock_all>:
   28be0:	008000f4 	movhi	r2,3
   28be4:	108c0804 	addi	r2,r2,12320
   28be8:	11000017 	ldw	r4,0(r2)
   28bec:	014000f4 	movhi	r5,3
   28bf0:	29628804 	addi	r5,r5,-30176
   28bf4:	00290441 	jmpi	29044 <_fwalk>

00028bf8 <__fp_unlock_all>:
   28bf8:	008000f4 	movhi	r2,3
   28bfc:	108c0804 	addi	r2,r2,12320
   28c00:	11000017 	ldw	r4,0(r2)
   28c04:	014000f4 	movhi	r5,3
   28c08:	29621c04 	addi	r5,r5,-30608
   28c0c:	00290441 	jmpi	29044 <_fwalk>

00028c10 <_malloc_trim_r>:
   28c10:	defffb04 	addi	sp,sp,-20
   28c14:	dcc00315 	stw	r19,12(sp)
   28c18:	04c000f4 	movhi	r19,3
   28c1c:	dc800215 	stw	r18,8(sp)
   28c20:	dc400115 	stw	r17,4(sp)
   28c24:	dc000015 	stw	r16,0(sp)
   28c28:	dfc00415 	stw	ra,16(sp)
   28c2c:	2821883a 	mov	r16,r5
   28c30:	9cc68204 	addi	r19,r19,6664
   28c34:	2025883a 	mov	r18,r4
   28c38:	002ee900 	call	2ee90 <__malloc_lock>
   28c3c:	98800217 	ldw	r2,8(r19)
   28c40:	14400117 	ldw	r17,4(r2)
   28c44:	00bfff04 	movi	r2,-4
   28c48:	88a2703a 	and	r17,r17,r2
   28c4c:	8c21c83a 	sub	r16,r17,r16
   28c50:	8403fbc4 	addi	r16,r16,4079
   28c54:	8020d33a 	srli	r16,r16,12
   28c58:	0083ffc4 	movi	r2,4095
   28c5c:	843fffc4 	addi	r16,r16,-1
   28c60:	8020933a 	slli	r16,r16,12
   28c64:	1400060e 	bge	r2,r16,28c80 <_malloc_trim_r+0x70>
   28c68:	000b883a 	mov	r5,zero
   28c6c:	9009883a 	mov	r4,r18
   28c70:	002afc00 	call	2afc0 <_sbrk_r>
   28c74:	98c00217 	ldw	r3,8(r19)
   28c78:	1c47883a 	add	r3,r3,r17
   28c7c:	10c00a26 	beq	r2,r3,28ca8 <_malloc_trim_r+0x98>
   28c80:	9009883a 	mov	r4,r18
   28c84:	002eeb40 	call	2eeb4 <__malloc_unlock>
   28c88:	0005883a 	mov	r2,zero
   28c8c:	dfc00417 	ldw	ra,16(sp)
   28c90:	dcc00317 	ldw	r19,12(sp)
   28c94:	dc800217 	ldw	r18,8(sp)
   28c98:	dc400117 	ldw	r17,4(sp)
   28c9c:	dc000017 	ldw	r16,0(sp)
   28ca0:	dec00504 	addi	sp,sp,20
   28ca4:	f800283a 	ret
   28ca8:	040bc83a 	sub	r5,zero,r16
   28cac:	9009883a 	mov	r4,r18
   28cb0:	002afc00 	call	2afc0 <_sbrk_r>
   28cb4:	00ffffc4 	movi	r3,-1
   28cb8:	10c00d26 	beq	r2,r3,28cf0 <_malloc_trim_r+0xe0>
   28cbc:	00c000f4 	movhi	r3,3
   28cc0:	18d2e104 	addi	r3,r3,19332
   28cc4:	18800017 	ldw	r2,0(r3)
   28cc8:	99000217 	ldw	r4,8(r19)
   28ccc:	8c23c83a 	sub	r17,r17,r16
   28cd0:	8c400054 	ori	r17,r17,1
   28cd4:	1421c83a 	sub	r16,r2,r16
   28cd8:	24400115 	stw	r17,4(r4)
   28cdc:	9009883a 	mov	r4,r18
   28ce0:	1c000015 	stw	r16,0(r3)
   28ce4:	002eeb40 	call	2eeb4 <__malloc_unlock>
   28ce8:	00800044 	movi	r2,1
   28cec:	003fe706 	br	28c8c <__alt_data_end+0xfffe8c8c>
   28cf0:	000b883a 	mov	r5,zero
   28cf4:	9009883a 	mov	r4,r18
   28cf8:	002afc00 	call	2afc0 <_sbrk_r>
   28cfc:	99000217 	ldw	r4,8(r19)
   28d00:	014003c4 	movi	r5,15
   28d04:	1107c83a 	sub	r3,r2,r4
   28d08:	28ffdd0e 	bge	r5,r3,28c80 <__alt_data_end+0xfffe8c80>
   28d0c:	014000f4 	movhi	r5,3
   28d10:	294c0a04 	addi	r5,r5,12328
   28d14:	29400017 	ldw	r5,0(r5)
   28d18:	18c00054 	ori	r3,r3,1
   28d1c:	20c00115 	stw	r3,4(r4)
   28d20:	00c000f4 	movhi	r3,3
   28d24:	1145c83a 	sub	r2,r2,r5
   28d28:	18d2e104 	addi	r3,r3,19332
   28d2c:	18800015 	stw	r2,0(r3)
   28d30:	003fd306 	br	28c80 <__alt_data_end+0xfffe8c80>

00028d34 <_free_r>:
   28d34:	28004126 	beq	r5,zero,28e3c <_free_r+0x108>
   28d38:	defffd04 	addi	sp,sp,-12
   28d3c:	dc400115 	stw	r17,4(sp)
   28d40:	dc000015 	stw	r16,0(sp)
   28d44:	2023883a 	mov	r17,r4
   28d48:	2821883a 	mov	r16,r5
   28d4c:	dfc00215 	stw	ra,8(sp)
   28d50:	002ee900 	call	2ee90 <__malloc_lock>
   28d54:	81ffff17 	ldw	r7,-4(r16)
   28d58:	00bfff84 	movi	r2,-2
   28d5c:	010000f4 	movhi	r4,3
   28d60:	81bffe04 	addi	r6,r16,-8
   28d64:	3884703a 	and	r2,r7,r2
   28d68:	21068204 	addi	r4,r4,6664
   28d6c:	308b883a 	add	r5,r6,r2
   28d70:	2a400117 	ldw	r9,4(r5)
   28d74:	22000217 	ldw	r8,8(r4)
   28d78:	00ffff04 	movi	r3,-4
   28d7c:	48c6703a 	and	r3,r9,r3
   28d80:	2a005726 	beq	r5,r8,28ee0 <_free_r+0x1ac>
   28d84:	28c00115 	stw	r3,4(r5)
   28d88:	39c0004c 	andi	r7,r7,1
   28d8c:	3800091e 	bne	r7,zero,28db4 <_free_r+0x80>
   28d90:	823ffe17 	ldw	r8,-8(r16)
   28d94:	22400204 	addi	r9,r4,8
   28d98:	320dc83a 	sub	r6,r6,r8
   28d9c:	31c00217 	ldw	r7,8(r6)
   28da0:	1205883a 	add	r2,r2,r8
   28da4:	3a406526 	beq	r7,r9,28f3c <_free_r+0x208>
   28da8:	32000317 	ldw	r8,12(r6)
   28dac:	3a000315 	stw	r8,12(r7)
   28db0:	41c00215 	stw	r7,8(r8)
   28db4:	28cf883a 	add	r7,r5,r3
   28db8:	39c00117 	ldw	r7,4(r7)
   28dbc:	39c0004c 	andi	r7,r7,1
   28dc0:	38003a26 	beq	r7,zero,28eac <_free_r+0x178>
   28dc4:	10c00054 	ori	r3,r2,1
   28dc8:	30c00115 	stw	r3,4(r6)
   28dcc:	3087883a 	add	r3,r6,r2
   28dd0:	18800015 	stw	r2,0(r3)
   28dd4:	00c07fc4 	movi	r3,511
   28dd8:	18801936 	bltu	r3,r2,28e40 <_free_r+0x10c>
   28ddc:	1004d0fa 	srli	r2,r2,3
   28de0:	01c00044 	movi	r7,1
   28de4:	21400117 	ldw	r5,4(r4)
   28de8:	10c00044 	addi	r3,r2,1
   28dec:	18c7883a 	add	r3,r3,r3
   28df0:	1005d0ba 	srai	r2,r2,2
   28df4:	18c7883a 	add	r3,r3,r3
   28df8:	18c7883a 	add	r3,r3,r3
   28dfc:	1907883a 	add	r3,r3,r4
   28e00:	3884983a 	sll	r2,r7,r2
   28e04:	19c00017 	ldw	r7,0(r3)
   28e08:	1a3ffe04 	addi	r8,r3,-8
   28e0c:	1144b03a 	or	r2,r2,r5
   28e10:	32000315 	stw	r8,12(r6)
   28e14:	31c00215 	stw	r7,8(r6)
   28e18:	20800115 	stw	r2,4(r4)
   28e1c:	19800015 	stw	r6,0(r3)
   28e20:	39800315 	stw	r6,12(r7)
   28e24:	8809883a 	mov	r4,r17
   28e28:	dfc00217 	ldw	ra,8(sp)
   28e2c:	dc400117 	ldw	r17,4(sp)
   28e30:	dc000017 	ldw	r16,0(sp)
   28e34:	dec00304 	addi	sp,sp,12
   28e38:	002eeb41 	jmpi	2eeb4 <__malloc_unlock>
   28e3c:	f800283a 	ret
   28e40:	100ad27a 	srli	r5,r2,9
   28e44:	00c00104 	movi	r3,4
   28e48:	19404a36 	bltu	r3,r5,28f74 <_free_r+0x240>
   28e4c:	100ad1ba 	srli	r5,r2,6
   28e50:	28c00e44 	addi	r3,r5,57
   28e54:	18c7883a 	add	r3,r3,r3
   28e58:	29400e04 	addi	r5,r5,56
   28e5c:	18c7883a 	add	r3,r3,r3
   28e60:	18c7883a 	add	r3,r3,r3
   28e64:	1909883a 	add	r4,r3,r4
   28e68:	20c00017 	ldw	r3,0(r4)
   28e6c:	01c000f4 	movhi	r7,3
   28e70:	213ffe04 	addi	r4,r4,-8
   28e74:	39c68204 	addi	r7,r7,6664
   28e78:	20c04426 	beq	r4,r3,28f8c <_free_r+0x258>
   28e7c:	01ffff04 	movi	r7,-4
   28e80:	19400117 	ldw	r5,4(r3)
   28e84:	29ca703a 	and	r5,r5,r7
   28e88:	1140022e 	bgeu	r2,r5,28e94 <_free_r+0x160>
   28e8c:	18c00217 	ldw	r3,8(r3)
   28e90:	20fffb1e 	bne	r4,r3,28e80 <__alt_data_end+0xfffe8e80>
   28e94:	19000317 	ldw	r4,12(r3)
   28e98:	31000315 	stw	r4,12(r6)
   28e9c:	30c00215 	stw	r3,8(r6)
   28ea0:	21800215 	stw	r6,8(r4)
   28ea4:	19800315 	stw	r6,12(r3)
   28ea8:	003fde06 	br	28e24 <__alt_data_end+0xfffe8e24>
   28eac:	29c00217 	ldw	r7,8(r5)
   28eb0:	10c5883a 	add	r2,r2,r3
   28eb4:	00c000f4 	movhi	r3,3
   28eb8:	18c68404 	addi	r3,r3,6672
   28ebc:	38c03b26 	beq	r7,r3,28fac <_free_r+0x278>
   28ec0:	2a000317 	ldw	r8,12(r5)
   28ec4:	11400054 	ori	r5,r2,1
   28ec8:	3087883a 	add	r3,r6,r2
   28ecc:	3a000315 	stw	r8,12(r7)
   28ed0:	41c00215 	stw	r7,8(r8)
   28ed4:	31400115 	stw	r5,4(r6)
   28ed8:	18800015 	stw	r2,0(r3)
   28edc:	003fbd06 	br	28dd4 <__alt_data_end+0xfffe8dd4>
   28ee0:	39c0004c 	andi	r7,r7,1
   28ee4:	10c5883a 	add	r2,r2,r3
   28ee8:	3800071e 	bne	r7,zero,28f08 <_free_r+0x1d4>
   28eec:	81fffe17 	ldw	r7,-8(r16)
   28ef0:	31cdc83a 	sub	r6,r6,r7
   28ef4:	30c00317 	ldw	r3,12(r6)
   28ef8:	31400217 	ldw	r5,8(r6)
   28efc:	11c5883a 	add	r2,r2,r7
   28f00:	28c00315 	stw	r3,12(r5)
   28f04:	19400215 	stw	r5,8(r3)
   28f08:	10c00054 	ori	r3,r2,1
   28f0c:	30c00115 	stw	r3,4(r6)
   28f10:	00c000f4 	movhi	r3,3
   28f14:	18cc0b04 	addi	r3,r3,12332
   28f18:	18c00017 	ldw	r3,0(r3)
   28f1c:	21800215 	stw	r6,8(r4)
   28f20:	10ffc036 	bltu	r2,r3,28e24 <__alt_data_end+0xfffe8e24>
   28f24:	008000f4 	movhi	r2,3
   28f28:	1092d804 	addi	r2,r2,19296
   28f2c:	11400017 	ldw	r5,0(r2)
   28f30:	8809883a 	mov	r4,r17
   28f34:	0028c100 	call	28c10 <_malloc_trim_r>
   28f38:	003fba06 	br	28e24 <__alt_data_end+0xfffe8e24>
   28f3c:	28c9883a 	add	r4,r5,r3
   28f40:	21000117 	ldw	r4,4(r4)
   28f44:	2100004c 	andi	r4,r4,1
   28f48:	2000391e 	bne	r4,zero,29030 <_free_r+0x2fc>
   28f4c:	29c00217 	ldw	r7,8(r5)
   28f50:	29000317 	ldw	r4,12(r5)
   28f54:	1885883a 	add	r2,r3,r2
   28f58:	10c00054 	ori	r3,r2,1
   28f5c:	39000315 	stw	r4,12(r7)
   28f60:	21c00215 	stw	r7,8(r4)
   28f64:	30c00115 	stw	r3,4(r6)
   28f68:	308d883a 	add	r6,r6,r2
   28f6c:	30800015 	stw	r2,0(r6)
   28f70:	003fac06 	br	28e24 <__alt_data_end+0xfffe8e24>
   28f74:	00c00504 	movi	r3,20
   28f78:	19401536 	bltu	r3,r5,28fd0 <_free_r+0x29c>
   28f7c:	28c01704 	addi	r3,r5,92
   28f80:	18c7883a 	add	r3,r3,r3
   28f84:	294016c4 	addi	r5,r5,91
   28f88:	003fb406 	br	28e5c <__alt_data_end+0xfffe8e5c>
   28f8c:	280bd0ba 	srai	r5,r5,2
   28f90:	00c00044 	movi	r3,1
   28f94:	38800117 	ldw	r2,4(r7)
   28f98:	194a983a 	sll	r5,r3,r5
   28f9c:	2007883a 	mov	r3,r4
   28fa0:	2884b03a 	or	r2,r5,r2
   28fa4:	38800115 	stw	r2,4(r7)
   28fa8:	003fbb06 	br	28e98 <__alt_data_end+0xfffe8e98>
   28fac:	21800515 	stw	r6,20(r4)
   28fb0:	21800415 	stw	r6,16(r4)
   28fb4:	10c00054 	ori	r3,r2,1
   28fb8:	31c00315 	stw	r7,12(r6)
   28fbc:	31c00215 	stw	r7,8(r6)
   28fc0:	30c00115 	stw	r3,4(r6)
   28fc4:	308d883a 	add	r6,r6,r2
   28fc8:	30800015 	stw	r2,0(r6)
   28fcc:	003f9506 	br	28e24 <__alt_data_end+0xfffe8e24>
   28fd0:	00c01504 	movi	r3,84
   28fd4:	19400536 	bltu	r3,r5,28fec <_free_r+0x2b8>
   28fd8:	100ad33a 	srli	r5,r2,12
   28fdc:	28c01bc4 	addi	r3,r5,111
   28fe0:	18c7883a 	add	r3,r3,r3
   28fe4:	29401b84 	addi	r5,r5,110
   28fe8:	003f9c06 	br	28e5c <__alt_data_end+0xfffe8e5c>
   28fec:	00c05504 	movi	r3,340
   28ff0:	19400536 	bltu	r3,r5,29008 <_free_r+0x2d4>
   28ff4:	100ad3fa 	srli	r5,r2,15
   28ff8:	28c01e04 	addi	r3,r5,120
   28ffc:	18c7883a 	add	r3,r3,r3
   29000:	29401dc4 	addi	r5,r5,119
   29004:	003f9506 	br	28e5c <__alt_data_end+0xfffe8e5c>
   29008:	00c15504 	movi	r3,1364
   2900c:	19400536 	bltu	r3,r5,29024 <_free_r+0x2f0>
   29010:	100ad4ba 	srli	r5,r2,18
   29014:	28c01f44 	addi	r3,r5,125
   29018:	18c7883a 	add	r3,r3,r3
   2901c:	29401f04 	addi	r5,r5,124
   29020:	003f8e06 	br	28e5c <__alt_data_end+0xfffe8e5c>
   29024:	00c03f84 	movi	r3,254
   29028:	01401f84 	movi	r5,126
   2902c:	003f8b06 	br	28e5c <__alt_data_end+0xfffe8e5c>
   29030:	10c00054 	ori	r3,r2,1
   29034:	30c00115 	stw	r3,4(r6)
   29038:	308d883a 	add	r6,r6,r2
   2903c:	30800015 	stw	r2,0(r6)
   29040:	003f7806 	br	28e24 <__alt_data_end+0xfffe8e24>

00029044 <_fwalk>:
   29044:	defff704 	addi	sp,sp,-36
   29048:	dd000415 	stw	r20,16(sp)
   2904c:	dfc00815 	stw	ra,32(sp)
   29050:	ddc00715 	stw	r23,28(sp)
   29054:	dd800615 	stw	r22,24(sp)
   29058:	dd400515 	stw	r21,20(sp)
   2905c:	dcc00315 	stw	r19,12(sp)
   29060:	dc800215 	stw	r18,8(sp)
   29064:	dc400115 	stw	r17,4(sp)
   29068:	dc000015 	stw	r16,0(sp)
   2906c:	2500b804 	addi	r20,r4,736
   29070:	a0002326 	beq	r20,zero,29100 <_fwalk+0xbc>
   29074:	282b883a 	mov	r21,r5
   29078:	002f883a 	mov	r23,zero
   2907c:	05800044 	movi	r22,1
   29080:	04ffffc4 	movi	r19,-1
   29084:	a4400117 	ldw	r17,4(r20)
   29088:	a4800217 	ldw	r18,8(r20)
   2908c:	8c7fffc4 	addi	r17,r17,-1
   29090:	88000d16 	blt	r17,zero,290c8 <_fwalk+0x84>
   29094:	94000304 	addi	r16,r18,12
   29098:	94800384 	addi	r18,r18,14
   2909c:	8080000b 	ldhu	r2,0(r16)
   290a0:	8c7fffc4 	addi	r17,r17,-1
   290a4:	813ffd04 	addi	r4,r16,-12
   290a8:	b080042e 	bgeu	r22,r2,290bc <_fwalk+0x78>
   290ac:	9080000f 	ldh	r2,0(r18)
   290b0:	14c00226 	beq	r2,r19,290bc <_fwalk+0x78>
   290b4:	a83ee83a 	callr	r21
   290b8:	b8aeb03a 	or	r23,r23,r2
   290bc:	84001a04 	addi	r16,r16,104
   290c0:	94801a04 	addi	r18,r18,104
   290c4:	8cfff51e 	bne	r17,r19,2909c <__alt_data_end+0xfffe909c>
   290c8:	a5000017 	ldw	r20,0(r20)
   290cc:	a03fed1e 	bne	r20,zero,29084 <__alt_data_end+0xfffe9084>
   290d0:	b805883a 	mov	r2,r23
   290d4:	dfc00817 	ldw	ra,32(sp)
   290d8:	ddc00717 	ldw	r23,28(sp)
   290dc:	dd800617 	ldw	r22,24(sp)
   290e0:	dd400517 	ldw	r21,20(sp)
   290e4:	dd000417 	ldw	r20,16(sp)
   290e8:	dcc00317 	ldw	r19,12(sp)
   290ec:	dc800217 	ldw	r18,8(sp)
   290f0:	dc400117 	ldw	r17,4(sp)
   290f4:	dc000017 	ldw	r16,0(sp)
   290f8:	dec00904 	addi	sp,sp,36
   290fc:	f800283a 	ret
   29100:	002f883a 	mov	r23,zero
   29104:	003ff206 	br	290d0 <__alt_data_end+0xfffe90d0>

00029108 <_fwalk_reent>:
   29108:	defff704 	addi	sp,sp,-36
   2910c:	dd000415 	stw	r20,16(sp)
   29110:	dfc00815 	stw	ra,32(sp)
   29114:	ddc00715 	stw	r23,28(sp)
   29118:	dd800615 	stw	r22,24(sp)
   2911c:	dd400515 	stw	r21,20(sp)
   29120:	dcc00315 	stw	r19,12(sp)
   29124:	dc800215 	stw	r18,8(sp)
   29128:	dc400115 	stw	r17,4(sp)
   2912c:	dc000015 	stw	r16,0(sp)
   29130:	2500b804 	addi	r20,r4,736
   29134:	a0002326 	beq	r20,zero,291c4 <_fwalk_reent+0xbc>
   29138:	282b883a 	mov	r21,r5
   2913c:	2027883a 	mov	r19,r4
   29140:	002f883a 	mov	r23,zero
   29144:	05800044 	movi	r22,1
   29148:	04bfffc4 	movi	r18,-1
   2914c:	a4400117 	ldw	r17,4(r20)
   29150:	a4000217 	ldw	r16,8(r20)
   29154:	8c7fffc4 	addi	r17,r17,-1
   29158:	88000c16 	blt	r17,zero,2918c <_fwalk_reent+0x84>
   2915c:	84000304 	addi	r16,r16,12
   29160:	8080000b 	ldhu	r2,0(r16)
   29164:	8c7fffc4 	addi	r17,r17,-1
   29168:	817ffd04 	addi	r5,r16,-12
   2916c:	b080052e 	bgeu	r22,r2,29184 <_fwalk_reent+0x7c>
   29170:	8080008f 	ldh	r2,2(r16)
   29174:	9809883a 	mov	r4,r19
   29178:	14800226 	beq	r2,r18,29184 <_fwalk_reent+0x7c>
   2917c:	a83ee83a 	callr	r21
   29180:	b8aeb03a 	or	r23,r23,r2
   29184:	84001a04 	addi	r16,r16,104
   29188:	8cbff51e 	bne	r17,r18,29160 <__alt_data_end+0xfffe9160>
   2918c:	a5000017 	ldw	r20,0(r20)
   29190:	a03fee1e 	bne	r20,zero,2914c <__alt_data_end+0xfffe914c>
   29194:	b805883a 	mov	r2,r23
   29198:	dfc00817 	ldw	ra,32(sp)
   2919c:	ddc00717 	ldw	r23,28(sp)
   291a0:	dd800617 	ldw	r22,24(sp)
   291a4:	dd400517 	ldw	r21,20(sp)
   291a8:	dd000417 	ldw	r20,16(sp)
   291ac:	dcc00317 	ldw	r19,12(sp)
   291b0:	dc800217 	ldw	r18,8(sp)
   291b4:	dc400117 	ldw	r17,4(sp)
   291b8:	dc000017 	ldw	r16,0(sp)
   291bc:	dec00904 	addi	sp,sp,36
   291c0:	f800283a 	ret
   291c4:	002f883a 	mov	r23,zero
   291c8:	003ff206 	br	29194 <__alt_data_end+0xfffe9194>

000291cc <_setlocale_r>:
   291cc:	30001b26 	beq	r6,zero,2923c <_setlocale_r+0x70>
   291d0:	014000f4 	movhi	r5,3
   291d4:	defffe04 	addi	sp,sp,-8
   291d8:	2944fa04 	addi	r5,r5,5096
   291dc:	3009883a 	mov	r4,r6
   291e0:	dc000015 	stw	r16,0(sp)
   291e4:	dfc00115 	stw	ra,4(sp)
   291e8:	3021883a 	mov	r16,r6
   291ec:	002b1500 	call	2b150 <strcmp>
   291f0:	1000061e 	bne	r2,zero,2920c <_setlocale_r+0x40>
   291f4:	008000f4 	movhi	r2,3
   291f8:	1084dc04 	addi	r2,r2,4976
   291fc:	dfc00117 	ldw	ra,4(sp)
   29200:	dc000017 	ldw	r16,0(sp)
   29204:	dec00204 	addi	sp,sp,8
   29208:	f800283a 	ret
   2920c:	014000f4 	movhi	r5,3
   29210:	2944dc04 	addi	r5,r5,4976
   29214:	8009883a 	mov	r4,r16
   29218:	002b1500 	call	2b150 <strcmp>
   2921c:	103ff526 	beq	r2,zero,291f4 <__alt_data_end+0xfffe91f4>
   29220:	014000f4 	movhi	r5,3
   29224:	2944e504 	addi	r5,r5,5012
   29228:	8009883a 	mov	r4,r16
   2922c:	002b1500 	call	2b150 <strcmp>
   29230:	103ff026 	beq	r2,zero,291f4 <__alt_data_end+0xfffe91f4>
   29234:	0005883a 	mov	r2,zero
   29238:	003ff006 	br	291fc <__alt_data_end+0xfffe91fc>
   2923c:	008000f4 	movhi	r2,3
   29240:	1084dc04 	addi	r2,r2,4976
   29244:	f800283a 	ret

00029248 <__locale_charset>:
   29248:	008000f4 	movhi	r2,3
   2924c:	10866c04 	addi	r2,r2,6576
   29250:	f800283a 	ret

00029254 <__locale_mb_cur_max>:
   29254:	008000f4 	movhi	r2,3
   29258:	108c0904 	addi	r2,r2,12324
   2925c:	10800017 	ldw	r2,0(r2)
   29260:	f800283a 	ret

00029264 <__locale_msgcharset>:
   29264:	008000f4 	movhi	r2,3
   29268:	10866404 	addi	r2,r2,6544
   2926c:	f800283a 	ret

00029270 <__locale_cjk_lang>:
   29270:	0005883a 	mov	r2,zero
   29274:	f800283a 	ret

00029278 <_localeconv_r>:
   29278:	008000f4 	movhi	r2,3
   2927c:	10867404 	addi	r2,r2,6608
   29280:	f800283a 	ret

00029284 <setlocale>:
   29284:	008000f4 	movhi	r2,3
   29288:	108c0804 	addi	r2,r2,12320
   2928c:	280d883a 	mov	r6,r5
   29290:	200b883a 	mov	r5,r4
   29294:	11000017 	ldw	r4,0(r2)
   29298:	00291cc1 	jmpi	291cc <_setlocale_r>

0002929c <localeconv>:
   2929c:	008000f4 	movhi	r2,3
   292a0:	10867404 	addi	r2,r2,6608
   292a4:	f800283a 	ret

000292a8 <__smakebuf_r>:
   292a8:	2880030b 	ldhu	r2,12(r5)
   292ac:	10c0008c 	andi	r3,r2,2
   292b0:	1800411e 	bne	r3,zero,293b8 <__smakebuf_r+0x110>
   292b4:	deffec04 	addi	sp,sp,-80
   292b8:	dc000f15 	stw	r16,60(sp)
   292bc:	2821883a 	mov	r16,r5
   292c0:	2940038f 	ldh	r5,14(r5)
   292c4:	dc401015 	stw	r17,64(sp)
   292c8:	dfc01315 	stw	ra,76(sp)
   292cc:	dcc01215 	stw	r19,72(sp)
   292d0:	dc801115 	stw	r18,68(sp)
   292d4:	2023883a 	mov	r17,r4
   292d8:	28001c16 	blt	r5,zero,2934c <__smakebuf_r+0xa4>
   292dc:	d80d883a 	mov	r6,sp
   292e0:	002cd900 	call	2cd90 <_fstat_r>
   292e4:	10001816 	blt	r2,zero,29348 <__smakebuf_r+0xa0>
   292e8:	d8800117 	ldw	r2,4(sp)
   292ec:	00e00014 	movui	r3,32768
   292f0:	10bc000c 	andi	r2,r2,61440
   292f4:	14c80020 	cmpeqi	r19,r2,8192
   292f8:	10c03726 	beq	r2,r3,293d8 <__smakebuf_r+0x130>
   292fc:	80c0030b 	ldhu	r3,12(r16)
   29300:	18c20014 	ori	r3,r3,2048
   29304:	80c0030d 	sth	r3,12(r16)
   29308:	00c80004 	movi	r3,8192
   2930c:	10c0521e 	bne	r2,r3,29458 <__smakebuf_r+0x1b0>
   29310:	8140038f 	ldh	r5,14(r16)
   29314:	8809883a 	mov	r4,r17
   29318:	002d2a80 	call	2d2a8 <_isatty_r>
   2931c:	10004c26 	beq	r2,zero,29450 <__smakebuf_r+0x1a8>
   29320:	8080030b 	ldhu	r2,12(r16)
   29324:	80c010c4 	addi	r3,r16,67
   29328:	80c00015 	stw	r3,0(r16)
   2932c:	10800054 	ori	r2,r2,1
   29330:	8080030d 	sth	r2,12(r16)
   29334:	00800044 	movi	r2,1
   29338:	80c00415 	stw	r3,16(r16)
   2933c:	80800515 	stw	r2,20(r16)
   29340:	04810004 	movi	r18,1024
   29344:	00000706 	br	29364 <__smakebuf_r+0xbc>
   29348:	8080030b 	ldhu	r2,12(r16)
   2934c:	10c0200c 	andi	r3,r2,128
   29350:	18001f1e 	bne	r3,zero,293d0 <__smakebuf_r+0x128>
   29354:	04810004 	movi	r18,1024
   29358:	10820014 	ori	r2,r2,2048
   2935c:	8080030d 	sth	r2,12(r16)
   29360:	0027883a 	mov	r19,zero
   29364:	900b883a 	mov	r5,r18
   29368:	8809883a 	mov	r4,r17
   2936c:	00294640 	call	29464 <_malloc_r>
   29370:	10002c26 	beq	r2,zero,29424 <__smakebuf_r+0x17c>
   29374:	80c0030b 	ldhu	r3,12(r16)
   29378:	010000f4 	movhi	r4,3
   2937c:	21221e04 	addi	r4,r4,-30600
   29380:	89000f15 	stw	r4,60(r17)
   29384:	18c02014 	ori	r3,r3,128
   29388:	80c0030d 	sth	r3,12(r16)
   2938c:	80800015 	stw	r2,0(r16)
   29390:	80800415 	stw	r2,16(r16)
   29394:	84800515 	stw	r18,20(r16)
   29398:	98001a1e 	bne	r19,zero,29404 <__smakebuf_r+0x15c>
   2939c:	dfc01317 	ldw	ra,76(sp)
   293a0:	dcc01217 	ldw	r19,72(sp)
   293a4:	dc801117 	ldw	r18,68(sp)
   293a8:	dc401017 	ldw	r17,64(sp)
   293ac:	dc000f17 	ldw	r16,60(sp)
   293b0:	dec01404 	addi	sp,sp,80
   293b4:	f800283a 	ret
   293b8:	288010c4 	addi	r2,r5,67
   293bc:	28800015 	stw	r2,0(r5)
   293c0:	28800415 	stw	r2,16(r5)
   293c4:	00800044 	movi	r2,1
   293c8:	28800515 	stw	r2,20(r5)
   293cc:	f800283a 	ret
   293d0:	04801004 	movi	r18,64
   293d4:	003fe006 	br	29358 <__alt_data_end+0xfffe9358>
   293d8:	81000a17 	ldw	r4,40(r16)
   293dc:	00c000f4 	movhi	r3,3
   293e0:	18ec3b04 	addi	r3,r3,-20244
   293e4:	20ffc51e 	bne	r4,r3,292fc <__alt_data_end+0xfffe92fc>
   293e8:	8080030b 	ldhu	r2,12(r16)
   293ec:	04810004 	movi	r18,1024
   293f0:	84801315 	stw	r18,76(r16)
   293f4:	1484b03a 	or	r2,r2,r18
   293f8:	8080030d 	sth	r2,12(r16)
   293fc:	0027883a 	mov	r19,zero
   29400:	003fd806 	br	29364 <__alt_data_end+0xfffe9364>
   29404:	8140038f 	ldh	r5,14(r16)
   29408:	8809883a 	mov	r4,r17
   2940c:	002d2a80 	call	2d2a8 <_isatty_r>
   29410:	103fe226 	beq	r2,zero,2939c <__alt_data_end+0xfffe939c>
   29414:	8080030b 	ldhu	r2,12(r16)
   29418:	10800054 	ori	r2,r2,1
   2941c:	8080030d 	sth	r2,12(r16)
   29420:	003fde06 	br	2939c <__alt_data_end+0xfffe939c>
   29424:	8080030b 	ldhu	r2,12(r16)
   29428:	10c0800c 	andi	r3,r2,512
   2942c:	183fdb1e 	bne	r3,zero,2939c <__alt_data_end+0xfffe939c>
   29430:	10800094 	ori	r2,r2,2
   29434:	80c010c4 	addi	r3,r16,67
   29438:	8080030d 	sth	r2,12(r16)
   2943c:	00800044 	movi	r2,1
   29440:	80c00015 	stw	r3,0(r16)
   29444:	80c00415 	stw	r3,16(r16)
   29448:	80800515 	stw	r2,20(r16)
   2944c:	003fd306 	br	2939c <__alt_data_end+0xfffe939c>
   29450:	04810004 	movi	r18,1024
   29454:	003fc306 	br	29364 <__alt_data_end+0xfffe9364>
   29458:	0027883a 	mov	r19,zero
   2945c:	04810004 	movi	r18,1024
   29460:	003fc006 	br	29364 <__alt_data_end+0xfffe9364>

00029464 <_malloc_r>:
   29464:	defff504 	addi	sp,sp,-44
   29468:	dc800315 	stw	r18,12(sp)
   2946c:	dfc00a15 	stw	ra,40(sp)
   29470:	df000915 	stw	fp,36(sp)
   29474:	ddc00815 	stw	r23,32(sp)
   29478:	dd800715 	stw	r22,28(sp)
   2947c:	dd400615 	stw	r21,24(sp)
   29480:	dd000515 	stw	r20,20(sp)
   29484:	dcc00415 	stw	r19,16(sp)
   29488:	dc400215 	stw	r17,8(sp)
   2948c:	dc000115 	stw	r16,4(sp)
   29490:	288002c4 	addi	r2,r5,11
   29494:	00c00584 	movi	r3,22
   29498:	2025883a 	mov	r18,r4
   2949c:	18807f2e 	bgeu	r3,r2,2969c <_malloc_r+0x238>
   294a0:	047ffe04 	movi	r17,-8
   294a4:	1462703a 	and	r17,r2,r17
   294a8:	8800a316 	blt	r17,zero,29738 <_malloc_r+0x2d4>
   294ac:	8940a236 	bltu	r17,r5,29738 <_malloc_r+0x2d4>
   294b0:	002ee900 	call	2ee90 <__malloc_lock>
   294b4:	00807dc4 	movi	r2,503
   294b8:	1441e92e 	bgeu	r2,r17,29c60 <_malloc_r+0x7fc>
   294bc:	8804d27a 	srli	r2,r17,9
   294c0:	1000a126 	beq	r2,zero,29748 <_malloc_r+0x2e4>
   294c4:	00c00104 	movi	r3,4
   294c8:	18811e36 	bltu	r3,r2,29944 <_malloc_r+0x4e0>
   294cc:	8804d1ba 	srli	r2,r17,6
   294d0:	12000e44 	addi	r8,r2,57
   294d4:	11c00e04 	addi	r7,r2,56
   294d8:	4209883a 	add	r4,r8,r8
   294dc:	04c000f4 	movhi	r19,3
   294e0:	2109883a 	add	r4,r4,r4
   294e4:	9cc68204 	addi	r19,r19,6664
   294e8:	2109883a 	add	r4,r4,r4
   294ec:	9909883a 	add	r4,r19,r4
   294f0:	24000117 	ldw	r16,4(r4)
   294f4:	213ffe04 	addi	r4,r4,-8
   294f8:	24009726 	beq	r4,r16,29758 <_malloc_r+0x2f4>
   294fc:	80800117 	ldw	r2,4(r16)
   29500:	01bfff04 	movi	r6,-4
   29504:	014003c4 	movi	r5,15
   29508:	1184703a 	and	r2,r2,r6
   2950c:	1447c83a 	sub	r3,r2,r17
   29510:	28c00716 	blt	r5,r3,29530 <_malloc_r+0xcc>
   29514:	1800920e 	bge	r3,zero,29760 <_malloc_r+0x2fc>
   29518:	84000317 	ldw	r16,12(r16)
   2951c:	24008e26 	beq	r4,r16,29758 <_malloc_r+0x2f4>
   29520:	80800117 	ldw	r2,4(r16)
   29524:	1184703a 	and	r2,r2,r6
   29528:	1447c83a 	sub	r3,r2,r17
   2952c:	28fff90e 	bge	r5,r3,29514 <__alt_data_end+0xfffe9514>
   29530:	3809883a 	mov	r4,r7
   29534:	018000f4 	movhi	r6,3
   29538:	9c000417 	ldw	r16,16(r19)
   2953c:	31868204 	addi	r6,r6,6664
   29540:	32000204 	addi	r8,r6,8
   29544:	82013426 	beq	r16,r8,29a18 <_malloc_r+0x5b4>
   29548:	80c00117 	ldw	r3,4(r16)
   2954c:	00bfff04 	movi	r2,-4
   29550:	188e703a 	and	r7,r3,r2
   29554:	3c45c83a 	sub	r2,r7,r17
   29558:	00c003c4 	movi	r3,15
   2955c:	18811f16 	blt	r3,r2,299dc <_malloc_r+0x578>
   29560:	32000515 	stw	r8,20(r6)
   29564:	32000415 	stw	r8,16(r6)
   29568:	10007f0e 	bge	r2,zero,29768 <_malloc_r+0x304>
   2956c:	00807fc4 	movi	r2,511
   29570:	11c0fd36 	bltu	r2,r7,29968 <_malloc_r+0x504>
   29574:	3806d0fa 	srli	r3,r7,3
   29578:	01c00044 	movi	r7,1
   2957c:	30800117 	ldw	r2,4(r6)
   29580:	19400044 	addi	r5,r3,1
   29584:	294b883a 	add	r5,r5,r5
   29588:	1807d0ba 	srai	r3,r3,2
   2958c:	294b883a 	add	r5,r5,r5
   29590:	294b883a 	add	r5,r5,r5
   29594:	298b883a 	add	r5,r5,r6
   29598:	38c6983a 	sll	r3,r7,r3
   2959c:	29c00017 	ldw	r7,0(r5)
   295a0:	2a7ffe04 	addi	r9,r5,-8
   295a4:	1886b03a 	or	r3,r3,r2
   295a8:	82400315 	stw	r9,12(r16)
   295ac:	81c00215 	stw	r7,8(r16)
   295b0:	30c00115 	stw	r3,4(r6)
   295b4:	2c000015 	stw	r16,0(r5)
   295b8:	3c000315 	stw	r16,12(r7)
   295bc:	2005d0ba 	srai	r2,r4,2
   295c0:	01400044 	movi	r5,1
   295c4:	288a983a 	sll	r5,r5,r2
   295c8:	19406f36 	bltu	r3,r5,29788 <_malloc_r+0x324>
   295cc:	28c4703a 	and	r2,r5,r3
   295d0:	10000a1e 	bne	r2,zero,295fc <_malloc_r+0x198>
   295d4:	00bfff04 	movi	r2,-4
   295d8:	294b883a 	add	r5,r5,r5
   295dc:	2088703a 	and	r4,r4,r2
   295e0:	28c4703a 	and	r2,r5,r3
   295e4:	21000104 	addi	r4,r4,4
   295e8:	1000041e 	bne	r2,zero,295fc <_malloc_r+0x198>
   295ec:	294b883a 	add	r5,r5,r5
   295f0:	28c4703a 	and	r2,r5,r3
   295f4:	21000104 	addi	r4,r4,4
   295f8:	103ffc26 	beq	r2,zero,295ec <__alt_data_end+0xfffe95ec>
   295fc:	02bfff04 	movi	r10,-4
   29600:	024003c4 	movi	r9,15
   29604:	21800044 	addi	r6,r4,1
   29608:	318d883a 	add	r6,r6,r6
   2960c:	318d883a 	add	r6,r6,r6
   29610:	318d883a 	add	r6,r6,r6
   29614:	998d883a 	add	r6,r19,r6
   29618:	333ffe04 	addi	r12,r6,-8
   2961c:	2017883a 	mov	r11,r4
   29620:	31800104 	addi	r6,r6,4
   29624:	34000017 	ldw	r16,0(r6)
   29628:	31fffd04 	addi	r7,r6,-12
   2962c:	81c0041e 	bne	r16,r7,29640 <_malloc_r+0x1dc>
   29630:	0000fb06 	br	29a20 <_malloc_r+0x5bc>
   29634:	1801030e 	bge	r3,zero,29a44 <_malloc_r+0x5e0>
   29638:	84000317 	ldw	r16,12(r16)
   2963c:	81c0f826 	beq	r16,r7,29a20 <_malloc_r+0x5bc>
   29640:	80800117 	ldw	r2,4(r16)
   29644:	1284703a 	and	r2,r2,r10
   29648:	1447c83a 	sub	r3,r2,r17
   2964c:	48fff90e 	bge	r9,r3,29634 <__alt_data_end+0xfffe9634>
   29650:	80800317 	ldw	r2,12(r16)
   29654:	81000217 	ldw	r4,8(r16)
   29658:	89400054 	ori	r5,r17,1
   2965c:	81400115 	stw	r5,4(r16)
   29660:	20800315 	stw	r2,12(r4)
   29664:	11000215 	stw	r4,8(r2)
   29668:	8463883a 	add	r17,r16,r17
   2966c:	9c400515 	stw	r17,20(r19)
   29670:	9c400415 	stw	r17,16(r19)
   29674:	18800054 	ori	r2,r3,1
   29678:	88800115 	stw	r2,4(r17)
   2967c:	8a000315 	stw	r8,12(r17)
   29680:	8a000215 	stw	r8,8(r17)
   29684:	88e3883a 	add	r17,r17,r3
   29688:	88c00015 	stw	r3,0(r17)
   2968c:	9009883a 	mov	r4,r18
   29690:	002eeb40 	call	2eeb4 <__malloc_unlock>
   29694:	80800204 	addi	r2,r16,8
   29698:	00001b06 	br	29708 <_malloc_r+0x2a4>
   2969c:	04400404 	movi	r17,16
   296a0:	89402536 	bltu	r17,r5,29738 <_malloc_r+0x2d4>
   296a4:	002ee900 	call	2ee90 <__malloc_lock>
   296a8:	00800184 	movi	r2,6
   296ac:	01000084 	movi	r4,2
   296b0:	04c000f4 	movhi	r19,3
   296b4:	1085883a 	add	r2,r2,r2
   296b8:	9cc68204 	addi	r19,r19,6664
   296bc:	1085883a 	add	r2,r2,r2
   296c0:	9885883a 	add	r2,r19,r2
   296c4:	14000117 	ldw	r16,4(r2)
   296c8:	10fffe04 	addi	r3,r2,-8
   296cc:	80c0d926 	beq	r16,r3,29a34 <_malloc_r+0x5d0>
   296d0:	80c00117 	ldw	r3,4(r16)
   296d4:	81000317 	ldw	r4,12(r16)
   296d8:	00bfff04 	movi	r2,-4
   296dc:	1884703a 	and	r2,r3,r2
   296e0:	81400217 	ldw	r5,8(r16)
   296e4:	8085883a 	add	r2,r16,r2
   296e8:	10c00117 	ldw	r3,4(r2)
   296ec:	29000315 	stw	r4,12(r5)
   296f0:	21400215 	stw	r5,8(r4)
   296f4:	18c00054 	ori	r3,r3,1
   296f8:	10c00115 	stw	r3,4(r2)
   296fc:	9009883a 	mov	r4,r18
   29700:	002eeb40 	call	2eeb4 <__malloc_unlock>
   29704:	80800204 	addi	r2,r16,8
   29708:	dfc00a17 	ldw	ra,40(sp)
   2970c:	df000917 	ldw	fp,36(sp)
   29710:	ddc00817 	ldw	r23,32(sp)
   29714:	dd800717 	ldw	r22,28(sp)
   29718:	dd400617 	ldw	r21,24(sp)
   2971c:	dd000517 	ldw	r20,20(sp)
   29720:	dcc00417 	ldw	r19,16(sp)
   29724:	dc800317 	ldw	r18,12(sp)
   29728:	dc400217 	ldw	r17,8(sp)
   2972c:	dc000117 	ldw	r16,4(sp)
   29730:	dec00b04 	addi	sp,sp,44
   29734:	f800283a 	ret
   29738:	00800304 	movi	r2,12
   2973c:	90800015 	stw	r2,0(r18)
   29740:	0005883a 	mov	r2,zero
   29744:	003ff006 	br	29708 <__alt_data_end+0xfffe9708>
   29748:	01002004 	movi	r4,128
   2974c:	02001004 	movi	r8,64
   29750:	01c00fc4 	movi	r7,63
   29754:	003f6106 	br	294dc <__alt_data_end+0xfffe94dc>
   29758:	4009883a 	mov	r4,r8
   2975c:	003f7506 	br	29534 <__alt_data_end+0xfffe9534>
   29760:	81000317 	ldw	r4,12(r16)
   29764:	003fde06 	br	296e0 <__alt_data_end+0xfffe96e0>
   29768:	81c5883a 	add	r2,r16,r7
   2976c:	11400117 	ldw	r5,4(r2)
   29770:	9009883a 	mov	r4,r18
   29774:	29400054 	ori	r5,r5,1
   29778:	11400115 	stw	r5,4(r2)
   2977c:	002eeb40 	call	2eeb4 <__malloc_unlock>
   29780:	80800204 	addi	r2,r16,8
   29784:	003fe006 	br	29708 <__alt_data_end+0xfffe9708>
   29788:	9c000217 	ldw	r16,8(r19)
   2978c:	00bfff04 	movi	r2,-4
   29790:	85800117 	ldw	r22,4(r16)
   29794:	b0ac703a 	and	r22,r22,r2
   29798:	b4400336 	bltu	r22,r17,297a8 <_malloc_r+0x344>
   2979c:	b445c83a 	sub	r2,r22,r17
   297a0:	00c003c4 	movi	r3,15
   297a4:	18805d16 	blt	r3,r2,2991c <_malloc_r+0x4b8>
   297a8:	05c000f4 	movhi	r23,3
   297ac:	008000f4 	movhi	r2,3
   297b0:	1092d804 	addi	r2,r2,19296
   297b4:	bdcc0a04 	addi	r23,r23,12328
   297b8:	15400017 	ldw	r21,0(r2)
   297bc:	b8c00017 	ldw	r3,0(r23)
   297c0:	00bfffc4 	movi	r2,-1
   297c4:	858d883a 	add	r6,r16,r22
   297c8:	8d6b883a 	add	r21,r17,r21
   297cc:	1880ea26 	beq	r3,r2,29b78 <_malloc_r+0x714>
   297d0:	ad4403c4 	addi	r21,r21,4111
   297d4:	00bc0004 	movi	r2,-4096
   297d8:	a8aa703a 	and	r21,r21,r2
   297dc:	a80b883a 	mov	r5,r21
   297e0:	9009883a 	mov	r4,r18
   297e4:	d9800015 	stw	r6,0(sp)
   297e8:	002afc00 	call	2afc0 <_sbrk_r>
   297ec:	1029883a 	mov	r20,r2
   297f0:	00bfffc4 	movi	r2,-1
   297f4:	d9800017 	ldw	r6,0(sp)
   297f8:	a080e826 	beq	r20,r2,29b9c <_malloc_r+0x738>
   297fc:	a180a636 	bltu	r20,r6,29a98 <_malloc_r+0x634>
   29800:	070000f4 	movhi	fp,3
   29804:	e712e104 	addi	fp,fp,19332
   29808:	e0800017 	ldw	r2,0(fp)
   2980c:	a887883a 	add	r3,r21,r2
   29810:	e0c00015 	stw	r3,0(fp)
   29814:	3500e626 	beq	r6,r20,29bb0 <_malloc_r+0x74c>
   29818:	b9000017 	ldw	r4,0(r23)
   2981c:	00bfffc4 	movi	r2,-1
   29820:	2080ee26 	beq	r4,r2,29bdc <_malloc_r+0x778>
   29824:	a185c83a 	sub	r2,r20,r6
   29828:	10c5883a 	add	r2,r2,r3
   2982c:	e0800015 	stw	r2,0(fp)
   29830:	a0c001cc 	andi	r3,r20,7
   29834:	1800bc26 	beq	r3,zero,29b28 <_malloc_r+0x6c4>
   29838:	a0e9c83a 	sub	r20,r20,r3
   2983c:	00840204 	movi	r2,4104
   29840:	a5000204 	addi	r20,r20,8
   29844:	10c7c83a 	sub	r3,r2,r3
   29848:	a545883a 	add	r2,r20,r21
   2984c:	1083ffcc 	andi	r2,r2,4095
   29850:	18abc83a 	sub	r21,r3,r2
   29854:	a80b883a 	mov	r5,r21
   29858:	9009883a 	mov	r4,r18
   2985c:	002afc00 	call	2afc0 <_sbrk_r>
   29860:	00ffffc4 	movi	r3,-1
   29864:	10c0e126 	beq	r2,r3,29bec <_malloc_r+0x788>
   29868:	1505c83a 	sub	r2,r2,r20
   2986c:	1545883a 	add	r2,r2,r21
   29870:	10800054 	ori	r2,r2,1
   29874:	e0c00017 	ldw	r3,0(fp)
   29878:	9d000215 	stw	r20,8(r19)
   2987c:	a0800115 	stw	r2,4(r20)
   29880:	a8c7883a 	add	r3,r21,r3
   29884:	e0c00015 	stw	r3,0(fp)
   29888:	84c00e26 	beq	r16,r19,298c4 <_malloc_r+0x460>
   2988c:	018003c4 	movi	r6,15
   29890:	3580a72e 	bgeu	r6,r22,29b30 <_malloc_r+0x6cc>
   29894:	81400117 	ldw	r5,4(r16)
   29898:	013ffe04 	movi	r4,-8
   2989c:	b0bffd04 	addi	r2,r22,-12
   298a0:	1104703a 	and	r2,r2,r4
   298a4:	2900004c 	andi	r4,r5,1
   298a8:	2088b03a 	or	r4,r4,r2
   298ac:	81000115 	stw	r4,4(r16)
   298b0:	01400144 	movi	r5,5
   298b4:	8089883a 	add	r4,r16,r2
   298b8:	21400115 	stw	r5,4(r4)
   298bc:	21400215 	stw	r5,8(r4)
   298c0:	3080cd36 	bltu	r6,r2,29bf8 <_malloc_r+0x794>
   298c4:	008000f4 	movhi	r2,3
   298c8:	1092d704 	addi	r2,r2,19292
   298cc:	11000017 	ldw	r4,0(r2)
   298d0:	20c0012e 	bgeu	r4,r3,298d8 <_malloc_r+0x474>
   298d4:	10c00015 	stw	r3,0(r2)
   298d8:	008000f4 	movhi	r2,3
   298dc:	1092d604 	addi	r2,r2,19288
   298e0:	11000017 	ldw	r4,0(r2)
   298e4:	9c000217 	ldw	r16,8(r19)
   298e8:	20c0012e 	bgeu	r4,r3,298f0 <_malloc_r+0x48c>
   298ec:	10c00015 	stw	r3,0(r2)
   298f0:	80c00117 	ldw	r3,4(r16)
   298f4:	00bfff04 	movi	r2,-4
   298f8:	1886703a 	and	r3,r3,r2
   298fc:	1c45c83a 	sub	r2,r3,r17
   29900:	1c400236 	bltu	r3,r17,2990c <_malloc_r+0x4a8>
   29904:	00c003c4 	movi	r3,15
   29908:	18800416 	blt	r3,r2,2991c <_malloc_r+0x4b8>
   2990c:	9009883a 	mov	r4,r18
   29910:	002eeb40 	call	2eeb4 <__malloc_unlock>
   29914:	0005883a 	mov	r2,zero
   29918:	003f7b06 	br	29708 <__alt_data_end+0xfffe9708>
   2991c:	88c00054 	ori	r3,r17,1
   29920:	80c00115 	stw	r3,4(r16)
   29924:	8463883a 	add	r17,r16,r17
   29928:	10800054 	ori	r2,r2,1
   2992c:	9c400215 	stw	r17,8(r19)
   29930:	88800115 	stw	r2,4(r17)
   29934:	9009883a 	mov	r4,r18
   29938:	002eeb40 	call	2eeb4 <__malloc_unlock>
   2993c:	80800204 	addi	r2,r16,8
   29940:	003f7106 	br	29708 <__alt_data_end+0xfffe9708>
   29944:	00c00504 	movi	r3,20
   29948:	18804a2e 	bgeu	r3,r2,29a74 <_malloc_r+0x610>
   2994c:	00c01504 	movi	r3,84
   29950:	18806e36 	bltu	r3,r2,29b0c <_malloc_r+0x6a8>
   29954:	8804d33a 	srli	r2,r17,12
   29958:	12001bc4 	addi	r8,r2,111
   2995c:	11c01b84 	addi	r7,r2,110
   29960:	4209883a 	add	r4,r8,r8
   29964:	003edd06 	br	294dc <__alt_data_end+0xfffe94dc>
   29968:	3804d27a 	srli	r2,r7,9
   2996c:	00c00104 	movi	r3,4
   29970:	1880442e 	bgeu	r3,r2,29a84 <_malloc_r+0x620>
   29974:	00c00504 	movi	r3,20
   29978:	18808136 	bltu	r3,r2,29b80 <_malloc_r+0x71c>
   2997c:	11401704 	addi	r5,r2,92
   29980:	10c016c4 	addi	r3,r2,91
   29984:	294b883a 	add	r5,r5,r5
   29988:	294b883a 	add	r5,r5,r5
   2998c:	294b883a 	add	r5,r5,r5
   29990:	994b883a 	add	r5,r19,r5
   29994:	28800017 	ldw	r2,0(r5)
   29998:	018000f4 	movhi	r6,3
   2999c:	297ffe04 	addi	r5,r5,-8
   299a0:	31868204 	addi	r6,r6,6664
   299a4:	28806526 	beq	r5,r2,29b3c <_malloc_r+0x6d8>
   299a8:	01bfff04 	movi	r6,-4
   299ac:	10c00117 	ldw	r3,4(r2)
   299b0:	1986703a 	and	r3,r3,r6
   299b4:	38c0022e 	bgeu	r7,r3,299c0 <_malloc_r+0x55c>
   299b8:	10800217 	ldw	r2,8(r2)
   299bc:	28bffb1e 	bne	r5,r2,299ac <__alt_data_end+0xfffe99ac>
   299c0:	11400317 	ldw	r5,12(r2)
   299c4:	98c00117 	ldw	r3,4(r19)
   299c8:	81400315 	stw	r5,12(r16)
   299cc:	80800215 	stw	r2,8(r16)
   299d0:	2c000215 	stw	r16,8(r5)
   299d4:	14000315 	stw	r16,12(r2)
   299d8:	003ef806 	br	295bc <__alt_data_end+0xfffe95bc>
   299dc:	88c00054 	ori	r3,r17,1
   299e0:	80c00115 	stw	r3,4(r16)
   299e4:	8463883a 	add	r17,r16,r17
   299e8:	34400515 	stw	r17,20(r6)
   299ec:	34400415 	stw	r17,16(r6)
   299f0:	10c00054 	ori	r3,r2,1
   299f4:	8a000315 	stw	r8,12(r17)
   299f8:	8a000215 	stw	r8,8(r17)
   299fc:	88c00115 	stw	r3,4(r17)
   29a00:	88a3883a 	add	r17,r17,r2
   29a04:	88800015 	stw	r2,0(r17)
   29a08:	9009883a 	mov	r4,r18
   29a0c:	002eeb40 	call	2eeb4 <__malloc_unlock>
   29a10:	80800204 	addi	r2,r16,8
   29a14:	003f3c06 	br	29708 <__alt_data_end+0xfffe9708>
   29a18:	30c00117 	ldw	r3,4(r6)
   29a1c:	003ee706 	br	295bc <__alt_data_end+0xfffe95bc>
   29a20:	5ac00044 	addi	r11,r11,1
   29a24:	588000cc 	andi	r2,r11,3
   29a28:	31800204 	addi	r6,r6,8
   29a2c:	103efd1e 	bne	r2,zero,29624 <__alt_data_end+0xfffe9624>
   29a30:	00002406 	br	29ac4 <_malloc_r+0x660>
   29a34:	14000317 	ldw	r16,12(r2)
   29a38:	143f251e 	bne	r2,r16,296d0 <__alt_data_end+0xfffe96d0>
   29a3c:	21000084 	addi	r4,r4,2
   29a40:	003ebc06 	br	29534 <__alt_data_end+0xfffe9534>
   29a44:	8085883a 	add	r2,r16,r2
   29a48:	10c00117 	ldw	r3,4(r2)
   29a4c:	81000317 	ldw	r4,12(r16)
   29a50:	81400217 	ldw	r5,8(r16)
   29a54:	18c00054 	ori	r3,r3,1
   29a58:	10c00115 	stw	r3,4(r2)
   29a5c:	29000315 	stw	r4,12(r5)
   29a60:	21400215 	stw	r5,8(r4)
   29a64:	9009883a 	mov	r4,r18
   29a68:	002eeb40 	call	2eeb4 <__malloc_unlock>
   29a6c:	80800204 	addi	r2,r16,8
   29a70:	003f2506 	br	29708 <__alt_data_end+0xfffe9708>
   29a74:	12001704 	addi	r8,r2,92
   29a78:	11c016c4 	addi	r7,r2,91
   29a7c:	4209883a 	add	r4,r8,r8
   29a80:	003e9606 	br	294dc <__alt_data_end+0xfffe94dc>
   29a84:	3804d1ba 	srli	r2,r7,6
   29a88:	11400e44 	addi	r5,r2,57
   29a8c:	10c00e04 	addi	r3,r2,56
   29a90:	294b883a 	add	r5,r5,r5
   29a94:	003fbc06 	br	29988 <__alt_data_end+0xfffe9988>
   29a98:	84ff5926 	beq	r16,r19,29800 <__alt_data_end+0xfffe9800>
   29a9c:	008000f4 	movhi	r2,3
   29aa0:	10868204 	addi	r2,r2,6664
   29aa4:	14000217 	ldw	r16,8(r2)
   29aa8:	00bfff04 	movi	r2,-4
   29aac:	80c00117 	ldw	r3,4(r16)
   29ab0:	1886703a 	and	r3,r3,r2
   29ab4:	003f9106 	br	298fc <__alt_data_end+0xfffe98fc>
   29ab8:	60800217 	ldw	r2,8(r12)
   29abc:	213fffc4 	addi	r4,r4,-1
   29ac0:	1300651e 	bne	r2,r12,29c58 <_malloc_r+0x7f4>
   29ac4:	208000cc 	andi	r2,r4,3
   29ac8:	633ffe04 	addi	r12,r12,-8
   29acc:	103ffa1e 	bne	r2,zero,29ab8 <__alt_data_end+0xfffe9ab8>
   29ad0:	98800117 	ldw	r2,4(r19)
   29ad4:	0146303a 	nor	r3,zero,r5
   29ad8:	1884703a 	and	r2,r3,r2
   29adc:	98800115 	stw	r2,4(r19)
   29ae0:	294b883a 	add	r5,r5,r5
   29ae4:	117f2836 	bltu	r2,r5,29788 <__alt_data_end+0xfffe9788>
   29ae8:	283f2726 	beq	r5,zero,29788 <__alt_data_end+0xfffe9788>
   29aec:	2886703a 	and	r3,r5,r2
   29af0:	5809883a 	mov	r4,r11
   29af4:	183ec31e 	bne	r3,zero,29604 <__alt_data_end+0xfffe9604>
   29af8:	294b883a 	add	r5,r5,r5
   29afc:	2886703a 	and	r3,r5,r2
   29b00:	21000104 	addi	r4,r4,4
   29b04:	183ffc26 	beq	r3,zero,29af8 <__alt_data_end+0xfffe9af8>
   29b08:	003ebe06 	br	29604 <__alt_data_end+0xfffe9604>
   29b0c:	00c05504 	movi	r3,340
   29b10:	18801236 	bltu	r3,r2,29b5c <_malloc_r+0x6f8>
   29b14:	8804d3fa 	srli	r2,r17,15
   29b18:	12001e04 	addi	r8,r2,120
   29b1c:	11c01dc4 	addi	r7,r2,119
   29b20:	4209883a 	add	r4,r8,r8
   29b24:	003e6d06 	br	294dc <__alt_data_end+0xfffe94dc>
   29b28:	00c40004 	movi	r3,4096
   29b2c:	003f4606 	br	29848 <__alt_data_end+0xfffe9848>
   29b30:	00800044 	movi	r2,1
   29b34:	a0800115 	stw	r2,4(r20)
   29b38:	003f7406 	br	2990c <__alt_data_end+0xfffe990c>
   29b3c:	1805d0ba 	srai	r2,r3,2
   29b40:	01c00044 	movi	r7,1
   29b44:	30c00117 	ldw	r3,4(r6)
   29b48:	388e983a 	sll	r7,r7,r2
   29b4c:	2805883a 	mov	r2,r5
   29b50:	38c6b03a 	or	r3,r7,r3
   29b54:	30c00115 	stw	r3,4(r6)
   29b58:	003f9b06 	br	299c8 <__alt_data_end+0xfffe99c8>
   29b5c:	00c15504 	movi	r3,1364
   29b60:	18801a36 	bltu	r3,r2,29bcc <_malloc_r+0x768>
   29b64:	8804d4ba 	srli	r2,r17,18
   29b68:	12001f44 	addi	r8,r2,125
   29b6c:	11c01f04 	addi	r7,r2,124
   29b70:	4209883a 	add	r4,r8,r8
   29b74:	003e5906 	br	294dc <__alt_data_end+0xfffe94dc>
   29b78:	ad400404 	addi	r21,r21,16
   29b7c:	003f1706 	br	297dc <__alt_data_end+0xfffe97dc>
   29b80:	00c01504 	movi	r3,84
   29b84:	18802336 	bltu	r3,r2,29c14 <_malloc_r+0x7b0>
   29b88:	3804d33a 	srli	r2,r7,12
   29b8c:	11401bc4 	addi	r5,r2,111
   29b90:	10c01b84 	addi	r3,r2,110
   29b94:	294b883a 	add	r5,r5,r5
   29b98:	003f7b06 	br	29988 <__alt_data_end+0xfffe9988>
   29b9c:	9c000217 	ldw	r16,8(r19)
   29ba0:	00bfff04 	movi	r2,-4
   29ba4:	80c00117 	ldw	r3,4(r16)
   29ba8:	1886703a 	and	r3,r3,r2
   29bac:	003f5306 	br	298fc <__alt_data_end+0xfffe98fc>
   29bb0:	3083ffcc 	andi	r2,r6,4095
   29bb4:	103f181e 	bne	r2,zero,29818 <__alt_data_end+0xfffe9818>
   29bb8:	99000217 	ldw	r4,8(r19)
   29bbc:	b545883a 	add	r2,r22,r21
   29bc0:	10800054 	ori	r2,r2,1
   29bc4:	20800115 	stw	r2,4(r4)
   29bc8:	003f3e06 	br	298c4 <__alt_data_end+0xfffe98c4>
   29bcc:	01003f84 	movi	r4,254
   29bd0:	02001fc4 	movi	r8,127
   29bd4:	01c01f84 	movi	r7,126
   29bd8:	003e4006 	br	294dc <__alt_data_end+0xfffe94dc>
   29bdc:	008000f4 	movhi	r2,3
   29be0:	108c0a04 	addi	r2,r2,12328
   29be4:	15000015 	stw	r20,0(r2)
   29be8:	003f1106 	br	29830 <__alt_data_end+0xfffe9830>
   29bec:	00800044 	movi	r2,1
   29bf0:	002b883a 	mov	r21,zero
   29bf4:	003f1f06 	br	29874 <__alt_data_end+0xfffe9874>
   29bf8:	81400204 	addi	r5,r16,8
   29bfc:	9009883a 	mov	r4,r18
   29c00:	0028d340 	call	28d34 <_free_r>
   29c04:	008000f4 	movhi	r2,3
   29c08:	1092e104 	addi	r2,r2,19332
   29c0c:	10c00017 	ldw	r3,0(r2)
   29c10:	003f2c06 	br	298c4 <__alt_data_end+0xfffe98c4>
   29c14:	00c05504 	movi	r3,340
   29c18:	18800536 	bltu	r3,r2,29c30 <_malloc_r+0x7cc>
   29c1c:	3804d3fa 	srli	r2,r7,15
   29c20:	11401e04 	addi	r5,r2,120
   29c24:	10c01dc4 	addi	r3,r2,119
   29c28:	294b883a 	add	r5,r5,r5
   29c2c:	003f5606 	br	29988 <__alt_data_end+0xfffe9988>
   29c30:	00c15504 	movi	r3,1364
   29c34:	18800536 	bltu	r3,r2,29c4c <_malloc_r+0x7e8>
   29c38:	3804d4ba 	srli	r2,r7,18
   29c3c:	11401f44 	addi	r5,r2,125
   29c40:	10c01f04 	addi	r3,r2,124
   29c44:	294b883a 	add	r5,r5,r5
   29c48:	003f4f06 	br	29988 <__alt_data_end+0xfffe9988>
   29c4c:	01403f84 	movi	r5,254
   29c50:	00c01f84 	movi	r3,126
   29c54:	003f4c06 	br	29988 <__alt_data_end+0xfffe9988>
   29c58:	98800117 	ldw	r2,4(r19)
   29c5c:	003fa006 	br	29ae0 <__alt_data_end+0xfffe9ae0>
   29c60:	8808d0fa 	srli	r4,r17,3
   29c64:	20800044 	addi	r2,r4,1
   29c68:	1085883a 	add	r2,r2,r2
   29c6c:	003e9006 	br	296b0 <__alt_data_end+0xfffe96b0>

00029c70 <memchr>:
   29c70:	208000cc 	andi	r2,r4,3
   29c74:	280f883a 	mov	r7,r5
   29c78:	10003426 	beq	r2,zero,29d4c <memchr+0xdc>
   29c7c:	30bfffc4 	addi	r2,r6,-1
   29c80:	30001a26 	beq	r6,zero,29cec <memchr+0x7c>
   29c84:	20c00003 	ldbu	r3,0(r4)
   29c88:	29803fcc 	andi	r6,r5,255
   29c8c:	30c0051e 	bne	r6,r3,29ca4 <memchr+0x34>
   29c90:	00001806 	br	29cf4 <memchr+0x84>
   29c94:	10001526 	beq	r2,zero,29cec <memchr+0x7c>
   29c98:	20c00003 	ldbu	r3,0(r4)
   29c9c:	10bfffc4 	addi	r2,r2,-1
   29ca0:	30c01426 	beq	r6,r3,29cf4 <memchr+0x84>
   29ca4:	21000044 	addi	r4,r4,1
   29ca8:	20c000cc 	andi	r3,r4,3
   29cac:	183ff91e 	bne	r3,zero,29c94 <__alt_data_end+0xfffe9c94>
   29cb0:	020000c4 	movi	r8,3
   29cb4:	40801136 	bltu	r8,r2,29cfc <memchr+0x8c>
   29cb8:	10000c26 	beq	r2,zero,29cec <memchr+0x7c>
   29cbc:	20c00003 	ldbu	r3,0(r4)
   29cc0:	29403fcc 	andi	r5,r5,255
   29cc4:	28c00b26 	beq	r5,r3,29cf4 <memchr+0x84>
   29cc8:	20c00044 	addi	r3,r4,1
   29ccc:	39803fcc 	andi	r6,r7,255
   29cd0:	2089883a 	add	r4,r4,r2
   29cd4:	00000306 	br	29ce4 <memchr+0x74>
   29cd8:	18c00044 	addi	r3,r3,1
   29cdc:	197fffc3 	ldbu	r5,-1(r3)
   29ce0:	31400526 	beq	r6,r5,29cf8 <memchr+0x88>
   29ce4:	1805883a 	mov	r2,r3
   29ce8:	20fffb1e 	bne	r4,r3,29cd8 <__alt_data_end+0xfffe9cd8>
   29cec:	0005883a 	mov	r2,zero
   29cf0:	f800283a 	ret
   29cf4:	2005883a 	mov	r2,r4
   29cf8:	f800283a 	ret
   29cfc:	28c03fcc 	andi	r3,r5,255
   29d00:	1812923a 	slli	r9,r3,8
   29d04:	02ffbff4 	movhi	r11,65279
   29d08:	02a02074 	movhi	r10,32897
   29d0c:	48d2b03a 	or	r9,r9,r3
   29d10:	4806943a 	slli	r3,r9,16
   29d14:	5affbfc4 	addi	r11,r11,-257
   29d18:	52a02004 	addi	r10,r10,-32640
   29d1c:	48d2b03a 	or	r9,r9,r3
   29d20:	20c00017 	ldw	r3,0(r4)
   29d24:	48c6f03a 	xor	r3,r9,r3
   29d28:	1acd883a 	add	r6,r3,r11
   29d2c:	00c6303a 	nor	r3,zero,r3
   29d30:	30c6703a 	and	r3,r6,r3
   29d34:	1a86703a 	and	r3,r3,r10
   29d38:	183fe01e 	bne	r3,zero,29cbc <__alt_data_end+0xfffe9cbc>
   29d3c:	10bfff04 	addi	r2,r2,-4
   29d40:	21000104 	addi	r4,r4,4
   29d44:	40bff636 	bltu	r8,r2,29d20 <__alt_data_end+0xfffe9d20>
   29d48:	003fdb06 	br	29cb8 <__alt_data_end+0xfffe9cb8>
   29d4c:	3005883a 	mov	r2,r6
   29d50:	003fd706 	br	29cb0 <__alt_data_end+0xfffe9cb0>

00029d54 <memcpy>:
   29d54:	defffd04 	addi	sp,sp,-12
   29d58:	dfc00215 	stw	ra,8(sp)
   29d5c:	dc400115 	stw	r17,4(sp)
   29d60:	dc000015 	stw	r16,0(sp)
   29d64:	00c003c4 	movi	r3,15
   29d68:	2005883a 	mov	r2,r4
   29d6c:	1980452e 	bgeu	r3,r6,29e84 <memcpy+0x130>
   29d70:	2906b03a 	or	r3,r5,r4
   29d74:	18c000cc 	andi	r3,r3,3
   29d78:	1800441e 	bne	r3,zero,29e8c <memcpy+0x138>
   29d7c:	347ffc04 	addi	r17,r6,-16
   29d80:	8822d13a 	srli	r17,r17,4
   29d84:	28c00104 	addi	r3,r5,4
   29d88:	23400104 	addi	r13,r4,4
   29d8c:	8820913a 	slli	r16,r17,4
   29d90:	2b000204 	addi	r12,r5,8
   29d94:	22c00204 	addi	r11,r4,8
   29d98:	84000504 	addi	r16,r16,20
   29d9c:	2a800304 	addi	r10,r5,12
   29da0:	22400304 	addi	r9,r4,12
   29da4:	2c21883a 	add	r16,r5,r16
   29da8:	2811883a 	mov	r8,r5
   29dac:	200f883a 	mov	r7,r4
   29db0:	41000017 	ldw	r4,0(r8)
   29db4:	1fc00017 	ldw	ra,0(r3)
   29db8:	63c00017 	ldw	r15,0(r12)
   29dbc:	39000015 	stw	r4,0(r7)
   29dc0:	53800017 	ldw	r14,0(r10)
   29dc4:	6fc00015 	stw	ra,0(r13)
   29dc8:	5bc00015 	stw	r15,0(r11)
   29dcc:	4b800015 	stw	r14,0(r9)
   29dd0:	18c00404 	addi	r3,r3,16
   29dd4:	39c00404 	addi	r7,r7,16
   29dd8:	42000404 	addi	r8,r8,16
   29ddc:	6b400404 	addi	r13,r13,16
   29de0:	63000404 	addi	r12,r12,16
   29de4:	5ac00404 	addi	r11,r11,16
   29de8:	52800404 	addi	r10,r10,16
   29dec:	4a400404 	addi	r9,r9,16
   29df0:	1c3fef1e 	bne	r3,r16,29db0 <__alt_data_end+0xfffe9db0>
   29df4:	89c00044 	addi	r7,r17,1
   29df8:	380e913a 	slli	r7,r7,4
   29dfc:	310003cc 	andi	r4,r6,15
   29e00:	02c000c4 	movi	r11,3
   29e04:	11c7883a 	add	r3,r2,r7
   29e08:	29cb883a 	add	r5,r5,r7
   29e0c:	5900212e 	bgeu	r11,r4,29e94 <memcpy+0x140>
   29e10:	1813883a 	mov	r9,r3
   29e14:	2811883a 	mov	r8,r5
   29e18:	200f883a 	mov	r7,r4
   29e1c:	42800017 	ldw	r10,0(r8)
   29e20:	4a400104 	addi	r9,r9,4
   29e24:	39ffff04 	addi	r7,r7,-4
   29e28:	4abfff15 	stw	r10,-4(r9)
   29e2c:	42000104 	addi	r8,r8,4
   29e30:	59fffa36 	bltu	r11,r7,29e1c <__alt_data_end+0xfffe9e1c>
   29e34:	213fff04 	addi	r4,r4,-4
   29e38:	2008d0ba 	srli	r4,r4,2
   29e3c:	318000cc 	andi	r6,r6,3
   29e40:	21000044 	addi	r4,r4,1
   29e44:	2109883a 	add	r4,r4,r4
   29e48:	2109883a 	add	r4,r4,r4
   29e4c:	1907883a 	add	r3,r3,r4
   29e50:	290b883a 	add	r5,r5,r4
   29e54:	30000626 	beq	r6,zero,29e70 <memcpy+0x11c>
   29e58:	198d883a 	add	r6,r3,r6
   29e5c:	29c00003 	ldbu	r7,0(r5)
   29e60:	18c00044 	addi	r3,r3,1
   29e64:	29400044 	addi	r5,r5,1
   29e68:	19ffffc5 	stb	r7,-1(r3)
   29e6c:	19bffb1e 	bne	r3,r6,29e5c <__alt_data_end+0xfffe9e5c>
   29e70:	dfc00217 	ldw	ra,8(sp)
   29e74:	dc400117 	ldw	r17,4(sp)
   29e78:	dc000017 	ldw	r16,0(sp)
   29e7c:	dec00304 	addi	sp,sp,12
   29e80:	f800283a 	ret
   29e84:	2007883a 	mov	r3,r4
   29e88:	003ff206 	br	29e54 <__alt_data_end+0xfffe9e54>
   29e8c:	2007883a 	mov	r3,r4
   29e90:	003ff106 	br	29e58 <__alt_data_end+0xfffe9e58>
   29e94:	200d883a 	mov	r6,r4
   29e98:	003fee06 	br	29e54 <__alt_data_end+0xfffe9e54>

00029e9c <memset>:
   29e9c:	20c000cc 	andi	r3,r4,3
   29ea0:	2005883a 	mov	r2,r4
   29ea4:	18004426 	beq	r3,zero,29fb8 <memset+0x11c>
   29ea8:	31ffffc4 	addi	r7,r6,-1
   29eac:	30004026 	beq	r6,zero,29fb0 <memset+0x114>
   29eb0:	2813883a 	mov	r9,r5
   29eb4:	200d883a 	mov	r6,r4
   29eb8:	2007883a 	mov	r3,r4
   29ebc:	00000406 	br	29ed0 <memset+0x34>
   29ec0:	3a3fffc4 	addi	r8,r7,-1
   29ec4:	31800044 	addi	r6,r6,1
   29ec8:	38003926 	beq	r7,zero,29fb0 <memset+0x114>
   29ecc:	400f883a 	mov	r7,r8
   29ed0:	18c00044 	addi	r3,r3,1
   29ed4:	32400005 	stb	r9,0(r6)
   29ed8:	1a0000cc 	andi	r8,r3,3
   29edc:	403ff81e 	bne	r8,zero,29ec0 <__alt_data_end+0xfffe9ec0>
   29ee0:	010000c4 	movi	r4,3
   29ee4:	21c02d2e 	bgeu	r4,r7,29f9c <memset+0x100>
   29ee8:	29003fcc 	andi	r4,r5,255
   29eec:	200c923a 	slli	r6,r4,8
   29ef0:	3108b03a 	or	r4,r6,r4
   29ef4:	200c943a 	slli	r6,r4,16
   29ef8:	218cb03a 	or	r6,r4,r6
   29efc:	010003c4 	movi	r4,15
   29f00:	21c0182e 	bgeu	r4,r7,29f64 <memset+0xc8>
   29f04:	3b3ffc04 	addi	r12,r7,-16
   29f08:	6018d13a 	srli	r12,r12,4
   29f0c:	1a000104 	addi	r8,r3,4
   29f10:	1ac00204 	addi	r11,r3,8
   29f14:	6008913a 	slli	r4,r12,4
   29f18:	1a800304 	addi	r10,r3,12
   29f1c:	1813883a 	mov	r9,r3
   29f20:	21000504 	addi	r4,r4,20
   29f24:	1909883a 	add	r4,r3,r4
   29f28:	49800015 	stw	r6,0(r9)
   29f2c:	41800015 	stw	r6,0(r8)
   29f30:	59800015 	stw	r6,0(r11)
   29f34:	51800015 	stw	r6,0(r10)
   29f38:	42000404 	addi	r8,r8,16
   29f3c:	4a400404 	addi	r9,r9,16
   29f40:	5ac00404 	addi	r11,r11,16
   29f44:	52800404 	addi	r10,r10,16
   29f48:	413ff71e 	bne	r8,r4,29f28 <__alt_data_end+0xfffe9f28>
   29f4c:	63000044 	addi	r12,r12,1
   29f50:	6018913a 	slli	r12,r12,4
   29f54:	39c003cc 	andi	r7,r7,15
   29f58:	010000c4 	movi	r4,3
   29f5c:	1b07883a 	add	r3,r3,r12
   29f60:	21c00e2e 	bgeu	r4,r7,29f9c <memset+0x100>
   29f64:	1813883a 	mov	r9,r3
   29f68:	3811883a 	mov	r8,r7
   29f6c:	010000c4 	movi	r4,3
   29f70:	49800015 	stw	r6,0(r9)
   29f74:	423fff04 	addi	r8,r8,-4
   29f78:	4a400104 	addi	r9,r9,4
   29f7c:	223ffc36 	bltu	r4,r8,29f70 <__alt_data_end+0xfffe9f70>
   29f80:	393fff04 	addi	r4,r7,-4
   29f84:	2008d0ba 	srli	r4,r4,2
   29f88:	39c000cc 	andi	r7,r7,3
   29f8c:	21000044 	addi	r4,r4,1
   29f90:	2109883a 	add	r4,r4,r4
   29f94:	2109883a 	add	r4,r4,r4
   29f98:	1907883a 	add	r3,r3,r4
   29f9c:	38000526 	beq	r7,zero,29fb4 <memset+0x118>
   29fa0:	19cf883a 	add	r7,r3,r7
   29fa4:	19400005 	stb	r5,0(r3)
   29fa8:	18c00044 	addi	r3,r3,1
   29fac:	38fffd1e 	bne	r7,r3,29fa4 <__alt_data_end+0xfffe9fa4>
   29fb0:	f800283a 	ret
   29fb4:	f800283a 	ret
   29fb8:	2007883a 	mov	r3,r4
   29fbc:	300f883a 	mov	r7,r6
   29fc0:	003fc706 	br	29ee0 <__alt_data_end+0xfffe9ee0>

00029fc4 <_Balloc>:
   29fc4:	20801317 	ldw	r2,76(r4)
   29fc8:	defffc04 	addi	sp,sp,-16
   29fcc:	dc400115 	stw	r17,4(sp)
   29fd0:	dc000015 	stw	r16,0(sp)
   29fd4:	dfc00315 	stw	ra,12(sp)
   29fd8:	dc800215 	stw	r18,8(sp)
   29fdc:	2023883a 	mov	r17,r4
   29fe0:	2821883a 	mov	r16,r5
   29fe4:	10000f26 	beq	r2,zero,2a024 <_Balloc+0x60>
   29fe8:	8407883a 	add	r3,r16,r16
   29fec:	18c7883a 	add	r3,r3,r3
   29ff0:	10c7883a 	add	r3,r2,r3
   29ff4:	18800017 	ldw	r2,0(r3)
   29ff8:	10001126 	beq	r2,zero,2a040 <_Balloc+0x7c>
   29ffc:	11000017 	ldw	r4,0(r2)
   2a000:	19000015 	stw	r4,0(r3)
   2a004:	10000415 	stw	zero,16(r2)
   2a008:	10000315 	stw	zero,12(r2)
   2a00c:	dfc00317 	ldw	ra,12(sp)
   2a010:	dc800217 	ldw	r18,8(sp)
   2a014:	dc400117 	ldw	r17,4(sp)
   2a018:	dc000017 	ldw	r16,0(sp)
   2a01c:	dec00404 	addi	sp,sp,16
   2a020:	f800283a 	ret
   2a024:	01800844 	movi	r6,33
   2a028:	01400104 	movi	r5,4
   2a02c:	002c9c00 	call	2c9c0 <_calloc_r>
   2a030:	88801315 	stw	r2,76(r17)
   2a034:	103fec1e 	bne	r2,zero,29fe8 <__alt_data_end+0xfffe9fe8>
   2a038:	0005883a 	mov	r2,zero
   2a03c:	003ff306 	br	2a00c <__alt_data_end+0xfffea00c>
   2a040:	01400044 	movi	r5,1
   2a044:	2c24983a 	sll	r18,r5,r16
   2a048:	8809883a 	mov	r4,r17
   2a04c:	91800144 	addi	r6,r18,5
   2a050:	318d883a 	add	r6,r6,r6
   2a054:	318d883a 	add	r6,r6,r6
   2a058:	002c9c00 	call	2c9c0 <_calloc_r>
   2a05c:	103ff626 	beq	r2,zero,2a038 <__alt_data_end+0xfffea038>
   2a060:	14000115 	stw	r16,4(r2)
   2a064:	14800215 	stw	r18,8(r2)
   2a068:	003fe606 	br	2a004 <__alt_data_end+0xfffea004>

0002a06c <_Bfree>:
   2a06c:	28000826 	beq	r5,zero,2a090 <_Bfree+0x24>
   2a070:	28c00117 	ldw	r3,4(r5)
   2a074:	20801317 	ldw	r2,76(r4)
   2a078:	18c7883a 	add	r3,r3,r3
   2a07c:	18c7883a 	add	r3,r3,r3
   2a080:	10c5883a 	add	r2,r2,r3
   2a084:	10c00017 	ldw	r3,0(r2)
   2a088:	28c00015 	stw	r3,0(r5)
   2a08c:	11400015 	stw	r5,0(r2)
   2a090:	f800283a 	ret

0002a094 <__multadd>:
   2a094:	defffa04 	addi	sp,sp,-24
   2a098:	dc800315 	stw	r18,12(sp)
   2a09c:	dc400215 	stw	r17,8(sp)
   2a0a0:	dc000115 	stw	r16,4(sp)
   2a0a4:	2823883a 	mov	r17,r5
   2a0a8:	2c000417 	ldw	r16,16(r5)
   2a0ac:	dfc00515 	stw	ra,20(sp)
   2a0b0:	dcc00415 	stw	r19,16(sp)
   2a0b4:	2025883a 	mov	r18,r4
   2a0b8:	29400504 	addi	r5,r5,20
   2a0bc:	0011883a 	mov	r8,zero
   2a0c0:	28c00017 	ldw	r3,0(r5)
   2a0c4:	29400104 	addi	r5,r5,4
   2a0c8:	42000044 	addi	r8,r8,1
   2a0cc:	18bfffcc 	andi	r2,r3,65535
   2a0d0:	1185383a 	mul	r2,r2,r6
   2a0d4:	1806d43a 	srli	r3,r3,16
   2a0d8:	11cf883a 	add	r7,r2,r7
   2a0dc:	3808d43a 	srli	r4,r7,16
   2a0e0:	1987383a 	mul	r3,r3,r6
   2a0e4:	38bfffcc 	andi	r2,r7,65535
   2a0e8:	1907883a 	add	r3,r3,r4
   2a0ec:	1808943a 	slli	r4,r3,16
   2a0f0:	180ed43a 	srli	r7,r3,16
   2a0f4:	2085883a 	add	r2,r4,r2
   2a0f8:	28bfff15 	stw	r2,-4(r5)
   2a0fc:	443ff016 	blt	r8,r16,2a0c0 <__alt_data_end+0xfffea0c0>
   2a100:	38000926 	beq	r7,zero,2a128 <__multadd+0x94>
   2a104:	88800217 	ldw	r2,8(r17)
   2a108:	80800f0e 	bge	r16,r2,2a148 <__multadd+0xb4>
   2a10c:	80800144 	addi	r2,r16,5
   2a110:	1085883a 	add	r2,r2,r2
   2a114:	1085883a 	add	r2,r2,r2
   2a118:	8885883a 	add	r2,r17,r2
   2a11c:	11c00015 	stw	r7,0(r2)
   2a120:	84000044 	addi	r16,r16,1
   2a124:	8c000415 	stw	r16,16(r17)
   2a128:	8805883a 	mov	r2,r17
   2a12c:	dfc00517 	ldw	ra,20(sp)
   2a130:	dcc00417 	ldw	r19,16(sp)
   2a134:	dc800317 	ldw	r18,12(sp)
   2a138:	dc400217 	ldw	r17,8(sp)
   2a13c:	dc000117 	ldw	r16,4(sp)
   2a140:	dec00604 	addi	sp,sp,24
   2a144:	f800283a 	ret
   2a148:	89400117 	ldw	r5,4(r17)
   2a14c:	9009883a 	mov	r4,r18
   2a150:	d9c00015 	stw	r7,0(sp)
   2a154:	29400044 	addi	r5,r5,1
   2a158:	0029fc40 	call	29fc4 <_Balloc>
   2a15c:	89800417 	ldw	r6,16(r17)
   2a160:	89400304 	addi	r5,r17,12
   2a164:	11000304 	addi	r4,r2,12
   2a168:	31800084 	addi	r6,r6,2
   2a16c:	318d883a 	add	r6,r6,r6
   2a170:	318d883a 	add	r6,r6,r6
   2a174:	1027883a 	mov	r19,r2
   2a178:	0029d540 	call	29d54 <memcpy>
   2a17c:	d9c00017 	ldw	r7,0(sp)
   2a180:	88000a26 	beq	r17,zero,2a1ac <__multadd+0x118>
   2a184:	88c00117 	ldw	r3,4(r17)
   2a188:	90801317 	ldw	r2,76(r18)
   2a18c:	18c7883a 	add	r3,r3,r3
   2a190:	18c7883a 	add	r3,r3,r3
   2a194:	10c5883a 	add	r2,r2,r3
   2a198:	10c00017 	ldw	r3,0(r2)
   2a19c:	88c00015 	stw	r3,0(r17)
   2a1a0:	14400015 	stw	r17,0(r2)
   2a1a4:	9823883a 	mov	r17,r19
   2a1a8:	003fd806 	br	2a10c <__alt_data_end+0xfffea10c>
   2a1ac:	9823883a 	mov	r17,r19
   2a1b0:	003fd606 	br	2a10c <__alt_data_end+0xfffea10c>

0002a1b4 <__s2b>:
   2a1b4:	defff904 	addi	sp,sp,-28
   2a1b8:	dc400115 	stw	r17,4(sp)
   2a1bc:	dc000015 	stw	r16,0(sp)
   2a1c0:	2023883a 	mov	r17,r4
   2a1c4:	2821883a 	mov	r16,r5
   2a1c8:	39000204 	addi	r4,r7,8
   2a1cc:	01400244 	movi	r5,9
   2a1d0:	dcc00315 	stw	r19,12(sp)
   2a1d4:	dc800215 	stw	r18,8(sp)
   2a1d8:	dfc00615 	stw	ra,24(sp)
   2a1dc:	dd400515 	stw	r21,20(sp)
   2a1e0:	dd000415 	stw	r20,16(sp)
   2a1e4:	3825883a 	mov	r18,r7
   2a1e8:	3027883a 	mov	r19,r6
   2a1ec:	002212c0 	call	2212c <__divsi3>
   2a1f0:	00c00044 	movi	r3,1
   2a1f4:	000b883a 	mov	r5,zero
   2a1f8:	1880030e 	bge	r3,r2,2a208 <__s2b+0x54>
   2a1fc:	18c7883a 	add	r3,r3,r3
   2a200:	29400044 	addi	r5,r5,1
   2a204:	18bffd16 	blt	r3,r2,2a1fc <__alt_data_end+0xfffea1fc>
   2a208:	8809883a 	mov	r4,r17
   2a20c:	0029fc40 	call	29fc4 <_Balloc>
   2a210:	d8c00717 	ldw	r3,28(sp)
   2a214:	10c00515 	stw	r3,20(r2)
   2a218:	00c00044 	movi	r3,1
   2a21c:	10c00415 	stw	r3,16(r2)
   2a220:	00c00244 	movi	r3,9
   2a224:	1cc0210e 	bge	r3,r19,2a2ac <__s2b+0xf8>
   2a228:	80eb883a 	add	r21,r16,r3
   2a22c:	a829883a 	mov	r20,r21
   2a230:	84e1883a 	add	r16,r16,r19
   2a234:	a1c00007 	ldb	r7,0(r20)
   2a238:	01800284 	movi	r6,10
   2a23c:	a5000044 	addi	r20,r20,1
   2a240:	100b883a 	mov	r5,r2
   2a244:	39fff404 	addi	r7,r7,-48
   2a248:	8809883a 	mov	r4,r17
   2a24c:	002a0940 	call	2a094 <__multadd>
   2a250:	a43ff81e 	bne	r20,r16,2a234 <__alt_data_end+0xfffea234>
   2a254:	ace1883a 	add	r16,r21,r19
   2a258:	843ffe04 	addi	r16,r16,-8
   2a25c:	9c800a0e 	bge	r19,r18,2a288 <__s2b+0xd4>
   2a260:	94e5c83a 	sub	r18,r18,r19
   2a264:	84a5883a 	add	r18,r16,r18
   2a268:	81c00007 	ldb	r7,0(r16)
   2a26c:	01800284 	movi	r6,10
   2a270:	84000044 	addi	r16,r16,1
   2a274:	100b883a 	mov	r5,r2
   2a278:	39fff404 	addi	r7,r7,-48
   2a27c:	8809883a 	mov	r4,r17
   2a280:	002a0940 	call	2a094 <__multadd>
   2a284:	84bff81e 	bne	r16,r18,2a268 <__alt_data_end+0xfffea268>
   2a288:	dfc00617 	ldw	ra,24(sp)
   2a28c:	dd400517 	ldw	r21,20(sp)
   2a290:	dd000417 	ldw	r20,16(sp)
   2a294:	dcc00317 	ldw	r19,12(sp)
   2a298:	dc800217 	ldw	r18,8(sp)
   2a29c:	dc400117 	ldw	r17,4(sp)
   2a2a0:	dc000017 	ldw	r16,0(sp)
   2a2a4:	dec00704 	addi	sp,sp,28
   2a2a8:	f800283a 	ret
   2a2ac:	84000284 	addi	r16,r16,10
   2a2b0:	1827883a 	mov	r19,r3
   2a2b4:	003fe906 	br	2a25c <__alt_data_end+0xfffea25c>

0002a2b8 <__hi0bits>:
   2a2b8:	20bfffec 	andhi	r2,r4,65535
   2a2bc:	1000141e 	bne	r2,zero,2a310 <__hi0bits+0x58>
   2a2c0:	2008943a 	slli	r4,r4,16
   2a2c4:	00800404 	movi	r2,16
   2a2c8:	20ffc02c 	andhi	r3,r4,65280
   2a2cc:	1800021e 	bne	r3,zero,2a2d8 <__hi0bits+0x20>
   2a2d0:	2008923a 	slli	r4,r4,8
   2a2d4:	10800204 	addi	r2,r2,8
   2a2d8:	20fc002c 	andhi	r3,r4,61440
   2a2dc:	1800021e 	bne	r3,zero,2a2e8 <__hi0bits+0x30>
   2a2e0:	2008913a 	slli	r4,r4,4
   2a2e4:	10800104 	addi	r2,r2,4
   2a2e8:	20f0002c 	andhi	r3,r4,49152
   2a2ec:	1800031e 	bne	r3,zero,2a2fc <__hi0bits+0x44>
   2a2f0:	2109883a 	add	r4,r4,r4
   2a2f4:	10800084 	addi	r2,r2,2
   2a2f8:	2109883a 	add	r4,r4,r4
   2a2fc:	20000316 	blt	r4,zero,2a30c <__hi0bits+0x54>
   2a300:	2110002c 	andhi	r4,r4,16384
   2a304:	2000041e 	bne	r4,zero,2a318 <__hi0bits+0x60>
   2a308:	00800804 	movi	r2,32
   2a30c:	f800283a 	ret
   2a310:	0005883a 	mov	r2,zero
   2a314:	003fec06 	br	2a2c8 <__alt_data_end+0xfffea2c8>
   2a318:	10800044 	addi	r2,r2,1
   2a31c:	f800283a 	ret

0002a320 <__lo0bits>:
   2a320:	20c00017 	ldw	r3,0(r4)
   2a324:	188001cc 	andi	r2,r3,7
   2a328:	10000826 	beq	r2,zero,2a34c <__lo0bits+0x2c>
   2a32c:	1880004c 	andi	r2,r3,1
   2a330:	1000211e 	bne	r2,zero,2a3b8 <__lo0bits+0x98>
   2a334:	1880008c 	andi	r2,r3,2
   2a338:	1000211e 	bne	r2,zero,2a3c0 <__lo0bits+0xa0>
   2a33c:	1806d0ba 	srli	r3,r3,2
   2a340:	00800084 	movi	r2,2
   2a344:	20c00015 	stw	r3,0(r4)
   2a348:	f800283a 	ret
   2a34c:	18bfffcc 	andi	r2,r3,65535
   2a350:	10001326 	beq	r2,zero,2a3a0 <__lo0bits+0x80>
   2a354:	0005883a 	mov	r2,zero
   2a358:	19403fcc 	andi	r5,r3,255
   2a35c:	2800021e 	bne	r5,zero,2a368 <__lo0bits+0x48>
   2a360:	1806d23a 	srli	r3,r3,8
   2a364:	10800204 	addi	r2,r2,8
   2a368:	194003cc 	andi	r5,r3,15
   2a36c:	2800021e 	bne	r5,zero,2a378 <__lo0bits+0x58>
   2a370:	1806d13a 	srli	r3,r3,4
   2a374:	10800104 	addi	r2,r2,4
   2a378:	194000cc 	andi	r5,r3,3
   2a37c:	2800021e 	bne	r5,zero,2a388 <__lo0bits+0x68>
   2a380:	1806d0ba 	srli	r3,r3,2
   2a384:	10800084 	addi	r2,r2,2
   2a388:	1940004c 	andi	r5,r3,1
   2a38c:	2800081e 	bne	r5,zero,2a3b0 <__lo0bits+0x90>
   2a390:	1806d07a 	srli	r3,r3,1
   2a394:	1800051e 	bne	r3,zero,2a3ac <__lo0bits+0x8c>
   2a398:	00800804 	movi	r2,32
   2a39c:	f800283a 	ret
   2a3a0:	1806d43a 	srli	r3,r3,16
   2a3a4:	00800404 	movi	r2,16
   2a3a8:	003feb06 	br	2a358 <__alt_data_end+0xfffea358>
   2a3ac:	10800044 	addi	r2,r2,1
   2a3b0:	20c00015 	stw	r3,0(r4)
   2a3b4:	f800283a 	ret
   2a3b8:	0005883a 	mov	r2,zero
   2a3bc:	f800283a 	ret
   2a3c0:	1806d07a 	srli	r3,r3,1
   2a3c4:	00800044 	movi	r2,1
   2a3c8:	20c00015 	stw	r3,0(r4)
   2a3cc:	f800283a 	ret

0002a3d0 <__i2b>:
   2a3d0:	defffd04 	addi	sp,sp,-12
   2a3d4:	dc000015 	stw	r16,0(sp)
   2a3d8:	04000044 	movi	r16,1
   2a3dc:	dc400115 	stw	r17,4(sp)
   2a3e0:	2823883a 	mov	r17,r5
   2a3e4:	800b883a 	mov	r5,r16
   2a3e8:	dfc00215 	stw	ra,8(sp)
   2a3ec:	0029fc40 	call	29fc4 <_Balloc>
   2a3f0:	14400515 	stw	r17,20(r2)
   2a3f4:	14000415 	stw	r16,16(r2)
   2a3f8:	dfc00217 	ldw	ra,8(sp)
   2a3fc:	dc400117 	ldw	r17,4(sp)
   2a400:	dc000017 	ldw	r16,0(sp)
   2a404:	dec00304 	addi	sp,sp,12
   2a408:	f800283a 	ret

0002a40c <__multiply>:
   2a40c:	defffa04 	addi	sp,sp,-24
   2a410:	dcc00315 	stw	r19,12(sp)
   2a414:	dc800215 	stw	r18,8(sp)
   2a418:	34c00417 	ldw	r19,16(r6)
   2a41c:	2c800417 	ldw	r18,16(r5)
   2a420:	dd000415 	stw	r20,16(sp)
   2a424:	dc400115 	stw	r17,4(sp)
   2a428:	dfc00515 	stw	ra,20(sp)
   2a42c:	dc000015 	stw	r16,0(sp)
   2a430:	2829883a 	mov	r20,r5
   2a434:	3023883a 	mov	r17,r6
   2a438:	94c0050e 	bge	r18,r19,2a450 <__multiply+0x44>
   2a43c:	9007883a 	mov	r3,r18
   2a440:	3029883a 	mov	r20,r6
   2a444:	9825883a 	mov	r18,r19
   2a448:	2823883a 	mov	r17,r5
   2a44c:	1827883a 	mov	r19,r3
   2a450:	a0800217 	ldw	r2,8(r20)
   2a454:	94e1883a 	add	r16,r18,r19
   2a458:	a1400117 	ldw	r5,4(r20)
   2a45c:	1400010e 	bge	r2,r16,2a464 <__multiply+0x58>
   2a460:	29400044 	addi	r5,r5,1
   2a464:	0029fc40 	call	29fc4 <_Balloc>
   2a468:	8415883a 	add	r10,r16,r16
   2a46c:	12c00504 	addi	r11,r2,20
   2a470:	5295883a 	add	r10,r10,r10
   2a474:	5a95883a 	add	r10,r11,r10
   2a478:	5807883a 	mov	r3,r11
   2a47c:	5a80032e 	bgeu	r11,r10,2a48c <__multiply+0x80>
   2a480:	18000015 	stw	zero,0(r3)
   2a484:	18c00104 	addi	r3,r3,4
   2a488:	1abffd36 	bltu	r3,r10,2a480 <__alt_data_end+0xfffea480>
   2a48c:	9ce7883a 	add	r19,r19,r19
   2a490:	94a5883a 	add	r18,r18,r18
   2a494:	89800504 	addi	r6,r17,20
   2a498:	9ce7883a 	add	r19,r19,r19
   2a49c:	a3400504 	addi	r13,r20,20
   2a4a0:	94a5883a 	add	r18,r18,r18
   2a4a4:	34d9883a 	add	r12,r6,r19
   2a4a8:	6c93883a 	add	r9,r13,r18
   2a4ac:	3300422e 	bgeu	r6,r12,2a5b8 <__multiply+0x1ac>
   2a4b0:	37c00017 	ldw	ra,0(r6)
   2a4b4:	fbffffcc 	andi	r15,ra,65535
   2a4b8:	78001b26 	beq	r15,zero,2a528 <__multiply+0x11c>
   2a4bc:	5811883a 	mov	r8,r11
   2a4c0:	681d883a 	mov	r14,r13
   2a4c4:	000f883a 	mov	r7,zero
   2a4c8:	71000017 	ldw	r4,0(r14)
   2a4cc:	40c00017 	ldw	r3,0(r8)
   2a4d0:	73800104 	addi	r14,r14,4
   2a4d4:	217fffcc 	andi	r5,r4,65535
   2a4d8:	2bcb383a 	mul	r5,r5,r15
   2a4dc:	2008d43a 	srli	r4,r4,16
   2a4e0:	1c7fffcc 	andi	r17,r3,65535
   2a4e4:	2c4b883a 	add	r5,r5,r17
   2a4e8:	29cb883a 	add	r5,r5,r7
   2a4ec:	23c9383a 	mul	r4,r4,r15
   2a4f0:	1806d43a 	srli	r3,r3,16
   2a4f4:	280ed43a 	srli	r7,r5,16
   2a4f8:	297fffcc 	andi	r5,r5,65535
   2a4fc:	20c7883a 	add	r3,r4,r3
   2a500:	19c7883a 	add	r3,r3,r7
   2a504:	1808943a 	slli	r4,r3,16
   2a508:	4023883a 	mov	r17,r8
   2a50c:	180ed43a 	srli	r7,r3,16
   2a510:	214ab03a 	or	r5,r4,r5
   2a514:	41400015 	stw	r5,0(r8)
   2a518:	42000104 	addi	r8,r8,4
   2a51c:	727fea36 	bltu	r14,r9,2a4c8 <__alt_data_end+0xfffea4c8>
   2a520:	89c00115 	stw	r7,4(r17)
   2a524:	37c00017 	ldw	ra,0(r6)
   2a528:	f83ed43a 	srli	ra,ra,16
   2a52c:	f8001f26 	beq	ra,zero,2a5ac <__multiply+0x1a0>
   2a530:	58c00017 	ldw	r3,0(r11)
   2a534:	681d883a 	mov	r14,r13
   2a538:	581f883a 	mov	r15,r11
   2a53c:	1811883a 	mov	r8,r3
   2a540:	5825883a 	mov	r18,r11
   2a544:	000f883a 	mov	r7,zero
   2a548:	00000106 	br	2a550 <__multiply+0x144>
   2a54c:	8825883a 	mov	r18,r17
   2a550:	7140000b 	ldhu	r5,0(r14)
   2a554:	4010d43a 	srli	r8,r8,16
   2a558:	193fffcc 	andi	r4,r3,65535
   2a55c:	2fcb383a 	mul	r5,r5,ra
   2a560:	7bc00104 	addi	r15,r15,4
   2a564:	73800104 	addi	r14,r14,4
   2a568:	2a0b883a 	add	r5,r5,r8
   2a56c:	29cb883a 	add	r5,r5,r7
   2a570:	2806943a 	slli	r3,r5,16
   2a574:	94400104 	addi	r17,r18,4
   2a578:	280ad43a 	srli	r5,r5,16
   2a57c:	1908b03a 	or	r4,r3,r4
   2a580:	793fff15 	stw	r4,-4(r15)
   2a584:	70ffff17 	ldw	r3,-4(r14)
   2a588:	8a000017 	ldw	r8,0(r17)
   2a58c:	1806d43a 	srli	r3,r3,16
   2a590:	413fffcc 	andi	r4,r8,65535
   2a594:	1fc7383a 	mul	r3,r3,ra
   2a598:	1907883a 	add	r3,r3,r4
   2a59c:	1947883a 	add	r3,r3,r5
   2a5a0:	180ed43a 	srli	r7,r3,16
   2a5a4:	727fe936 	bltu	r14,r9,2a54c <__alt_data_end+0xfffea54c>
   2a5a8:	90c00115 	stw	r3,4(r18)
   2a5ac:	31800104 	addi	r6,r6,4
   2a5b0:	5ac00104 	addi	r11,r11,4
   2a5b4:	333fbe36 	bltu	r6,r12,2a4b0 <__alt_data_end+0xfffea4b0>
   2a5b8:	0400090e 	bge	zero,r16,2a5e0 <__multiply+0x1d4>
   2a5bc:	50ffff17 	ldw	r3,-4(r10)
   2a5c0:	52bfff04 	addi	r10,r10,-4
   2a5c4:	18000326 	beq	r3,zero,2a5d4 <__multiply+0x1c8>
   2a5c8:	00000506 	br	2a5e0 <__multiply+0x1d4>
   2a5cc:	50c00017 	ldw	r3,0(r10)
   2a5d0:	1800031e 	bne	r3,zero,2a5e0 <__multiply+0x1d4>
   2a5d4:	843fffc4 	addi	r16,r16,-1
   2a5d8:	52bfff04 	addi	r10,r10,-4
   2a5dc:	803ffb1e 	bne	r16,zero,2a5cc <__alt_data_end+0xfffea5cc>
   2a5e0:	14000415 	stw	r16,16(r2)
   2a5e4:	dfc00517 	ldw	ra,20(sp)
   2a5e8:	dd000417 	ldw	r20,16(sp)
   2a5ec:	dcc00317 	ldw	r19,12(sp)
   2a5f0:	dc800217 	ldw	r18,8(sp)
   2a5f4:	dc400117 	ldw	r17,4(sp)
   2a5f8:	dc000017 	ldw	r16,0(sp)
   2a5fc:	dec00604 	addi	sp,sp,24
   2a600:	f800283a 	ret

0002a604 <__pow5mult>:
   2a604:	defffa04 	addi	sp,sp,-24
   2a608:	dcc00315 	stw	r19,12(sp)
   2a60c:	dc000015 	stw	r16,0(sp)
   2a610:	dfc00515 	stw	ra,20(sp)
   2a614:	dd000415 	stw	r20,16(sp)
   2a618:	dc800215 	stw	r18,8(sp)
   2a61c:	dc400115 	stw	r17,4(sp)
   2a620:	308000cc 	andi	r2,r6,3
   2a624:	3021883a 	mov	r16,r6
   2a628:	2027883a 	mov	r19,r4
   2a62c:	10002f1e 	bne	r2,zero,2a6ec <__pow5mult+0xe8>
   2a630:	2825883a 	mov	r18,r5
   2a634:	8021d0ba 	srai	r16,r16,2
   2a638:	80001a26 	beq	r16,zero,2a6a4 <__pow5mult+0xa0>
   2a63c:	9c401217 	ldw	r17,72(r19)
   2a640:	8800061e 	bne	r17,zero,2a65c <__pow5mult+0x58>
   2a644:	00003406 	br	2a718 <__pow5mult+0x114>
   2a648:	8021d07a 	srai	r16,r16,1
   2a64c:	80001526 	beq	r16,zero,2a6a4 <__pow5mult+0xa0>
   2a650:	88800017 	ldw	r2,0(r17)
   2a654:	10001c26 	beq	r2,zero,2a6c8 <__pow5mult+0xc4>
   2a658:	1023883a 	mov	r17,r2
   2a65c:	8080004c 	andi	r2,r16,1
   2a660:	103ff926 	beq	r2,zero,2a648 <__alt_data_end+0xfffea648>
   2a664:	880d883a 	mov	r6,r17
   2a668:	900b883a 	mov	r5,r18
   2a66c:	9809883a 	mov	r4,r19
   2a670:	002a40c0 	call	2a40c <__multiply>
   2a674:	90001b26 	beq	r18,zero,2a6e4 <__pow5mult+0xe0>
   2a678:	91000117 	ldw	r4,4(r18)
   2a67c:	98c01317 	ldw	r3,76(r19)
   2a680:	8021d07a 	srai	r16,r16,1
   2a684:	2109883a 	add	r4,r4,r4
   2a688:	2109883a 	add	r4,r4,r4
   2a68c:	1907883a 	add	r3,r3,r4
   2a690:	19000017 	ldw	r4,0(r3)
   2a694:	91000015 	stw	r4,0(r18)
   2a698:	1c800015 	stw	r18,0(r3)
   2a69c:	1025883a 	mov	r18,r2
   2a6a0:	803feb1e 	bne	r16,zero,2a650 <__alt_data_end+0xfffea650>
   2a6a4:	9005883a 	mov	r2,r18
   2a6a8:	dfc00517 	ldw	ra,20(sp)
   2a6ac:	dd000417 	ldw	r20,16(sp)
   2a6b0:	dcc00317 	ldw	r19,12(sp)
   2a6b4:	dc800217 	ldw	r18,8(sp)
   2a6b8:	dc400117 	ldw	r17,4(sp)
   2a6bc:	dc000017 	ldw	r16,0(sp)
   2a6c0:	dec00604 	addi	sp,sp,24
   2a6c4:	f800283a 	ret
   2a6c8:	880d883a 	mov	r6,r17
   2a6cc:	880b883a 	mov	r5,r17
   2a6d0:	9809883a 	mov	r4,r19
   2a6d4:	002a40c0 	call	2a40c <__multiply>
   2a6d8:	88800015 	stw	r2,0(r17)
   2a6dc:	10000015 	stw	zero,0(r2)
   2a6e0:	003fdd06 	br	2a658 <__alt_data_end+0xfffea658>
   2a6e4:	1025883a 	mov	r18,r2
   2a6e8:	003fd706 	br	2a648 <__alt_data_end+0xfffea648>
   2a6ec:	10bfffc4 	addi	r2,r2,-1
   2a6f0:	1085883a 	add	r2,r2,r2
   2a6f4:	00c000f4 	movhi	r3,3
   2a6f8:	18c4fd04 	addi	r3,r3,5108
   2a6fc:	1085883a 	add	r2,r2,r2
   2a700:	1885883a 	add	r2,r3,r2
   2a704:	11800017 	ldw	r6,0(r2)
   2a708:	000f883a 	mov	r7,zero
   2a70c:	002a0940 	call	2a094 <__multadd>
   2a710:	1025883a 	mov	r18,r2
   2a714:	003fc706 	br	2a634 <__alt_data_end+0xfffea634>
   2a718:	05000044 	movi	r20,1
   2a71c:	a00b883a 	mov	r5,r20
   2a720:	9809883a 	mov	r4,r19
   2a724:	0029fc40 	call	29fc4 <_Balloc>
   2a728:	1023883a 	mov	r17,r2
   2a72c:	00809c44 	movi	r2,625
   2a730:	88800515 	stw	r2,20(r17)
   2a734:	8d000415 	stw	r20,16(r17)
   2a738:	9c401215 	stw	r17,72(r19)
   2a73c:	88000015 	stw	zero,0(r17)
   2a740:	003fc606 	br	2a65c <__alt_data_end+0xfffea65c>

0002a744 <__lshift>:
   2a744:	defff904 	addi	sp,sp,-28
   2a748:	dd400515 	stw	r21,20(sp)
   2a74c:	dcc00315 	stw	r19,12(sp)
   2a750:	302bd17a 	srai	r21,r6,5
   2a754:	2cc00417 	ldw	r19,16(r5)
   2a758:	28800217 	ldw	r2,8(r5)
   2a75c:	dd000415 	stw	r20,16(sp)
   2a760:	ace7883a 	add	r19,r21,r19
   2a764:	dc800215 	stw	r18,8(sp)
   2a768:	dc400115 	stw	r17,4(sp)
   2a76c:	dc000015 	stw	r16,0(sp)
   2a770:	dfc00615 	stw	ra,24(sp)
   2a774:	9c000044 	addi	r16,r19,1
   2a778:	2823883a 	mov	r17,r5
   2a77c:	3029883a 	mov	r20,r6
   2a780:	2025883a 	mov	r18,r4
   2a784:	29400117 	ldw	r5,4(r5)
   2a788:	1400030e 	bge	r2,r16,2a798 <__lshift+0x54>
   2a78c:	1085883a 	add	r2,r2,r2
   2a790:	29400044 	addi	r5,r5,1
   2a794:	143ffd16 	blt	r2,r16,2a78c <__alt_data_end+0xfffea78c>
   2a798:	9009883a 	mov	r4,r18
   2a79c:	0029fc40 	call	29fc4 <_Balloc>
   2a7a0:	10c00504 	addi	r3,r2,20
   2a7a4:	0540070e 	bge	zero,r21,2a7c4 <__lshift+0x80>
   2a7a8:	ad6b883a 	add	r21,r21,r21
   2a7ac:	ad6b883a 	add	r21,r21,r21
   2a7b0:	1809883a 	mov	r4,r3
   2a7b4:	1d47883a 	add	r3,r3,r21
   2a7b8:	20000015 	stw	zero,0(r4)
   2a7bc:	21000104 	addi	r4,r4,4
   2a7c0:	193ffd1e 	bne	r3,r4,2a7b8 <__alt_data_end+0xfffea7b8>
   2a7c4:	8a000417 	ldw	r8,16(r17)
   2a7c8:	89000504 	addi	r4,r17,20
   2a7cc:	a18007cc 	andi	r6,r20,31
   2a7d0:	4211883a 	add	r8,r8,r8
   2a7d4:	4211883a 	add	r8,r8,r8
   2a7d8:	2211883a 	add	r8,r4,r8
   2a7dc:	30002326 	beq	r6,zero,2a86c <__lshift+0x128>
   2a7e0:	02400804 	movi	r9,32
   2a7e4:	4993c83a 	sub	r9,r9,r6
   2a7e8:	000b883a 	mov	r5,zero
   2a7ec:	21c00017 	ldw	r7,0(r4)
   2a7f0:	1815883a 	mov	r10,r3
   2a7f4:	18c00104 	addi	r3,r3,4
   2a7f8:	398e983a 	sll	r7,r7,r6
   2a7fc:	21000104 	addi	r4,r4,4
   2a800:	394ab03a 	or	r5,r7,r5
   2a804:	197fff15 	stw	r5,-4(r3)
   2a808:	217fff17 	ldw	r5,-4(r4)
   2a80c:	2a4ad83a 	srl	r5,r5,r9
   2a810:	223ff636 	bltu	r4,r8,2a7ec <__alt_data_end+0xfffea7ec>
   2a814:	51400115 	stw	r5,4(r10)
   2a818:	28001a1e 	bne	r5,zero,2a884 <__lshift+0x140>
   2a81c:	843fffc4 	addi	r16,r16,-1
   2a820:	14000415 	stw	r16,16(r2)
   2a824:	88000826 	beq	r17,zero,2a848 <__lshift+0x104>
   2a828:	89000117 	ldw	r4,4(r17)
   2a82c:	90c01317 	ldw	r3,76(r18)
   2a830:	2109883a 	add	r4,r4,r4
   2a834:	2109883a 	add	r4,r4,r4
   2a838:	1907883a 	add	r3,r3,r4
   2a83c:	19000017 	ldw	r4,0(r3)
   2a840:	89000015 	stw	r4,0(r17)
   2a844:	1c400015 	stw	r17,0(r3)
   2a848:	dfc00617 	ldw	ra,24(sp)
   2a84c:	dd400517 	ldw	r21,20(sp)
   2a850:	dd000417 	ldw	r20,16(sp)
   2a854:	dcc00317 	ldw	r19,12(sp)
   2a858:	dc800217 	ldw	r18,8(sp)
   2a85c:	dc400117 	ldw	r17,4(sp)
   2a860:	dc000017 	ldw	r16,0(sp)
   2a864:	dec00704 	addi	sp,sp,28
   2a868:	f800283a 	ret
   2a86c:	21400017 	ldw	r5,0(r4)
   2a870:	18c00104 	addi	r3,r3,4
   2a874:	21000104 	addi	r4,r4,4
   2a878:	197fff15 	stw	r5,-4(r3)
   2a87c:	223ffb36 	bltu	r4,r8,2a86c <__alt_data_end+0xfffea86c>
   2a880:	003fe606 	br	2a81c <__alt_data_end+0xfffea81c>
   2a884:	9c000084 	addi	r16,r19,2
   2a888:	003fe406 	br	2a81c <__alt_data_end+0xfffea81c>

0002a88c <__mcmp>:
   2a88c:	20800417 	ldw	r2,16(r4)
   2a890:	28c00417 	ldw	r3,16(r5)
   2a894:	10c5c83a 	sub	r2,r2,r3
   2a898:	1000111e 	bne	r2,zero,2a8e0 <__mcmp+0x54>
   2a89c:	18c7883a 	add	r3,r3,r3
   2a8a0:	18c7883a 	add	r3,r3,r3
   2a8a4:	21000504 	addi	r4,r4,20
   2a8a8:	29400504 	addi	r5,r5,20
   2a8ac:	20c5883a 	add	r2,r4,r3
   2a8b0:	28cb883a 	add	r5,r5,r3
   2a8b4:	00000106 	br	2a8bc <__mcmp+0x30>
   2a8b8:	20800a2e 	bgeu	r4,r2,2a8e4 <__mcmp+0x58>
   2a8bc:	10bfff04 	addi	r2,r2,-4
   2a8c0:	297fff04 	addi	r5,r5,-4
   2a8c4:	11800017 	ldw	r6,0(r2)
   2a8c8:	28c00017 	ldw	r3,0(r5)
   2a8cc:	30fffa26 	beq	r6,r3,2a8b8 <__alt_data_end+0xfffea8b8>
   2a8d0:	30c00236 	bltu	r6,r3,2a8dc <__mcmp+0x50>
   2a8d4:	00800044 	movi	r2,1
   2a8d8:	f800283a 	ret
   2a8dc:	00bfffc4 	movi	r2,-1
   2a8e0:	f800283a 	ret
   2a8e4:	0005883a 	mov	r2,zero
   2a8e8:	f800283a 	ret

0002a8ec <__mdiff>:
   2a8ec:	28c00417 	ldw	r3,16(r5)
   2a8f0:	30800417 	ldw	r2,16(r6)
   2a8f4:	defffa04 	addi	sp,sp,-24
   2a8f8:	dcc00315 	stw	r19,12(sp)
   2a8fc:	dc800215 	stw	r18,8(sp)
   2a900:	dfc00515 	stw	ra,20(sp)
   2a904:	dd000415 	stw	r20,16(sp)
   2a908:	dc400115 	stw	r17,4(sp)
   2a90c:	dc000015 	stw	r16,0(sp)
   2a910:	1887c83a 	sub	r3,r3,r2
   2a914:	2825883a 	mov	r18,r5
   2a918:	3027883a 	mov	r19,r6
   2a91c:	1800141e 	bne	r3,zero,2a970 <__mdiff+0x84>
   2a920:	1085883a 	add	r2,r2,r2
   2a924:	1085883a 	add	r2,r2,r2
   2a928:	2a000504 	addi	r8,r5,20
   2a92c:	34000504 	addi	r16,r6,20
   2a930:	4087883a 	add	r3,r8,r2
   2a934:	8085883a 	add	r2,r16,r2
   2a938:	00000106 	br	2a940 <__mdiff+0x54>
   2a93c:	40c0592e 	bgeu	r8,r3,2aaa4 <__mdiff+0x1b8>
   2a940:	18ffff04 	addi	r3,r3,-4
   2a944:	10bfff04 	addi	r2,r2,-4
   2a948:	19c00017 	ldw	r7,0(r3)
   2a94c:	11400017 	ldw	r5,0(r2)
   2a950:	397ffa26 	beq	r7,r5,2a93c <__alt_data_end+0xfffea93c>
   2a954:	3940592e 	bgeu	r7,r5,2aabc <__mdiff+0x1d0>
   2a958:	9005883a 	mov	r2,r18
   2a95c:	4023883a 	mov	r17,r8
   2a960:	9825883a 	mov	r18,r19
   2a964:	05000044 	movi	r20,1
   2a968:	1027883a 	mov	r19,r2
   2a96c:	00000406 	br	2a980 <__mdiff+0x94>
   2a970:	18005616 	blt	r3,zero,2aacc <__mdiff+0x1e0>
   2a974:	34400504 	addi	r17,r6,20
   2a978:	2c000504 	addi	r16,r5,20
   2a97c:	0029883a 	mov	r20,zero
   2a980:	91400117 	ldw	r5,4(r18)
   2a984:	0029fc40 	call	29fc4 <_Balloc>
   2a988:	92400417 	ldw	r9,16(r18)
   2a98c:	9b000417 	ldw	r12,16(r19)
   2a990:	12c00504 	addi	r11,r2,20
   2a994:	4a51883a 	add	r8,r9,r9
   2a998:	6319883a 	add	r12,r12,r12
   2a99c:	4211883a 	add	r8,r8,r8
   2a9a0:	6319883a 	add	r12,r12,r12
   2a9a4:	15000315 	stw	r20,12(r2)
   2a9a8:	8211883a 	add	r8,r16,r8
   2a9ac:	8b19883a 	add	r12,r17,r12
   2a9b0:	0007883a 	mov	r3,zero
   2a9b4:	81400017 	ldw	r5,0(r16)
   2a9b8:	89c00017 	ldw	r7,0(r17)
   2a9bc:	59800104 	addi	r6,r11,4
   2a9c0:	293fffcc 	andi	r4,r5,65535
   2a9c4:	20c7883a 	add	r3,r4,r3
   2a9c8:	393fffcc 	andi	r4,r7,65535
   2a9cc:	1909c83a 	sub	r4,r3,r4
   2a9d0:	280ad43a 	srli	r5,r5,16
   2a9d4:	380ed43a 	srli	r7,r7,16
   2a9d8:	2007d43a 	srai	r3,r4,16
   2a9dc:	213fffcc 	andi	r4,r4,65535
   2a9e0:	29cbc83a 	sub	r5,r5,r7
   2a9e4:	28c7883a 	add	r3,r5,r3
   2a9e8:	180a943a 	slli	r5,r3,16
   2a9ec:	8c400104 	addi	r17,r17,4
   2a9f0:	84000104 	addi	r16,r16,4
   2a9f4:	2908b03a 	or	r4,r5,r4
   2a9f8:	59000015 	stw	r4,0(r11)
   2a9fc:	1807d43a 	srai	r3,r3,16
   2aa00:	3015883a 	mov	r10,r6
   2aa04:	3017883a 	mov	r11,r6
   2aa08:	8b3fea36 	bltu	r17,r12,2a9b4 <__alt_data_end+0xfffea9b4>
   2aa0c:	8200162e 	bgeu	r16,r8,2aa68 <__mdiff+0x17c>
   2aa10:	8017883a 	mov	r11,r16
   2aa14:	59400017 	ldw	r5,0(r11)
   2aa18:	31800104 	addi	r6,r6,4
   2aa1c:	5ac00104 	addi	r11,r11,4
   2aa20:	293fffcc 	andi	r4,r5,65535
   2aa24:	20c7883a 	add	r3,r4,r3
   2aa28:	280ed43a 	srli	r7,r5,16
   2aa2c:	180bd43a 	srai	r5,r3,16
   2aa30:	193fffcc 	andi	r4,r3,65535
   2aa34:	3947883a 	add	r3,r7,r5
   2aa38:	180a943a 	slli	r5,r3,16
   2aa3c:	1807d43a 	srai	r3,r3,16
   2aa40:	2908b03a 	or	r4,r5,r4
   2aa44:	313fff15 	stw	r4,-4(r6)
   2aa48:	5a3ff236 	bltu	r11,r8,2aa14 <__alt_data_end+0xfffeaa14>
   2aa4c:	0406303a 	nor	r3,zero,r16
   2aa50:	1a07883a 	add	r3,r3,r8
   2aa54:	1806d0ba 	srli	r3,r3,2
   2aa58:	18c00044 	addi	r3,r3,1
   2aa5c:	18c7883a 	add	r3,r3,r3
   2aa60:	18c7883a 	add	r3,r3,r3
   2aa64:	50d5883a 	add	r10,r10,r3
   2aa68:	50ffff04 	addi	r3,r10,-4
   2aa6c:	2000041e 	bne	r4,zero,2aa80 <__mdiff+0x194>
   2aa70:	18ffff04 	addi	r3,r3,-4
   2aa74:	19000017 	ldw	r4,0(r3)
   2aa78:	4a7fffc4 	addi	r9,r9,-1
   2aa7c:	203ffc26 	beq	r4,zero,2aa70 <__alt_data_end+0xfffeaa70>
   2aa80:	12400415 	stw	r9,16(r2)
   2aa84:	dfc00517 	ldw	ra,20(sp)
   2aa88:	dd000417 	ldw	r20,16(sp)
   2aa8c:	dcc00317 	ldw	r19,12(sp)
   2aa90:	dc800217 	ldw	r18,8(sp)
   2aa94:	dc400117 	ldw	r17,4(sp)
   2aa98:	dc000017 	ldw	r16,0(sp)
   2aa9c:	dec00604 	addi	sp,sp,24
   2aaa0:	f800283a 	ret
   2aaa4:	000b883a 	mov	r5,zero
   2aaa8:	0029fc40 	call	29fc4 <_Balloc>
   2aaac:	00c00044 	movi	r3,1
   2aab0:	10c00415 	stw	r3,16(r2)
   2aab4:	10000515 	stw	zero,20(r2)
   2aab8:	003ff206 	br	2aa84 <__alt_data_end+0xfffeaa84>
   2aabc:	8023883a 	mov	r17,r16
   2aac0:	0029883a 	mov	r20,zero
   2aac4:	4021883a 	mov	r16,r8
   2aac8:	003fad06 	br	2a980 <__alt_data_end+0xfffea980>
   2aacc:	9005883a 	mov	r2,r18
   2aad0:	94400504 	addi	r17,r18,20
   2aad4:	9c000504 	addi	r16,r19,20
   2aad8:	9825883a 	mov	r18,r19
   2aadc:	05000044 	movi	r20,1
   2aae0:	1027883a 	mov	r19,r2
   2aae4:	003fa606 	br	2a980 <__alt_data_end+0xfffea980>

0002aae8 <__ulp>:
   2aae8:	295ffc2c 	andhi	r5,r5,32752
   2aaec:	00bf3034 	movhi	r2,64704
   2aaf0:	2887883a 	add	r3,r5,r2
   2aaf4:	00c0020e 	bge	zero,r3,2ab00 <__ulp+0x18>
   2aaf8:	0005883a 	mov	r2,zero
   2aafc:	f800283a 	ret
   2ab00:	00c7c83a 	sub	r3,zero,r3
   2ab04:	1807d53a 	srai	r3,r3,20
   2ab08:	008004c4 	movi	r2,19
   2ab0c:	10c00b0e 	bge	r2,r3,2ab3c <__ulp+0x54>
   2ab10:	18bffb04 	addi	r2,r3,-20
   2ab14:	01000784 	movi	r4,30
   2ab18:	0007883a 	mov	r3,zero
   2ab1c:	20800516 	blt	r4,r2,2ab34 <__ulp+0x4c>
   2ab20:	010007c4 	movi	r4,31
   2ab24:	2089c83a 	sub	r4,r4,r2
   2ab28:	00800044 	movi	r2,1
   2ab2c:	1104983a 	sll	r2,r2,r4
   2ab30:	f800283a 	ret
   2ab34:	00800044 	movi	r2,1
   2ab38:	f800283a 	ret
   2ab3c:	01400234 	movhi	r5,8
   2ab40:	28c7d83a 	sra	r3,r5,r3
   2ab44:	0005883a 	mov	r2,zero
   2ab48:	f800283a 	ret

0002ab4c <__b2d>:
   2ab4c:	defffa04 	addi	sp,sp,-24
   2ab50:	dc000015 	stw	r16,0(sp)
   2ab54:	24000417 	ldw	r16,16(r4)
   2ab58:	dc400115 	stw	r17,4(sp)
   2ab5c:	24400504 	addi	r17,r4,20
   2ab60:	8421883a 	add	r16,r16,r16
   2ab64:	8421883a 	add	r16,r16,r16
   2ab68:	8c21883a 	add	r16,r17,r16
   2ab6c:	dc800215 	stw	r18,8(sp)
   2ab70:	84bfff17 	ldw	r18,-4(r16)
   2ab74:	dd000415 	stw	r20,16(sp)
   2ab78:	dcc00315 	stw	r19,12(sp)
   2ab7c:	9009883a 	mov	r4,r18
   2ab80:	2829883a 	mov	r20,r5
   2ab84:	dfc00515 	stw	ra,20(sp)
   2ab88:	002a2b80 	call	2a2b8 <__hi0bits>
   2ab8c:	00c00804 	movi	r3,32
   2ab90:	1889c83a 	sub	r4,r3,r2
   2ab94:	a1000015 	stw	r4,0(r20)
   2ab98:	01000284 	movi	r4,10
   2ab9c:	84ffff04 	addi	r19,r16,-4
   2aba0:	20801216 	blt	r4,r2,2abec <__b2d+0xa0>
   2aba4:	018002c4 	movi	r6,11
   2aba8:	308dc83a 	sub	r6,r6,r2
   2abac:	9186d83a 	srl	r3,r18,r6
   2abb0:	18cffc34 	orhi	r3,r3,16368
   2abb4:	8cc0212e 	bgeu	r17,r19,2ac3c <__b2d+0xf0>
   2abb8:	813ffe17 	ldw	r4,-8(r16)
   2abbc:	218cd83a 	srl	r6,r4,r6
   2abc0:	10800544 	addi	r2,r2,21
   2abc4:	9084983a 	sll	r2,r18,r2
   2abc8:	1184b03a 	or	r2,r2,r6
   2abcc:	dfc00517 	ldw	ra,20(sp)
   2abd0:	dd000417 	ldw	r20,16(sp)
   2abd4:	dcc00317 	ldw	r19,12(sp)
   2abd8:	dc800217 	ldw	r18,8(sp)
   2abdc:	dc400117 	ldw	r17,4(sp)
   2abe0:	dc000017 	ldw	r16,0(sp)
   2abe4:	dec00604 	addi	sp,sp,24
   2abe8:	f800283a 	ret
   2abec:	8cc00f2e 	bgeu	r17,r19,2ac2c <__b2d+0xe0>
   2abf0:	117ffd44 	addi	r5,r2,-11
   2abf4:	80bffe17 	ldw	r2,-8(r16)
   2abf8:	28000e26 	beq	r5,zero,2ac34 <__b2d+0xe8>
   2abfc:	1949c83a 	sub	r4,r3,r5
   2ac00:	9164983a 	sll	r18,r18,r5
   2ac04:	1106d83a 	srl	r3,r2,r4
   2ac08:	81bffe04 	addi	r6,r16,-8
   2ac0c:	948ffc34 	orhi	r18,r18,16368
   2ac10:	90c6b03a 	or	r3,r18,r3
   2ac14:	89800e2e 	bgeu	r17,r6,2ac50 <__b2d+0x104>
   2ac18:	81bffd17 	ldw	r6,-12(r16)
   2ac1c:	1144983a 	sll	r2,r2,r5
   2ac20:	310ad83a 	srl	r5,r6,r4
   2ac24:	2884b03a 	or	r2,r5,r2
   2ac28:	003fe806 	br	2abcc <__alt_data_end+0xfffeabcc>
   2ac2c:	10bffd44 	addi	r2,r2,-11
   2ac30:	1000041e 	bne	r2,zero,2ac44 <__b2d+0xf8>
   2ac34:	90cffc34 	orhi	r3,r18,16368
   2ac38:	003fe406 	br	2abcc <__alt_data_end+0xfffeabcc>
   2ac3c:	000d883a 	mov	r6,zero
   2ac40:	003fdf06 	br	2abc0 <__alt_data_end+0xfffeabc0>
   2ac44:	90a4983a 	sll	r18,r18,r2
   2ac48:	0005883a 	mov	r2,zero
   2ac4c:	003ff906 	br	2ac34 <__alt_data_end+0xfffeac34>
   2ac50:	1144983a 	sll	r2,r2,r5
   2ac54:	003fdd06 	br	2abcc <__alt_data_end+0xfffeabcc>

0002ac58 <__d2b>:
   2ac58:	defff804 	addi	sp,sp,-32
   2ac5c:	dc000215 	stw	r16,8(sp)
   2ac60:	3021883a 	mov	r16,r6
   2ac64:	dc400315 	stw	r17,12(sp)
   2ac68:	8022907a 	slli	r17,r16,1
   2ac6c:	dd000615 	stw	r20,24(sp)
   2ac70:	2829883a 	mov	r20,r5
   2ac74:	01400044 	movi	r5,1
   2ac78:	dcc00515 	stw	r19,20(sp)
   2ac7c:	dc800415 	stw	r18,16(sp)
   2ac80:	dfc00715 	stw	ra,28(sp)
   2ac84:	3825883a 	mov	r18,r7
   2ac88:	8822d57a 	srli	r17,r17,21
   2ac8c:	0029fc40 	call	29fc4 <_Balloc>
   2ac90:	1027883a 	mov	r19,r2
   2ac94:	00800434 	movhi	r2,16
   2ac98:	10bfffc4 	addi	r2,r2,-1
   2ac9c:	808c703a 	and	r6,r16,r2
   2aca0:	88000126 	beq	r17,zero,2aca8 <__d2b+0x50>
   2aca4:	31800434 	orhi	r6,r6,16
   2aca8:	d9800015 	stw	r6,0(sp)
   2acac:	a0002426 	beq	r20,zero,2ad40 <__d2b+0xe8>
   2acb0:	d9000104 	addi	r4,sp,4
   2acb4:	dd000115 	stw	r20,4(sp)
   2acb8:	002a3200 	call	2a320 <__lo0bits>
   2acbc:	d8c00017 	ldw	r3,0(sp)
   2acc0:	10002f1e 	bne	r2,zero,2ad80 <__d2b+0x128>
   2acc4:	d9000117 	ldw	r4,4(sp)
   2acc8:	99000515 	stw	r4,20(r19)
   2accc:	1821003a 	cmpeq	r16,r3,zero
   2acd0:	01000084 	movi	r4,2
   2acd4:	2421c83a 	sub	r16,r4,r16
   2acd8:	98c00615 	stw	r3,24(r19)
   2acdc:	9c000415 	stw	r16,16(r19)
   2ace0:	88001f1e 	bne	r17,zero,2ad60 <__d2b+0x108>
   2ace4:	10bef384 	addi	r2,r2,-1074
   2ace8:	90800015 	stw	r2,0(r18)
   2acec:	00900034 	movhi	r2,16384
   2acf0:	10bfffc4 	addi	r2,r2,-1
   2acf4:	8085883a 	add	r2,r16,r2
   2acf8:	1085883a 	add	r2,r2,r2
   2acfc:	1085883a 	add	r2,r2,r2
   2ad00:	9885883a 	add	r2,r19,r2
   2ad04:	11000517 	ldw	r4,20(r2)
   2ad08:	8020917a 	slli	r16,r16,5
   2ad0c:	002a2b80 	call	2a2b8 <__hi0bits>
   2ad10:	d8c00817 	ldw	r3,32(sp)
   2ad14:	8085c83a 	sub	r2,r16,r2
   2ad18:	18800015 	stw	r2,0(r3)
   2ad1c:	9805883a 	mov	r2,r19
   2ad20:	dfc00717 	ldw	ra,28(sp)
   2ad24:	dd000617 	ldw	r20,24(sp)
   2ad28:	dcc00517 	ldw	r19,20(sp)
   2ad2c:	dc800417 	ldw	r18,16(sp)
   2ad30:	dc400317 	ldw	r17,12(sp)
   2ad34:	dc000217 	ldw	r16,8(sp)
   2ad38:	dec00804 	addi	sp,sp,32
   2ad3c:	f800283a 	ret
   2ad40:	d809883a 	mov	r4,sp
   2ad44:	002a3200 	call	2a320 <__lo0bits>
   2ad48:	d8c00017 	ldw	r3,0(sp)
   2ad4c:	04000044 	movi	r16,1
   2ad50:	9c000415 	stw	r16,16(r19)
   2ad54:	98c00515 	stw	r3,20(r19)
   2ad58:	10800804 	addi	r2,r2,32
   2ad5c:	883fe126 	beq	r17,zero,2ace4 <__alt_data_end+0xfffeace4>
   2ad60:	00c00d44 	movi	r3,53
   2ad64:	8c7ef344 	addi	r17,r17,-1075
   2ad68:	88a3883a 	add	r17,r17,r2
   2ad6c:	1885c83a 	sub	r2,r3,r2
   2ad70:	d8c00817 	ldw	r3,32(sp)
   2ad74:	94400015 	stw	r17,0(r18)
   2ad78:	18800015 	stw	r2,0(r3)
   2ad7c:	003fe706 	br	2ad1c <__alt_data_end+0xfffead1c>
   2ad80:	01000804 	movi	r4,32
   2ad84:	2089c83a 	sub	r4,r4,r2
   2ad88:	1908983a 	sll	r4,r3,r4
   2ad8c:	d9400117 	ldw	r5,4(sp)
   2ad90:	1886d83a 	srl	r3,r3,r2
   2ad94:	2148b03a 	or	r4,r4,r5
   2ad98:	99000515 	stw	r4,20(r19)
   2ad9c:	d8c00015 	stw	r3,0(sp)
   2ada0:	003fca06 	br	2accc <__alt_data_end+0xfffeaccc>

0002ada4 <__ratio>:
   2ada4:	defff904 	addi	sp,sp,-28
   2ada8:	dc400315 	stw	r17,12(sp)
   2adac:	2823883a 	mov	r17,r5
   2adb0:	d9400104 	addi	r5,sp,4
   2adb4:	dfc00615 	stw	ra,24(sp)
   2adb8:	dcc00515 	stw	r19,20(sp)
   2adbc:	dc800415 	stw	r18,16(sp)
   2adc0:	2027883a 	mov	r19,r4
   2adc4:	dc000215 	stw	r16,8(sp)
   2adc8:	002ab4c0 	call	2ab4c <__b2d>
   2adcc:	d80b883a 	mov	r5,sp
   2add0:	8809883a 	mov	r4,r17
   2add4:	1025883a 	mov	r18,r2
   2add8:	1821883a 	mov	r16,r3
   2addc:	002ab4c0 	call	2ab4c <__b2d>
   2ade0:	8a000417 	ldw	r8,16(r17)
   2ade4:	99000417 	ldw	r4,16(r19)
   2ade8:	d9400117 	ldw	r5,4(sp)
   2adec:	2209c83a 	sub	r4,r4,r8
   2adf0:	2010917a 	slli	r8,r4,5
   2adf4:	d9000017 	ldw	r4,0(sp)
   2adf8:	2909c83a 	sub	r4,r5,r4
   2adfc:	4109883a 	add	r4,r8,r4
   2ae00:	01000e0e 	bge	zero,r4,2ae3c <__ratio+0x98>
   2ae04:	2008953a 	slli	r4,r4,20
   2ae08:	2421883a 	add	r16,r4,r16
   2ae0c:	100d883a 	mov	r6,r2
   2ae10:	180f883a 	mov	r7,r3
   2ae14:	9009883a 	mov	r4,r18
   2ae18:	800b883a 	mov	r5,r16
   2ae1c:	0022b8c0 	call	22b8c <__divdf3>
   2ae20:	dfc00617 	ldw	ra,24(sp)
   2ae24:	dcc00517 	ldw	r19,20(sp)
   2ae28:	dc800417 	ldw	r18,16(sp)
   2ae2c:	dc400317 	ldw	r17,12(sp)
   2ae30:	dc000217 	ldw	r16,8(sp)
   2ae34:	dec00704 	addi	sp,sp,28
   2ae38:	f800283a 	ret
   2ae3c:	2008953a 	slli	r4,r4,20
   2ae40:	1907c83a 	sub	r3,r3,r4
   2ae44:	003ff106 	br	2ae0c <__alt_data_end+0xfffeae0c>

0002ae48 <_mprec_log10>:
   2ae48:	defffe04 	addi	sp,sp,-8
   2ae4c:	dc000015 	stw	r16,0(sp)
   2ae50:	dfc00115 	stw	ra,4(sp)
   2ae54:	008005c4 	movi	r2,23
   2ae58:	2021883a 	mov	r16,r4
   2ae5c:	11000d0e 	bge	r2,r4,2ae94 <_mprec_log10+0x4c>
   2ae60:	0005883a 	mov	r2,zero
   2ae64:	00cffc34 	movhi	r3,16368
   2ae68:	843fffc4 	addi	r16,r16,-1
   2ae6c:	000d883a 	mov	r6,zero
   2ae70:	01d00934 	movhi	r7,16420
   2ae74:	1009883a 	mov	r4,r2
   2ae78:	180b883a 	mov	r5,r3
   2ae7c:	00236cc0 	call	236cc <__muldf3>
   2ae80:	803ff91e 	bne	r16,zero,2ae68 <__alt_data_end+0xfffeae68>
   2ae84:	dfc00117 	ldw	ra,4(sp)
   2ae88:	dc000017 	ldw	r16,0(sp)
   2ae8c:	dec00204 	addi	sp,sp,8
   2ae90:	f800283a 	ret
   2ae94:	202090fa 	slli	r16,r4,3
   2ae98:	008000f4 	movhi	r2,3
   2ae9c:	10851404 	addi	r2,r2,5200
   2aea0:	1421883a 	add	r16,r2,r16
   2aea4:	80800017 	ldw	r2,0(r16)
   2aea8:	80c00117 	ldw	r3,4(r16)
   2aeac:	dfc00117 	ldw	ra,4(sp)
   2aeb0:	dc000017 	ldw	r16,0(sp)
   2aeb4:	dec00204 	addi	sp,sp,8
   2aeb8:	f800283a 	ret

0002aebc <__copybits>:
   2aebc:	297fffc4 	addi	r5,r5,-1
   2aec0:	280fd17a 	srai	r7,r5,5
   2aec4:	30c00417 	ldw	r3,16(r6)
   2aec8:	30800504 	addi	r2,r6,20
   2aecc:	39c00044 	addi	r7,r7,1
   2aed0:	18c7883a 	add	r3,r3,r3
   2aed4:	39cf883a 	add	r7,r7,r7
   2aed8:	18c7883a 	add	r3,r3,r3
   2aedc:	39cf883a 	add	r7,r7,r7
   2aee0:	10c7883a 	add	r3,r2,r3
   2aee4:	21cf883a 	add	r7,r4,r7
   2aee8:	10c00d2e 	bgeu	r2,r3,2af20 <__copybits+0x64>
   2aeec:	200b883a 	mov	r5,r4
   2aef0:	12000017 	ldw	r8,0(r2)
   2aef4:	29400104 	addi	r5,r5,4
   2aef8:	10800104 	addi	r2,r2,4
   2aefc:	2a3fff15 	stw	r8,-4(r5)
   2af00:	10fffb36 	bltu	r2,r3,2aef0 <__alt_data_end+0xfffeaef0>
   2af04:	1985c83a 	sub	r2,r3,r6
   2af08:	10bffac4 	addi	r2,r2,-21
   2af0c:	1004d0ba 	srli	r2,r2,2
   2af10:	10800044 	addi	r2,r2,1
   2af14:	1085883a 	add	r2,r2,r2
   2af18:	1085883a 	add	r2,r2,r2
   2af1c:	2089883a 	add	r4,r4,r2
   2af20:	21c0032e 	bgeu	r4,r7,2af30 <__copybits+0x74>
   2af24:	20000015 	stw	zero,0(r4)
   2af28:	21000104 	addi	r4,r4,4
   2af2c:	21fffd36 	bltu	r4,r7,2af24 <__alt_data_end+0xfffeaf24>
   2af30:	f800283a 	ret

0002af34 <__any_on>:
   2af34:	20c00417 	ldw	r3,16(r4)
   2af38:	2805d17a 	srai	r2,r5,5
   2af3c:	21000504 	addi	r4,r4,20
   2af40:	18800d0e 	bge	r3,r2,2af78 <__any_on+0x44>
   2af44:	18c7883a 	add	r3,r3,r3
   2af48:	18c7883a 	add	r3,r3,r3
   2af4c:	20c7883a 	add	r3,r4,r3
   2af50:	20c0192e 	bgeu	r4,r3,2afb8 <__any_on+0x84>
   2af54:	18bfff17 	ldw	r2,-4(r3)
   2af58:	18ffff04 	addi	r3,r3,-4
   2af5c:	1000041e 	bne	r2,zero,2af70 <__any_on+0x3c>
   2af60:	20c0142e 	bgeu	r4,r3,2afb4 <__any_on+0x80>
   2af64:	18ffff04 	addi	r3,r3,-4
   2af68:	19400017 	ldw	r5,0(r3)
   2af6c:	283ffc26 	beq	r5,zero,2af60 <__alt_data_end+0xfffeaf60>
   2af70:	00800044 	movi	r2,1
   2af74:	f800283a 	ret
   2af78:	10c00a0e 	bge	r2,r3,2afa4 <__any_on+0x70>
   2af7c:	1085883a 	add	r2,r2,r2
   2af80:	1085883a 	add	r2,r2,r2
   2af84:	294007cc 	andi	r5,r5,31
   2af88:	2087883a 	add	r3,r4,r2
   2af8c:	283ff026 	beq	r5,zero,2af50 <__alt_data_end+0xfffeaf50>
   2af90:	19800017 	ldw	r6,0(r3)
   2af94:	3144d83a 	srl	r2,r6,r5
   2af98:	114a983a 	sll	r5,r2,r5
   2af9c:	317ff41e 	bne	r6,r5,2af70 <__alt_data_end+0xfffeaf70>
   2afa0:	003feb06 	br	2af50 <__alt_data_end+0xfffeaf50>
   2afa4:	1085883a 	add	r2,r2,r2
   2afa8:	1085883a 	add	r2,r2,r2
   2afac:	2087883a 	add	r3,r4,r2
   2afb0:	003fe706 	br	2af50 <__alt_data_end+0xfffeaf50>
   2afb4:	f800283a 	ret
   2afb8:	0005883a 	mov	r2,zero
   2afbc:	f800283a 	ret

0002afc0 <_sbrk_r>:
   2afc0:	defffd04 	addi	sp,sp,-12
   2afc4:	dc000015 	stw	r16,0(sp)
   2afc8:	040000f4 	movhi	r16,3
   2afcc:	dc400115 	stw	r17,4(sp)
   2afd0:	8412d904 	addi	r16,r16,19300
   2afd4:	2023883a 	mov	r17,r4
   2afd8:	2809883a 	mov	r4,r5
   2afdc:	dfc00215 	stw	ra,8(sp)
   2afe0:	80000015 	stw	zero,0(r16)
   2afe4:	002f0740 	call	2f074 <sbrk>
   2afe8:	00ffffc4 	movi	r3,-1
   2afec:	10c00526 	beq	r2,r3,2b004 <_sbrk_r+0x44>
   2aff0:	dfc00217 	ldw	ra,8(sp)
   2aff4:	dc400117 	ldw	r17,4(sp)
   2aff8:	dc000017 	ldw	r16,0(sp)
   2affc:	dec00304 	addi	sp,sp,12
   2b000:	f800283a 	ret
   2b004:	80c00017 	ldw	r3,0(r16)
   2b008:	183ff926 	beq	r3,zero,2aff0 <__alt_data_end+0xfffeaff0>
   2b00c:	88c00015 	stw	r3,0(r17)
   2b010:	003ff706 	br	2aff0 <__alt_data_end+0xfffeaff0>

0002b014 <__sread>:
   2b014:	defffe04 	addi	sp,sp,-8
   2b018:	dc000015 	stw	r16,0(sp)
   2b01c:	2821883a 	mov	r16,r5
   2b020:	2940038f 	ldh	r5,14(r5)
   2b024:	dfc00115 	stw	ra,4(sp)
   2b028:	002d4b80 	call	2d4b8 <_read_r>
   2b02c:	10000716 	blt	r2,zero,2b04c <__sread+0x38>
   2b030:	80c01417 	ldw	r3,80(r16)
   2b034:	1887883a 	add	r3,r3,r2
   2b038:	80c01415 	stw	r3,80(r16)
   2b03c:	dfc00117 	ldw	ra,4(sp)
   2b040:	dc000017 	ldw	r16,0(sp)
   2b044:	dec00204 	addi	sp,sp,8
   2b048:	f800283a 	ret
   2b04c:	80c0030b 	ldhu	r3,12(r16)
   2b050:	18fbffcc 	andi	r3,r3,61439
   2b054:	80c0030d 	sth	r3,12(r16)
   2b058:	dfc00117 	ldw	ra,4(sp)
   2b05c:	dc000017 	ldw	r16,0(sp)
   2b060:	dec00204 	addi	sp,sp,8
   2b064:	f800283a 	ret

0002b068 <__seofread>:
   2b068:	0005883a 	mov	r2,zero
   2b06c:	f800283a 	ret

0002b070 <__swrite>:
   2b070:	2880030b 	ldhu	r2,12(r5)
   2b074:	defffb04 	addi	sp,sp,-20
   2b078:	dcc00315 	stw	r19,12(sp)
   2b07c:	dc800215 	stw	r18,8(sp)
   2b080:	dc400115 	stw	r17,4(sp)
   2b084:	dc000015 	stw	r16,0(sp)
   2b088:	dfc00415 	stw	ra,16(sp)
   2b08c:	10c0400c 	andi	r3,r2,256
   2b090:	2821883a 	mov	r16,r5
   2b094:	2023883a 	mov	r17,r4
   2b098:	3025883a 	mov	r18,r6
   2b09c:	3827883a 	mov	r19,r7
   2b0a0:	18000526 	beq	r3,zero,2b0b8 <__swrite+0x48>
   2b0a4:	2940038f 	ldh	r5,14(r5)
   2b0a8:	01c00084 	movi	r7,2
   2b0ac:	000d883a 	mov	r6,zero
   2b0b0:	002d2fc0 	call	2d2fc <_lseek_r>
   2b0b4:	8080030b 	ldhu	r2,12(r16)
   2b0b8:	8140038f 	ldh	r5,14(r16)
   2b0bc:	10bbffcc 	andi	r2,r2,61439
   2b0c0:	980f883a 	mov	r7,r19
   2b0c4:	900d883a 	mov	r6,r18
   2b0c8:	8809883a 	mov	r4,r17
   2b0cc:	8080030d 	sth	r2,12(r16)
   2b0d0:	dfc00417 	ldw	ra,16(sp)
   2b0d4:	dcc00317 	ldw	r19,12(sp)
   2b0d8:	dc800217 	ldw	r18,8(sp)
   2b0dc:	dc400117 	ldw	r17,4(sp)
   2b0e0:	dc000017 	ldw	r16,0(sp)
   2b0e4:	dec00504 	addi	sp,sp,20
   2b0e8:	002c90c1 	jmpi	2c90c <_write_r>

0002b0ec <__sseek>:
   2b0ec:	defffe04 	addi	sp,sp,-8
   2b0f0:	dc000015 	stw	r16,0(sp)
   2b0f4:	2821883a 	mov	r16,r5
   2b0f8:	2940038f 	ldh	r5,14(r5)
   2b0fc:	dfc00115 	stw	ra,4(sp)
   2b100:	002d2fc0 	call	2d2fc <_lseek_r>
   2b104:	00ffffc4 	movi	r3,-1
   2b108:	10c00826 	beq	r2,r3,2b12c <__sseek+0x40>
   2b10c:	80c0030b 	ldhu	r3,12(r16)
   2b110:	80801415 	stw	r2,80(r16)
   2b114:	18c40014 	ori	r3,r3,4096
   2b118:	80c0030d 	sth	r3,12(r16)
   2b11c:	dfc00117 	ldw	ra,4(sp)
   2b120:	dc000017 	ldw	r16,0(sp)
   2b124:	dec00204 	addi	sp,sp,8
   2b128:	f800283a 	ret
   2b12c:	80c0030b 	ldhu	r3,12(r16)
   2b130:	18fbffcc 	andi	r3,r3,61439
   2b134:	80c0030d 	sth	r3,12(r16)
   2b138:	dfc00117 	ldw	ra,4(sp)
   2b13c:	dc000017 	ldw	r16,0(sp)
   2b140:	dec00204 	addi	sp,sp,8
   2b144:	f800283a 	ret

0002b148 <__sclose>:
   2b148:	2940038f 	ldh	r5,14(r5)
   2b14c:	002c96c1 	jmpi	2c96c <_close_r>

0002b150 <strcmp>:
   2b150:	2144b03a 	or	r2,r4,r5
   2b154:	108000cc 	andi	r2,r2,3
   2b158:	1000171e 	bne	r2,zero,2b1b8 <strcmp+0x68>
   2b15c:	20800017 	ldw	r2,0(r4)
   2b160:	28c00017 	ldw	r3,0(r5)
   2b164:	10c0141e 	bne	r2,r3,2b1b8 <strcmp+0x68>
   2b168:	027fbff4 	movhi	r9,65279
   2b16c:	4a7fbfc4 	addi	r9,r9,-257
   2b170:	0086303a 	nor	r3,zero,r2
   2b174:	02202074 	movhi	r8,32897
   2b178:	1245883a 	add	r2,r2,r9
   2b17c:	42202004 	addi	r8,r8,-32640
   2b180:	10c4703a 	and	r2,r2,r3
   2b184:	1204703a 	and	r2,r2,r8
   2b188:	10000226 	beq	r2,zero,2b194 <strcmp+0x44>
   2b18c:	00002306 	br	2b21c <strcmp+0xcc>
   2b190:	1000221e 	bne	r2,zero,2b21c <strcmp+0xcc>
   2b194:	21000104 	addi	r4,r4,4
   2b198:	20c00017 	ldw	r3,0(r4)
   2b19c:	29400104 	addi	r5,r5,4
   2b1a0:	29800017 	ldw	r6,0(r5)
   2b1a4:	1a4f883a 	add	r7,r3,r9
   2b1a8:	00c4303a 	nor	r2,zero,r3
   2b1ac:	3884703a 	and	r2,r7,r2
   2b1b0:	1204703a 	and	r2,r2,r8
   2b1b4:	19bff626 	beq	r3,r6,2b190 <__alt_data_end+0xfffeb190>
   2b1b8:	20800003 	ldbu	r2,0(r4)
   2b1bc:	10c03fcc 	andi	r3,r2,255
   2b1c0:	18c0201c 	xori	r3,r3,128
   2b1c4:	18ffe004 	addi	r3,r3,-128
   2b1c8:	18000c26 	beq	r3,zero,2b1fc <strcmp+0xac>
   2b1cc:	29800007 	ldb	r6,0(r5)
   2b1d0:	19800326 	beq	r3,r6,2b1e0 <strcmp+0x90>
   2b1d4:	00001306 	br	2b224 <strcmp+0xd4>
   2b1d8:	29800007 	ldb	r6,0(r5)
   2b1dc:	11800b1e 	bne	r2,r6,2b20c <strcmp+0xbc>
   2b1e0:	21000044 	addi	r4,r4,1
   2b1e4:	20c00003 	ldbu	r3,0(r4)
   2b1e8:	29400044 	addi	r5,r5,1
   2b1ec:	18803fcc 	andi	r2,r3,255
   2b1f0:	1080201c 	xori	r2,r2,128
   2b1f4:	10bfe004 	addi	r2,r2,-128
   2b1f8:	103ff71e 	bne	r2,zero,2b1d8 <__alt_data_end+0xfffeb1d8>
   2b1fc:	0007883a 	mov	r3,zero
   2b200:	28800003 	ldbu	r2,0(r5)
   2b204:	1885c83a 	sub	r2,r3,r2
   2b208:	f800283a 	ret
   2b20c:	28800003 	ldbu	r2,0(r5)
   2b210:	18c03fcc 	andi	r3,r3,255
   2b214:	1885c83a 	sub	r2,r3,r2
   2b218:	f800283a 	ret
   2b21c:	0005883a 	mov	r2,zero
   2b220:	f800283a 	ret
   2b224:	10c03fcc 	andi	r3,r2,255
   2b228:	003ff506 	br	2b200 <__alt_data_end+0xfffeb200>

0002b22c <strlen>:
   2b22c:	208000cc 	andi	r2,r4,3
   2b230:	10002026 	beq	r2,zero,2b2b4 <strlen+0x88>
   2b234:	20800007 	ldb	r2,0(r4)
   2b238:	10002026 	beq	r2,zero,2b2bc <strlen+0x90>
   2b23c:	2005883a 	mov	r2,r4
   2b240:	00000206 	br	2b24c <strlen+0x20>
   2b244:	10c00007 	ldb	r3,0(r2)
   2b248:	18001826 	beq	r3,zero,2b2ac <strlen+0x80>
   2b24c:	10800044 	addi	r2,r2,1
   2b250:	10c000cc 	andi	r3,r2,3
   2b254:	183ffb1e 	bne	r3,zero,2b244 <__alt_data_end+0xfffeb244>
   2b258:	10c00017 	ldw	r3,0(r2)
   2b25c:	01ffbff4 	movhi	r7,65279
   2b260:	39ffbfc4 	addi	r7,r7,-257
   2b264:	00ca303a 	nor	r5,zero,r3
   2b268:	01a02074 	movhi	r6,32897
   2b26c:	19c7883a 	add	r3,r3,r7
   2b270:	31a02004 	addi	r6,r6,-32640
   2b274:	1946703a 	and	r3,r3,r5
   2b278:	1986703a 	and	r3,r3,r6
   2b27c:	1800091e 	bne	r3,zero,2b2a4 <strlen+0x78>
   2b280:	10800104 	addi	r2,r2,4
   2b284:	10c00017 	ldw	r3,0(r2)
   2b288:	19cb883a 	add	r5,r3,r7
   2b28c:	00c6303a 	nor	r3,zero,r3
   2b290:	28c6703a 	and	r3,r5,r3
   2b294:	1986703a 	and	r3,r3,r6
   2b298:	183ff926 	beq	r3,zero,2b280 <__alt_data_end+0xfffeb280>
   2b29c:	00000106 	br	2b2a4 <strlen+0x78>
   2b2a0:	10800044 	addi	r2,r2,1
   2b2a4:	10c00007 	ldb	r3,0(r2)
   2b2a8:	183ffd1e 	bne	r3,zero,2b2a0 <__alt_data_end+0xfffeb2a0>
   2b2ac:	1105c83a 	sub	r2,r2,r4
   2b2b0:	f800283a 	ret
   2b2b4:	2005883a 	mov	r2,r4
   2b2b8:	003fe706 	br	2b258 <__alt_data_end+0xfffeb258>
   2b2bc:	0005883a 	mov	r2,zero
   2b2c0:	f800283a 	ret

0002b2c4 <__sprint_r.part.0>:
   2b2c4:	28801917 	ldw	r2,100(r5)
   2b2c8:	defff604 	addi	sp,sp,-40
   2b2cc:	dd400515 	stw	r21,20(sp)
   2b2d0:	dfc00915 	stw	ra,36(sp)
   2b2d4:	df000815 	stw	fp,32(sp)
   2b2d8:	ddc00715 	stw	r23,28(sp)
   2b2dc:	dd800615 	stw	r22,24(sp)
   2b2e0:	dd000415 	stw	r20,16(sp)
   2b2e4:	dcc00315 	stw	r19,12(sp)
   2b2e8:	dc800215 	stw	r18,8(sp)
   2b2ec:	dc400115 	stw	r17,4(sp)
   2b2f0:	dc000015 	stw	r16,0(sp)
   2b2f4:	1088000c 	andi	r2,r2,8192
   2b2f8:	302b883a 	mov	r21,r6
   2b2fc:	10002e26 	beq	r2,zero,2b3b8 <__sprint_r.part.0+0xf4>
   2b300:	30800217 	ldw	r2,8(r6)
   2b304:	35800017 	ldw	r22,0(r6)
   2b308:	10002926 	beq	r2,zero,2b3b0 <__sprint_r.part.0+0xec>
   2b30c:	2827883a 	mov	r19,r5
   2b310:	2029883a 	mov	r20,r4
   2b314:	b5c00104 	addi	r23,r22,4
   2b318:	04bfffc4 	movi	r18,-1
   2b31c:	bc400017 	ldw	r17,0(r23)
   2b320:	b4000017 	ldw	r16,0(r22)
   2b324:	0039883a 	mov	fp,zero
   2b328:	8822d0ba 	srli	r17,r17,2
   2b32c:	8800031e 	bne	r17,zero,2b33c <__sprint_r.part.0+0x78>
   2b330:	00001806 	br	2b394 <__sprint_r.part.0+0xd0>
   2b334:	84000104 	addi	r16,r16,4
   2b338:	8f001526 	beq	r17,fp,2b390 <__sprint_r.part.0+0xcc>
   2b33c:	81400017 	ldw	r5,0(r16)
   2b340:	980d883a 	mov	r6,r19
   2b344:	a009883a 	mov	r4,r20
   2b348:	002ccec0 	call	2ccec <_fputwc_r>
   2b34c:	e7000044 	addi	fp,fp,1
   2b350:	14bff81e 	bne	r2,r18,2b334 <__alt_data_end+0xfffeb334>
   2b354:	9005883a 	mov	r2,r18
   2b358:	a8000215 	stw	zero,8(r21)
   2b35c:	a8000115 	stw	zero,4(r21)
   2b360:	dfc00917 	ldw	ra,36(sp)
   2b364:	df000817 	ldw	fp,32(sp)
   2b368:	ddc00717 	ldw	r23,28(sp)
   2b36c:	dd800617 	ldw	r22,24(sp)
   2b370:	dd400517 	ldw	r21,20(sp)
   2b374:	dd000417 	ldw	r20,16(sp)
   2b378:	dcc00317 	ldw	r19,12(sp)
   2b37c:	dc800217 	ldw	r18,8(sp)
   2b380:	dc400117 	ldw	r17,4(sp)
   2b384:	dc000017 	ldw	r16,0(sp)
   2b388:	dec00a04 	addi	sp,sp,40
   2b38c:	f800283a 	ret
   2b390:	a8800217 	ldw	r2,8(r21)
   2b394:	8c63883a 	add	r17,r17,r17
   2b398:	8c63883a 	add	r17,r17,r17
   2b39c:	1445c83a 	sub	r2,r2,r17
   2b3a0:	a8800215 	stw	r2,8(r21)
   2b3a4:	b5800204 	addi	r22,r22,8
   2b3a8:	bdc00204 	addi	r23,r23,8
   2b3ac:	103fdb1e 	bne	r2,zero,2b31c <__alt_data_end+0xfffeb31c>
   2b3b0:	0005883a 	mov	r2,zero
   2b3b4:	003fe806 	br	2b358 <__alt_data_end+0xfffeb358>
   2b3b8:	002cdec0 	call	2cdec <__sfvwrite_r>
   2b3bc:	003fe606 	br	2b358 <__alt_data_end+0xfffeb358>

0002b3c0 <__sprint_r>:
   2b3c0:	30c00217 	ldw	r3,8(r6)
   2b3c4:	18000126 	beq	r3,zero,2b3cc <__sprint_r+0xc>
   2b3c8:	002b2c41 	jmpi	2b2c4 <__sprint_r.part.0>
   2b3cc:	30000115 	stw	zero,4(r6)
   2b3d0:	0005883a 	mov	r2,zero
   2b3d4:	f800283a 	ret

0002b3d8 <___vfiprintf_internal_r>:
   2b3d8:	deffc904 	addi	sp,sp,-220
   2b3dc:	df003515 	stw	fp,212(sp)
   2b3e0:	dd003115 	stw	r20,196(sp)
   2b3e4:	dfc03615 	stw	ra,216(sp)
   2b3e8:	ddc03415 	stw	r23,208(sp)
   2b3ec:	dd803315 	stw	r22,204(sp)
   2b3f0:	dd403215 	stw	r21,200(sp)
   2b3f4:	dcc03015 	stw	r19,192(sp)
   2b3f8:	dc802f15 	stw	r18,188(sp)
   2b3fc:	dc402e15 	stw	r17,184(sp)
   2b400:	dc002d15 	stw	r16,180(sp)
   2b404:	d9002015 	stw	r4,128(sp)
   2b408:	d9c02215 	stw	r7,136(sp)
   2b40c:	2829883a 	mov	r20,r5
   2b410:	3039883a 	mov	fp,r6
   2b414:	20000226 	beq	r4,zero,2b420 <___vfiprintf_internal_r+0x48>
   2b418:	20800e17 	ldw	r2,56(r4)
   2b41c:	1000cf26 	beq	r2,zero,2b75c <___vfiprintf_internal_r+0x384>
   2b420:	a080030b 	ldhu	r2,12(r20)
   2b424:	10c8000c 	andi	r3,r2,8192
   2b428:	1800061e 	bne	r3,zero,2b444 <___vfiprintf_internal_r+0x6c>
   2b42c:	a1001917 	ldw	r4,100(r20)
   2b430:	00f7ffc4 	movi	r3,-8193
   2b434:	10880014 	ori	r2,r2,8192
   2b438:	20c6703a 	and	r3,r4,r3
   2b43c:	a080030d 	sth	r2,12(r20)
   2b440:	a0c01915 	stw	r3,100(r20)
   2b444:	10c0020c 	andi	r3,r2,8
   2b448:	1800a926 	beq	r3,zero,2b6f0 <___vfiprintf_internal_r+0x318>
   2b44c:	a0c00417 	ldw	r3,16(r20)
   2b450:	1800a726 	beq	r3,zero,2b6f0 <___vfiprintf_internal_r+0x318>
   2b454:	1080068c 	andi	r2,r2,26
   2b458:	00c00284 	movi	r3,10
   2b45c:	10c0ac26 	beq	r2,r3,2b710 <___vfiprintf_internal_r+0x338>
   2b460:	da801a04 	addi	r10,sp,104
   2b464:	da801e15 	stw	r10,120(sp)
   2b468:	d8801e17 	ldw	r2,120(sp)
   2b46c:	da8019c4 	addi	r10,sp,103
   2b470:	058000f4 	movhi	r22,3
   2b474:	05c000f4 	movhi	r23,3
   2b478:	da801f15 	stw	r10,124(sp)
   2b47c:	1295c83a 	sub	r10,r2,r10
   2b480:	b5854a04 	addi	r22,r22,5416
   2b484:	bdc54604 	addi	r23,r23,5400
   2b488:	dec01a15 	stw	sp,104(sp)
   2b48c:	d8001c15 	stw	zero,112(sp)
   2b490:	d8001b15 	stw	zero,108(sp)
   2b494:	d8002615 	stw	zero,152(sp)
   2b498:	d8002315 	stw	zero,140(sp)
   2b49c:	da802715 	stw	r10,156(sp)
   2b4a0:	d811883a 	mov	r8,sp
   2b4a4:	dd002115 	stw	r20,132(sp)
   2b4a8:	e021883a 	mov	r16,fp
   2b4ac:	80800007 	ldb	r2,0(r16)
   2b4b0:	1003ea26 	beq	r2,zero,2c45c <___vfiprintf_internal_r+0x1084>
   2b4b4:	00c00944 	movi	r3,37
   2b4b8:	8025883a 	mov	r18,r16
   2b4bc:	10c0021e 	bne	r2,r3,2b4c8 <___vfiprintf_internal_r+0xf0>
   2b4c0:	00001606 	br	2b51c <___vfiprintf_internal_r+0x144>
   2b4c4:	10c00326 	beq	r2,r3,2b4d4 <___vfiprintf_internal_r+0xfc>
   2b4c8:	94800044 	addi	r18,r18,1
   2b4cc:	90800007 	ldb	r2,0(r18)
   2b4d0:	103ffc1e 	bne	r2,zero,2b4c4 <__alt_data_end+0xfffeb4c4>
   2b4d4:	9423c83a 	sub	r17,r18,r16
   2b4d8:	88001026 	beq	r17,zero,2b51c <___vfiprintf_internal_r+0x144>
   2b4dc:	d8c01c17 	ldw	r3,112(sp)
   2b4e0:	d8801b17 	ldw	r2,108(sp)
   2b4e4:	44000015 	stw	r16,0(r8)
   2b4e8:	88c7883a 	add	r3,r17,r3
   2b4ec:	10800044 	addi	r2,r2,1
   2b4f0:	44400115 	stw	r17,4(r8)
   2b4f4:	d8c01c15 	stw	r3,112(sp)
   2b4f8:	d8801b15 	stw	r2,108(sp)
   2b4fc:	010001c4 	movi	r4,7
   2b500:	2080760e 	bge	r4,r2,2b6dc <___vfiprintf_internal_r+0x304>
   2b504:	1803821e 	bne	r3,zero,2c310 <___vfiprintf_internal_r+0xf38>
   2b508:	da802317 	ldw	r10,140(sp)
   2b50c:	d8001b15 	stw	zero,108(sp)
   2b510:	d811883a 	mov	r8,sp
   2b514:	5455883a 	add	r10,r10,r17
   2b518:	da802315 	stw	r10,140(sp)
   2b51c:	90800007 	ldb	r2,0(r18)
   2b520:	10044626 	beq	r2,zero,2c63c <___vfiprintf_internal_r+0x1264>
   2b524:	90c00047 	ldb	r3,1(r18)
   2b528:	94000044 	addi	r16,r18,1
   2b52c:	d8001d85 	stb	zero,118(sp)
   2b530:	0009883a 	mov	r4,zero
   2b534:	000f883a 	mov	r7,zero
   2b538:	027fffc4 	movi	r9,-1
   2b53c:	0023883a 	mov	r17,zero
   2b540:	0029883a 	mov	r20,zero
   2b544:	01401604 	movi	r5,88
   2b548:	01800244 	movi	r6,9
   2b54c:	03400a84 	movi	r13,42
   2b550:	03001b04 	movi	r12,108
   2b554:	84000044 	addi	r16,r16,1
   2b558:	18bff804 	addi	r2,r3,-32
   2b55c:	28827336 	bltu	r5,r2,2bf2c <___vfiprintf_internal_r+0xb54>
   2b560:	100490ba 	slli	r2,r2,2
   2b564:	028000f4 	movhi	r10,3
   2b568:	52ad5e04 	addi	r10,r10,-19080
   2b56c:	1285883a 	add	r2,r2,r10
   2b570:	10800017 	ldw	r2,0(r2)
   2b574:	1000683a 	jmp	r2
   2b578:	0002bc60 	cmpeqi	zero,zero,2801
   2b57c:	0002bf2c 	andhi	zero,zero,2812
   2b580:	0002bf2c 	andhi	zero,zero,2812
   2b584:	0002bc80 	call	2bc8 <__reset-0x1d438>
   2b588:	0002bf2c 	andhi	zero,zero,2812
   2b58c:	0002bf2c 	andhi	zero,zero,2812
   2b590:	0002bf2c 	andhi	zero,zero,2812
   2b594:	0002bf2c 	andhi	zero,zero,2812
   2b598:	0002bf2c 	andhi	zero,zero,2812
   2b59c:	0002bf2c 	andhi	zero,zero,2812
   2b5a0:	0002be68 	cmpgeui	zero,zero,2809
   2b5a4:	0002be84 	movi	zero,2810
   2b5a8:	0002bf2c 	andhi	zero,zero,2812
   2b5ac:	0002b76c 	andhi	zero,zero,2781
   2b5b0:	0002be94 	movui	zero,2810
   2b5b4:	0002bf2c 	andhi	zero,zero,2812
   2b5b8:	0002bc8c 	andi	zero,zero,2802
   2b5bc:	0002bc98 	cmpnei	zero,zero,2802
   2b5c0:	0002bc98 	cmpnei	zero,zero,2802
   2b5c4:	0002bc98 	cmpnei	zero,zero,2802
   2b5c8:	0002bc98 	cmpnei	zero,zero,2802
   2b5cc:	0002bc98 	cmpnei	zero,zero,2802
   2b5d0:	0002bc98 	cmpnei	zero,zero,2802
   2b5d4:	0002bc98 	cmpnei	zero,zero,2802
   2b5d8:	0002bc98 	cmpnei	zero,zero,2802
   2b5dc:	0002bc98 	cmpnei	zero,zero,2802
   2b5e0:	0002bf2c 	andhi	zero,zero,2812
   2b5e4:	0002bf2c 	andhi	zero,zero,2812
   2b5e8:	0002bf2c 	andhi	zero,zero,2812
   2b5ec:	0002bf2c 	andhi	zero,zero,2812
   2b5f0:	0002bf2c 	andhi	zero,zero,2812
   2b5f4:	0002bf2c 	andhi	zero,zero,2812
   2b5f8:	0002bf2c 	andhi	zero,zero,2812
   2b5fc:	0002bf2c 	andhi	zero,zero,2812
   2b600:	0002bf2c 	andhi	zero,zero,2812
   2b604:	0002bf2c 	andhi	zero,zero,2812
   2b608:	0002bcc4 	movi	zero,2803
   2b60c:	0002bf2c 	andhi	zero,zero,2812
   2b610:	0002bf2c 	andhi	zero,zero,2812
   2b614:	0002bf2c 	andhi	zero,zero,2812
   2b618:	0002bf2c 	andhi	zero,zero,2812
   2b61c:	0002bf2c 	andhi	zero,zero,2812
   2b620:	0002bf2c 	andhi	zero,zero,2812
   2b624:	0002bf2c 	andhi	zero,zero,2812
   2b628:	0002bf2c 	andhi	zero,zero,2812
   2b62c:	0002bf2c 	andhi	zero,zero,2812
   2b630:	0002bf2c 	andhi	zero,zero,2812
   2b634:	0002bcfc 	xorhi	zero,zero,2803
   2b638:	0002bf2c 	andhi	zero,zero,2812
   2b63c:	0002bf2c 	andhi	zero,zero,2812
   2b640:	0002bf2c 	andhi	zero,zero,2812
   2b644:	0002bf2c 	andhi	zero,zero,2812
   2b648:	0002bf2c 	andhi	zero,zero,2812
   2b64c:	0002bd54 	movui	zero,2805
   2b650:	0002bf2c 	andhi	zero,zero,2812
   2b654:	0002bf2c 	andhi	zero,zero,2812
   2b658:	0002bdc4 	movi	zero,2807
   2b65c:	0002bf2c 	andhi	zero,zero,2812
   2b660:	0002bf2c 	andhi	zero,zero,2812
   2b664:	0002bf2c 	andhi	zero,zero,2812
   2b668:	0002bf2c 	andhi	zero,zero,2812
   2b66c:	0002bf2c 	andhi	zero,zero,2812
   2b670:	0002bf2c 	andhi	zero,zero,2812
   2b674:	0002bf2c 	andhi	zero,zero,2812
   2b678:	0002bf2c 	andhi	zero,zero,2812
   2b67c:	0002bf2c 	andhi	zero,zero,2812
   2b680:	0002bf2c 	andhi	zero,zero,2812
   2b684:	0002bb70 	cmpltui	zero,zero,2797
   2b688:	0002bb9c 	xori	zero,zero,2798
   2b68c:	0002bf2c 	andhi	zero,zero,2812
   2b690:	0002bf2c 	andhi	zero,zero,2812
   2b694:	0002bf2c 	andhi	zero,zero,2812
   2b698:	0002bed4 	movui	zero,2811
   2b69c:	0002bb9c 	xori	zero,zero,2798
   2b6a0:	0002bf2c 	andhi	zero,zero,2812
   2b6a4:	0002bf2c 	andhi	zero,zero,2812
   2b6a8:	0002ba30 	cmpltui	zero,zero,2792
   2b6ac:	0002bf2c 	andhi	zero,zero,2812
   2b6b0:	0002ba40 	call	2ba4 <__reset-0x1d45c>
   2b6b4:	0002ba7c 	xorhi	zero,zero,2793
   2b6b8:	0002b778 	rdprs	zero,zero,2781
   2b6bc:	0002ba24 	muli	zero,zero,2792
   2b6c0:	0002bf2c 	andhi	zero,zero,2812
   2b6c4:	0002be00 	call	2be0 <__reset-0x1d420>
   2b6c8:	0002bf2c 	andhi	zero,zero,2812
   2b6cc:	0002be58 	cmpnei	zero,zero,2809
   2b6d0:	0002bf2c 	andhi	zero,zero,2812
   2b6d4:	0002bf2c 	andhi	zero,zero,2812
   2b6d8:	0002bb1c 	xori	zero,zero,2796
   2b6dc:	42000204 	addi	r8,r8,8
   2b6e0:	da802317 	ldw	r10,140(sp)
   2b6e4:	5455883a 	add	r10,r10,r17
   2b6e8:	da802315 	stw	r10,140(sp)
   2b6ec:	003f8b06 	br	2b51c <__alt_data_end+0xfffeb51c>
   2b6f0:	d9002017 	ldw	r4,128(sp)
   2b6f4:	a00b883a 	mov	r5,r20
   2b6f8:	0026bec0 	call	26bec <__swsetup_r>
   2b6fc:	1003b11e 	bne	r2,zero,2c5c4 <___vfiprintf_internal_r+0x11ec>
   2b700:	a080030b 	ldhu	r2,12(r20)
   2b704:	00c00284 	movi	r3,10
   2b708:	1080068c 	andi	r2,r2,26
   2b70c:	10ff541e 	bne	r2,r3,2b460 <__alt_data_end+0xfffeb460>
   2b710:	a080038f 	ldh	r2,14(r20)
   2b714:	103f5216 	blt	r2,zero,2b460 <__alt_data_end+0xfffeb460>
   2b718:	d9c02217 	ldw	r7,136(sp)
   2b71c:	d9002017 	ldw	r4,128(sp)
   2b720:	e00d883a 	mov	r6,fp
   2b724:	a00b883a 	mov	r5,r20
   2b728:	002c8500 	call	2c850 <__sbprintf>
   2b72c:	dfc03617 	ldw	ra,216(sp)
   2b730:	df003517 	ldw	fp,212(sp)
   2b734:	ddc03417 	ldw	r23,208(sp)
   2b738:	dd803317 	ldw	r22,204(sp)
   2b73c:	dd403217 	ldw	r21,200(sp)
   2b740:	dd003117 	ldw	r20,196(sp)
   2b744:	dcc03017 	ldw	r19,192(sp)
   2b748:	dc802f17 	ldw	r18,188(sp)
   2b74c:	dc402e17 	ldw	r17,184(sp)
   2b750:	dc002d17 	ldw	r16,180(sp)
   2b754:	dec03704 	addi	sp,sp,220
   2b758:	f800283a 	ret
   2b75c:	0028bc00 	call	28bc0 <__sinit>
   2b760:	003f2f06 	br	2b420 <__alt_data_end+0xfffeb420>
   2b764:	0463c83a 	sub	r17,zero,r17
   2b768:	d8802215 	stw	r2,136(sp)
   2b76c:	a5000114 	ori	r20,r20,4
   2b770:	80c00007 	ldb	r3,0(r16)
   2b774:	003f7706 	br	2b554 <__alt_data_end+0xfffeb554>
   2b778:	00800c04 	movi	r2,48
   2b77c:	da802217 	ldw	r10,136(sp)
   2b780:	d8801d05 	stb	r2,116(sp)
   2b784:	00801e04 	movi	r2,120
   2b788:	d8801d45 	stb	r2,117(sp)
   2b78c:	d8001d85 	stb	zero,118(sp)
   2b790:	50c00104 	addi	r3,r10,4
   2b794:	54800017 	ldw	r18,0(r10)
   2b798:	0027883a 	mov	r19,zero
   2b79c:	a0800094 	ori	r2,r20,2
   2b7a0:	48030b16 	blt	r9,zero,2c3d0 <___vfiprintf_internal_r+0xff8>
   2b7a4:	00bfdfc4 	movi	r2,-129
   2b7a8:	a096703a 	and	r11,r20,r2
   2b7ac:	d8c02215 	stw	r3,136(sp)
   2b7b0:	5d000094 	ori	r20,r11,2
   2b7b4:	90032b1e 	bne	r18,zero,2c464 <___vfiprintf_internal_r+0x108c>
   2b7b8:	008000f4 	movhi	r2,3
   2b7bc:	1084e604 	addi	r2,r2,5016
   2b7c0:	d8802615 	stw	r2,152(sp)
   2b7c4:	0039883a 	mov	fp,zero
   2b7c8:	48017b1e 	bne	r9,zero,2bdb8 <___vfiprintf_internal_r+0x9e0>
   2b7cc:	0013883a 	mov	r9,zero
   2b7d0:	0027883a 	mov	r19,zero
   2b7d4:	dd401a04 	addi	r21,sp,104
   2b7d8:	4825883a 	mov	r18,r9
   2b7dc:	4cc0010e 	bge	r9,r19,2b7e4 <___vfiprintf_internal_r+0x40c>
   2b7e0:	9825883a 	mov	r18,r19
   2b7e4:	e7003fcc 	andi	fp,fp,255
   2b7e8:	e700201c 	xori	fp,fp,128
   2b7ec:	e73fe004 	addi	fp,fp,-128
   2b7f0:	e0000126 	beq	fp,zero,2b7f8 <___vfiprintf_internal_r+0x420>
   2b7f4:	94800044 	addi	r18,r18,1
   2b7f8:	a380008c 	andi	r14,r20,2
   2b7fc:	70000126 	beq	r14,zero,2b804 <___vfiprintf_internal_r+0x42c>
   2b800:	94800084 	addi	r18,r18,2
   2b804:	a700210c 	andi	fp,r20,132
   2b808:	e001df1e 	bne	fp,zero,2bf88 <___vfiprintf_internal_r+0xbb0>
   2b80c:	8c87c83a 	sub	r3,r17,r18
   2b810:	00c1dd0e 	bge	zero,r3,2bf88 <___vfiprintf_internal_r+0xbb0>
   2b814:	01c00404 	movi	r7,16
   2b818:	d8801c17 	ldw	r2,112(sp)
   2b81c:	38c3ad0e 	bge	r7,r3,2c6d4 <___vfiprintf_internal_r+0x12fc>
   2b820:	028000f4 	movhi	r10,3
   2b824:	52854a04 	addi	r10,r10,5416
   2b828:	dc002915 	stw	r16,164(sp)
   2b82c:	d9801b17 	ldw	r6,108(sp)
   2b830:	da802415 	stw	r10,144(sp)
   2b834:	03c001c4 	movi	r15,7
   2b838:	da402515 	stw	r9,148(sp)
   2b83c:	db802815 	stw	r14,160(sp)
   2b840:	1821883a 	mov	r16,r3
   2b844:	00000506 	br	2b85c <___vfiprintf_internal_r+0x484>
   2b848:	31400084 	addi	r5,r6,2
   2b84c:	42000204 	addi	r8,r8,8
   2b850:	200d883a 	mov	r6,r4
   2b854:	843ffc04 	addi	r16,r16,-16
   2b858:	3c000d0e 	bge	r7,r16,2b890 <___vfiprintf_internal_r+0x4b8>
   2b85c:	10800404 	addi	r2,r2,16
   2b860:	31000044 	addi	r4,r6,1
   2b864:	45800015 	stw	r22,0(r8)
   2b868:	41c00115 	stw	r7,4(r8)
   2b86c:	d8801c15 	stw	r2,112(sp)
   2b870:	d9001b15 	stw	r4,108(sp)
   2b874:	793ff40e 	bge	r15,r4,2b848 <__alt_data_end+0xfffeb848>
   2b878:	1001b51e 	bne	r2,zero,2bf50 <___vfiprintf_internal_r+0xb78>
   2b87c:	843ffc04 	addi	r16,r16,-16
   2b880:	000d883a 	mov	r6,zero
   2b884:	01400044 	movi	r5,1
   2b888:	d811883a 	mov	r8,sp
   2b88c:	3c3ff316 	blt	r7,r16,2b85c <__alt_data_end+0xfffeb85c>
   2b890:	8007883a 	mov	r3,r16
   2b894:	da402517 	ldw	r9,148(sp)
   2b898:	db802817 	ldw	r14,160(sp)
   2b89c:	dc002917 	ldw	r16,164(sp)
   2b8a0:	da802417 	ldw	r10,144(sp)
   2b8a4:	1885883a 	add	r2,r3,r2
   2b8a8:	40c00115 	stw	r3,4(r8)
   2b8ac:	42800015 	stw	r10,0(r8)
   2b8b0:	d8801c15 	stw	r2,112(sp)
   2b8b4:	d9401b15 	stw	r5,108(sp)
   2b8b8:	00c001c4 	movi	r3,7
   2b8bc:	19426016 	blt	r3,r5,2c240 <___vfiprintf_internal_r+0xe68>
   2b8c0:	d8c01d87 	ldb	r3,118(sp)
   2b8c4:	42000204 	addi	r8,r8,8
   2b8c8:	29000044 	addi	r4,r5,1
   2b8cc:	1801b31e 	bne	r3,zero,2bf9c <___vfiprintf_internal_r+0xbc4>
   2b8d0:	7001c026 	beq	r14,zero,2bfd4 <___vfiprintf_internal_r+0xbfc>
   2b8d4:	d8c01d04 	addi	r3,sp,116
   2b8d8:	10800084 	addi	r2,r2,2
   2b8dc:	40c00015 	stw	r3,0(r8)
   2b8e0:	00c00084 	movi	r3,2
   2b8e4:	40c00115 	stw	r3,4(r8)
   2b8e8:	d8801c15 	stw	r2,112(sp)
   2b8ec:	d9001b15 	stw	r4,108(sp)
   2b8f0:	00c001c4 	movi	r3,7
   2b8f4:	1902650e 	bge	r3,r4,2c28c <___vfiprintf_internal_r+0xeb4>
   2b8f8:	10029a1e 	bne	r2,zero,2c364 <___vfiprintf_internal_r+0xf8c>
   2b8fc:	00c02004 	movi	r3,128
   2b900:	01000044 	movi	r4,1
   2b904:	000b883a 	mov	r5,zero
   2b908:	d811883a 	mov	r8,sp
   2b90c:	e0c1b31e 	bne	fp,r3,2bfdc <___vfiprintf_internal_r+0xc04>
   2b910:	8cb9c83a 	sub	fp,r17,r18
   2b914:	0701b10e 	bge	zero,fp,2bfdc <___vfiprintf_internal_r+0xc04>
   2b918:	01c00404 	movi	r7,16
   2b91c:	3f03890e 	bge	r7,fp,2c744 <___vfiprintf_internal_r+0x136c>
   2b920:	00c000f4 	movhi	r3,3
   2b924:	18c54604 	addi	r3,r3,5400
   2b928:	d8c02415 	stw	r3,144(sp)
   2b92c:	8007883a 	mov	r3,r16
   2b930:	034001c4 	movi	r13,7
   2b934:	e021883a 	mov	r16,fp
   2b938:	da402515 	stw	r9,148(sp)
   2b93c:	1839883a 	mov	fp,r3
   2b940:	00000506 	br	2b958 <___vfiprintf_internal_r+0x580>
   2b944:	29800084 	addi	r6,r5,2
   2b948:	42000204 	addi	r8,r8,8
   2b94c:	180b883a 	mov	r5,r3
   2b950:	843ffc04 	addi	r16,r16,-16
   2b954:	3c000d0e 	bge	r7,r16,2b98c <___vfiprintf_internal_r+0x5b4>
   2b958:	10800404 	addi	r2,r2,16
   2b95c:	28c00044 	addi	r3,r5,1
   2b960:	45c00015 	stw	r23,0(r8)
   2b964:	41c00115 	stw	r7,4(r8)
   2b968:	d8801c15 	stw	r2,112(sp)
   2b96c:	d8c01b15 	stw	r3,108(sp)
   2b970:	68fff40e 	bge	r13,r3,2b944 <__alt_data_end+0xfffeb944>
   2b974:	1002241e 	bne	r2,zero,2c208 <___vfiprintf_internal_r+0xe30>
   2b978:	843ffc04 	addi	r16,r16,-16
   2b97c:	01800044 	movi	r6,1
   2b980:	000b883a 	mov	r5,zero
   2b984:	d811883a 	mov	r8,sp
   2b988:	3c3ff316 	blt	r7,r16,2b958 <__alt_data_end+0xfffeb958>
   2b98c:	da402517 	ldw	r9,148(sp)
   2b990:	e007883a 	mov	r3,fp
   2b994:	8039883a 	mov	fp,r16
   2b998:	1821883a 	mov	r16,r3
   2b99c:	d8c02417 	ldw	r3,144(sp)
   2b9a0:	1705883a 	add	r2,r2,fp
   2b9a4:	47000115 	stw	fp,4(r8)
   2b9a8:	40c00015 	stw	r3,0(r8)
   2b9ac:	d8801c15 	stw	r2,112(sp)
   2b9b0:	d9801b15 	stw	r6,108(sp)
   2b9b4:	00c001c4 	movi	r3,7
   2b9b8:	19827616 	blt	r3,r6,2c394 <___vfiprintf_internal_r+0xfbc>
   2b9bc:	4cf9c83a 	sub	fp,r9,r19
   2b9c0:	42000204 	addi	r8,r8,8
   2b9c4:	31000044 	addi	r4,r6,1
   2b9c8:	300b883a 	mov	r5,r6
   2b9cc:	07018516 	blt	zero,fp,2bfe4 <___vfiprintf_internal_r+0xc0c>
   2b9d0:	9885883a 	add	r2,r19,r2
   2b9d4:	45400015 	stw	r21,0(r8)
   2b9d8:	44c00115 	stw	r19,4(r8)
   2b9dc:	d8801c15 	stw	r2,112(sp)
   2b9e0:	d9001b15 	stw	r4,108(sp)
   2b9e4:	00c001c4 	movi	r3,7
   2b9e8:	1901dd0e 	bge	r3,r4,2c160 <___vfiprintf_internal_r+0xd88>
   2b9ec:	1002401e 	bne	r2,zero,2c2f0 <___vfiprintf_internal_r+0xf18>
   2b9f0:	d8001b15 	stw	zero,108(sp)
   2b9f4:	a2c0010c 	andi	r11,r20,4
   2b9f8:	58000226 	beq	r11,zero,2ba04 <___vfiprintf_internal_r+0x62c>
   2b9fc:	8ca7c83a 	sub	r19,r17,r18
   2ba00:	04c2f216 	blt	zero,r19,2c5cc <___vfiprintf_internal_r+0x11f4>
   2ba04:	8c80010e 	bge	r17,r18,2ba0c <___vfiprintf_internal_r+0x634>
   2ba08:	9023883a 	mov	r17,r18
   2ba0c:	da802317 	ldw	r10,140(sp)
   2ba10:	5455883a 	add	r10,r10,r17
   2ba14:	da802315 	stw	r10,140(sp)
   2ba18:	d8001b15 	stw	zero,108(sp)
   2ba1c:	d811883a 	mov	r8,sp
   2ba20:	003ea206 	br	2b4ac <__alt_data_end+0xfffeb4ac>
   2ba24:	a5000814 	ori	r20,r20,32
   2ba28:	80c00007 	ldb	r3,0(r16)
   2ba2c:	003ec906 	br	2b554 <__alt_data_end+0xfffeb554>
   2ba30:	80c00007 	ldb	r3,0(r16)
   2ba34:	1b030926 	beq	r3,r12,2c65c <___vfiprintf_internal_r+0x1284>
   2ba38:	a5000414 	ori	r20,r20,16
   2ba3c:	003ec506 	br	2b554 <__alt_data_end+0xfffeb554>
   2ba40:	21003fcc 	andi	r4,r4,255
   2ba44:	20035e1e 	bne	r4,zero,2c7c0 <___vfiprintf_internal_r+0x13e8>
   2ba48:	a080080c 	andi	r2,r20,32
   2ba4c:	1002a526 	beq	r2,zero,2c4e4 <___vfiprintf_internal_r+0x110c>
   2ba50:	da802217 	ldw	r10,136(sp)
   2ba54:	50800017 	ldw	r2,0(r10)
   2ba58:	da802317 	ldw	r10,140(sp)
   2ba5c:	5007d7fa 	srai	r3,r10,31
   2ba60:	da802217 	ldw	r10,136(sp)
   2ba64:	10c00115 	stw	r3,4(r2)
   2ba68:	52800104 	addi	r10,r10,4
   2ba6c:	da802215 	stw	r10,136(sp)
   2ba70:	da802317 	ldw	r10,140(sp)
   2ba74:	12800015 	stw	r10,0(r2)
   2ba78:	003e8c06 	br	2b4ac <__alt_data_end+0xfffeb4ac>
   2ba7c:	21003fcc 	andi	r4,r4,255
   2ba80:	2003511e 	bne	r4,zero,2c7c8 <___vfiprintf_internal_r+0x13f0>
   2ba84:	a080080c 	andi	r2,r20,32
   2ba88:	1000a126 	beq	r2,zero,2bd10 <___vfiprintf_internal_r+0x938>
   2ba8c:	da802217 	ldw	r10,136(sp)
   2ba90:	d8001d85 	stb	zero,118(sp)
   2ba94:	50800204 	addi	r2,r10,8
   2ba98:	54800017 	ldw	r18,0(r10)
   2ba9c:	54c00117 	ldw	r19,4(r10)
   2baa0:	4802b416 	blt	r9,zero,2c574 <___vfiprintf_internal_r+0x119c>
   2baa4:	013fdfc4 	movi	r4,-129
   2baa8:	94c6b03a 	or	r3,r18,r19
   2baac:	d8802215 	stw	r2,136(sp)
   2bab0:	a128703a 	and	r20,r20,r4
   2bab4:	1800a226 	beq	r3,zero,2bd40 <___vfiprintf_internal_r+0x968>
   2bab8:	0039883a 	mov	fp,zero
   2babc:	dd401a04 	addi	r21,sp,104
   2bac0:	9006d0fa 	srli	r3,r18,3
   2bac4:	9808977a 	slli	r4,r19,29
   2bac8:	9826d0fa 	srli	r19,r19,3
   2bacc:	948001cc 	andi	r18,r18,7
   2bad0:	90800c04 	addi	r2,r18,48
   2bad4:	ad7fffc4 	addi	r21,r21,-1
   2bad8:	20e4b03a 	or	r18,r4,r3
   2badc:	a8800005 	stb	r2,0(r21)
   2bae0:	94c6b03a 	or	r3,r18,r19
   2bae4:	183ff61e 	bne	r3,zero,2bac0 <__alt_data_end+0xfffebac0>
   2bae8:	a0c0004c 	andi	r3,r20,1
   2baec:	18005926 	beq	r3,zero,2bc54 <___vfiprintf_internal_r+0x87c>
   2baf0:	10803fcc 	andi	r2,r2,255
   2baf4:	1080201c 	xori	r2,r2,128
   2baf8:	10bfe004 	addi	r2,r2,-128
   2bafc:	00c00c04 	movi	r3,48
   2bb00:	10c05426 	beq	r2,r3,2bc54 <___vfiprintf_internal_r+0x87c>
   2bb04:	da801e17 	ldw	r10,120(sp)
   2bb08:	a8bfffc4 	addi	r2,r21,-1
   2bb0c:	a8ffffc5 	stb	r3,-1(r21)
   2bb10:	50a7c83a 	sub	r19,r10,r2
   2bb14:	102b883a 	mov	r21,r2
   2bb18:	003f2f06 	br	2b7d8 <__alt_data_end+0xfffeb7d8>
   2bb1c:	21003fcc 	andi	r4,r4,255
   2bb20:	2003421e 	bne	r4,zero,2c82c <___vfiprintf_internal_r+0x1454>
   2bb24:	008000f4 	movhi	r2,3
   2bb28:	1084e604 	addi	r2,r2,5016
   2bb2c:	d8802615 	stw	r2,152(sp)
   2bb30:	a080080c 	andi	r2,r20,32
   2bb34:	1000aa26 	beq	r2,zero,2bde0 <___vfiprintf_internal_r+0xa08>
   2bb38:	da802217 	ldw	r10,136(sp)
   2bb3c:	54800017 	ldw	r18,0(r10)
   2bb40:	54c00117 	ldw	r19,4(r10)
   2bb44:	52800204 	addi	r10,r10,8
   2bb48:	da802215 	stw	r10,136(sp)
   2bb4c:	a080004c 	andi	r2,r20,1
   2bb50:	1001d226 	beq	r2,zero,2c29c <___vfiprintf_internal_r+0xec4>
   2bb54:	94c4b03a 	or	r2,r18,r19
   2bb58:	1002351e 	bne	r2,zero,2c430 <___vfiprintf_internal_r+0x1058>
   2bb5c:	d8001d85 	stb	zero,118(sp)
   2bb60:	48022216 	blt	r9,zero,2c3ec <___vfiprintf_internal_r+0x1014>
   2bb64:	00bfdfc4 	movi	r2,-129
   2bb68:	a0a8703a 	and	r20,r20,r2
   2bb6c:	003f1506 	br	2b7c4 <__alt_data_end+0xfffeb7c4>
   2bb70:	da802217 	ldw	r10,136(sp)
   2bb74:	04800044 	movi	r18,1
   2bb78:	d8001d85 	stb	zero,118(sp)
   2bb7c:	50800017 	ldw	r2,0(r10)
   2bb80:	52800104 	addi	r10,r10,4
   2bb84:	da802215 	stw	r10,136(sp)
   2bb88:	d8801005 	stb	r2,64(sp)
   2bb8c:	9027883a 	mov	r19,r18
   2bb90:	dd401004 	addi	r21,sp,64
   2bb94:	0013883a 	mov	r9,zero
   2bb98:	003f1706 	br	2b7f8 <__alt_data_end+0xfffeb7f8>
   2bb9c:	21003fcc 	andi	r4,r4,255
   2bba0:	2003201e 	bne	r4,zero,2c824 <___vfiprintf_internal_r+0x144c>
   2bba4:	a080080c 	andi	r2,r20,32
   2bba8:	10004b26 	beq	r2,zero,2bcd8 <___vfiprintf_internal_r+0x900>
   2bbac:	da802217 	ldw	r10,136(sp)
   2bbb0:	50800117 	ldw	r2,4(r10)
   2bbb4:	54800017 	ldw	r18,0(r10)
   2bbb8:	52800204 	addi	r10,r10,8
   2bbbc:	da802215 	stw	r10,136(sp)
   2bbc0:	1027883a 	mov	r19,r2
   2bbc4:	10022c16 	blt	r2,zero,2c478 <___vfiprintf_internal_r+0x10a0>
   2bbc8:	df001d83 	ldbu	fp,118(sp)
   2bbcc:	48007216 	blt	r9,zero,2bd98 <___vfiprintf_internal_r+0x9c0>
   2bbd0:	00ffdfc4 	movi	r3,-129
   2bbd4:	94c4b03a 	or	r2,r18,r19
   2bbd8:	a0e8703a 	and	r20,r20,r3
   2bbdc:	1000cc26 	beq	r2,zero,2bf10 <___vfiprintf_internal_r+0xb38>
   2bbe0:	98021026 	beq	r19,zero,2c424 <___vfiprintf_internal_r+0x104c>
   2bbe4:	dc402415 	stw	r17,144(sp)
   2bbe8:	dc002515 	stw	r16,148(sp)
   2bbec:	9823883a 	mov	r17,r19
   2bbf0:	9021883a 	mov	r16,r18
   2bbf4:	dd401a04 	addi	r21,sp,104
   2bbf8:	4825883a 	mov	r18,r9
   2bbfc:	4027883a 	mov	r19,r8
   2bc00:	8009883a 	mov	r4,r16
   2bc04:	880b883a 	mov	r5,r17
   2bc08:	01800284 	movi	r6,10
   2bc0c:	000f883a 	mov	r7,zero
   2bc10:	002e3340 	call	2e334 <__umoddi3>
   2bc14:	10800c04 	addi	r2,r2,48
   2bc18:	ad7fffc4 	addi	r21,r21,-1
   2bc1c:	8009883a 	mov	r4,r16
   2bc20:	880b883a 	mov	r5,r17
   2bc24:	a8800005 	stb	r2,0(r21)
   2bc28:	01800284 	movi	r6,10
   2bc2c:	000f883a 	mov	r7,zero
   2bc30:	002ddbc0 	call	2ddbc <__udivdi3>
   2bc34:	1021883a 	mov	r16,r2
   2bc38:	10c4b03a 	or	r2,r2,r3
   2bc3c:	1823883a 	mov	r17,r3
   2bc40:	103fef1e 	bne	r2,zero,2bc00 <__alt_data_end+0xfffebc00>
   2bc44:	dc402417 	ldw	r17,144(sp)
   2bc48:	dc002517 	ldw	r16,148(sp)
   2bc4c:	9013883a 	mov	r9,r18
   2bc50:	9811883a 	mov	r8,r19
   2bc54:	da801e17 	ldw	r10,120(sp)
   2bc58:	5567c83a 	sub	r19,r10,r21
   2bc5c:	003ede06 	br	2b7d8 <__alt_data_end+0xfffeb7d8>
   2bc60:	38803fcc 	andi	r2,r7,255
   2bc64:	1080201c 	xori	r2,r2,128
   2bc68:	10bfe004 	addi	r2,r2,-128
   2bc6c:	1002371e 	bne	r2,zero,2c54c <___vfiprintf_internal_r+0x1174>
   2bc70:	01000044 	movi	r4,1
   2bc74:	01c00804 	movi	r7,32
   2bc78:	80c00007 	ldb	r3,0(r16)
   2bc7c:	003e3506 	br	2b554 <__alt_data_end+0xfffeb554>
   2bc80:	a5000054 	ori	r20,r20,1
   2bc84:	80c00007 	ldb	r3,0(r16)
   2bc88:	003e3206 	br	2b554 <__alt_data_end+0xfffeb554>
   2bc8c:	a5002014 	ori	r20,r20,128
   2bc90:	80c00007 	ldb	r3,0(r16)
   2bc94:	003e2f06 	br	2b554 <__alt_data_end+0xfffeb554>
   2bc98:	8015883a 	mov	r10,r16
   2bc9c:	0023883a 	mov	r17,zero
   2bca0:	18bff404 	addi	r2,r3,-48
   2bca4:	50c00007 	ldb	r3,0(r10)
   2bca8:	8c4002a4 	muli	r17,r17,10
   2bcac:	84000044 	addi	r16,r16,1
   2bcb0:	8015883a 	mov	r10,r16
   2bcb4:	1463883a 	add	r17,r2,r17
   2bcb8:	18bff404 	addi	r2,r3,-48
   2bcbc:	30bff92e 	bgeu	r6,r2,2bca4 <__alt_data_end+0xfffebca4>
   2bcc0:	003e2506 	br	2b558 <__alt_data_end+0xfffeb558>
   2bcc4:	21003fcc 	andi	r4,r4,255
   2bcc8:	2002d41e 	bne	r4,zero,2c81c <___vfiprintf_internal_r+0x1444>
   2bccc:	a5000414 	ori	r20,r20,16
   2bcd0:	a080080c 	andi	r2,r20,32
   2bcd4:	103fb51e 	bne	r2,zero,2bbac <__alt_data_end+0xfffebbac>
   2bcd8:	a080040c 	andi	r2,r20,16
   2bcdc:	1001f826 	beq	r2,zero,2c4c0 <___vfiprintf_internal_r+0x10e8>
   2bce0:	da802217 	ldw	r10,136(sp)
   2bce4:	54800017 	ldw	r18,0(r10)
   2bce8:	52800104 	addi	r10,r10,4
   2bcec:	da802215 	stw	r10,136(sp)
   2bcf0:	9027d7fa 	srai	r19,r18,31
   2bcf4:	9805883a 	mov	r2,r19
   2bcf8:	003fb206 	br	2bbc4 <__alt_data_end+0xfffebbc4>
   2bcfc:	21003fcc 	andi	r4,r4,255
   2bd00:	2002c41e 	bne	r4,zero,2c814 <___vfiprintf_internal_r+0x143c>
   2bd04:	a5000414 	ori	r20,r20,16
   2bd08:	a080080c 	andi	r2,r20,32
   2bd0c:	103f5f1e 	bne	r2,zero,2ba8c <__alt_data_end+0xfffeba8c>
   2bd10:	a080040c 	andi	r2,r20,16
   2bd14:	10020f26 	beq	r2,zero,2c554 <___vfiprintf_internal_r+0x117c>
   2bd18:	da802217 	ldw	r10,136(sp)
   2bd1c:	d8001d85 	stb	zero,118(sp)
   2bd20:	0027883a 	mov	r19,zero
   2bd24:	50800104 	addi	r2,r10,4
   2bd28:	54800017 	ldw	r18,0(r10)
   2bd2c:	48021116 	blt	r9,zero,2c574 <___vfiprintf_internal_r+0x119c>
   2bd30:	00ffdfc4 	movi	r3,-129
   2bd34:	d8802215 	stw	r2,136(sp)
   2bd38:	a0e8703a 	and	r20,r20,r3
   2bd3c:	903f5e1e 	bne	r18,zero,2bab8 <__alt_data_end+0xfffebab8>
   2bd40:	0039883a 	mov	fp,zero
   2bd44:	4802a626 	beq	r9,zero,2c7e0 <___vfiprintf_internal_r+0x1408>
   2bd48:	0025883a 	mov	r18,zero
   2bd4c:	0027883a 	mov	r19,zero
   2bd50:	003f5a06 	br	2babc <__alt_data_end+0xfffebabc>
   2bd54:	21003fcc 	andi	r4,r4,255
   2bd58:	20029f1e 	bne	r4,zero,2c7d8 <___vfiprintf_internal_r+0x1400>
   2bd5c:	a5000414 	ori	r20,r20,16
   2bd60:	a080080c 	andi	r2,r20,32
   2bd64:	10005e1e 	bne	r2,zero,2bee0 <___vfiprintf_internal_r+0xb08>
   2bd68:	a080040c 	andi	r2,r20,16
   2bd6c:	1001a21e 	bne	r2,zero,2c3f8 <___vfiprintf_internal_r+0x1020>
   2bd70:	a080100c 	andi	r2,r20,64
   2bd74:	d8001d85 	stb	zero,118(sp)
   2bd78:	da802217 	ldw	r10,136(sp)
   2bd7c:	1002231e 	bne	r2,zero,2c60c <___vfiprintf_internal_r+0x1234>
   2bd80:	50800104 	addi	r2,r10,4
   2bd84:	54800017 	ldw	r18,0(r10)
   2bd88:	0027883a 	mov	r19,zero
   2bd8c:	4801a00e 	bge	r9,zero,2c410 <___vfiprintf_internal_r+0x1038>
   2bd90:	d8802215 	stw	r2,136(sp)
   2bd94:	0039883a 	mov	fp,zero
   2bd98:	94c4b03a 	or	r2,r18,r19
   2bd9c:	103f901e 	bne	r2,zero,2bbe0 <__alt_data_end+0xfffebbe0>
   2bda0:	00800044 	movi	r2,1
   2bda4:	10803fcc 	andi	r2,r2,255
   2bda8:	00c00044 	movi	r3,1
   2bdac:	10c05926 	beq	r2,r3,2bf14 <___vfiprintf_internal_r+0xb3c>
   2bdb0:	00c00084 	movi	r3,2
   2bdb4:	10ffe41e 	bne	r2,r3,2bd48 <__alt_data_end+0xfffebd48>
   2bdb8:	0025883a 	mov	r18,zero
   2bdbc:	0027883a 	mov	r19,zero
   2bdc0:	00013d06 	br	2c2b8 <___vfiprintf_internal_r+0xee0>
   2bdc4:	21003fcc 	andi	r4,r4,255
   2bdc8:	2002811e 	bne	r4,zero,2c7d0 <___vfiprintf_internal_r+0x13f8>
   2bdcc:	008000f4 	movhi	r2,3
   2bdd0:	1084e104 	addi	r2,r2,4996
   2bdd4:	d8802615 	stw	r2,152(sp)
   2bdd8:	a080080c 	andi	r2,r20,32
   2bddc:	103f561e 	bne	r2,zero,2bb38 <__alt_data_end+0xfffebb38>
   2bde0:	a080040c 	andi	r2,r20,16
   2bde4:	1001d126 	beq	r2,zero,2c52c <___vfiprintf_internal_r+0x1154>
   2bde8:	da802217 	ldw	r10,136(sp)
   2bdec:	0027883a 	mov	r19,zero
   2bdf0:	54800017 	ldw	r18,0(r10)
   2bdf4:	52800104 	addi	r10,r10,4
   2bdf8:	da802215 	stw	r10,136(sp)
   2bdfc:	003f5306 	br	2bb4c <__alt_data_end+0xfffebb4c>
   2be00:	da802217 	ldw	r10,136(sp)
   2be04:	d8001d85 	stb	zero,118(sp)
   2be08:	55400017 	ldw	r21,0(r10)
   2be0c:	50c00104 	addi	r3,r10,4
   2be10:	a8024226 	beq	r21,zero,2c71c <___vfiprintf_internal_r+0x1344>
   2be14:	48021816 	blt	r9,zero,2c678 <___vfiprintf_internal_r+0x12a0>
   2be18:	480d883a 	mov	r6,r9
   2be1c:	000b883a 	mov	r5,zero
   2be20:	a809883a 	mov	r4,r21
   2be24:	d8c02a15 	stw	r3,168(sp)
   2be28:	da002b15 	stw	r8,172(sp)
   2be2c:	da402c15 	stw	r9,176(sp)
   2be30:	0029c700 	call	29c70 <memchr>
   2be34:	d8c02a17 	ldw	r3,168(sp)
   2be38:	da002b17 	ldw	r8,172(sp)
   2be3c:	da402c17 	ldw	r9,176(sp)
   2be40:	10024826 	beq	r2,zero,2c764 <___vfiprintf_internal_r+0x138c>
   2be44:	1567c83a 	sub	r19,r2,r21
   2be48:	df001d83 	ldbu	fp,118(sp)
   2be4c:	d8c02215 	stw	r3,136(sp)
   2be50:	0013883a 	mov	r9,zero
   2be54:	003e6006 	br	2b7d8 <__alt_data_end+0xfffeb7d8>
   2be58:	21003fcc 	andi	r4,r4,255
   2be5c:	203fc026 	beq	r4,zero,2bd60 <__alt_data_end+0xfffebd60>
   2be60:	d9c01d85 	stb	r7,118(sp)
   2be64:	003fbe06 	br	2bd60 <__alt_data_end+0xfffebd60>
   2be68:	da802217 	ldw	r10,136(sp)
   2be6c:	54400017 	ldw	r17,0(r10)
   2be70:	50800104 	addi	r2,r10,4
   2be74:	883e3b16 	blt	r17,zero,2b764 <__alt_data_end+0xfffeb764>
   2be78:	d8802215 	stw	r2,136(sp)
   2be7c:	80c00007 	ldb	r3,0(r16)
   2be80:	003db406 	br	2b554 <__alt_data_end+0xfffeb554>
   2be84:	01000044 	movi	r4,1
   2be88:	01c00ac4 	movi	r7,43
   2be8c:	80c00007 	ldb	r3,0(r16)
   2be90:	003db006 	br	2b554 <__alt_data_end+0xfffeb554>
   2be94:	80c00007 	ldb	r3,0(r16)
   2be98:	82800044 	addi	r10,r16,1
   2be9c:	1b423c26 	beq	r3,r13,2c790 <___vfiprintf_internal_r+0x13b8>
   2bea0:	18bff404 	addi	r2,r3,-48
   2bea4:	0013883a 	mov	r9,zero
   2bea8:	30822b36 	bltu	r6,r2,2c758 <___vfiprintf_internal_r+0x1380>
   2beac:	50c00007 	ldb	r3,0(r10)
   2beb0:	4a4002a4 	muli	r9,r9,10
   2beb4:	54000044 	addi	r16,r10,1
   2beb8:	8015883a 	mov	r10,r16
   2bebc:	4893883a 	add	r9,r9,r2
   2bec0:	18bff404 	addi	r2,r3,-48
   2bec4:	30bff92e 	bgeu	r6,r2,2beac <__alt_data_end+0xfffebeac>
   2bec8:	483da30e 	bge	r9,zero,2b558 <__alt_data_end+0xfffeb558>
   2becc:	027fffc4 	movi	r9,-1
   2bed0:	003da106 	br	2b558 <__alt_data_end+0xfffeb558>
   2bed4:	a5001014 	ori	r20,r20,64
   2bed8:	80c00007 	ldb	r3,0(r16)
   2bedc:	003d9d06 	br	2b554 <__alt_data_end+0xfffeb554>
   2bee0:	da802217 	ldw	r10,136(sp)
   2bee4:	d8001d85 	stb	zero,118(sp)
   2bee8:	50c00204 	addi	r3,r10,8
   2beec:	54800017 	ldw	r18,0(r10)
   2bef0:	54c00117 	ldw	r19,4(r10)
   2bef4:	4801ca16 	blt	r9,zero,2c620 <___vfiprintf_internal_r+0x1248>
   2bef8:	013fdfc4 	movi	r4,-129
   2befc:	94c4b03a 	or	r2,r18,r19
   2bf00:	d8c02215 	stw	r3,136(sp)
   2bf04:	a128703a 	and	r20,r20,r4
   2bf08:	0039883a 	mov	fp,zero
   2bf0c:	103f341e 	bne	r2,zero,2bbe0 <__alt_data_end+0xfffebbe0>
   2bf10:	483e2e26 	beq	r9,zero,2b7cc <__alt_data_end+0xfffeb7cc>
   2bf14:	0025883a 	mov	r18,zero
   2bf18:	94800c04 	addi	r18,r18,48
   2bf1c:	dc8019c5 	stb	r18,103(sp)
   2bf20:	dcc02717 	ldw	r19,156(sp)
   2bf24:	dd4019c4 	addi	r21,sp,103
   2bf28:	003e2b06 	br	2b7d8 <__alt_data_end+0xfffeb7d8>
   2bf2c:	21003fcc 	andi	r4,r4,255
   2bf30:	2002361e 	bne	r4,zero,2c80c <___vfiprintf_internal_r+0x1434>
   2bf34:	1801c126 	beq	r3,zero,2c63c <___vfiprintf_internal_r+0x1264>
   2bf38:	04800044 	movi	r18,1
   2bf3c:	d8c01005 	stb	r3,64(sp)
   2bf40:	d8001d85 	stb	zero,118(sp)
   2bf44:	9027883a 	mov	r19,r18
   2bf48:	dd401004 	addi	r21,sp,64
   2bf4c:	003f1106 	br	2bb94 <__alt_data_end+0xfffebb94>
   2bf50:	d9402117 	ldw	r5,132(sp)
   2bf54:	d9002017 	ldw	r4,128(sp)
   2bf58:	d9801a04 	addi	r6,sp,104
   2bf5c:	d9c02b15 	stw	r7,172(sp)
   2bf60:	dbc02a15 	stw	r15,168(sp)
   2bf64:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2bf68:	d9c02b17 	ldw	r7,172(sp)
   2bf6c:	dbc02a17 	ldw	r15,168(sp)
   2bf70:	10006d1e 	bne	r2,zero,2c128 <___vfiprintf_internal_r+0xd50>
   2bf74:	d9801b17 	ldw	r6,108(sp)
   2bf78:	d8801c17 	ldw	r2,112(sp)
   2bf7c:	d811883a 	mov	r8,sp
   2bf80:	31400044 	addi	r5,r6,1
   2bf84:	003e3306 	br	2b854 <__alt_data_end+0xfffeb854>
   2bf88:	d9401b17 	ldw	r5,108(sp)
   2bf8c:	d8801c17 	ldw	r2,112(sp)
   2bf90:	29000044 	addi	r4,r5,1
   2bf94:	d8c01d87 	ldb	r3,118(sp)
   2bf98:	183e4d26 	beq	r3,zero,2b8d0 <__alt_data_end+0xfffeb8d0>
   2bf9c:	00c00044 	movi	r3,1
   2bfa0:	d9401d84 	addi	r5,sp,118
   2bfa4:	10c5883a 	add	r2,r2,r3
   2bfa8:	41400015 	stw	r5,0(r8)
   2bfac:	40c00115 	stw	r3,4(r8)
   2bfb0:	d8801c15 	stw	r2,112(sp)
   2bfb4:	d9001b15 	stw	r4,108(sp)
   2bfb8:	014001c4 	movi	r5,7
   2bfbc:	2900a90e 	bge	r5,r4,2c264 <___vfiprintf_internal_r+0xe8c>
   2bfc0:	1000da1e 	bne	r2,zero,2c32c <___vfiprintf_internal_r+0xf54>
   2bfc4:	7000ab1e 	bne	r14,zero,2c274 <___vfiprintf_internal_r+0xe9c>
   2bfc8:	000b883a 	mov	r5,zero
   2bfcc:	1809883a 	mov	r4,r3
   2bfd0:	d811883a 	mov	r8,sp
   2bfd4:	00c02004 	movi	r3,128
   2bfd8:	e0fe4d26 	beq	fp,r3,2b910 <__alt_data_end+0xfffeb910>
   2bfdc:	4cf9c83a 	sub	fp,r9,r19
   2bfe0:	073e7b0e 	bge	zero,fp,2b9d0 <__alt_data_end+0xfffeb9d0>
   2bfe4:	01c00404 	movi	r7,16
   2bfe8:	3f01900e 	bge	r7,fp,2c62c <___vfiprintf_internal_r+0x1254>
   2bfec:	00c000f4 	movhi	r3,3
   2bff0:	18c54604 	addi	r3,r3,5400
   2bff4:	d8c02415 	stw	r3,144(sp)
   2bff8:	034001c4 	movi	r13,7
   2bffc:	00000506 	br	2c014 <___vfiprintf_internal_r+0xc3c>
   2c000:	29000084 	addi	r4,r5,2
   2c004:	42000204 	addi	r8,r8,8
   2c008:	180b883a 	mov	r5,r3
   2c00c:	e73ffc04 	addi	fp,fp,-16
   2c010:	3f000d0e 	bge	r7,fp,2c048 <___vfiprintf_internal_r+0xc70>
   2c014:	10800404 	addi	r2,r2,16
   2c018:	28c00044 	addi	r3,r5,1
   2c01c:	45c00015 	stw	r23,0(r8)
   2c020:	41c00115 	stw	r7,4(r8)
   2c024:	d8801c15 	stw	r2,112(sp)
   2c028:	d8c01b15 	stw	r3,108(sp)
   2c02c:	68fff40e 	bge	r13,r3,2c000 <__alt_data_end+0xfffec000>
   2c030:	1000101e 	bne	r2,zero,2c074 <___vfiprintf_internal_r+0xc9c>
   2c034:	e73ffc04 	addi	fp,fp,-16
   2c038:	01000044 	movi	r4,1
   2c03c:	000b883a 	mov	r5,zero
   2c040:	d811883a 	mov	r8,sp
   2c044:	3f3ff316 	blt	r7,fp,2c014 <__alt_data_end+0xfffec014>
   2c048:	da802417 	ldw	r10,144(sp)
   2c04c:	1705883a 	add	r2,r2,fp
   2c050:	47000115 	stw	fp,4(r8)
   2c054:	42800015 	stw	r10,0(r8)
   2c058:	d8801c15 	stw	r2,112(sp)
   2c05c:	d9001b15 	stw	r4,108(sp)
   2c060:	00c001c4 	movi	r3,7
   2c064:	19003616 	blt	r3,r4,2c140 <___vfiprintf_internal_r+0xd68>
   2c068:	42000204 	addi	r8,r8,8
   2c06c:	21000044 	addi	r4,r4,1
   2c070:	003e5706 	br	2b9d0 <__alt_data_end+0xfffeb9d0>
   2c074:	d9402117 	ldw	r5,132(sp)
   2c078:	d9002017 	ldw	r4,128(sp)
   2c07c:	d9801a04 	addi	r6,sp,104
   2c080:	d9c02b15 	stw	r7,172(sp)
   2c084:	db402a15 	stw	r13,168(sp)
   2c088:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c08c:	d9c02b17 	ldw	r7,172(sp)
   2c090:	db402a17 	ldw	r13,168(sp)
   2c094:	1000241e 	bne	r2,zero,2c128 <___vfiprintf_internal_r+0xd50>
   2c098:	d9401b17 	ldw	r5,108(sp)
   2c09c:	d8801c17 	ldw	r2,112(sp)
   2c0a0:	d811883a 	mov	r8,sp
   2c0a4:	29000044 	addi	r4,r5,1
   2c0a8:	003fd806 	br	2c00c <__alt_data_end+0xfffec00c>
   2c0ac:	d9401b17 	ldw	r5,108(sp)
   2c0b0:	00c000f4 	movhi	r3,3
   2c0b4:	18c54a04 	addi	r3,r3,5416
   2c0b8:	d8c02415 	stw	r3,144(sp)
   2c0bc:	29400044 	addi	r5,r5,1
   2c0c0:	d8c02417 	ldw	r3,144(sp)
   2c0c4:	14c5883a 	add	r2,r2,r19
   2c0c8:	44c00115 	stw	r19,4(r8)
   2c0cc:	40c00015 	stw	r3,0(r8)
   2c0d0:	d8801c15 	stw	r2,112(sp)
   2c0d4:	d9401b15 	stw	r5,108(sp)
   2c0d8:	00c001c4 	movi	r3,7
   2c0dc:	1940070e 	bge	r3,r5,2c0fc <___vfiprintf_internal_r+0xd24>
   2c0e0:	103e4826 	beq	r2,zero,2ba04 <__alt_data_end+0xfffeba04>
   2c0e4:	d9402117 	ldw	r5,132(sp)
   2c0e8:	d9002017 	ldw	r4,128(sp)
   2c0ec:	d9801a04 	addi	r6,sp,104
   2c0f0:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c0f4:	10000c1e 	bne	r2,zero,2c128 <___vfiprintf_internal_r+0xd50>
   2c0f8:	d8801c17 	ldw	r2,112(sp)
   2c0fc:	8c80010e 	bge	r17,r18,2c104 <___vfiprintf_internal_r+0xd2c>
   2c100:	9023883a 	mov	r17,r18
   2c104:	da802317 	ldw	r10,140(sp)
   2c108:	5455883a 	add	r10,r10,r17
   2c10c:	da802315 	stw	r10,140(sp)
   2c110:	103e4126 	beq	r2,zero,2ba18 <__alt_data_end+0xfffeba18>
   2c114:	d9402117 	ldw	r5,132(sp)
   2c118:	d9002017 	ldw	r4,128(sp)
   2c11c:	d9801a04 	addi	r6,sp,104
   2c120:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c124:	103e3c26 	beq	r2,zero,2ba18 <__alt_data_end+0xfffeba18>
   2c128:	dd002117 	ldw	r20,132(sp)
   2c12c:	a080030b 	ldhu	r2,12(r20)
   2c130:	1080100c 	andi	r2,r2,64
   2c134:	1001231e 	bne	r2,zero,2c5c4 <___vfiprintf_internal_r+0x11ec>
   2c138:	d8802317 	ldw	r2,140(sp)
   2c13c:	003d7b06 	br	2b72c <__alt_data_end+0xfffeb72c>
   2c140:	1000991e 	bne	r2,zero,2c3a8 <___vfiprintf_internal_r+0xfd0>
   2c144:	00c00044 	movi	r3,1
   2c148:	9805883a 	mov	r2,r19
   2c14c:	dd400015 	stw	r21,0(sp)
   2c150:	dcc00115 	stw	r19,4(sp)
   2c154:	dcc01c15 	stw	r19,112(sp)
   2c158:	d8c01b15 	stw	r3,108(sp)
   2c15c:	d811883a 	mov	r8,sp
   2c160:	42000204 	addi	r8,r8,8
   2c164:	a2c0010c 	andi	r11,r20,4
   2c168:	583fe426 	beq	r11,zero,2c0fc <__alt_data_end+0xfffec0fc>
   2c16c:	8ca7c83a 	sub	r19,r17,r18
   2c170:	04ffe20e 	bge	zero,r19,2c0fc <__alt_data_end+0xfffec0fc>
   2c174:	01c00404 	movi	r7,16
   2c178:	3cffcc0e 	bge	r7,r19,2c0ac <__alt_data_end+0xfffec0ac>
   2c17c:	028000f4 	movhi	r10,3
   2c180:	52854a04 	addi	r10,r10,5416
   2c184:	d9001b17 	ldw	r4,108(sp)
   2c188:	da802415 	stw	r10,144(sp)
   2c18c:	382b883a 	mov	r21,r7
   2c190:	050001c4 	movi	r20,7
   2c194:	df002017 	ldw	fp,128(sp)
   2c198:	00000506 	br	2c1b0 <___vfiprintf_internal_r+0xdd8>
   2c19c:	21400084 	addi	r5,r4,2
   2c1a0:	42000204 	addi	r8,r8,8
   2c1a4:	1809883a 	mov	r4,r3
   2c1a8:	9cfffc04 	addi	r19,r19,-16
   2c1ac:	acffc40e 	bge	r21,r19,2c0c0 <__alt_data_end+0xfffec0c0>
   2c1b0:	10800404 	addi	r2,r2,16
   2c1b4:	20c00044 	addi	r3,r4,1
   2c1b8:	45800015 	stw	r22,0(r8)
   2c1bc:	45400115 	stw	r21,4(r8)
   2c1c0:	d8801c15 	stw	r2,112(sp)
   2c1c4:	d8c01b15 	stw	r3,108(sp)
   2c1c8:	a0fff40e 	bge	r20,r3,2c19c <__alt_data_end+0xfffec19c>
   2c1cc:	1000041e 	bne	r2,zero,2c1e0 <___vfiprintf_internal_r+0xe08>
   2c1d0:	01400044 	movi	r5,1
   2c1d4:	0009883a 	mov	r4,zero
   2c1d8:	d811883a 	mov	r8,sp
   2c1dc:	003ff206 	br	2c1a8 <__alt_data_end+0xfffec1a8>
   2c1e0:	d9402117 	ldw	r5,132(sp)
   2c1e4:	d9801a04 	addi	r6,sp,104
   2c1e8:	e009883a 	mov	r4,fp
   2c1ec:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c1f0:	103fcd1e 	bne	r2,zero,2c128 <__alt_data_end+0xfffec128>
   2c1f4:	d9001b17 	ldw	r4,108(sp)
   2c1f8:	d8801c17 	ldw	r2,112(sp)
   2c1fc:	d811883a 	mov	r8,sp
   2c200:	21400044 	addi	r5,r4,1
   2c204:	003fe806 	br	2c1a8 <__alt_data_end+0xfffec1a8>
   2c208:	d9402117 	ldw	r5,132(sp)
   2c20c:	d9002017 	ldw	r4,128(sp)
   2c210:	d9801a04 	addi	r6,sp,104
   2c214:	d9c02b15 	stw	r7,172(sp)
   2c218:	db402a15 	stw	r13,168(sp)
   2c21c:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c220:	d9c02b17 	ldw	r7,172(sp)
   2c224:	db402a17 	ldw	r13,168(sp)
   2c228:	103fbf1e 	bne	r2,zero,2c128 <__alt_data_end+0xfffec128>
   2c22c:	d9401b17 	ldw	r5,108(sp)
   2c230:	d8801c17 	ldw	r2,112(sp)
   2c234:	d811883a 	mov	r8,sp
   2c238:	29800044 	addi	r6,r5,1
   2c23c:	003dc406 	br	2b950 <__alt_data_end+0xfffeb950>
   2c240:	1000d21e 	bne	r2,zero,2c58c <___vfiprintf_internal_r+0x11b4>
   2c244:	d8c01d87 	ldb	r3,118(sp)
   2c248:	18009526 	beq	r3,zero,2c4a0 <___vfiprintf_internal_r+0x10c8>
   2c24c:	00800044 	movi	r2,1
   2c250:	d8c01d84 	addi	r3,sp,118
   2c254:	1009883a 	mov	r4,r2
   2c258:	d8c00015 	stw	r3,0(sp)
   2c25c:	d8800115 	stw	r2,4(sp)
   2c260:	d811883a 	mov	r8,sp
   2c264:	200b883a 	mov	r5,r4
   2c268:	42000204 	addi	r8,r8,8
   2c26c:	21000044 	addi	r4,r4,1
   2c270:	003d9706 	br	2b8d0 <__alt_data_end+0xfffeb8d0>
   2c274:	d9001d04 	addi	r4,sp,116
   2c278:	00800084 	movi	r2,2
   2c27c:	d9000015 	stw	r4,0(sp)
   2c280:	d8800115 	stw	r2,4(sp)
   2c284:	1809883a 	mov	r4,r3
   2c288:	d811883a 	mov	r8,sp
   2c28c:	200b883a 	mov	r5,r4
   2c290:	42000204 	addi	r8,r8,8
   2c294:	21000044 	addi	r4,r4,1
   2c298:	003f4e06 	br	2bfd4 <__alt_data_end+0xfffebfd4>
   2c29c:	d8001d85 	stb	zero,118(sp)
   2c2a0:	48005016 	blt	r9,zero,2c3e4 <___vfiprintf_internal_r+0x100c>
   2c2a4:	00ffdfc4 	movi	r3,-129
   2c2a8:	94c4b03a 	or	r2,r18,r19
   2c2ac:	a0e8703a 	and	r20,r20,r3
   2c2b0:	103d4426 	beq	r2,zero,2b7c4 <__alt_data_end+0xfffeb7c4>
   2c2b4:	0039883a 	mov	fp,zero
   2c2b8:	d9002617 	ldw	r4,152(sp)
   2c2bc:	dd401a04 	addi	r21,sp,104
   2c2c0:	908003cc 	andi	r2,r18,15
   2c2c4:	9806973a 	slli	r3,r19,28
   2c2c8:	2085883a 	add	r2,r4,r2
   2c2cc:	9024d13a 	srli	r18,r18,4
   2c2d0:	10800003 	ldbu	r2,0(r2)
   2c2d4:	9826d13a 	srli	r19,r19,4
   2c2d8:	ad7fffc4 	addi	r21,r21,-1
   2c2dc:	1ca4b03a 	or	r18,r3,r18
   2c2e0:	a8800005 	stb	r2,0(r21)
   2c2e4:	94c4b03a 	or	r2,r18,r19
   2c2e8:	103ff51e 	bne	r2,zero,2c2c0 <__alt_data_end+0xfffec2c0>
   2c2ec:	003e5906 	br	2bc54 <__alt_data_end+0xfffebc54>
   2c2f0:	d9402117 	ldw	r5,132(sp)
   2c2f4:	d9002017 	ldw	r4,128(sp)
   2c2f8:	d9801a04 	addi	r6,sp,104
   2c2fc:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c300:	103f891e 	bne	r2,zero,2c128 <__alt_data_end+0xfffec128>
   2c304:	d8801c17 	ldw	r2,112(sp)
   2c308:	d811883a 	mov	r8,sp
   2c30c:	003f9506 	br	2c164 <__alt_data_end+0xfffec164>
   2c310:	d9402117 	ldw	r5,132(sp)
   2c314:	d9002017 	ldw	r4,128(sp)
   2c318:	d9801a04 	addi	r6,sp,104
   2c31c:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c320:	103f811e 	bne	r2,zero,2c128 <__alt_data_end+0xfffec128>
   2c324:	d811883a 	mov	r8,sp
   2c328:	003ced06 	br	2b6e0 <__alt_data_end+0xfffeb6e0>
   2c32c:	d9402117 	ldw	r5,132(sp)
   2c330:	d9002017 	ldw	r4,128(sp)
   2c334:	d9801a04 	addi	r6,sp,104
   2c338:	da402c15 	stw	r9,176(sp)
   2c33c:	db802a15 	stw	r14,168(sp)
   2c340:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c344:	da402c17 	ldw	r9,176(sp)
   2c348:	db802a17 	ldw	r14,168(sp)
   2c34c:	103f761e 	bne	r2,zero,2c128 <__alt_data_end+0xfffec128>
   2c350:	d9401b17 	ldw	r5,108(sp)
   2c354:	d8801c17 	ldw	r2,112(sp)
   2c358:	d811883a 	mov	r8,sp
   2c35c:	29000044 	addi	r4,r5,1
   2c360:	003d5b06 	br	2b8d0 <__alt_data_end+0xfffeb8d0>
   2c364:	d9402117 	ldw	r5,132(sp)
   2c368:	d9002017 	ldw	r4,128(sp)
   2c36c:	d9801a04 	addi	r6,sp,104
   2c370:	da402c15 	stw	r9,176(sp)
   2c374:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c378:	da402c17 	ldw	r9,176(sp)
   2c37c:	103f6a1e 	bne	r2,zero,2c128 <__alt_data_end+0xfffec128>
   2c380:	d9401b17 	ldw	r5,108(sp)
   2c384:	d8801c17 	ldw	r2,112(sp)
   2c388:	d811883a 	mov	r8,sp
   2c38c:	29000044 	addi	r4,r5,1
   2c390:	003f1006 	br	2bfd4 <__alt_data_end+0xfffebfd4>
   2c394:	1000c31e 	bne	r2,zero,2c6a4 <___vfiprintf_internal_r+0x12cc>
   2c398:	01000044 	movi	r4,1
   2c39c:	000b883a 	mov	r5,zero
   2c3a0:	d811883a 	mov	r8,sp
   2c3a4:	003f0d06 	br	2bfdc <__alt_data_end+0xfffebfdc>
   2c3a8:	d9402117 	ldw	r5,132(sp)
   2c3ac:	d9002017 	ldw	r4,128(sp)
   2c3b0:	d9801a04 	addi	r6,sp,104
   2c3b4:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c3b8:	103f5b1e 	bne	r2,zero,2c128 <__alt_data_end+0xfffec128>
   2c3bc:	d9001b17 	ldw	r4,108(sp)
   2c3c0:	d8801c17 	ldw	r2,112(sp)
   2c3c4:	d811883a 	mov	r8,sp
   2c3c8:	21000044 	addi	r4,r4,1
   2c3cc:	003d8006 	br	2b9d0 <__alt_data_end+0xfffeb9d0>
   2c3d0:	010000f4 	movhi	r4,3
   2c3d4:	2104e604 	addi	r4,r4,5016
   2c3d8:	d9002615 	stw	r4,152(sp)
   2c3dc:	d8c02215 	stw	r3,136(sp)
   2c3e0:	1029883a 	mov	r20,r2
   2c3e4:	94c4b03a 	or	r2,r18,r19
   2c3e8:	103fb21e 	bne	r2,zero,2c2b4 <__alt_data_end+0xfffec2b4>
   2c3ec:	0039883a 	mov	fp,zero
   2c3f0:	00800084 	movi	r2,2
   2c3f4:	003e6b06 	br	2bda4 <__alt_data_end+0xfffebda4>
   2c3f8:	da802217 	ldw	r10,136(sp)
   2c3fc:	d8001d85 	stb	zero,118(sp)
   2c400:	0027883a 	mov	r19,zero
   2c404:	50800104 	addi	r2,r10,4
   2c408:	54800017 	ldw	r18,0(r10)
   2c40c:	483e6016 	blt	r9,zero,2bd90 <__alt_data_end+0xfffebd90>
   2c410:	00ffdfc4 	movi	r3,-129
   2c414:	d8802215 	stw	r2,136(sp)
   2c418:	a0e8703a 	and	r20,r20,r3
   2c41c:	0039883a 	mov	fp,zero
   2c420:	903ebb26 	beq	r18,zero,2bf10 <__alt_data_end+0xfffebf10>
   2c424:	00800244 	movi	r2,9
   2c428:	14bdee36 	bltu	r2,r18,2bbe4 <__alt_data_end+0xfffebbe4>
   2c42c:	003eba06 	br	2bf18 <__alt_data_end+0xfffebf18>
   2c430:	00800c04 	movi	r2,48
   2c434:	d8c01d45 	stb	r3,117(sp)
   2c438:	d8801d05 	stb	r2,116(sp)
   2c43c:	d8001d85 	stb	zero,118(sp)
   2c440:	a0c00094 	ori	r3,r20,2
   2c444:	4800a916 	blt	r9,zero,2c6ec <___vfiprintf_internal_r+0x1314>
   2c448:	00bfdfc4 	movi	r2,-129
   2c44c:	a096703a 	and	r11,r20,r2
   2c450:	5d000094 	ori	r20,r11,2
   2c454:	0039883a 	mov	fp,zero
   2c458:	003f9706 	br	2c2b8 <__alt_data_end+0xfffec2b8>
   2c45c:	8025883a 	mov	r18,r16
   2c460:	003c2e06 	br	2b51c <__alt_data_end+0xfffeb51c>
   2c464:	008000f4 	movhi	r2,3
   2c468:	1084e604 	addi	r2,r2,5016
   2c46c:	0039883a 	mov	fp,zero
   2c470:	d8802615 	stw	r2,152(sp)
   2c474:	003f9006 	br	2c2b8 <__alt_data_end+0xfffec2b8>
   2c478:	04a5c83a 	sub	r18,zero,r18
   2c47c:	07000b44 	movi	fp,45
   2c480:	9004c03a 	cmpne	r2,r18,zero
   2c484:	04e7c83a 	sub	r19,zero,r19
   2c488:	df001d85 	stb	fp,118(sp)
   2c48c:	98a7c83a 	sub	r19,r19,r2
   2c490:	48009f16 	blt	r9,zero,2c710 <___vfiprintf_internal_r+0x1338>
   2c494:	00bfdfc4 	movi	r2,-129
   2c498:	a0a8703a 	and	r20,r20,r2
   2c49c:	003dd006 	br	2bbe0 <__alt_data_end+0xfffebbe0>
   2c4a0:	70004c26 	beq	r14,zero,2c5d4 <___vfiprintf_internal_r+0x11fc>
   2c4a4:	00800084 	movi	r2,2
   2c4a8:	d8c01d04 	addi	r3,sp,116
   2c4ac:	d8c00015 	stw	r3,0(sp)
   2c4b0:	d8800115 	stw	r2,4(sp)
   2c4b4:	01000044 	movi	r4,1
   2c4b8:	d811883a 	mov	r8,sp
   2c4bc:	003f7306 	br	2c28c <__alt_data_end+0xfffec28c>
   2c4c0:	a080100c 	andi	r2,r20,64
   2c4c4:	da802217 	ldw	r10,136(sp)
   2c4c8:	103e0626 	beq	r2,zero,2bce4 <__alt_data_end+0xfffebce4>
   2c4cc:	5480000f 	ldh	r18,0(r10)
   2c4d0:	52800104 	addi	r10,r10,4
   2c4d4:	da802215 	stw	r10,136(sp)
   2c4d8:	9027d7fa 	srai	r19,r18,31
   2c4dc:	9805883a 	mov	r2,r19
   2c4e0:	003db806 	br	2bbc4 <__alt_data_end+0xfffebbc4>
   2c4e4:	a080040c 	andi	r2,r20,16
   2c4e8:	1000091e 	bne	r2,zero,2c510 <___vfiprintf_internal_r+0x1138>
   2c4ec:	a2c0100c 	andi	r11,r20,64
   2c4f0:	58000726 	beq	r11,zero,2c510 <___vfiprintf_internal_r+0x1138>
   2c4f4:	da802217 	ldw	r10,136(sp)
   2c4f8:	50800017 	ldw	r2,0(r10)
   2c4fc:	52800104 	addi	r10,r10,4
   2c500:	da802215 	stw	r10,136(sp)
   2c504:	da802317 	ldw	r10,140(sp)
   2c508:	1280000d 	sth	r10,0(r2)
   2c50c:	003be706 	br	2b4ac <__alt_data_end+0xfffeb4ac>
   2c510:	da802217 	ldw	r10,136(sp)
   2c514:	50800017 	ldw	r2,0(r10)
   2c518:	52800104 	addi	r10,r10,4
   2c51c:	da802215 	stw	r10,136(sp)
   2c520:	da802317 	ldw	r10,140(sp)
   2c524:	12800015 	stw	r10,0(r2)
   2c528:	003be006 	br	2b4ac <__alt_data_end+0xfffeb4ac>
   2c52c:	a080100c 	andi	r2,r20,64
   2c530:	da802217 	ldw	r10,136(sp)
   2c534:	10003026 	beq	r2,zero,2c5f8 <___vfiprintf_internal_r+0x1220>
   2c538:	5480000b 	ldhu	r18,0(r10)
   2c53c:	52800104 	addi	r10,r10,4
   2c540:	0027883a 	mov	r19,zero
   2c544:	da802215 	stw	r10,136(sp)
   2c548:	003d8006 	br	2bb4c <__alt_data_end+0xfffebb4c>
   2c54c:	80c00007 	ldb	r3,0(r16)
   2c550:	003c0006 	br	2b554 <__alt_data_end+0xfffeb554>
   2c554:	a080100c 	andi	r2,r20,64
   2c558:	d8001d85 	stb	zero,118(sp)
   2c55c:	da802217 	ldw	r10,136(sp)
   2c560:	1000201e 	bne	r2,zero,2c5e4 <___vfiprintf_internal_r+0x120c>
   2c564:	50800104 	addi	r2,r10,4
   2c568:	54800017 	ldw	r18,0(r10)
   2c56c:	0027883a 	mov	r19,zero
   2c570:	483def0e 	bge	r9,zero,2bd30 <__alt_data_end+0xfffebd30>
   2c574:	94c6b03a 	or	r3,r18,r19
   2c578:	d8802215 	stw	r2,136(sp)
   2c57c:	183d4e1e 	bne	r3,zero,2bab8 <__alt_data_end+0xfffebab8>
   2c580:	0039883a 	mov	fp,zero
   2c584:	0005883a 	mov	r2,zero
   2c588:	003e0606 	br	2bda4 <__alt_data_end+0xfffebda4>
   2c58c:	d9402117 	ldw	r5,132(sp)
   2c590:	d9002017 	ldw	r4,128(sp)
   2c594:	d9801a04 	addi	r6,sp,104
   2c598:	da402c15 	stw	r9,176(sp)
   2c59c:	db802a15 	stw	r14,168(sp)
   2c5a0:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c5a4:	da402c17 	ldw	r9,176(sp)
   2c5a8:	db802a17 	ldw	r14,168(sp)
   2c5ac:	103ede1e 	bne	r2,zero,2c128 <__alt_data_end+0xfffec128>
   2c5b0:	d9401b17 	ldw	r5,108(sp)
   2c5b4:	d8801c17 	ldw	r2,112(sp)
   2c5b8:	d811883a 	mov	r8,sp
   2c5bc:	29000044 	addi	r4,r5,1
   2c5c0:	003e7406 	br	2bf94 <__alt_data_end+0xfffebf94>
   2c5c4:	00bfffc4 	movi	r2,-1
   2c5c8:	003c5806 	br	2b72c <__alt_data_end+0xfffeb72c>
   2c5cc:	d811883a 	mov	r8,sp
   2c5d0:	003ee806 	br	2c174 <__alt_data_end+0xfffec174>
   2c5d4:	000b883a 	mov	r5,zero
   2c5d8:	01000044 	movi	r4,1
   2c5dc:	d811883a 	mov	r8,sp
   2c5e0:	003e7c06 	br	2bfd4 <__alt_data_end+0xfffebfd4>
   2c5e4:	50800104 	addi	r2,r10,4
   2c5e8:	5480000b 	ldhu	r18,0(r10)
   2c5ec:	0027883a 	mov	r19,zero
   2c5f0:	483dcf0e 	bge	r9,zero,2bd30 <__alt_data_end+0xfffebd30>
   2c5f4:	003fdf06 	br	2c574 <__alt_data_end+0xfffec574>
   2c5f8:	54800017 	ldw	r18,0(r10)
   2c5fc:	52800104 	addi	r10,r10,4
   2c600:	0027883a 	mov	r19,zero
   2c604:	da802215 	stw	r10,136(sp)
   2c608:	003d5006 	br	2bb4c <__alt_data_end+0xfffebb4c>
   2c60c:	50800104 	addi	r2,r10,4
   2c610:	5480000b 	ldhu	r18,0(r10)
   2c614:	0027883a 	mov	r19,zero
   2c618:	483f7d0e 	bge	r9,zero,2c410 <__alt_data_end+0xfffec410>
   2c61c:	003ddc06 	br	2bd90 <__alt_data_end+0xfffebd90>
   2c620:	d8c02215 	stw	r3,136(sp)
   2c624:	0039883a 	mov	fp,zero
   2c628:	003ddb06 	br	2bd98 <__alt_data_end+0xfffebd98>
   2c62c:	028000f4 	movhi	r10,3
   2c630:	52854604 	addi	r10,r10,5400
   2c634:	da802415 	stw	r10,144(sp)
   2c638:	003e8306 	br	2c048 <__alt_data_end+0xfffec048>
   2c63c:	d8801c17 	ldw	r2,112(sp)
   2c640:	dd002117 	ldw	r20,132(sp)
   2c644:	103eb926 	beq	r2,zero,2c12c <__alt_data_end+0xfffec12c>
   2c648:	d9002017 	ldw	r4,128(sp)
   2c64c:	d9801a04 	addi	r6,sp,104
   2c650:	a00b883a 	mov	r5,r20
   2c654:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c658:	003eb406 	br	2c12c <__alt_data_end+0xfffec12c>
   2c65c:	80c00043 	ldbu	r3,1(r16)
   2c660:	a5000814 	ori	r20,r20,32
   2c664:	84000044 	addi	r16,r16,1
   2c668:	18c03fcc 	andi	r3,r3,255
   2c66c:	18c0201c 	xori	r3,r3,128
   2c670:	18ffe004 	addi	r3,r3,-128
   2c674:	003bb706 	br	2b554 <__alt_data_end+0xfffeb554>
   2c678:	a809883a 	mov	r4,r21
   2c67c:	d8c02a15 	stw	r3,168(sp)
   2c680:	da002b15 	stw	r8,172(sp)
   2c684:	002b22c0 	call	2b22c <strlen>
   2c688:	d8c02a17 	ldw	r3,168(sp)
   2c68c:	1027883a 	mov	r19,r2
   2c690:	df001d83 	ldbu	fp,118(sp)
   2c694:	d8c02215 	stw	r3,136(sp)
   2c698:	0013883a 	mov	r9,zero
   2c69c:	da002b17 	ldw	r8,172(sp)
   2c6a0:	003c4d06 	br	2b7d8 <__alt_data_end+0xfffeb7d8>
   2c6a4:	d9402117 	ldw	r5,132(sp)
   2c6a8:	d9002017 	ldw	r4,128(sp)
   2c6ac:	d9801a04 	addi	r6,sp,104
   2c6b0:	da402c15 	stw	r9,176(sp)
   2c6b4:	002b2c40 	call	2b2c4 <__sprint_r.part.0>
   2c6b8:	da402c17 	ldw	r9,176(sp)
   2c6bc:	103e9a1e 	bne	r2,zero,2c128 <__alt_data_end+0xfffec128>
   2c6c0:	d9401b17 	ldw	r5,108(sp)
   2c6c4:	d8801c17 	ldw	r2,112(sp)
   2c6c8:	d811883a 	mov	r8,sp
   2c6cc:	29000044 	addi	r4,r5,1
   2c6d0:	003e4206 	br	2bfdc <__alt_data_end+0xfffebfdc>
   2c6d4:	d9401b17 	ldw	r5,108(sp)
   2c6d8:	010000f4 	movhi	r4,3
   2c6dc:	21054a04 	addi	r4,r4,5416
   2c6e0:	d9002415 	stw	r4,144(sp)
   2c6e4:	29400044 	addi	r5,r5,1
   2c6e8:	003c6d06 	br	2b8a0 <__alt_data_end+0xfffeb8a0>
   2c6ec:	0039883a 	mov	fp,zero
   2c6f0:	00800084 	movi	r2,2
   2c6f4:	10803fcc 	andi	r2,r2,255
   2c6f8:	01000044 	movi	r4,1
   2c6fc:	11001e26 	beq	r2,r4,2c778 <___vfiprintf_internal_r+0x13a0>
   2c700:	01000084 	movi	r4,2
   2c704:	11001e1e 	bne	r2,r4,2c780 <___vfiprintf_internal_r+0x13a8>
   2c708:	1829883a 	mov	r20,r3
   2c70c:	003eea06 	br	2c2b8 <__alt_data_end+0xfffec2b8>
   2c710:	a007883a 	mov	r3,r20
   2c714:	00800044 	movi	r2,1
   2c718:	003ff606 	br	2c6f4 <__alt_data_end+0xfffec6f4>
   2c71c:	00800184 	movi	r2,6
   2c720:	1240012e 	bgeu	r2,r9,2c728 <___vfiprintf_internal_r+0x1350>
   2c724:	1013883a 	mov	r9,r2
   2c728:	4827883a 	mov	r19,r9
   2c72c:	4825883a 	mov	r18,r9
   2c730:	48001516 	blt	r9,zero,2c788 <___vfiprintf_internal_r+0x13b0>
   2c734:	054000f4 	movhi	r21,3
   2c738:	d8c02215 	stw	r3,136(sp)
   2c73c:	ad44eb04 	addi	r21,r21,5036
   2c740:	003d1406 	br	2bb94 <__alt_data_end+0xfffebb94>
   2c744:	028000f4 	movhi	r10,3
   2c748:	52854604 	addi	r10,r10,5400
   2c74c:	da802415 	stw	r10,144(sp)
   2c750:	200d883a 	mov	r6,r4
   2c754:	003c9106 	br	2b99c <__alt_data_end+0xfffeb99c>
   2c758:	5021883a 	mov	r16,r10
   2c75c:	0013883a 	mov	r9,zero
   2c760:	003b7d06 	br	2b558 <__alt_data_end+0xfffeb558>
   2c764:	4827883a 	mov	r19,r9
   2c768:	df001d83 	ldbu	fp,118(sp)
   2c76c:	d8c02215 	stw	r3,136(sp)
   2c770:	0013883a 	mov	r9,zero
   2c774:	003c1806 	br	2b7d8 <__alt_data_end+0xfffeb7d8>
   2c778:	1829883a 	mov	r20,r3
   2c77c:	003d1806 	br	2bbe0 <__alt_data_end+0xfffebbe0>
   2c780:	1829883a 	mov	r20,r3
   2c784:	003ccd06 	br	2babc <__alt_data_end+0xfffebabc>
   2c788:	0025883a 	mov	r18,zero
   2c78c:	003fe906 	br	2c734 <__alt_data_end+0xfffec734>
   2c790:	d8802217 	ldw	r2,136(sp)
   2c794:	80c00043 	ldbu	r3,1(r16)
   2c798:	5021883a 	mov	r16,r10
   2c79c:	12400017 	ldw	r9,0(r2)
   2c7a0:	10800104 	addi	r2,r2,4
   2c7a4:	d8802215 	stw	r2,136(sp)
   2c7a8:	483faf0e 	bge	r9,zero,2c668 <__alt_data_end+0xfffec668>
   2c7ac:	18c03fcc 	andi	r3,r3,255
   2c7b0:	18c0201c 	xori	r3,r3,128
   2c7b4:	027fffc4 	movi	r9,-1
   2c7b8:	18ffe004 	addi	r3,r3,-128
   2c7bc:	003b6506 	br	2b554 <__alt_data_end+0xfffeb554>
   2c7c0:	d9c01d85 	stb	r7,118(sp)
   2c7c4:	003ca006 	br	2ba48 <__alt_data_end+0xfffeba48>
   2c7c8:	d9c01d85 	stb	r7,118(sp)
   2c7cc:	003cad06 	br	2ba84 <__alt_data_end+0xfffeba84>
   2c7d0:	d9c01d85 	stb	r7,118(sp)
   2c7d4:	003d7d06 	br	2bdcc <__alt_data_end+0xfffebdcc>
   2c7d8:	d9c01d85 	stb	r7,118(sp)
   2c7dc:	003d5f06 	br	2bd5c <__alt_data_end+0xfffebd5c>
   2c7e0:	a080004c 	andi	r2,r20,1
   2c7e4:	0039883a 	mov	fp,zero
   2c7e8:	10000526 	beq	r2,zero,2c800 <___vfiprintf_internal_r+0x1428>
   2c7ec:	00800c04 	movi	r2,48
   2c7f0:	d88019c5 	stb	r2,103(sp)
   2c7f4:	dcc02717 	ldw	r19,156(sp)
   2c7f8:	dd4019c4 	addi	r21,sp,103
   2c7fc:	003bf606 	br	2b7d8 <__alt_data_end+0xfffeb7d8>
   2c800:	0027883a 	mov	r19,zero
   2c804:	dd401a04 	addi	r21,sp,104
   2c808:	003bf306 	br	2b7d8 <__alt_data_end+0xfffeb7d8>
   2c80c:	d9c01d85 	stb	r7,118(sp)
   2c810:	003dc806 	br	2bf34 <__alt_data_end+0xfffebf34>
   2c814:	d9c01d85 	stb	r7,118(sp)
   2c818:	003d3a06 	br	2bd04 <__alt_data_end+0xfffebd04>
   2c81c:	d9c01d85 	stb	r7,118(sp)
   2c820:	003d2a06 	br	2bccc <__alt_data_end+0xfffebccc>
   2c824:	d9c01d85 	stb	r7,118(sp)
   2c828:	003cde06 	br	2bba4 <__alt_data_end+0xfffebba4>
   2c82c:	d9c01d85 	stb	r7,118(sp)
   2c830:	003cbc06 	br	2bb24 <__alt_data_end+0xfffebb24>

0002c834 <__vfiprintf_internal>:
   2c834:	008000f4 	movhi	r2,3
   2c838:	108c0804 	addi	r2,r2,12320
   2c83c:	300f883a 	mov	r7,r6
   2c840:	280d883a 	mov	r6,r5
   2c844:	200b883a 	mov	r5,r4
   2c848:	11000017 	ldw	r4,0(r2)
   2c84c:	002b3d81 	jmpi	2b3d8 <___vfiprintf_internal_r>

0002c850 <__sbprintf>:
   2c850:	2880030b 	ldhu	r2,12(r5)
   2c854:	2ac01917 	ldw	r11,100(r5)
   2c858:	2a80038b 	ldhu	r10,14(r5)
   2c85c:	2a400717 	ldw	r9,28(r5)
   2c860:	2a000917 	ldw	r8,36(r5)
   2c864:	defee204 	addi	sp,sp,-1144
   2c868:	00c10004 	movi	r3,1024
   2c86c:	dc011a15 	stw	r16,1128(sp)
   2c870:	10bfff4c 	andi	r2,r2,65533
   2c874:	2821883a 	mov	r16,r5
   2c878:	d8cb883a 	add	r5,sp,r3
   2c87c:	dc811c15 	stw	r18,1136(sp)
   2c880:	dc411b15 	stw	r17,1132(sp)
   2c884:	dfc11d15 	stw	ra,1140(sp)
   2c888:	2025883a 	mov	r18,r4
   2c88c:	d881030d 	sth	r2,1036(sp)
   2c890:	dac11915 	stw	r11,1124(sp)
   2c894:	da81038d 	sth	r10,1038(sp)
   2c898:	da410715 	stw	r9,1052(sp)
   2c89c:	da010915 	stw	r8,1060(sp)
   2c8a0:	dec10015 	stw	sp,1024(sp)
   2c8a4:	dec10415 	stw	sp,1040(sp)
   2c8a8:	d8c10215 	stw	r3,1032(sp)
   2c8ac:	d8c10515 	stw	r3,1044(sp)
   2c8b0:	d8010615 	stw	zero,1048(sp)
   2c8b4:	002b3d80 	call	2b3d8 <___vfiprintf_internal_r>
   2c8b8:	1023883a 	mov	r17,r2
   2c8bc:	10000416 	blt	r2,zero,2c8d0 <__sbprintf+0x80>
   2c8c0:	d9410004 	addi	r5,sp,1024
   2c8c4:	9009883a 	mov	r4,r18
   2c8c8:	00287e40 	call	287e4 <_fflush_r>
   2c8cc:	10000d1e 	bne	r2,zero,2c904 <__sbprintf+0xb4>
   2c8d0:	d881030b 	ldhu	r2,1036(sp)
   2c8d4:	1080100c 	andi	r2,r2,64
   2c8d8:	10000326 	beq	r2,zero,2c8e8 <__sbprintf+0x98>
   2c8dc:	8080030b 	ldhu	r2,12(r16)
   2c8e0:	10801014 	ori	r2,r2,64
   2c8e4:	8080030d 	sth	r2,12(r16)
   2c8e8:	8805883a 	mov	r2,r17
   2c8ec:	dfc11d17 	ldw	ra,1140(sp)
   2c8f0:	dc811c17 	ldw	r18,1136(sp)
   2c8f4:	dc411b17 	ldw	r17,1132(sp)
   2c8f8:	dc011a17 	ldw	r16,1128(sp)
   2c8fc:	dec11e04 	addi	sp,sp,1144
   2c900:	f800283a 	ret
   2c904:	047fffc4 	movi	r17,-1
   2c908:	003ff106 	br	2c8d0 <__alt_data_end+0xfffec8d0>

0002c90c <_write_r>:
   2c90c:	defffd04 	addi	sp,sp,-12
   2c910:	2805883a 	mov	r2,r5
   2c914:	dc000015 	stw	r16,0(sp)
   2c918:	040000f4 	movhi	r16,3
   2c91c:	dc400115 	stw	r17,4(sp)
   2c920:	300b883a 	mov	r5,r6
   2c924:	8412d904 	addi	r16,r16,19300
   2c928:	2023883a 	mov	r17,r4
   2c92c:	380d883a 	mov	r6,r7
   2c930:	1009883a 	mov	r4,r2
   2c934:	dfc00215 	stw	ra,8(sp)
   2c938:	80000015 	stw	zero,0(r16)
   2c93c:	002f1900 	call	2f190 <write>
   2c940:	00ffffc4 	movi	r3,-1
   2c944:	10c00526 	beq	r2,r3,2c95c <_write_r+0x50>
   2c948:	dfc00217 	ldw	ra,8(sp)
   2c94c:	dc400117 	ldw	r17,4(sp)
   2c950:	dc000017 	ldw	r16,0(sp)
   2c954:	dec00304 	addi	sp,sp,12
   2c958:	f800283a 	ret
   2c95c:	80c00017 	ldw	r3,0(r16)
   2c960:	183ff926 	beq	r3,zero,2c948 <__alt_data_end+0xfffec948>
   2c964:	88c00015 	stw	r3,0(r17)
   2c968:	003ff706 	br	2c948 <__alt_data_end+0xfffec948>

0002c96c <_close_r>:
   2c96c:	defffd04 	addi	sp,sp,-12
   2c970:	dc000015 	stw	r16,0(sp)
   2c974:	040000f4 	movhi	r16,3
   2c978:	dc400115 	stw	r17,4(sp)
   2c97c:	8412d904 	addi	r16,r16,19300
   2c980:	2023883a 	mov	r17,r4
   2c984:	2809883a 	mov	r4,r5
   2c988:	dfc00215 	stw	ra,8(sp)
   2c98c:	80000015 	stw	zero,0(r16)
   2c990:	002e9500 	call	2e950 <close>
   2c994:	00ffffc4 	movi	r3,-1
   2c998:	10c00526 	beq	r2,r3,2c9b0 <_close_r+0x44>
   2c99c:	dfc00217 	ldw	ra,8(sp)
   2c9a0:	dc400117 	ldw	r17,4(sp)
   2c9a4:	dc000017 	ldw	r16,0(sp)
   2c9a8:	dec00304 	addi	sp,sp,12
   2c9ac:	f800283a 	ret
   2c9b0:	80c00017 	ldw	r3,0(r16)
   2c9b4:	183ff926 	beq	r3,zero,2c99c <__alt_data_end+0xfffec99c>
   2c9b8:	88c00015 	stw	r3,0(r17)
   2c9bc:	003ff706 	br	2c99c <__alt_data_end+0xfffec99c>

0002c9c0 <_calloc_r>:
   2c9c0:	298b383a 	mul	r5,r5,r6
   2c9c4:	defffe04 	addi	sp,sp,-8
   2c9c8:	dfc00115 	stw	ra,4(sp)
   2c9cc:	dc000015 	stw	r16,0(sp)
   2c9d0:	00294640 	call	29464 <_malloc_r>
   2c9d4:	10002926 	beq	r2,zero,2ca7c <_calloc_r+0xbc>
   2c9d8:	11bfff17 	ldw	r6,-4(r2)
   2c9dc:	1021883a 	mov	r16,r2
   2c9e0:	00bfff04 	movi	r2,-4
   2c9e4:	308c703a 	and	r6,r6,r2
   2c9e8:	00c00904 	movi	r3,36
   2c9ec:	308d883a 	add	r6,r6,r2
   2c9f0:	19801636 	bltu	r3,r6,2ca4c <_calloc_r+0x8c>
   2c9f4:	008004c4 	movi	r2,19
   2c9f8:	11800b2e 	bgeu	r2,r6,2ca28 <_calloc_r+0x68>
   2c9fc:	80000015 	stw	zero,0(r16)
   2ca00:	80000115 	stw	zero,4(r16)
   2ca04:	008006c4 	movi	r2,27
   2ca08:	11801a2e 	bgeu	r2,r6,2ca74 <_calloc_r+0xb4>
   2ca0c:	80000215 	stw	zero,8(r16)
   2ca10:	80000315 	stw	zero,12(r16)
   2ca14:	30c0151e 	bne	r6,r3,2ca6c <_calloc_r+0xac>
   2ca18:	80000415 	stw	zero,16(r16)
   2ca1c:	80800604 	addi	r2,r16,24
   2ca20:	80000515 	stw	zero,20(r16)
   2ca24:	00000106 	br	2ca2c <_calloc_r+0x6c>
   2ca28:	8005883a 	mov	r2,r16
   2ca2c:	10000015 	stw	zero,0(r2)
   2ca30:	10000115 	stw	zero,4(r2)
   2ca34:	10000215 	stw	zero,8(r2)
   2ca38:	8005883a 	mov	r2,r16
   2ca3c:	dfc00117 	ldw	ra,4(sp)
   2ca40:	dc000017 	ldw	r16,0(sp)
   2ca44:	dec00204 	addi	sp,sp,8
   2ca48:	f800283a 	ret
   2ca4c:	000b883a 	mov	r5,zero
   2ca50:	8009883a 	mov	r4,r16
   2ca54:	0029e9c0 	call	29e9c <memset>
   2ca58:	8005883a 	mov	r2,r16
   2ca5c:	dfc00117 	ldw	ra,4(sp)
   2ca60:	dc000017 	ldw	r16,0(sp)
   2ca64:	dec00204 	addi	sp,sp,8
   2ca68:	f800283a 	ret
   2ca6c:	80800404 	addi	r2,r16,16
   2ca70:	003fee06 	br	2ca2c <__alt_data_end+0xfffeca2c>
   2ca74:	80800204 	addi	r2,r16,8
   2ca78:	003fec06 	br	2ca2c <__alt_data_end+0xfffeca2c>
   2ca7c:	0005883a 	mov	r2,zero
   2ca80:	003fee06 	br	2ca3c <__alt_data_end+0xfffeca3c>

0002ca84 <_fclose_r>:
   2ca84:	28003926 	beq	r5,zero,2cb6c <_fclose_r+0xe8>
   2ca88:	defffc04 	addi	sp,sp,-16
   2ca8c:	dc400115 	stw	r17,4(sp)
   2ca90:	dc000015 	stw	r16,0(sp)
   2ca94:	dfc00315 	stw	ra,12(sp)
   2ca98:	dc800215 	stw	r18,8(sp)
   2ca9c:	2023883a 	mov	r17,r4
   2caa0:	2821883a 	mov	r16,r5
   2caa4:	20000226 	beq	r4,zero,2cab0 <_fclose_r+0x2c>
   2caa8:	20800e17 	ldw	r2,56(r4)
   2caac:	10002726 	beq	r2,zero,2cb4c <_fclose_r+0xc8>
   2cab0:	8080030f 	ldh	r2,12(r16)
   2cab4:	1000071e 	bne	r2,zero,2cad4 <_fclose_r+0x50>
   2cab8:	0005883a 	mov	r2,zero
   2cabc:	dfc00317 	ldw	ra,12(sp)
   2cac0:	dc800217 	ldw	r18,8(sp)
   2cac4:	dc400117 	ldw	r17,4(sp)
   2cac8:	dc000017 	ldw	r16,0(sp)
   2cacc:	dec00404 	addi	sp,sp,16
   2cad0:	f800283a 	ret
   2cad4:	800b883a 	mov	r5,r16
   2cad8:	8809883a 	mov	r4,r17
   2cadc:	00285c80 	call	285c8 <__sflush_r>
   2cae0:	1025883a 	mov	r18,r2
   2cae4:	80800b17 	ldw	r2,44(r16)
   2cae8:	10000426 	beq	r2,zero,2cafc <_fclose_r+0x78>
   2caec:	81400717 	ldw	r5,28(r16)
   2caf0:	8809883a 	mov	r4,r17
   2caf4:	103ee83a 	callr	r2
   2caf8:	10001616 	blt	r2,zero,2cb54 <_fclose_r+0xd0>
   2cafc:	8080030b 	ldhu	r2,12(r16)
   2cb00:	1080200c 	andi	r2,r2,128
   2cb04:	1000151e 	bne	r2,zero,2cb5c <_fclose_r+0xd8>
   2cb08:	81400c17 	ldw	r5,48(r16)
   2cb0c:	28000526 	beq	r5,zero,2cb24 <_fclose_r+0xa0>
   2cb10:	80801004 	addi	r2,r16,64
   2cb14:	28800226 	beq	r5,r2,2cb20 <_fclose_r+0x9c>
   2cb18:	8809883a 	mov	r4,r17
   2cb1c:	0028d340 	call	28d34 <_free_r>
   2cb20:	80000c15 	stw	zero,48(r16)
   2cb24:	81401117 	ldw	r5,68(r16)
   2cb28:	28000326 	beq	r5,zero,2cb38 <_fclose_r+0xb4>
   2cb2c:	8809883a 	mov	r4,r17
   2cb30:	0028d340 	call	28d34 <_free_r>
   2cb34:	80001115 	stw	zero,68(r16)
   2cb38:	0028bd00 	call	28bd0 <__sfp_lock_acquire>
   2cb3c:	8000030d 	sth	zero,12(r16)
   2cb40:	0028bd40 	call	28bd4 <__sfp_lock_release>
   2cb44:	9005883a 	mov	r2,r18
   2cb48:	003fdc06 	br	2cabc <__alt_data_end+0xfffecabc>
   2cb4c:	0028bc00 	call	28bc0 <__sinit>
   2cb50:	003fd706 	br	2cab0 <__alt_data_end+0xfffecab0>
   2cb54:	04bfffc4 	movi	r18,-1
   2cb58:	003fe806 	br	2cafc <__alt_data_end+0xfffecafc>
   2cb5c:	81400417 	ldw	r5,16(r16)
   2cb60:	8809883a 	mov	r4,r17
   2cb64:	0028d340 	call	28d34 <_free_r>
   2cb68:	003fe706 	br	2cb08 <__alt_data_end+0xfffecb08>
   2cb6c:	0005883a 	mov	r2,zero
   2cb70:	f800283a 	ret

0002cb74 <fclose>:
   2cb74:	008000f4 	movhi	r2,3
   2cb78:	108c0804 	addi	r2,r2,12320
   2cb7c:	200b883a 	mov	r5,r4
   2cb80:	11000017 	ldw	r4,0(r2)
   2cb84:	002ca841 	jmpi	2ca84 <_fclose_r>

0002cb88 <__fputwc>:
   2cb88:	defff804 	addi	sp,sp,-32
   2cb8c:	dcc00415 	stw	r19,16(sp)
   2cb90:	dc800315 	stw	r18,12(sp)
   2cb94:	dc000115 	stw	r16,4(sp)
   2cb98:	dfc00715 	stw	ra,28(sp)
   2cb9c:	dd400615 	stw	r21,24(sp)
   2cba0:	dd000515 	stw	r20,20(sp)
   2cba4:	dc400215 	stw	r17,8(sp)
   2cba8:	2027883a 	mov	r19,r4
   2cbac:	2825883a 	mov	r18,r5
   2cbb0:	3021883a 	mov	r16,r6
   2cbb4:	00292540 	call	29254 <__locale_mb_cur_max>
   2cbb8:	00c00044 	movi	r3,1
   2cbbc:	10c03e26 	beq	r2,r3,2ccb8 <__fputwc+0x130>
   2cbc0:	81c01704 	addi	r7,r16,92
   2cbc4:	900d883a 	mov	r6,r18
   2cbc8:	d80b883a 	mov	r5,sp
   2cbcc:	9809883a 	mov	r4,r19
   2cbd0:	002dbd40 	call	2dbd4 <_wcrtomb_r>
   2cbd4:	1029883a 	mov	r20,r2
   2cbd8:	00bfffc4 	movi	r2,-1
   2cbdc:	a0802026 	beq	r20,r2,2cc60 <__fputwc+0xd8>
   2cbe0:	d9400003 	ldbu	r5,0(sp)
   2cbe4:	a0001c26 	beq	r20,zero,2cc58 <__fputwc+0xd0>
   2cbe8:	0023883a 	mov	r17,zero
   2cbec:	05400284 	movi	r21,10
   2cbf0:	00000906 	br	2cc18 <__fputwc+0x90>
   2cbf4:	80800017 	ldw	r2,0(r16)
   2cbf8:	11400005 	stb	r5,0(r2)
   2cbfc:	80c00017 	ldw	r3,0(r16)
   2cc00:	18c00044 	addi	r3,r3,1
   2cc04:	80c00015 	stw	r3,0(r16)
   2cc08:	8c400044 	addi	r17,r17,1
   2cc0c:	dc45883a 	add	r2,sp,r17
   2cc10:	8d00112e 	bgeu	r17,r20,2cc58 <__fputwc+0xd0>
   2cc14:	11400003 	ldbu	r5,0(r2)
   2cc18:	80c00217 	ldw	r3,8(r16)
   2cc1c:	18ffffc4 	addi	r3,r3,-1
   2cc20:	80c00215 	stw	r3,8(r16)
   2cc24:	183ff30e 	bge	r3,zero,2cbf4 <__alt_data_end+0xfffecbf4>
   2cc28:	80800617 	ldw	r2,24(r16)
   2cc2c:	18801916 	blt	r3,r2,2cc94 <__fputwc+0x10c>
   2cc30:	80800017 	ldw	r2,0(r16)
   2cc34:	11400005 	stb	r5,0(r2)
   2cc38:	80800017 	ldw	r2,0(r16)
   2cc3c:	10c00003 	ldbu	r3,0(r2)
   2cc40:	10800044 	addi	r2,r2,1
   2cc44:	1d402326 	beq	r3,r21,2ccd4 <__fputwc+0x14c>
   2cc48:	80800015 	stw	r2,0(r16)
   2cc4c:	8c400044 	addi	r17,r17,1
   2cc50:	dc45883a 	add	r2,sp,r17
   2cc54:	8d3fef36 	bltu	r17,r20,2cc14 <__alt_data_end+0xfffecc14>
   2cc58:	9005883a 	mov	r2,r18
   2cc5c:	00000406 	br	2cc70 <__fputwc+0xe8>
   2cc60:	80c0030b 	ldhu	r3,12(r16)
   2cc64:	a005883a 	mov	r2,r20
   2cc68:	18c01014 	ori	r3,r3,64
   2cc6c:	80c0030d 	sth	r3,12(r16)
   2cc70:	dfc00717 	ldw	ra,28(sp)
   2cc74:	dd400617 	ldw	r21,24(sp)
   2cc78:	dd000517 	ldw	r20,20(sp)
   2cc7c:	dcc00417 	ldw	r19,16(sp)
   2cc80:	dc800317 	ldw	r18,12(sp)
   2cc84:	dc400217 	ldw	r17,8(sp)
   2cc88:	dc000117 	ldw	r16,4(sp)
   2cc8c:	dec00804 	addi	sp,sp,32
   2cc90:	f800283a 	ret
   2cc94:	800d883a 	mov	r6,r16
   2cc98:	29403fcc 	andi	r5,r5,255
   2cc9c:	9809883a 	mov	r4,r19
   2cca0:	002da7c0 	call	2da7c <__swbuf_r>
   2cca4:	10bfffe0 	cmpeqi	r2,r2,-1
   2cca8:	10803fcc 	andi	r2,r2,255
   2ccac:	103fd626 	beq	r2,zero,2cc08 <__alt_data_end+0xfffecc08>
   2ccb0:	00bfffc4 	movi	r2,-1
   2ccb4:	003fee06 	br	2cc70 <__alt_data_end+0xfffecc70>
   2ccb8:	90ffffc4 	addi	r3,r18,-1
   2ccbc:	01003f84 	movi	r4,254
   2ccc0:	20ffbf36 	bltu	r4,r3,2cbc0 <__alt_data_end+0xfffecbc0>
   2ccc4:	900b883a 	mov	r5,r18
   2ccc8:	dc800005 	stb	r18,0(sp)
   2cccc:	1029883a 	mov	r20,r2
   2ccd0:	003fc506 	br	2cbe8 <__alt_data_end+0xfffecbe8>
   2ccd4:	800d883a 	mov	r6,r16
   2ccd8:	a80b883a 	mov	r5,r21
   2ccdc:	9809883a 	mov	r4,r19
   2cce0:	002da7c0 	call	2da7c <__swbuf_r>
   2cce4:	10bfffe0 	cmpeqi	r2,r2,-1
   2cce8:	003fef06 	br	2cca8 <__alt_data_end+0xfffecca8>

0002ccec <_fputwc_r>:
   2ccec:	3080030b 	ldhu	r2,12(r6)
   2ccf0:	10c8000c 	andi	r3,r2,8192
   2ccf4:	1800051e 	bne	r3,zero,2cd0c <_fputwc_r+0x20>
   2ccf8:	30c01917 	ldw	r3,100(r6)
   2ccfc:	10880014 	ori	r2,r2,8192
   2cd00:	3080030d 	sth	r2,12(r6)
   2cd04:	18880014 	ori	r2,r3,8192
   2cd08:	30801915 	stw	r2,100(r6)
   2cd0c:	002cb881 	jmpi	2cb88 <__fputwc>

0002cd10 <fputwc>:
   2cd10:	008000f4 	movhi	r2,3
   2cd14:	defffc04 	addi	sp,sp,-16
   2cd18:	108c0804 	addi	r2,r2,12320
   2cd1c:	dc000115 	stw	r16,4(sp)
   2cd20:	14000017 	ldw	r16,0(r2)
   2cd24:	dc400215 	stw	r17,8(sp)
   2cd28:	dfc00315 	stw	ra,12(sp)
   2cd2c:	2023883a 	mov	r17,r4
   2cd30:	80000226 	beq	r16,zero,2cd3c <fputwc+0x2c>
   2cd34:	80800e17 	ldw	r2,56(r16)
   2cd38:	10001026 	beq	r2,zero,2cd7c <fputwc+0x6c>
   2cd3c:	2880030b 	ldhu	r2,12(r5)
   2cd40:	10c8000c 	andi	r3,r2,8192
   2cd44:	1800051e 	bne	r3,zero,2cd5c <fputwc+0x4c>
   2cd48:	28c01917 	ldw	r3,100(r5)
   2cd4c:	10880014 	ori	r2,r2,8192
   2cd50:	2880030d 	sth	r2,12(r5)
   2cd54:	18880014 	ori	r2,r3,8192
   2cd58:	28801915 	stw	r2,100(r5)
   2cd5c:	280d883a 	mov	r6,r5
   2cd60:	8009883a 	mov	r4,r16
   2cd64:	880b883a 	mov	r5,r17
   2cd68:	dfc00317 	ldw	ra,12(sp)
   2cd6c:	dc400217 	ldw	r17,8(sp)
   2cd70:	dc000117 	ldw	r16,4(sp)
   2cd74:	dec00404 	addi	sp,sp,16
   2cd78:	002cb881 	jmpi	2cb88 <__fputwc>
   2cd7c:	8009883a 	mov	r4,r16
   2cd80:	d9400015 	stw	r5,0(sp)
   2cd84:	0028bc00 	call	28bc0 <__sinit>
   2cd88:	d9400017 	ldw	r5,0(sp)
   2cd8c:	003feb06 	br	2cd3c <__alt_data_end+0xfffecd3c>

0002cd90 <_fstat_r>:
   2cd90:	defffd04 	addi	sp,sp,-12
   2cd94:	2805883a 	mov	r2,r5
   2cd98:	dc000015 	stw	r16,0(sp)
   2cd9c:	040000f4 	movhi	r16,3
   2cda0:	dc400115 	stw	r17,4(sp)
   2cda4:	8412d904 	addi	r16,r16,19300
   2cda8:	2023883a 	mov	r17,r4
   2cdac:	300b883a 	mov	r5,r6
   2cdb0:	1009883a 	mov	r4,r2
   2cdb4:	dfc00215 	stw	ra,8(sp)
   2cdb8:	80000015 	stw	zero,0(r16)
   2cdbc:	002ea880 	call	2ea88 <fstat>
   2cdc0:	00ffffc4 	movi	r3,-1
   2cdc4:	10c00526 	beq	r2,r3,2cddc <_fstat_r+0x4c>
   2cdc8:	dfc00217 	ldw	ra,8(sp)
   2cdcc:	dc400117 	ldw	r17,4(sp)
   2cdd0:	dc000017 	ldw	r16,0(sp)
   2cdd4:	dec00304 	addi	sp,sp,12
   2cdd8:	f800283a 	ret
   2cddc:	80c00017 	ldw	r3,0(r16)
   2cde0:	183ff926 	beq	r3,zero,2cdc8 <__alt_data_end+0xfffecdc8>
   2cde4:	88c00015 	stw	r3,0(r17)
   2cde8:	003ff706 	br	2cdc8 <__alt_data_end+0xfffecdc8>

0002cdec <__sfvwrite_r>:
   2cdec:	30800217 	ldw	r2,8(r6)
   2cdf0:	10006726 	beq	r2,zero,2cf90 <__sfvwrite_r+0x1a4>
   2cdf4:	28c0030b 	ldhu	r3,12(r5)
   2cdf8:	defff404 	addi	sp,sp,-48
   2cdfc:	dd400715 	stw	r21,28(sp)
   2ce00:	dd000615 	stw	r20,24(sp)
   2ce04:	dc000215 	stw	r16,8(sp)
   2ce08:	dfc00b15 	stw	ra,44(sp)
   2ce0c:	df000a15 	stw	fp,40(sp)
   2ce10:	ddc00915 	stw	r23,36(sp)
   2ce14:	dd800815 	stw	r22,32(sp)
   2ce18:	dcc00515 	stw	r19,20(sp)
   2ce1c:	dc800415 	stw	r18,16(sp)
   2ce20:	dc400315 	stw	r17,12(sp)
   2ce24:	1880020c 	andi	r2,r3,8
   2ce28:	2821883a 	mov	r16,r5
   2ce2c:	202b883a 	mov	r21,r4
   2ce30:	3029883a 	mov	r20,r6
   2ce34:	10002726 	beq	r2,zero,2ced4 <__sfvwrite_r+0xe8>
   2ce38:	28800417 	ldw	r2,16(r5)
   2ce3c:	10002526 	beq	r2,zero,2ced4 <__sfvwrite_r+0xe8>
   2ce40:	1880008c 	andi	r2,r3,2
   2ce44:	a4400017 	ldw	r17,0(r20)
   2ce48:	10002a26 	beq	r2,zero,2cef4 <__sfvwrite_r+0x108>
   2ce4c:	05a00034 	movhi	r22,32768
   2ce50:	0027883a 	mov	r19,zero
   2ce54:	0025883a 	mov	r18,zero
   2ce58:	b5bf0004 	addi	r22,r22,-1024
   2ce5c:	980d883a 	mov	r6,r19
   2ce60:	a809883a 	mov	r4,r21
   2ce64:	90004626 	beq	r18,zero,2cf80 <__sfvwrite_r+0x194>
   2ce68:	900f883a 	mov	r7,r18
   2ce6c:	b480022e 	bgeu	r22,r18,2ce78 <__sfvwrite_r+0x8c>
   2ce70:	01e00034 	movhi	r7,32768
   2ce74:	39ff0004 	addi	r7,r7,-1024
   2ce78:	80800917 	ldw	r2,36(r16)
   2ce7c:	81400717 	ldw	r5,28(r16)
   2ce80:	103ee83a 	callr	r2
   2ce84:	0080570e 	bge	zero,r2,2cfe4 <__sfvwrite_r+0x1f8>
   2ce88:	a0c00217 	ldw	r3,8(r20)
   2ce8c:	98a7883a 	add	r19,r19,r2
   2ce90:	90a5c83a 	sub	r18,r18,r2
   2ce94:	1885c83a 	sub	r2,r3,r2
   2ce98:	a0800215 	stw	r2,8(r20)
   2ce9c:	103fef1e 	bne	r2,zero,2ce5c <__alt_data_end+0xfffece5c>
   2cea0:	0005883a 	mov	r2,zero
   2cea4:	dfc00b17 	ldw	ra,44(sp)
   2cea8:	df000a17 	ldw	fp,40(sp)
   2ceac:	ddc00917 	ldw	r23,36(sp)
   2ceb0:	dd800817 	ldw	r22,32(sp)
   2ceb4:	dd400717 	ldw	r21,28(sp)
   2ceb8:	dd000617 	ldw	r20,24(sp)
   2cebc:	dcc00517 	ldw	r19,20(sp)
   2cec0:	dc800417 	ldw	r18,16(sp)
   2cec4:	dc400317 	ldw	r17,12(sp)
   2cec8:	dc000217 	ldw	r16,8(sp)
   2cecc:	dec00c04 	addi	sp,sp,48
   2ced0:	f800283a 	ret
   2ced4:	800b883a 	mov	r5,r16
   2ced8:	a809883a 	mov	r4,r21
   2cedc:	0026bec0 	call	26bec <__swsetup_r>
   2cee0:	1000eb1e 	bne	r2,zero,2d290 <__sfvwrite_r+0x4a4>
   2cee4:	80c0030b 	ldhu	r3,12(r16)
   2cee8:	a4400017 	ldw	r17,0(r20)
   2ceec:	1880008c 	andi	r2,r3,2
   2cef0:	103fd61e 	bne	r2,zero,2ce4c <__alt_data_end+0xfffece4c>
   2cef4:	1880004c 	andi	r2,r3,1
   2cef8:	10003f1e 	bne	r2,zero,2cff8 <__sfvwrite_r+0x20c>
   2cefc:	0039883a 	mov	fp,zero
   2cf00:	0025883a 	mov	r18,zero
   2cf04:	90001a26 	beq	r18,zero,2cf70 <__sfvwrite_r+0x184>
   2cf08:	1880800c 	andi	r2,r3,512
   2cf0c:	84c00217 	ldw	r19,8(r16)
   2cf10:	10002126 	beq	r2,zero,2cf98 <__sfvwrite_r+0x1ac>
   2cf14:	982f883a 	mov	r23,r19
   2cf18:	94c09336 	bltu	r18,r19,2d168 <__sfvwrite_r+0x37c>
   2cf1c:	1881200c 	andi	r2,r3,1152
   2cf20:	10009e1e 	bne	r2,zero,2d19c <__sfvwrite_r+0x3b0>
   2cf24:	81000017 	ldw	r4,0(r16)
   2cf28:	b80d883a 	mov	r6,r23
   2cf2c:	e00b883a 	mov	r5,fp
   2cf30:	002d35c0 	call	2d35c <memmove>
   2cf34:	80c00217 	ldw	r3,8(r16)
   2cf38:	81000017 	ldw	r4,0(r16)
   2cf3c:	9005883a 	mov	r2,r18
   2cf40:	1ce7c83a 	sub	r19,r3,r19
   2cf44:	25cf883a 	add	r7,r4,r23
   2cf48:	84c00215 	stw	r19,8(r16)
   2cf4c:	81c00015 	stw	r7,0(r16)
   2cf50:	a0c00217 	ldw	r3,8(r20)
   2cf54:	e0b9883a 	add	fp,fp,r2
   2cf58:	90a5c83a 	sub	r18,r18,r2
   2cf5c:	18a7c83a 	sub	r19,r3,r2
   2cf60:	a4c00215 	stw	r19,8(r20)
   2cf64:	983fce26 	beq	r19,zero,2cea0 <__alt_data_end+0xfffecea0>
   2cf68:	80c0030b 	ldhu	r3,12(r16)
   2cf6c:	903fe61e 	bne	r18,zero,2cf08 <__alt_data_end+0xfffecf08>
   2cf70:	8f000017 	ldw	fp,0(r17)
   2cf74:	8c800117 	ldw	r18,4(r17)
   2cf78:	8c400204 	addi	r17,r17,8
   2cf7c:	003fe106 	br	2cf04 <__alt_data_end+0xfffecf04>
   2cf80:	8cc00017 	ldw	r19,0(r17)
   2cf84:	8c800117 	ldw	r18,4(r17)
   2cf88:	8c400204 	addi	r17,r17,8
   2cf8c:	003fb306 	br	2ce5c <__alt_data_end+0xfffece5c>
   2cf90:	0005883a 	mov	r2,zero
   2cf94:	f800283a 	ret
   2cf98:	81000017 	ldw	r4,0(r16)
   2cf9c:	80800417 	ldw	r2,16(r16)
   2cfa0:	11005736 	bltu	r2,r4,2d100 <__sfvwrite_r+0x314>
   2cfa4:	85c00517 	ldw	r23,20(r16)
   2cfa8:	95c05536 	bltu	r18,r23,2d100 <__sfvwrite_r+0x314>
   2cfac:	00a00034 	movhi	r2,32768
   2cfb0:	10bfffc4 	addi	r2,r2,-1
   2cfb4:	9009883a 	mov	r4,r18
   2cfb8:	1480012e 	bgeu	r2,r18,2cfc0 <__sfvwrite_r+0x1d4>
   2cfbc:	1009883a 	mov	r4,r2
   2cfc0:	b80b883a 	mov	r5,r23
   2cfc4:	002212c0 	call	2212c <__divsi3>
   2cfc8:	15cf383a 	mul	r7,r2,r23
   2cfcc:	81400717 	ldw	r5,28(r16)
   2cfd0:	80800917 	ldw	r2,36(r16)
   2cfd4:	e00d883a 	mov	r6,fp
   2cfd8:	a809883a 	mov	r4,r21
   2cfdc:	103ee83a 	callr	r2
   2cfe0:	00bfdb16 	blt	zero,r2,2cf50 <__alt_data_end+0xfffecf50>
   2cfe4:	8080030b 	ldhu	r2,12(r16)
   2cfe8:	10801014 	ori	r2,r2,64
   2cfec:	8080030d 	sth	r2,12(r16)
   2cff0:	00bfffc4 	movi	r2,-1
   2cff4:	003fab06 	br	2cea4 <__alt_data_end+0xfffecea4>
   2cff8:	0027883a 	mov	r19,zero
   2cffc:	0011883a 	mov	r8,zero
   2d000:	0039883a 	mov	fp,zero
   2d004:	0025883a 	mov	r18,zero
   2d008:	90001f26 	beq	r18,zero,2d088 <__sfvwrite_r+0x29c>
   2d00c:	40005a26 	beq	r8,zero,2d178 <__sfvwrite_r+0x38c>
   2d010:	982d883a 	mov	r22,r19
   2d014:	94c0012e 	bgeu	r18,r19,2d01c <__sfvwrite_r+0x230>
   2d018:	902d883a 	mov	r22,r18
   2d01c:	81000017 	ldw	r4,0(r16)
   2d020:	80800417 	ldw	r2,16(r16)
   2d024:	b02f883a 	mov	r23,r22
   2d028:	81c00517 	ldw	r7,20(r16)
   2d02c:	1100032e 	bgeu	r2,r4,2d03c <__sfvwrite_r+0x250>
   2d030:	80c00217 	ldw	r3,8(r16)
   2d034:	38c7883a 	add	r3,r7,r3
   2d038:	1d801816 	blt	r3,r22,2d09c <__sfvwrite_r+0x2b0>
   2d03c:	b1c03e16 	blt	r22,r7,2d138 <__sfvwrite_r+0x34c>
   2d040:	80800917 	ldw	r2,36(r16)
   2d044:	81400717 	ldw	r5,28(r16)
   2d048:	e00d883a 	mov	r6,fp
   2d04c:	da000115 	stw	r8,4(sp)
   2d050:	a809883a 	mov	r4,r21
   2d054:	103ee83a 	callr	r2
   2d058:	102f883a 	mov	r23,r2
   2d05c:	da000117 	ldw	r8,4(sp)
   2d060:	00bfe00e 	bge	zero,r2,2cfe4 <__alt_data_end+0xfffecfe4>
   2d064:	9de7c83a 	sub	r19,r19,r23
   2d068:	98001f26 	beq	r19,zero,2d0e8 <__sfvwrite_r+0x2fc>
   2d06c:	a0800217 	ldw	r2,8(r20)
   2d070:	e5f9883a 	add	fp,fp,r23
   2d074:	95e5c83a 	sub	r18,r18,r23
   2d078:	15efc83a 	sub	r23,r2,r23
   2d07c:	a5c00215 	stw	r23,8(r20)
   2d080:	b83f8726 	beq	r23,zero,2cea0 <__alt_data_end+0xfffecea0>
   2d084:	903fe11e 	bne	r18,zero,2d00c <__alt_data_end+0xfffed00c>
   2d088:	8f000017 	ldw	fp,0(r17)
   2d08c:	8c800117 	ldw	r18,4(r17)
   2d090:	0011883a 	mov	r8,zero
   2d094:	8c400204 	addi	r17,r17,8
   2d098:	003fdb06 	br	2d008 <__alt_data_end+0xfffed008>
   2d09c:	180d883a 	mov	r6,r3
   2d0a0:	e00b883a 	mov	r5,fp
   2d0a4:	da000115 	stw	r8,4(sp)
   2d0a8:	d8c00015 	stw	r3,0(sp)
   2d0ac:	002d35c0 	call	2d35c <memmove>
   2d0b0:	d8c00017 	ldw	r3,0(sp)
   2d0b4:	80800017 	ldw	r2,0(r16)
   2d0b8:	800b883a 	mov	r5,r16
   2d0bc:	a809883a 	mov	r4,r21
   2d0c0:	10c5883a 	add	r2,r2,r3
   2d0c4:	80800015 	stw	r2,0(r16)
   2d0c8:	d8c00015 	stw	r3,0(sp)
   2d0cc:	00287e40 	call	287e4 <_fflush_r>
   2d0d0:	d8c00017 	ldw	r3,0(sp)
   2d0d4:	da000117 	ldw	r8,4(sp)
   2d0d8:	103fc21e 	bne	r2,zero,2cfe4 <__alt_data_end+0xfffecfe4>
   2d0dc:	182f883a 	mov	r23,r3
   2d0e0:	9de7c83a 	sub	r19,r19,r23
   2d0e4:	983fe11e 	bne	r19,zero,2d06c <__alt_data_end+0xfffed06c>
   2d0e8:	800b883a 	mov	r5,r16
   2d0ec:	a809883a 	mov	r4,r21
   2d0f0:	00287e40 	call	287e4 <_fflush_r>
   2d0f4:	103fbb1e 	bne	r2,zero,2cfe4 <__alt_data_end+0xfffecfe4>
   2d0f8:	0011883a 	mov	r8,zero
   2d0fc:	003fdb06 	br	2d06c <__alt_data_end+0xfffed06c>
   2d100:	94c0012e 	bgeu	r18,r19,2d108 <__sfvwrite_r+0x31c>
   2d104:	9027883a 	mov	r19,r18
   2d108:	980d883a 	mov	r6,r19
   2d10c:	e00b883a 	mov	r5,fp
   2d110:	002d35c0 	call	2d35c <memmove>
   2d114:	80800217 	ldw	r2,8(r16)
   2d118:	80c00017 	ldw	r3,0(r16)
   2d11c:	14c5c83a 	sub	r2,r2,r19
   2d120:	1cc7883a 	add	r3,r3,r19
   2d124:	80800215 	stw	r2,8(r16)
   2d128:	80c00015 	stw	r3,0(r16)
   2d12c:	10004326 	beq	r2,zero,2d23c <__sfvwrite_r+0x450>
   2d130:	9805883a 	mov	r2,r19
   2d134:	003f8606 	br	2cf50 <__alt_data_end+0xfffecf50>
   2d138:	b00d883a 	mov	r6,r22
   2d13c:	e00b883a 	mov	r5,fp
   2d140:	da000115 	stw	r8,4(sp)
   2d144:	002d35c0 	call	2d35c <memmove>
   2d148:	80800217 	ldw	r2,8(r16)
   2d14c:	80c00017 	ldw	r3,0(r16)
   2d150:	da000117 	ldw	r8,4(sp)
   2d154:	1585c83a 	sub	r2,r2,r22
   2d158:	1dad883a 	add	r22,r3,r22
   2d15c:	80800215 	stw	r2,8(r16)
   2d160:	85800015 	stw	r22,0(r16)
   2d164:	003fbf06 	br	2d064 <__alt_data_end+0xfffed064>
   2d168:	81000017 	ldw	r4,0(r16)
   2d16c:	9027883a 	mov	r19,r18
   2d170:	902f883a 	mov	r23,r18
   2d174:	003f6c06 	br	2cf28 <__alt_data_end+0xfffecf28>
   2d178:	900d883a 	mov	r6,r18
   2d17c:	01400284 	movi	r5,10
   2d180:	e009883a 	mov	r4,fp
   2d184:	0029c700 	call	29c70 <memchr>
   2d188:	10003e26 	beq	r2,zero,2d284 <__sfvwrite_r+0x498>
   2d18c:	10800044 	addi	r2,r2,1
   2d190:	1727c83a 	sub	r19,r2,fp
   2d194:	02000044 	movi	r8,1
   2d198:	003f9d06 	br	2d010 <__alt_data_end+0xfffed010>
   2d19c:	80800517 	ldw	r2,20(r16)
   2d1a0:	81400417 	ldw	r5,16(r16)
   2d1a4:	81c00017 	ldw	r7,0(r16)
   2d1a8:	10a7883a 	add	r19,r2,r2
   2d1ac:	9885883a 	add	r2,r19,r2
   2d1b0:	1026d7fa 	srli	r19,r2,31
   2d1b4:	396dc83a 	sub	r22,r7,r5
   2d1b8:	b1000044 	addi	r4,r22,1
   2d1bc:	9885883a 	add	r2,r19,r2
   2d1c0:	1027d07a 	srai	r19,r2,1
   2d1c4:	2485883a 	add	r2,r4,r18
   2d1c8:	980d883a 	mov	r6,r19
   2d1cc:	9880022e 	bgeu	r19,r2,2d1d8 <__sfvwrite_r+0x3ec>
   2d1d0:	1027883a 	mov	r19,r2
   2d1d4:	100d883a 	mov	r6,r2
   2d1d8:	18c1000c 	andi	r3,r3,1024
   2d1dc:	18001c26 	beq	r3,zero,2d250 <__sfvwrite_r+0x464>
   2d1e0:	300b883a 	mov	r5,r6
   2d1e4:	a809883a 	mov	r4,r21
   2d1e8:	00294640 	call	29464 <_malloc_r>
   2d1ec:	102f883a 	mov	r23,r2
   2d1f0:	10002926 	beq	r2,zero,2d298 <__sfvwrite_r+0x4ac>
   2d1f4:	81400417 	ldw	r5,16(r16)
   2d1f8:	b00d883a 	mov	r6,r22
   2d1fc:	1009883a 	mov	r4,r2
   2d200:	0029d540 	call	29d54 <memcpy>
   2d204:	8080030b 	ldhu	r2,12(r16)
   2d208:	00fedfc4 	movi	r3,-1153
   2d20c:	10c4703a 	and	r2,r2,r3
   2d210:	10802014 	ori	r2,r2,128
   2d214:	8080030d 	sth	r2,12(r16)
   2d218:	bd89883a 	add	r4,r23,r22
   2d21c:	9d8fc83a 	sub	r7,r19,r22
   2d220:	85c00415 	stw	r23,16(r16)
   2d224:	84c00515 	stw	r19,20(r16)
   2d228:	81000015 	stw	r4,0(r16)
   2d22c:	9027883a 	mov	r19,r18
   2d230:	81c00215 	stw	r7,8(r16)
   2d234:	902f883a 	mov	r23,r18
   2d238:	003f3b06 	br	2cf28 <__alt_data_end+0xfffecf28>
   2d23c:	800b883a 	mov	r5,r16
   2d240:	a809883a 	mov	r4,r21
   2d244:	00287e40 	call	287e4 <_fflush_r>
   2d248:	103fb926 	beq	r2,zero,2d130 <__alt_data_end+0xfffed130>
   2d24c:	003f6506 	br	2cfe4 <__alt_data_end+0xfffecfe4>
   2d250:	a809883a 	mov	r4,r21
   2d254:	002d5180 	call	2d518 <_realloc_r>
   2d258:	102f883a 	mov	r23,r2
   2d25c:	103fee1e 	bne	r2,zero,2d218 <__alt_data_end+0xfffed218>
   2d260:	81400417 	ldw	r5,16(r16)
   2d264:	a809883a 	mov	r4,r21
   2d268:	0028d340 	call	28d34 <_free_r>
   2d26c:	8080030b 	ldhu	r2,12(r16)
   2d270:	00ffdfc4 	movi	r3,-129
   2d274:	1884703a 	and	r2,r3,r2
   2d278:	00c00304 	movi	r3,12
   2d27c:	a8c00015 	stw	r3,0(r21)
   2d280:	003f5906 	br	2cfe8 <__alt_data_end+0xfffecfe8>
   2d284:	94c00044 	addi	r19,r18,1
   2d288:	02000044 	movi	r8,1
   2d28c:	003f6006 	br	2d010 <__alt_data_end+0xfffed010>
   2d290:	00bfffc4 	movi	r2,-1
   2d294:	003f0306 	br	2cea4 <__alt_data_end+0xfffecea4>
   2d298:	00800304 	movi	r2,12
   2d29c:	a8800015 	stw	r2,0(r21)
   2d2a0:	8080030b 	ldhu	r2,12(r16)
   2d2a4:	003f5006 	br	2cfe8 <__alt_data_end+0xfffecfe8>

0002d2a8 <_isatty_r>:
   2d2a8:	defffd04 	addi	sp,sp,-12
   2d2ac:	dc000015 	stw	r16,0(sp)
   2d2b0:	040000f4 	movhi	r16,3
   2d2b4:	dc400115 	stw	r17,4(sp)
   2d2b8:	8412d904 	addi	r16,r16,19300
   2d2bc:	2023883a 	mov	r17,r4
   2d2c0:	2809883a 	mov	r4,r5
   2d2c4:	dfc00215 	stw	ra,8(sp)
   2d2c8:	80000015 	stw	zero,0(r16)
   2d2cc:	002eb740 	call	2eb74 <isatty>
   2d2d0:	00ffffc4 	movi	r3,-1
   2d2d4:	10c00526 	beq	r2,r3,2d2ec <_isatty_r+0x44>
   2d2d8:	dfc00217 	ldw	ra,8(sp)
   2d2dc:	dc400117 	ldw	r17,4(sp)
   2d2e0:	dc000017 	ldw	r16,0(sp)
   2d2e4:	dec00304 	addi	sp,sp,12
   2d2e8:	f800283a 	ret
   2d2ec:	80c00017 	ldw	r3,0(r16)
   2d2f0:	183ff926 	beq	r3,zero,2d2d8 <__alt_data_end+0xfffed2d8>
   2d2f4:	88c00015 	stw	r3,0(r17)
   2d2f8:	003ff706 	br	2d2d8 <__alt_data_end+0xfffed2d8>

0002d2fc <_lseek_r>:
   2d2fc:	defffd04 	addi	sp,sp,-12
   2d300:	2805883a 	mov	r2,r5
   2d304:	dc000015 	stw	r16,0(sp)
   2d308:	040000f4 	movhi	r16,3
   2d30c:	dc400115 	stw	r17,4(sp)
   2d310:	300b883a 	mov	r5,r6
   2d314:	8412d904 	addi	r16,r16,19300
   2d318:	2023883a 	mov	r17,r4
   2d31c:	380d883a 	mov	r6,r7
   2d320:	1009883a 	mov	r4,r2
   2d324:	dfc00215 	stw	ra,8(sp)
   2d328:	80000015 	stw	zero,0(r16)
   2d32c:	002ed400 	call	2ed40 <lseek>
   2d330:	00ffffc4 	movi	r3,-1
   2d334:	10c00526 	beq	r2,r3,2d34c <_lseek_r+0x50>
   2d338:	dfc00217 	ldw	ra,8(sp)
   2d33c:	dc400117 	ldw	r17,4(sp)
   2d340:	dc000017 	ldw	r16,0(sp)
   2d344:	dec00304 	addi	sp,sp,12
   2d348:	f800283a 	ret
   2d34c:	80c00017 	ldw	r3,0(r16)
   2d350:	183ff926 	beq	r3,zero,2d338 <__alt_data_end+0xfffed338>
   2d354:	88c00015 	stw	r3,0(r17)
   2d358:	003ff706 	br	2d338 <__alt_data_end+0xfffed338>

0002d35c <memmove>:
   2d35c:	2005883a 	mov	r2,r4
   2d360:	29000b2e 	bgeu	r5,r4,2d390 <memmove+0x34>
   2d364:	298f883a 	add	r7,r5,r6
   2d368:	21c0092e 	bgeu	r4,r7,2d390 <memmove+0x34>
   2d36c:	2187883a 	add	r3,r4,r6
   2d370:	198bc83a 	sub	r5,r3,r6
   2d374:	30004826 	beq	r6,zero,2d498 <memmove+0x13c>
   2d378:	39ffffc4 	addi	r7,r7,-1
   2d37c:	39000003 	ldbu	r4,0(r7)
   2d380:	18ffffc4 	addi	r3,r3,-1
   2d384:	19000005 	stb	r4,0(r3)
   2d388:	28fffb1e 	bne	r5,r3,2d378 <__alt_data_end+0xfffed378>
   2d38c:	f800283a 	ret
   2d390:	00c003c4 	movi	r3,15
   2d394:	1980412e 	bgeu	r3,r6,2d49c <memmove+0x140>
   2d398:	2886b03a 	or	r3,r5,r2
   2d39c:	18c000cc 	andi	r3,r3,3
   2d3a0:	1800401e 	bne	r3,zero,2d4a4 <memmove+0x148>
   2d3a4:	33fffc04 	addi	r15,r6,-16
   2d3a8:	781ed13a 	srli	r15,r15,4
   2d3ac:	28c00104 	addi	r3,r5,4
   2d3b0:	13400104 	addi	r13,r2,4
   2d3b4:	781c913a 	slli	r14,r15,4
   2d3b8:	2b000204 	addi	r12,r5,8
   2d3bc:	12c00204 	addi	r11,r2,8
   2d3c0:	73800504 	addi	r14,r14,20
   2d3c4:	2a800304 	addi	r10,r5,12
   2d3c8:	12400304 	addi	r9,r2,12
   2d3cc:	2b9d883a 	add	r14,r5,r14
   2d3d0:	2811883a 	mov	r8,r5
   2d3d4:	100f883a 	mov	r7,r2
   2d3d8:	41000017 	ldw	r4,0(r8)
   2d3dc:	39c00404 	addi	r7,r7,16
   2d3e0:	18c00404 	addi	r3,r3,16
   2d3e4:	393ffc15 	stw	r4,-16(r7)
   2d3e8:	193ffc17 	ldw	r4,-16(r3)
   2d3ec:	6b400404 	addi	r13,r13,16
   2d3f0:	5ac00404 	addi	r11,r11,16
   2d3f4:	693ffc15 	stw	r4,-16(r13)
   2d3f8:	61000017 	ldw	r4,0(r12)
   2d3fc:	4a400404 	addi	r9,r9,16
   2d400:	42000404 	addi	r8,r8,16
   2d404:	593ffc15 	stw	r4,-16(r11)
   2d408:	51000017 	ldw	r4,0(r10)
   2d40c:	63000404 	addi	r12,r12,16
   2d410:	52800404 	addi	r10,r10,16
   2d414:	493ffc15 	stw	r4,-16(r9)
   2d418:	1bbfef1e 	bne	r3,r14,2d3d8 <__alt_data_end+0xfffed3d8>
   2d41c:	79000044 	addi	r4,r15,1
   2d420:	2008913a 	slli	r4,r4,4
   2d424:	328003cc 	andi	r10,r6,15
   2d428:	02c000c4 	movi	r11,3
   2d42c:	1107883a 	add	r3,r2,r4
   2d430:	290b883a 	add	r5,r5,r4
   2d434:	5a801e2e 	bgeu	r11,r10,2d4b0 <memmove+0x154>
   2d438:	1813883a 	mov	r9,r3
   2d43c:	2811883a 	mov	r8,r5
   2d440:	500f883a 	mov	r7,r10
   2d444:	41000017 	ldw	r4,0(r8)
   2d448:	4a400104 	addi	r9,r9,4
   2d44c:	39ffff04 	addi	r7,r7,-4
   2d450:	493fff15 	stw	r4,-4(r9)
   2d454:	42000104 	addi	r8,r8,4
   2d458:	59fffa36 	bltu	r11,r7,2d444 <__alt_data_end+0xfffed444>
   2d45c:	513fff04 	addi	r4,r10,-4
   2d460:	2008d0ba 	srli	r4,r4,2
   2d464:	318000cc 	andi	r6,r6,3
   2d468:	21000044 	addi	r4,r4,1
   2d46c:	2109883a 	add	r4,r4,r4
   2d470:	2109883a 	add	r4,r4,r4
   2d474:	1907883a 	add	r3,r3,r4
   2d478:	290b883a 	add	r5,r5,r4
   2d47c:	30000b26 	beq	r6,zero,2d4ac <memmove+0x150>
   2d480:	198d883a 	add	r6,r3,r6
   2d484:	29c00003 	ldbu	r7,0(r5)
   2d488:	18c00044 	addi	r3,r3,1
   2d48c:	29400044 	addi	r5,r5,1
   2d490:	19ffffc5 	stb	r7,-1(r3)
   2d494:	19bffb1e 	bne	r3,r6,2d484 <__alt_data_end+0xfffed484>
   2d498:	f800283a 	ret
   2d49c:	1007883a 	mov	r3,r2
   2d4a0:	003ff606 	br	2d47c <__alt_data_end+0xfffed47c>
   2d4a4:	1007883a 	mov	r3,r2
   2d4a8:	003ff506 	br	2d480 <__alt_data_end+0xfffed480>
   2d4ac:	f800283a 	ret
   2d4b0:	500d883a 	mov	r6,r10
   2d4b4:	003ff106 	br	2d47c <__alt_data_end+0xfffed47c>

0002d4b8 <_read_r>:
   2d4b8:	defffd04 	addi	sp,sp,-12
   2d4bc:	2805883a 	mov	r2,r5
   2d4c0:	dc000015 	stw	r16,0(sp)
   2d4c4:	040000f4 	movhi	r16,3
   2d4c8:	dc400115 	stw	r17,4(sp)
   2d4cc:	300b883a 	mov	r5,r6
   2d4d0:	8412d904 	addi	r16,r16,19300
   2d4d4:	2023883a 	mov	r17,r4
   2d4d8:	380d883a 	mov	r6,r7
   2d4dc:	1009883a 	mov	r4,r2
   2d4e0:	dfc00215 	stw	ra,8(sp)
   2d4e4:	80000015 	stw	zero,0(r16)
   2d4e8:	002ef140 	call	2ef14 <read>
   2d4ec:	00ffffc4 	movi	r3,-1
   2d4f0:	10c00526 	beq	r2,r3,2d508 <_read_r+0x50>
   2d4f4:	dfc00217 	ldw	ra,8(sp)
   2d4f8:	dc400117 	ldw	r17,4(sp)
   2d4fc:	dc000017 	ldw	r16,0(sp)
   2d500:	dec00304 	addi	sp,sp,12
   2d504:	f800283a 	ret
   2d508:	80c00017 	ldw	r3,0(r16)
   2d50c:	183ff926 	beq	r3,zero,2d4f4 <__alt_data_end+0xfffed4f4>
   2d510:	88c00015 	stw	r3,0(r17)
   2d514:	003ff706 	br	2d4f4 <__alt_data_end+0xfffed4f4>

0002d518 <_realloc_r>:
   2d518:	defff604 	addi	sp,sp,-40
   2d51c:	dc800215 	stw	r18,8(sp)
   2d520:	dfc00915 	stw	ra,36(sp)
   2d524:	df000815 	stw	fp,32(sp)
   2d528:	ddc00715 	stw	r23,28(sp)
   2d52c:	dd800615 	stw	r22,24(sp)
   2d530:	dd400515 	stw	r21,20(sp)
   2d534:	dd000415 	stw	r20,16(sp)
   2d538:	dcc00315 	stw	r19,12(sp)
   2d53c:	dc400115 	stw	r17,4(sp)
   2d540:	dc000015 	stw	r16,0(sp)
   2d544:	3025883a 	mov	r18,r6
   2d548:	2800b726 	beq	r5,zero,2d828 <_realloc_r+0x310>
   2d54c:	282b883a 	mov	r21,r5
   2d550:	2029883a 	mov	r20,r4
   2d554:	002ee900 	call	2ee90 <__malloc_lock>
   2d558:	a8bfff17 	ldw	r2,-4(r21)
   2d55c:	043fff04 	movi	r16,-4
   2d560:	90c002c4 	addi	r3,r18,11
   2d564:	01000584 	movi	r4,22
   2d568:	acfffe04 	addi	r19,r21,-8
   2d56c:	1420703a 	and	r16,r2,r16
   2d570:	20c0332e 	bgeu	r4,r3,2d640 <_realloc_r+0x128>
   2d574:	047ffe04 	movi	r17,-8
   2d578:	1c62703a 	and	r17,r3,r17
   2d57c:	8807883a 	mov	r3,r17
   2d580:	88005816 	blt	r17,zero,2d6e4 <_realloc_r+0x1cc>
   2d584:	8c805736 	bltu	r17,r18,2d6e4 <_realloc_r+0x1cc>
   2d588:	80c0300e 	bge	r16,r3,2d64c <_realloc_r+0x134>
   2d58c:	070000f4 	movhi	fp,3
   2d590:	e7068204 	addi	fp,fp,6664
   2d594:	e1c00217 	ldw	r7,8(fp)
   2d598:	9c09883a 	add	r4,r19,r16
   2d59c:	22000117 	ldw	r8,4(r4)
   2d5a0:	21c06326 	beq	r4,r7,2d730 <_realloc_r+0x218>
   2d5a4:	017fff84 	movi	r5,-2
   2d5a8:	414a703a 	and	r5,r8,r5
   2d5ac:	214b883a 	add	r5,r4,r5
   2d5b0:	29800117 	ldw	r6,4(r5)
   2d5b4:	3180004c 	andi	r6,r6,1
   2d5b8:	30003f26 	beq	r6,zero,2d6b8 <_realloc_r+0x1a0>
   2d5bc:	1080004c 	andi	r2,r2,1
   2d5c0:	10008326 	beq	r2,zero,2d7d0 <_realloc_r+0x2b8>
   2d5c4:	900b883a 	mov	r5,r18
   2d5c8:	a009883a 	mov	r4,r20
   2d5cc:	00294640 	call	29464 <_malloc_r>
   2d5d0:	1025883a 	mov	r18,r2
   2d5d4:	10011e26 	beq	r2,zero,2da50 <_realloc_r+0x538>
   2d5d8:	a93fff17 	ldw	r4,-4(r21)
   2d5dc:	10fffe04 	addi	r3,r2,-8
   2d5e0:	00bfff84 	movi	r2,-2
   2d5e4:	2084703a 	and	r2,r4,r2
   2d5e8:	9885883a 	add	r2,r19,r2
   2d5ec:	1880ee26 	beq	r3,r2,2d9a8 <_realloc_r+0x490>
   2d5f0:	81bfff04 	addi	r6,r16,-4
   2d5f4:	00800904 	movi	r2,36
   2d5f8:	1180b836 	bltu	r2,r6,2d8dc <_realloc_r+0x3c4>
   2d5fc:	00c004c4 	movi	r3,19
   2d600:	19809636 	bltu	r3,r6,2d85c <_realloc_r+0x344>
   2d604:	9005883a 	mov	r2,r18
   2d608:	a807883a 	mov	r3,r21
   2d60c:	19000017 	ldw	r4,0(r3)
   2d610:	11000015 	stw	r4,0(r2)
   2d614:	19000117 	ldw	r4,4(r3)
   2d618:	11000115 	stw	r4,4(r2)
   2d61c:	18c00217 	ldw	r3,8(r3)
   2d620:	10c00215 	stw	r3,8(r2)
   2d624:	a80b883a 	mov	r5,r21
   2d628:	a009883a 	mov	r4,r20
   2d62c:	0028d340 	call	28d34 <_free_r>
   2d630:	a009883a 	mov	r4,r20
   2d634:	002eeb40 	call	2eeb4 <__malloc_unlock>
   2d638:	9005883a 	mov	r2,r18
   2d63c:	00001206 	br	2d688 <_realloc_r+0x170>
   2d640:	00c00404 	movi	r3,16
   2d644:	1823883a 	mov	r17,r3
   2d648:	003fce06 	br	2d584 <__alt_data_end+0xfffed584>
   2d64c:	a825883a 	mov	r18,r21
   2d650:	8445c83a 	sub	r2,r16,r17
   2d654:	00c003c4 	movi	r3,15
   2d658:	18802636 	bltu	r3,r2,2d6f4 <_realloc_r+0x1dc>
   2d65c:	99800117 	ldw	r6,4(r19)
   2d660:	9c07883a 	add	r3,r19,r16
   2d664:	3180004c 	andi	r6,r6,1
   2d668:	3420b03a 	or	r16,r6,r16
   2d66c:	9c000115 	stw	r16,4(r19)
   2d670:	18800117 	ldw	r2,4(r3)
   2d674:	10800054 	ori	r2,r2,1
   2d678:	18800115 	stw	r2,4(r3)
   2d67c:	a009883a 	mov	r4,r20
   2d680:	002eeb40 	call	2eeb4 <__malloc_unlock>
   2d684:	9005883a 	mov	r2,r18
   2d688:	dfc00917 	ldw	ra,36(sp)
   2d68c:	df000817 	ldw	fp,32(sp)
   2d690:	ddc00717 	ldw	r23,28(sp)
   2d694:	dd800617 	ldw	r22,24(sp)
   2d698:	dd400517 	ldw	r21,20(sp)
   2d69c:	dd000417 	ldw	r20,16(sp)
   2d6a0:	dcc00317 	ldw	r19,12(sp)
   2d6a4:	dc800217 	ldw	r18,8(sp)
   2d6a8:	dc400117 	ldw	r17,4(sp)
   2d6ac:	dc000017 	ldw	r16,0(sp)
   2d6b0:	dec00a04 	addi	sp,sp,40
   2d6b4:	f800283a 	ret
   2d6b8:	017fff04 	movi	r5,-4
   2d6bc:	414a703a 	and	r5,r8,r5
   2d6c0:	814d883a 	add	r6,r16,r5
   2d6c4:	30c01f16 	blt	r6,r3,2d744 <_realloc_r+0x22c>
   2d6c8:	20800317 	ldw	r2,12(r4)
   2d6cc:	20c00217 	ldw	r3,8(r4)
   2d6d0:	a825883a 	mov	r18,r21
   2d6d4:	3021883a 	mov	r16,r6
   2d6d8:	18800315 	stw	r2,12(r3)
   2d6dc:	10c00215 	stw	r3,8(r2)
   2d6e0:	003fdb06 	br	2d650 <__alt_data_end+0xfffed650>
   2d6e4:	00800304 	movi	r2,12
   2d6e8:	a0800015 	stw	r2,0(r20)
   2d6ec:	0005883a 	mov	r2,zero
   2d6f0:	003fe506 	br	2d688 <__alt_data_end+0xfffed688>
   2d6f4:	98c00117 	ldw	r3,4(r19)
   2d6f8:	9c4b883a 	add	r5,r19,r17
   2d6fc:	11000054 	ori	r4,r2,1
   2d700:	18c0004c 	andi	r3,r3,1
   2d704:	1c62b03a 	or	r17,r3,r17
   2d708:	9c400115 	stw	r17,4(r19)
   2d70c:	29000115 	stw	r4,4(r5)
   2d710:	2885883a 	add	r2,r5,r2
   2d714:	10c00117 	ldw	r3,4(r2)
   2d718:	29400204 	addi	r5,r5,8
   2d71c:	a009883a 	mov	r4,r20
   2d720:	18c00054 	ori	r3,r3,1
   2d724:	10c00115 	stw	r3,4(r2)
   2d728:	0028d340 	call	28d34 <_free_r>
   2d72c:	003fd306 	br	2d67c <__alt_data_end+0xfffed67c>
   2d730:	017fff04 	movi	r5,-4
   2d734:	414a703a 	and	r5,r8,r5
   2d738:	89800404 	addi	r6,r17,16
   2d73c:	8151883a 	add	r8,r16,r5
   2d740:	4180590e 	bge	r8,r6,2d8a8 <_realloc_r+0x390>
   2d744:	1080004c 	andi	r2,r2,1
   2d748:	103f9e1e 	bne	r2,zero,2d5c4 <__alt_data_end+0xfffed5c4>
   2d74c:	adbffe17 	ldw	r22,-8(r21)
   2d750:	00bfff04 	movi	r2,-4
   2d754:	9dadc83a 	sub	r22,r19,r22
   2d758:	b1800117 	ldw	r6,4(r22)
   2d75c:	3084703a 	and	r2,r6,r2
   2d760:	20002026 	beq	r4,zero,2d7e4 <_realloc_r+0x2cc>
   2d764:	80af883a 	add	r23,r16,r2
   2d768:	b96f883a 	add	r23,r23,r5
   2d76c:	21c05f26 	beq	r4,r7,2d8ec <_realloc_r+0x3d4>
   2d770:	b8c01c16 	blt	r23,r3,2d7e4 <_realloc_r+0x2cc>
   2d774:	20800317 	ldw	r2,12(r4)
   2d778:	20c00217 	ldw	r3,8(r4)
   2d77c:	81bfff04 	addi	r6,r16,-4
   2d780:	01000904 	movi	r4,36
   2d784:	18800315 	stw	r2,12(r3)
   2d788:	10c00215 	stw	r3,8(r2)
   2d78c:	b0c00217 	ldw	r3,8(r22)
   2d790:	b0800317 	ldw	r2,12(r22)
   2d794:	b4800204 	addi	r18,r22,8
   2d798:	18800315 	stw	r2,12(r3)
   2d79c:	10c00215 	stw	r3,8(r2)
   2d7a0:	21801b36 	bltu	r4,r6,2d810 <_realloc_r+0x2f8>
   2d7a4:	008004c4 	movi	r2,19
   2d7a8:	1180352e 	bgeu	r2,r6,2d880 <_realloc_r+0x368>
   2d7ac:	a8800017 	ldw	r2,0(r21)
   2d7b0:	b0800215 	stw	r2,8(r22)
   2d7b4:	a8800117 	ldw	r2,4(r21)
   2d7b8:	b0800315 	stw	r2,12(r22)
   2d7bc:	008006c4 	movi	r2,27
   2d7c0:	11807f36 	bltu	r2,r6,2d9c0 <_realloc_r+0x4a8>
   2d7c4:	b0800404 	addi	r2,r22,16
   2d7c8:	ad400204 	addi	r21,r21,8
   2d7cc:	00002d06 	br	2d884 <_realloc_r+0x36c>
   2d7d0:	adbffe17 	ldw	r22,-8(r21)
   2d7d4:	00bfff04 	movi	r2,-4
   2d7d8:	9dadc83a 	sub	r22,r19,r22
   2d7dc:	b1000117 	ldw	r4,4(r22)
   2d7e0:	2084703a 	and	r2,r4,r2
   2d7e4:	b03f7726 	beq	r22,zero,2d5c4 <__alt_data_end+0xfffed5c4>
   2d7e8:	80af883a 	add	r23,r16,r2
   2d7ec:	b8ff7516 	blt	r23,r3,2d5c4 <__alt_data_end+0xfffed5c4>
   2d7f0:	b0800317 	ldw	r2,12(r22)
   2d7f4:	b0c00217 	ldw	r3,8(r22)
   2d7f8:	81bfff04 	addi	r6,r16,-4
   2d7fc:	01000904 	movi	r4,36
   2d800:	18800315 	stw	r2,12(r3)
   2d804:	10c00215 	stw	r3,8(r2)
   2d808:	b4800204 	addi	r18,r22,8
   2d80c:	21bfe52e 	bgeu	r4,r6,2d7a4 <__alt_data_end+0xfffed7a4>
   2d810:	a80b883a 	mov	r5,r21
   2d814:	9009883a 	mov	r4,r18
   2d818:	002d35c0 	call	2d35c <memmove>
   2d81c:	b821883a 	mov	r16,r23
   2d820:	b027883a 	mov	r19,r22
   2d824:	003f8a06 	br	2d650 <__alt_data_end+0xfffed650>
   2d828:	300b883a 	mov	r5,r6
   2d82c:	dfc00917 	ldw	ra,36(sp)
   2d830:	df000817 	ldw	fp,32(sp)
   2d834:	ddc00717 	ldw	r23,28(sp)
   2d838:	dd800617 	ldw	r22,24(sp)
   2d83c:	dd400517 	ldw	r21,20(sp)
   2d840:	dd000417 	ldw	r20,16(sp)
   2d844:	dcc00317 	ldw	r19,12(sp)
   2d848:	dc800217 	ldw	r18,8(sp)
   2d84c:	dc400117 	ldw	r17,4(sp)
   2d850:	dc000017 	ldw	r16,0(sp)
   2d854:	dec00a04 	addi	sp,sp,40
   2d858:	00294641 	jmpi	29464 <_malloc_r>
   2d85c:	a8c00017 	ldw	r3,0(r21)
   2d860:	90c00015 	stw	r3,0(r18)
   2d864:	a8c00117 	ldw	r3,4(r21)
   2d868:	90c00115 	stw	r3,4(r18)
   2d86c:	00c006c4 	movi	r3,27
   2d870:	19804536 	bltu	r3,r6,2d988 <_realloc_r+0x470>
   2d874:	90800204 	addi	r2,r18,8
   2d878:	a8c00204 	addi	r3,r21,8
   2d87c:	003f6306 	br	2d60c <__alt_data_end+0xfffed60c>
   2d880:	9005883a 	mov	r2,r18
   2d884:	a8c00017 	ldw	r3,0(r21)
   2d888:	b821883a 	mov	r16,r23
   2d88c:	b027883a 	mov	r19,r22
   2d890:	10c00015 	stw	r3,0(r2)
   2d894:	a8c00117 	ldw	r3,4(r21)
   2d898:	10c00115 	stw	r3,4(r2)
   2d89c:	a8c00217 	ldw	r3,8(r21)
   2d8a0:	10c00215 	stw	r3,8(r2)
   2d8a4:	003f6a06 	br	2d650 <__alt_data_end+0xfffed650>
   2d8a8:	9c67883a 	add	r19,r19,r17
   2d8ac:	4445c83a 	sub	r2,r8,r17
   2d8b0:	e4c00215 	stw	r19,8(fp)
   2d8b4:	10800054 	ori	r2,r2,1
   2d8b8:	98800115 	stw	r2,4(r19)
   2d8bc:	a8bfff17 	ldw	r2,-4(r21)
   2d8c0:	a009883a 	mov	r4,r20
   2d8c4:	1080004c 	andi	r2,r2,1
   2d8c8:	1462b03a 	or	r17,r2,r17
   2d8cc:	ac7fff15 	stw	r17,-4(r21)
   2d8d0:	002eeb40 	call	2eeb4 <__malloc_unlock>
   2d8d4:	a805883a 	mov	r2,r21
   2d8d8:	003f6b06 	br	2d688 <__alt_data_end+0xfffed688>
   2d8dc:	a80b883a 	mov	r5,r21
   2d8e0:	9009883a 	mov	r4,r18
   2d8e4:	002d35c0 	call	2d35c <memmove>
   2d8e8:	003f4e06 	br	2d624 <__alt_data_end+0xfffed624>
   2d8ec:	89000404 	addi	r4,r17,16
   2d8f0:	b93fbc16 	blt	r23,r4,2d7e4 <__alt_data_end+0xfffed7e4>
   2d8f4:	b0800317 	ldw	r2,12(r22)
   2d8f8:	b0c00217 	ldw	r3,8(r22)
   2d8fc:	81bfff04 	addi	r6,r16,-4
   2d900:	01000904 	movi	r4,36
   2d904:	18800315 	stw	r2,12(r3)
   2d908:	10c00215 	stw	r3,8(r2)
   2d90c:	b4800204 	addi	r18,r22,8
   2d910:	21804336 	bltu	r4,r6,2da20 <_realloc_r+0x508>
   2d914:	008004c4 	movi	r2,19
   2d918:	11803f2e 	bgeu	r2,r6,2da18 <_realloc_r+0x500>
   2d91c:	a8800017 	ldw	r2,0(r21)
   2d920:	b0800215 	stw	r2,8(r22)
   2d924:	a8800117 	ldw	r2,4(r21)
   2d928:	b0800315 	stw	r2,12(r22)
   2d92c:	008006c4 	movi	r2,27
   2d930:	11803f36 	bltu	r2,r6,2da30 <_realloc_r+0x518>
   2d934:	b0800404 	addi	r2,r22,16
   2d938:	ad400204 	addi	r21,r21,8
   2d93c:	a8c00017 	ldw	r3,0(r21)
   2d940:	10c00015 	stw	r3,0(r2)
   2d944:	a8c00117 	ldw	r3,4(r21)
   2d948:	10c00115 	stw	r3,4(r2)
   2d94c:	a8c00217 	ldw	r3,8(r21)
   2d950:	10c00215 	stw	r3,8(r2)
   2d954:	b447883a 	add	r3,r22,r17
   2d958:	bc45c83a 	sub	r2,r23,r17
   2d95c:	e0c00215 	stw	r3,8(fp)
   2d960:	10800054 	ori	r2,r2,1
   2d964:	18800115 	stw	r2,4(r3)
   2d968:	b0800117 	ldw	r2,4(r22)
   2d96c:	a009883a 	mov	r4,r20
   2d970:	1080004c 	andi	r2,r2,1
   2d974:	1462b03a 	or	r17,r2,r17
   2d978:	b4400115 	stw	r17,4(r22)
   2d97c:	002eeb40 	call	2eeb4 <__malloc_unlock>
   2d980:	9005883a 	mov	r2,r18
   2d984:	003f4006 	br	2d688 <__alt_data_end+0xfffed688>
   2d988:	a8c00217 	ldw	r3,8(r21)
   2d98c:	90c00215 	stw	r3,8(r18)
   2d990:	a8c00317 	ldw	r3,12(r21)
   2d994:	90c00315 	stw	r3,12(r18)
   2d998:	30801126 	beq	r6,r2,2d9e0 <_realloc_r+0x4c8>
   2d99c:	90800404 	addi	r2,r18,16
   2d9a0:	a8c00404 	addi	r3,r21,16
   2d9a4:	003f1906 	br	2d60c <__alt_data_end+0xfffed60c>
   2d9a8:	90ffff17 	ldw	r3,-4(r18)
   2d9ac:	00bfff04 	movi	r2,-4
   2d9b0:	a825883a 	mov	r18,r21
   2d9b4:	1884703a 	and	r2,r3,r2
   2d9b8:	80a1883a 	add	r16,r16,r2
   2d9bc:	003f2406 	br	2d650 <__alt_data_end+0xfffed650>
   2d9c0:	a8800217 	ldw	r2,8(r21)
   2d9c4:	b0800415 	stw	r2,16(r22)
   2d9c8:	a8800317 	ldw	r2,12(r21)
   2d9cc:	b0800515 	stw	r2,20(r22)
   2d9d0:	31000a26 	beq	r6,r4,2d9fc <_realloc_r+0x4e4>
   2d9d4:	b0800604 	addi	r2,r22,24
   2d9d8:	ad400404 	addi	r21,r21,16
   2d9dc:	003fa906 	br	2d884 <__alt_data_end+0xfffed884>
   2d9e0:	a9000417 	ldw	r4,16(r21)
   2d9e4:	90800604 	addi	r2,r18,24
   2d9e8:	a8c00604 	addi	r3,r21,24
   2d9ec:	91000415 	stw	r4,16(r18)
   2d9f0:	a9000517 	ldw	r4,20(r21)
   2d9f4:	91000515 	stw	r4,20(r18)
   2d9f8:	003f0406 	br	2d60c <__alt_data_end+0xfffed60c>
   2d9fc:	a8c00417 	ldw	r3,16(r21)
   2da00:	ad400604 	addi	r21,r21,24
   2da04:	b0800804 	addi	r2,r22,32
   2da08:	b0c00615 	stw	r3,24(r22)
   2da0c:	a8ffff17 	ldw	r3,-4(r21)
   2da10:	b0c00715 	stw	r3,28(r22)
   2da14:	003f9b06 	br	2d884 <__alt_data_end+0xfffed884>
   2da18:	9005883a 	mov	r2,r18
   2da1c:	003fc706 	br	2d93c <__alt_data_end+0xfffed93c>
   2da20:	a80b883a 	mov	r5,r21
   2da24:	9009883a 	mov	r4,r18
   2da28:	002d35c0 	call	2d35c <memmove>
   2da2c:	003fc906 	br	2d954 <__alt_data_end+0xfffed954>
   2da30:	a8800217 	ldw	r2,8(r21)
   2da34:	b0800415 	stw	r2,16(r22)
   2da38:	a8800317 	ldw	r2,12(r21)
   2da3c:	b0800515 	stw	r2,20(r22)
   2da40:	31000726 	beq	r6,r4,2da60 <_realloc_r+0x548>
   2da44:	b0800604 	addi	r2,r22,24
   2da48:	ad400404 	addi	r21,r21,16
   2da4c:	003fbb06 	br	2d93c <__alt_data_end+0xfffed93c>
   2da50:	a009883a 	mov	r4,r20
   2da54:	002eeb40 	call	2eeb4 <__malloc_unlock>
   2da58:	0005883a 	mov	r2,zero
   2da5c:	003f0a06 	br	2d688 <__alt_data_end+0xfffed688>
   2da60:	a8c00417 	ldw	r3,16(r21)
   2da64:	ad400604 	addi	r21,r21,24
   2da68:	b0800804 	addi	r2,r22,32
   2da6c:	b0c00615 	stw	r3,24(r22)
   2da70:	a8ffff17 	ldw	r3,-4(r21)
   2da74:	b0c00715 	stw	r3,28(r22)
   2da78:	003fb006 	br	2d93c <__alt_data_end+0xfffed93c>

0002da7c <__swbuf_r>:
   2da7c:	defffb04 	addi	sp,sp,-20
   2da80:	dcc00315 	stw	r19,12(sp)
   2da84:	dc800215 	stw	r18,8(sp)
   2da88:	dc000015 	stw	r16,0(sp)
   2da8c:	dfc00415 	stw	ra,16(sp)
   2da90:	dc400115 	stw	r17,4(sp)
   2da94:	2025883a 	mov	r18,r4
   2da98:	2827883a 	mov	r19,r5
   2da9c:	3021883a 	mov	r16,r6
   2daa0:	20000226 	beq	r4,zero,2daac <__swbuf_r+0x30>
   2daa4:	20800e17 	ldw	r2,56(r4)
   2daa8:	10004226 	beq	r2,zero,2dbb4 <__swbuf_r+0x138>
   2daac:	80800617 	ldw	r2,24(r16)
   2dab0:	8100030b 	ldhu	r4,12(r16)
   2dab4:	80800215 	stw	r2,8(r16)
   2dab8:	2080020c 	andi	r2,r4,8
   2dabc:	10003626 	beq	r2,zero,2db98 <__swbuf_r+0x11c>
   2dac0:	80c00417 	ldw	r3,16(r16)
   2dac4:	18003426 	beq	r3,zero,2db98 <__swbuf_r+0x11c>
   2dac8:	2088000c 	andi	r2,r4,8192
   2dacc:	9c403fcc 	andi	r17,r19,255
   2dad0:	10001a26 	beq	r2,zero,2db3c <__swbuf_r+0xc0>
   2dad4:	80800017 	ldw	r2,0(r16)
   2dad8:	81000517 	ldw	r4,20(r16)
   2dadc:	10c7c83a 	sub	r3,r2,r3
   2dae0:	1900200e 	bge	r3,r4,2db64 <__swbuf_r+0xe8>
   2dae4:	18c00044 	addi	r3,r3,1
   2dae8:	81000217 	ldw	r4,8(r16)
   2daec:	11400044 	addi	r5,r2,1
   2daf0:	81400015 	stw	r5,0(r16)
   2daf4:	213fffc4 	addi	r4,r4,-1
   2daf8:	81000215 	stw	r4,8(r16)
   2dafc:	14c00005 	stb	r19,0(r2)
   2db00:	80800517 	ldw	r2,20(r16)
   2db04:	10c01e26 	beq	r2,r3,2db80 <__swbuf_r+0x104>
   2db08:	8080030b 	ldhu	r2,12(r16)
   2db0c:	1080004c 	andi	r2,r2,1
   2db10:	10000226 	beq	r2,zero,2db1c <__swbuf_r+0xa0>
   2db14:	00800284 	movi	r2,10
   2db18:	88801926 	beq	r17,r2,2db80 <__swbuf_r+0x104>
   2db1c:	8805883a 	mov	r2,r17
   2db20:	dfc00417 	ldw	ra,16(sp)
   2db24:	dcc00317 	ldw	r19,12(sp)
   2db28:	dc800217 	ldw	r18,8(sp)
   2db2c:	dc400117 	ldw	r17,4(sp)
   2db30:	dc000017 	ldw	r16,0(sp)
   2db34:	dec00504 	addi	sp,sp,20
   2db38:	f800283a 	ret
   2db3c:	81401917 	ldw	r5,100(r16)
   2db40:	00b7ffc4 	movi	r2,-8193
   2db44:	21080014 	ori	r4,r4,8192
   2db48:	2884703a 	and	r2,r5,r2
   2db4c:	80801915 	stw	r2,100(r16)
   2db50:	80800017 	ldw	r2,0(r16)
   2db54:	8100030d 	sth	r4,12(r16)
   2db58:	81000517 	ldw	r4,20(r16)
   2db5c:	10c7c83a 	sub	r3,r2,r3
   2db60:	193fe016 	blt	r3,r4,2dae4 <__alt_data_end+0xfffedae4>
   2db64:	800b883a 	mov	r5,r16
   2db68:	9009883a 	mov	r4,r18
   2db6c:	00287e40 	call	287e4 <_fflush_r>
   2db70:	1000071e 	bne	r2,zero,2db90 <__swbuf_r+0x114>
   2db74:	80800017 	ldw	r2,0(r16)
   2db78:	00c00044 	movi	r3,1
   2db7c:	003fda06 	br	2dae8 <__alt_data_end+0xfffedae8>
   2db80:	800b883a 	mov	r5,r16
   2db84:	9009883a 	mov	r4,r18
   2db88:	00287e40 	call	287e4 <_fflush_r>
   2db8c:	103fe326 	beq	r2,zero,2db1c <__alt_data_end+0xfffedb1c>
   2db90:	00bfffc4 	movi	r2,-1
   2db94:	003fe206 	br	2db20 <__alt_data_end+0xfffedb20>
   2db98:	800b883a 	mov	r5,r16
   2db9c:	9009883a 	mov	r4,r18
   2dba0:	0026bec0 	call	26bec <__swsetup_r>
   2dba4:	103ffa1e 	bne	r2,zero,2db90 <__alt_data_end+0xfffedb90>
   2dba8:	8100030b 	ldhu	r4,12(r16)
   2dbac:	80c00417 	ldw	r3,16(r16)
   2dbb0:	003fc506 	br	2dac8 <__alt_data_end+0xfffedac8>
   2dbb4:	0028bc00 	call	28bc0 <__sinit>
   2dbb8:	003fbc06 	br	2daac <__alt_data_end+0xfffedaac>

0002dbbc <__swbuf>:
   2dbbc:	008000f4 	movhi	r2,3
   2dbc0:	108c0804 	addi	r2,r2,12320
   2dbc4:	280d883a 	mov	r6,r5
   2dbc8:	200b883a 	mov	r5,r4
   2dbcc:	11000017 	ldw	r4,0(r2)
   2dbd0:	002da7c1 	jmpi	2da7c <__swbuf_r>

0002dbd4 <_wcrtomb_r>:
   2dbd4:	defff604 	addi	sp,sp,-40
   2dbd8:	008000f4 	movhi	r2,3
   2dbdc:	dc800815 	stw	r18,32(sp)
   2dbe0:	dc400715 	stw	r17,28(sp)
   2dbe4:	dc000615 	stw	r16,24(sp)
   2dbe8:	108c0c04 	addi	r2,r2,12336
   2dbec:	dfc00915 	stw	ra,36(sp)
   2dbf0:	2021883a 	mov	r16,r4
   2dbf4:	3823883a 	mov	r17,r7
   2dbf8:	14800017 	ldw	r18,0(r2)
   2dbfc:	28001426 	beq	r5,zero,2dc50 <_wcrtomb_r+0x7c>
   2dc00:	d9400415 	stw	r5,16(sp)
   2dc04:	d9800515 	stw	r6,20(sp)
   2dc08:	00292480 	call	29248 <__locale_charset>
   2dc0c:	d9800517 	ldw	r6,20(sp)
   2dc10:	d9400417 	ldw	r5,16(sp)
   2dc14:	100f883a 	mov	r7,r2
   2dc18:	dc400015 	stw	r17,0(sp)
   2dc1c:	8009883a 	mov	r4,r16
   2dc20:	903ee83a 	callr	r18
   2dc24:	00ffffc4 	movi	r3,-1
   2dc28:	10c0031e 	bne	r2,r3,2dc38 <_wcrtomb_r+0x64>
   2dc2c:	88000015 	stw	zero,0(r17)
   2dc30:	00c02284 	movi	r3,138
   2dc34:	80c00015 	stw	r3,0(r16)
   2dc38:	dfc00917 	ldw	ra,36(sp)
   2dc3c:	dc800817 	ldw	r18,32(sp)
   2dc40:	dc400717 	ldw	r17,28(sp)
   2dc44:	dc000617 	ldw	r16,24(sp)
   2dc48:	dec00a04 	addi	sp,sp,40
   2dc4c:	f800283a 	ret
   2dc50:	00292480 	call	29248 <__locale_charset>
   2dc54:	100f883a 	mov	r7,r2
   2dc58:	dc400015 	stw	r17,0(sp)
   2dc5c:	000d883a 	mov	r6,zero
   2dc60:	d9400104 	addi	r5,sp,4
   2dc64:	8009883a 	mov	r4,r16
   2dc68:	903ee83a 	callr	r18
   2dc6c:	003fed06 	br	2dc24 <__alt_data_end+0xfffedc24>

0002dc70 <wcrtomb>:
   2dc70:	defff604 	addi	sp,sp,-40
   2dc74:	008000f4 	movhi	r2,3
   2dc78:	dc800615 	stw	r18,24(sp)
   2dc7c:	dc400515 	stw	r17,20(sp)
   2dc80:	108c0804 	addi	r2,r2,12320
   2dc84:	dfc00915 	stw	ra,36(sp)
   2dc88:	dd000815 	stw	r20,32(sp)
   2dc8c:	dcc00715 	stw	r19,28(sp)
   2dc90:	dc000415 	stw	r16,16(sp)
   2dc94:	3025883a 	mov	r18,r6
   2dc98:	14400017 	ldw	r17,0(r2)
   2dc9c:	20001926 	beq	r4,zero,2dd04 <wcrtomb+0x94>
   2dca0:	008000f4 	movhi	r2,3
   2dca4:	108c0c04 	addi	r2,r2,12336
   2dca8:	15000017 	ldw	r20,0(r2)
   2dcac:	2021883a 	mov	r16,r4
   2dcb0:	2827883a 	mov	r19,r5
   2dcb4:	00292480 	call	29248 <__locale_charset>
   2dcb8:	100f883a 	mov	r7,r2
   2dcbc:	dc800015 	stw	r18,0(sp)
   2dcc0:	980d883a 	mov	r6,r19
   2dcc4:	800b883a 	mov	r5,r16
   2dcc8:	8809883a 	mov	r4,r17
   2dccc:	a03ee83a 	callr	r20
   2dcd0:	00ffffc4 	movi	r3,-1
   2dcd4:	10c0031e 	bne	r2,r3,2dce4 <wcrtomb+0x74>
   2dcd8:	90000015 	stw	zero,0(r18)
   2dcdc:	00c02284 	movi	r3,138
   2dce0:	88c00015 	stw	r3,0(r17)
   2dce4:	dfc00917 	ldw	ra,36(sp)
   2dce8:	dd000817 	ldw	r20,32(sp)
   2dcec:	dcc00717 	ldw	r19,28(sp)
   2dcf0:	dc800617 	ldw	r18,24(sp)
   2dcf4:	dc400517 	ldw	r17,20(sp)
   2dcf8:	dc000417 	ldw	r16,16(sp)
   2dcfc:	dec00a04 	addi	sp,sp,40
   2dd00:	f800283a 	ret
   2dd04:	008000f4 	movhi	r2,3
   2dd08:	108c0c04 	addi	r2,r2,12336
   2dd0c:	14000017 	ldw	r16,0(r2)
   2dd10:	00292480 	call	29248 <__locale_charset>
   2dd14:	100f883a 	mov	r7,r2
   2dd18:	dc800015 	stw	r18,0(sp)
   2dd1c:	000d883a 	mov	r6,zero
   2dd20:	d9400104 	addi	r5,sp,4
   2dd24:	8809883a 	mov	r4,r17
   2dd28:	803ee83a 	callr	r16
   2dd2c:	003fe806 	br	2dcd0 <__alt_data_end+0xfffedcd0>

0002dd30 <__ascii_wctomb>:
   2dd30:	28000526 	beq	r5,zero,2dd48 <__ascii_wctomb+0x18>
   2dd34:	00803fc4 	movi	r2,255
   2dd38:	11800536 	bltu	r2,r6,2dd50 <__ascii_wctomb+0x20>
   2dd3c:	29800005 	stb	r6,0(r5)
   2dd40:	00800044 	movi	r2,1
   2dd44:	f800283a 	ret
   2dd48:	0005883a 	mov	r2,zero
   2dd4c:	f800283a 	ret
   2dd50:	00802284 	movi	r2,138
   2dd54:	20800015 	stw	r2,0(r4)
   2dd58:	00bfffc4 	movi	r2,-1
   2dd5c:	f800283a 	ret

0002dd60 <_wctomb_r>:
   2dd60:	008000f4 	movhi	r2,3
   2dd64:	defff904 	addi	sp,sp,-28
   2dd68:	108c0c04 	addi	r2,r2,12336
   2dd6c:	dfc00615 	stw	ra,24(sp)
   2dd70:	dc400515 	stw	r17,20(sp)
   2dd74:	dc000415 	stw	r16,16(sp)
   2dd78:	3823883a 	mov	r17,r7
   2dd7c:	14000017 	ldw	r16,0(r2)
   2dd80:	d9000115 	stw	r4,4(sp)
   2dd84:	d9400215 	stw	r5,8(sp)
   2dd88:	d9800315 	stw	r6,12(sp)
   2dd8c:	00292480 	call	29248 <__locale_charset>
   2dd90:	d9800317 	ldw	r6,12(sp)
   2dd94:	d9400217 	ldw	r5,8(sp)
   2dd98:	d9000117 	ldw	r4,4(sp)
   2dd9c:	100f883a 	mov	r7,r2
   2dda0:	dc400015 	stw	r17,0(sp)
   2dda4:	803ee83a 	callr	r16
   2dda8:	dfc00617 	ldw	ra,24(sp)
   2ddac:	dc400517 	ldw	r17,20(sp)
   2ddb0:	dc000417 	ldw	r16,16(sp)
   2ddb4:	dec00704 	addi	sp,sp,28
   2ddb8:	f800283a 	ret

0002ddbc <__udivdi3>:
   2ddbc:	defff504 	addi	sp,sp,-44
   2ddc0:	dcc00415 	stw	r19,16(sp)
   2ddc4:	dc000115 	stw	r16,4(sp)
   2ddc8:	dfc00a15 	stw	ra,40(sp)
   2ddcc:	df000915 	stw	fp,36(sp)
   2ddd0:	ddc00815 	stw	r23,32(sp)
   2ddd4:	dd800715 	stw	r22,28(sp)
   2ddd8:	dd400615 	stw	r21,24(sp)
   2dddc:	dd000515 	stw	r20,20(sp)
   2dde0:	dc800315 	stw	r18,12(sp)
   2dde4:	dc400215 	stw	r17,8(sp)
   2dde8:	2027883a 	mov	r19,r4
   2ddec:	2821883a 	mov	r16,r5
   2ddf0:	3800411e 	bne	r7,zero,2def8 <__udivdi3+0x13c>
   2ddf4:	3023883a 	mov	r17,r6
   2ddf8:	2025883a 	mov	r18,r4
   2ddfc:	2980522e 	bgeu	r5,r6,2df48 <__udivdi3+0x18c>
   2de00:	00bfffd4 	movui	r2,65535
   2de04:	282d883a 	mov	r22,r5
   2de08:	1180a836 	bltu	r2,r6,2e0ac <__udivdi3+0x2f0>
   2de0c:	00803fc4 	movi	r2,255
   2de10:	1185803a 	cmpltu	r2,r2,r6
   2de14:	100490fa 	slli	r2,r2,3
   2de18:	3086d83a 	srl	r3,r6,r2
   2de1c:	010000f4 	movhi	r4,3
   2de20:	21049c04 	addi	r4,r4,4720
   2de24:	20c7883a 	add	r3,r4,r3
   2de28:	18c00003 	ldbu	r3,0(r3)
   2de2c:	1885883a 	add	r2,r3,r2
   2de30:	00c00804 	movi	r3,32
   2de34:	1887c83a 	sub	r3,r3,r2
   2de38:	18000526 	beq	r3,zero,2de50 <__udivdi3+0x94>
   2de3c:	80e0983a 	sll	r16,r16,r3
   2de40:	9884d83a 	srl	r2,r19,r2
   2de44:	30e2983a 	sll	r17,r6,r3
   2de48:	98e4983a 	sll	r18,r19,r3
   2de4c:	142cb03a 	or	r22,r2,r16
   2de50:	882ad43a 	srli	r21,r17,16
   2de54:	b009883a 	mov	r4,r22
   2de58:	8d3fffcc 	andi	r20,r17,65535
   2de5c:	a80b883a 	mov	r5,r21
   2de60:	00222880 	call	22288 <__umodsi3>
   2de64:	b009883a 	mov	r4,r22
   2de68:	a80b883a 	mov	r5,r21
   2de6c:	1027883a 	mov	r19,r2
   2de70:	00222240 	call	22224 <__udivsi3>
   2de74:	102d883a 	mov	r22,r2
   2de78:	9826943a 	slli	r19,r19,16
   2de7c:	9004d43a 	srli	r2,r18,16
   2de80:	a5a1383a 	mul	r16,r20,r22
   2de84:	14c4b03a 	or	r2,r2,r19
   2de88:	1400052e 	bgeu	r2,r16,2dea0 <__udivdi3+0xe4>
   2de8c:	1445883a 	add	r2,r2,r17
   2de90:	b0ffffc4 	addi	r3,r22,-1
   2de94:	14400136 	bltu	r2,r17,2de9c <__udivdi3+0xe0>
   2de98:	14012336 	bltu	r2,r16,2e328 <__udivdi3+0x56c>
   2de9c:	182d883a 	mov	r22,r3
   2dea0:	1421c83a 	sub	r16,r2,r16
   2dea4:	a80b883a 	mov	r5,r21
   2dea8:	8009883a 	mov	r4,r16
   2deac:	00222880 	call	22288 <__umodsi3>
   2deb0:	1027883a 	mov	r19,r2
   2deb4:	a80b883a 	mov	r5,r21
   2deb8:	8009883a 	mov	r4,r16
   2debc:	00222240 	call	22224 <__udivsi3>
   2dec0:	9826943a 	slli	r19,r19,16
   2dec4:	a0a9383a 	mul	r20,r20,r2
   2dec8:	94bfffcc 	andi	r18,r18,65535
   2decc:	94e4b03a 	or	r18,r18,r19
   2ded0:	9500052e 	bgeu	r18,r20,2dee8 <__udivdi3+0x12c>
   2ded4:	8ca5883a 	add	r18,r17,r18
   2ded8:	10ffffc4 	addi	r3,r2,-1
   2dedc:	9440f136 	bltu	r18,r17,2e2a4 <__udivdi3+0x4e8>
   2dee0:	9500f02e 	bgeu	r18,r20,2e2a4 <__udivdi3+0x4e8>
   2dee4:	10bfff84 	addi	r2,r2,-2
   2dee8:	b00c943a 	slli	r6,r22,16
   2deec:	0007883a 	mov	r3,zero
   2def0:	3084b03a 	or	r2,r6,r2
   2def4:	00005906 	br	2e05c <__udivdi3+0x2a0>
   2def8:	29c05636 	bltu	r5,r7,2e054 <__udivdi3+0x298>
   2defc:	00bfffd4 	movui	r2,65535
   2df00:	11c0622e 	bgeu	r2,r7,2e08c <__udivdi3+0x2d0>
   2df04:	00804034 	movhi	r2,256
   2df08:	10bfffc4 	addi	r2,r2,-1
   2df0c:	11c0ee36 	bltu	r2,r7,2e2c8 <__udivdi3+0x50c>
   2df10:	00800404 	movi	r2,16
   2df14:	3886d83a 	srl	r3,r7,r2
   2df18:	010000f4 	movhi	r4,3
   2df1c:	21049c04 	addi	r4,r4,4720
   2df20:	20c7883a 	add	r3,r4,r3
   2df24:	18c00003 	ldbu	r3,0(r3)
   2df28:	05400804 	movi	r21,32
   2df2c:	1885883a 	add	r2,r3,r2
   2df30:	a8abc83a 	sub	r21,r21,r2
   2df34:	a800621e 	bne	r21,zero,2e0c0 <__udivdi3+0x304>
   2df38:	3c00e936 	bltu	r7,r16,2e2e0 <__udivdi3+0x524>
   2df3c:	9985403a 	cmpgeu	r2,r19,r6
   2df40:	0007883a 	mov	r3,zero
   2df44:	00004506 	br	2e05c <__udivdi3+0x2a0>
   2df48:	3000041e 	bne	r6,zero,2df5c <__udivdi3+0x1a0>
   2df4c:	000b883a 	mov	r5,zero
   2df50:	01000044 	movi	r4,1
   2df54:	00222240 	call	22224 <__udivsi3>
   2df58:	1023883a 	mov	r17,r2
   2df5c:	00bfffd4 	movui	r2,65535
   2df60:	14404e2e 	bgeu	r2,r17,2e09c <__udivdi3+0x2e0>
   2df64:	00804034 	movhi	r2,256
   2df68:	10bfffc4 	addi	r2,r2,-1
   2df6c:	1440d836 	bltu	r2,r17,2e2d0 <__udivdi3+0x514>
   2df70:	00800404 	movi	r2,16
   2df74:	8886d83a 	srl	r3,r17,r2
   2df78:	010000f4 	movhi	r4,3
   2df7c:	21049c04 	addi	r4,r4,4720
   2df80:	20c7883a 	add	r3,r4,r3
   2df84:	18c00003 	ldbu	r3,0(r3)
   2df88:	1885883a 	add	r2,r3,r2
   2df8c:	00c00804 	movi	r3,32
   2df90:	1887c83a 	sub	r3,r3,r2
   2df94:	18008f1e 	bne	r3,zero,2e1d4 <__udivdi3+0x418>
   2df98:	882ad43a 	srli	r21,r17,16
   2df9c:	8461c83a 	sub	r16,r16,r17
   2dfa0:	8d3fffcc 	andi	r20,r17,65535
   2dfa4:	00c00044 	movi	r3,1
   2dfa8:	8009883a 	mov	r4,r16
   2dfac:	a80b883a 	mov	r5,r21
   2dfb0:	d8c00015 	stw	r3,0(sp)
   2dfb4:	00222880 	call	22288 <__umodsi3>
   2dfb8:	8009883a 	mov	r4,r16
   2dfbc:	a80b883a 	mov	r5,r21
   2dfc0:	1027883a 	mov	r19,r2
   2dfc4:	00222240 	call	22224 <__udivsi3>
   2dfc8:	9826943a 	slli	r19,r19,16
   2dfcc:	9008d43a 	srli	r4,r18,16
   2dfd0:	1521383a 	mul	r16,r2,r20
   2dfd4:	102d883a 	mov	r22,r2
   2dfd8:	24c8b03a 	or	r4,r4,r19
   2dfdc:	d8c00017 	ldw	r3,0(sp)
   2dfe0:	2400052e 	bgeu	r4,r16,2dff8 <__udivdi3+0x23c>
   2dfe4:	2449883a 	add	r4,r4,r17
   2dfe8:	b0bfffc4 	addi	r2,r22,-1
   2dfec:	24400136 	bltu	r4,r17,2dff4 <__udivdi3+0x238>
   2dff0:	2400ca36 	bltu	r4,r16,2e31c <__udivdi3+0x560>
   2dff4:	102d883a 	mov	r22,r2
   2dff8:	2421c83a 	sub	r16,r4,r16
   2dffc:	a80b883a 	mov	r5,r21
   2e000:	8009883a 	mov	r4,r16
   2e004:	d8c00015 	stw	r3,0(sp)
   2e008:	00222880 	call	22288 <__umodsi3>
   2e00c:	1027883a 	mov	r19,r2
   2e010:	a80b883a 	mov	r5,r21
   2e014:	8009883a 	mov	r4,r16
   2e018:	00222240 	call	22224 <__udivsi3>
   2e01c:	9826943a 	slli	r19,r19,16
   2e020:	1529383a 	mul	r20,r2,r20
   2e024:	94bfffcc 	andi	r18,r18,65535
   2e028:	94e4b03a 	or	r18,r18,r19
   2e02c:	d8c00017 	ldw	r3,0(sp)
   2e030:	9500052e 	bgeu	r18,r20,2e048 <__udivdi3+0x28c>
   2e034:	8ca5883a 	add	r18,r17,r18
   2e038:	113fffc4 	addi	r4,r2,-1
   2e03c:	94409736 	bltu	r18,r17,2e29c <__udivdi3+0x4e0>
   2e040:	9500962e 	bgeu	r18,r20,2e29c <__udivdi3+0x4e0>
   2e044:	10bfff84 	addi	r2,r2,-2
   2e048:	b00c943a 	slli	r6,r22,16
   2e04c:	3084b03a 	or	r2,r6,r2
   2e050:	00000206 	br	2e05c <__udivdi3+0x2a0>
   2e054:	0007883a 	mov	r3,zero
   2e058:	0005883a 	mov	r2,zero
   2e05c:	dfc00a17 	ldw	ra,40(sp)
   2e060:	df000917 	ldw	fp,36(sp)
   2e064:	ddc00817 	ldw	r23,32(sp)
   2e068:	dd800717 	ldw	r22,28(sp)
   2e06c:	dd400617 	ldw	r21,24(sp)
   2e070:	dd000517 	ldw	r20,20(sp)
   2e074:	dcc00417 	ldw	r19,16(sp)
   2e078:	dc800317 	ldw	r18,12(sp)
   2e07c:	dc400217 	ldw	r17,8(sp)
   2e080:	dc000117 	ldw	r16,4(sp)
   2e084:	dec00b04 	addi	sp,sp,44
   2e088:	f800283a 	ret
   2e08c:	00803fc4 	movi	r2,255
   2e090:	11c5803a 	cmpltu	r2,r2,r7
   2e094:	100490fa 	slli	r2,r2,3
   2e098:	003f9e06 	br	2df14 <__alt_data_end+0xfffedf14>
   2e09c:	00803fc4 	movi	r2,255
   2e0a0:	1445803a 	cmpltu	r2,r2,r17
   2e0a4:	100490fa 	slli	r2,r2,3
   2e0a8:	003fb206 	br	2df74 <__alt_data_end+0xfffedf74>
   2e0ac:	00804034 	movhi	r2,256
   2e0b0:	10bfffc4 	addi	r2,r2,-1
   2e0b4:	11808836 	bltu	r2,r6,2e2d8 <__udivdi3+0x51c>
   2e0b8:	00800404 	movi	r2,16
   2e0bc:	003f5606 	br	2de18 <__alt_data_end+0xfffede18>
   2e0c0:	30aed83a 	srl	r23,r6,r2
   2e0c4:	3d4e983a 	sll	r7,r7,r21
   2e0c8:	80acd83a 	srl	r22,r16,r2
   2e0cc:	9884d83a 	srl	r2,r19,r2
   2e0d0:	3deeb03a 	or	r23,r7,r23
   2e0d4:	b824d43a 	srli	r18,r23,16
   2e0d8:	8560983a 	sll	r16,r16,r21
   2e0dc:	b009883a 	mov	r4,r22
   2e0e0:	900b883a 	mov	r5,r18
   2e0e4:	3568983a 	sll	r20,r6,r21
   2e0e8:	1420b03a 	or	r16,r2,r16
   2e0ec:	00222880 	call	22288 <__umodsi3>
   2e0f0:	b009883a 	mov	r4,r22
   2e0f4:	900b883a 	mov	r5,r18
   2e0f8:	1023883a 	mov	r17,r2
   2e0fc:	00222240 	call	22224 <__udivsi3>
   2e100:	8808943a 	slli	r4,r17,16
   2e104:	bf3fffcc 	andi	fp,r23,65535
   2e108:	8006d43a 	srli	r3,r16,16
   2e10c:	e0a3383a 	mul	r17,fp,r2
   2e110:	100d883a 	mov	r6,r2
   2e114:	1906b03a 	or	r3,r3,r4
   2e118:	1c40042e 	bgeu	r3,r17,2e12c <__udivdi3+0x370>
   2e11c:	1dc7883a 	add	r3,r3,r23
   2e120:	10bfffc4 	addi	r2,r2,-1
   2e124:	1dc0752e 	bgeu	r3,r23,2e2fc <__udivdi3+0x540>
   2e128:	100d883a 	mov	r6,r2
   2e12c:	1c63c83a 	sub	r17,r3,r17
   2e130:	900b883a 	mov	r5,r18
   2e134:	8809883a 	mov	r4,r17
   2e138:	d9800015 	stw	r6,0(sp)
   2e13c:	00222880 	call	22288 <__umodsi3>
   2e140:	102d883a 	mov	r22,r2
   2e144:	8809883a 	mov	r4,r17
   2e148:	900b883a 	mov	r5,r18
   2e14c:	00222240 	call	22224 <__udivsi3>
   2e150:	b02c943a 	slli	r22,r22,16
   2e154:	e089383a 	mul	r4,fp,r2
   2e158:	843fffcc 	andi	r16,r16,65535
   2e15c:	85a0b03a 	or	r16,r16,r22
   2e160:	d9800017 	ldw	r6,0(sp)
   2e164:	8100042e 	bgeu	r16,r4,2e178 <__udivdi3+0x3bc>
   2e168:	85e1883a 	add	r16,r16,r23
   2e16c:	10ffffc4 	addi	r3,r2,-1
   2e170:	85c05e2e 	bgeu	r16,r23,2e2ec <__udivdi3+0x530>
   2e174:	1805883a 	mov	r2,r3
   2e178:	300c943a 	slli	r6,r6,16
   2e17c:	a17fffcc 	andi	r5,r20,65535
   2e180:	a028d43a 	srli	r20,r20,16
   2e184:	3084b03a 	or	r2,r6,r2
   2e188:	10ffffcc 	andi	r3,r2,65535
   2e18c:	100cd43a 	srli	r6,r2,16
   2e190:	194f383a 	mul	r7,r3,r5
   2e194:	1d07383a 	mul	r3,r3,r20
   2e198:	314b383a 	mul	r5,r6,r5
   2e19c:	3810d43a 	srli	r8,r7,16
   2e1a0:	8121c83a 	sub	r16,r16,r4
   2e1a4:	1947883a 	add	r3,r3,r5
   2e1a8:	40c7883a 	add	r3,r8,r3
   2e1ac:	350d383a 	mul	r6,r6,r20
   2e1b0:	1940022e 	bgeu	r3,r5,2e1bc <__udivdi3+0x400>
   2e1b4:	01000074 	movhi	r4,1
   2e1b8:	310d883a 	add	r6,r6,r4
   2e1bc:	1828d43a 	srli	r20,r3,16
   2e1c0:	a18d883a 	add	r6,r20,r6
   2e1c4:	81803e36 	bltu	r16,r6,2e2c0 <__udivdi3+0x504>
   2e1c8:	81803826 	beq	r16,r6,2e2ac <__udivdi3+0x4f0>
   2e1cc:	0007883a 	mov	r3,zero
   2e1d0:	003fa206 	br	2e05c <__alt_data_end+0xfffee05c>
   2e1d4:	88e2983a 	sll	r17,r17,r3
   2e1d8:	80a8d83a 	srl	r20,r16,r2
   2e1dc:	80e0983a 	sll	r16,r16,r3
   2e1e0:	882ad43a 	srli	r21,r17,16
   2e1e4:	9884d83a 	srl	r2,r19,r2
   2e1e8:	a009883a 	mov	r4,r20
   2e1ec:	a80b883a 	mov	r5,r21
   2e1f0:	142eb03a 	or	r23,r2,r16
   2e1f4:	98e4983a 	sll	r18,r19,r3
   2e1f8:	00222880 	call	22288 <__umodsi3>
   2e1fc:	a009883a 	mov	r4,r20
   2e200:	a80b883a 	mov	r5,r21
   2e204:	1021883a 	mov	r16,r2
   2e208:	00222240 	call	22224 <__udivsi3>
   2e20c:	1039883a 	mov	fp,r2
   2e210:	8d3fffcc 	andi	r20,r17,65535
   2e214:	8020943a 	slli	r16,r16,16
   2e218:	b804d43a 	srli	r2,r23,16
   2e21c:	a72d383a 	mul	r22,r20,fp
   2e220:	1404b03a 	or	r2,r2,r16
   2e224:	1580062e 	bgeu	r2,r22,2e240 <__udivdi3+0x484>
   2e228:	1445883a 	add	r2,r2,r17
   2e22c:	e0ffffc4 	addi	r3,fp,-1
   2e230:	14403836 	bltu	r2,r17,2e314 <__udivdi3+0x558>
   2e234:	1580372e 	bgeu	r2,r22,2e314 <__udivdi3+0x558>
   2e238:	e73fff84 	addi	fp,fp,-2
   2e23c:	1445883a 	add	r2,r2,r17
   2e240:	15adc83a 	sub	r22,r2,r22
   2e244:	a80b883a 	mov	r5,r21
   2e248:	b009883a 	mov	r4,r22
   2e24c:	00222880 	call	22288 <__umodsi3>
   2e250:	1027883a 	mov	r19,r2
   2e254:	b009883a 	mov	r4,r22
   2e258:	a80b883a 	mov	r5,r21
   2e25c:	00222240 	call	22224 <__udivsi3>
   2e260:	9826943a 	slli	r19,r19,16
   2e264:	a0a1383a 	mul	r16,r20,r2
   2e268:	b93fffcc 	andi	r4,r23,65535
   2e26c:	24c8b03a 	or	r4,r4,r19
   2e270:	2400062e 	bgeu	r4,r16,2e28c <__udivdi3+0x4d0>
   2e274:	2449883a 	add	r4,r4,r17
   2e278:	10ffffc4 	addi	r3,r2,-1
   2e27c:	24402336 	bltu	r4,r17,2e30c <__udivdi3+0x550>
   2e280:	2400222e 	bgeu	r4,r16,2e30c <__udivdi3+0x550>
   2e284:	10bfff84 	addi	r2,r2,-2
   2e288:	2449883a 	add	r4,r4,r17
   2e28c:	e038943a 	slli	fp,fp,16
   2e290:	2421c83a 	sub	r16,r4,r16
   2e294:	e086b03a 	or	r3,fp,r2
   2e298:	003f4306 	br	2dfa8 <__alt_data_end+0xfffedfa8>
   2e29c:	2005883a 	mov	r2,r4
   2e2a0:	003f6906 	br	2e048 <__alt_data_end+0xfffee048>
   2e2a4:	1805883a 	mov	r2,r3
   2e2a8:	003f0f06 	br	2dee8 <__alt_data_end+0xfffedee8>
   2e2ac:	1806943a 	slli	r3,r3,16
   2e2b0:	9d66983a 	sll	r19,r19,r21
   2e2b4:	39ffffcc 	andi	r7,r7,65535
   2e2b8:	19c7883a 	add	r3,r3,r7
   2e2bc:	98ffc32e 	bgeu	r19,r3,2e1cc <__alt_data_end+0xfffee1cc>
   2e2c0:	10bfffc4 	addi	r2,r2,-1
   2e2c4:	003fc106 	br	2e1cc <__alt_data_end+0xfffee1cc>
   2e2c8:	00800604 	movi	r2,24
   2e2cc:	003f1106 	br	2df14 <__alt_data_end+0xfffedf14>
   2e2d0:	00800604 	movi	r2,24
   2e2d4:	003f2706 	br	2df74 <__alt_data_end+0xfffedf74>
   2e2d8:	00800604 	movi	r2,24
   2e2dc:	003ece06 	br	2de18 <__alt_data_end+0xfffede18>
   2e2e0:	0007883a 	mov	r3,zero
   2e2e4:	00800044 	movi	r2,1
   2e2e8:	003f5c06 	br	2e05c <__alt_data_end+0xfffee05c>
   2e2ec:	813fa12e 	bgeu	r16,r4,2e174 <__alt_data_end+0xfffee174>
   2e2f0:	10bfff84 	addi	r2,r2,-2
   2e2f4:	85e1883a 	add	r16,r16,r23
   2e2f8:	003f9f06 	br	2e178 <__alt_data_end+0xfffee178>
   2e2fc:	1c7f8a2e 	bgeu	r3,r17,2e128 <__alt_data_end+0xfffee128>
   2e300:	31bfff84 	addi	r6,r6,-2
   2e304:	1dc7883a 	add	r3,r3,r23
   2e308:	003f8806 	br	2e12c <__alt_data_end+0xfffee12c>
   2e30c:	1805883a 	mov	r2,r3
   2e310:	003fde06 	br	2e28c <__alt_data_end+0xfffee28c>
   2e314:	1839883a 	mov	fp,r3
   2e318:	003fc906 	br	2e240 <__alt_data_end+0xfffee240>
   2e31c:	b5bfff84 	addi	r22,r22,-2
   2e320:	2449883a 	add	r4,r4,r17
   2e324:	003f3406 	br	2dff8 <__alt_data_end+0xfffedff8>
   2e328:	b5bfff84 	addi	r22,r22,-2
   2e32c:	1445883a 	add	r2,r2,r17
   2e330:	003edb06 	br	2dea0 <__alt_data_end+0xfffedea0>

0002e334 <__umoddi3>:
   2e334:	defff404 	addi	sp,sp,-48
   2e338:	df000a15 	stw	fp,40(sp)
   2e33c:	dc400315 	stw	r17,12(sp)
   2e340:	dc000215 	stw	r16,8(sp)
   2e344:	dfc00b15 	stw	ra,44(sp)
   2e348:	ddc00915 	stw	r23,36(sp)
   2e34c:	dd800815 	stw	r22,32(sp)
   2e350:	dd400715 	stw	r21,28(sp)
   2e354:	dd000615 	stw	r20,24(sp)
   2e358:	dcc00515 	stw	r19,20(sp)
   2e35c:	dc800415 	stw	r18,16(sp)
   2e360:	2021883a 	mov	r16,r4
   2e364:	2823883a 	mov	r17,r5
   2e368:	2839883a 	mov	fp,r5
   2e36c:	38003c1e 	bne	r7,zero,2e460 <__umoddi3+0x12c>
   2e370:	3027883a 	mov	r19,r6
   2e374:	2029883a 	mov	r20,r4
   2e378:	2980512e 	bgeu	r5,r6,2e4c0 <__umoddi3+0x18c>
   2e37c:	00bfffd4 	movui	r2,65535
   2e380:	11809a36 	bltu	r2,r6,2e5ec <__umoddi3+0x2b8>
   2e384:	01003fc4 	movi	r4,255
   2e388:	2189803a 	cmpltu	r4,r4,r6
   2e38c:	200890fa 	slli	r4,r4,3
   2e390:	3104d83a 	srl	r2,r6,r4
   2e394:	00c000f4 	movhi	r3,3
   2e398:	18c49c04 	addi	r3,r3,4720
   2e39c:	1885883a 	add	r2,r3,r2
   2e3a0:	10c00003 	ldbu	r3,0(r2)
   2e3a4:	00800804 	movi	r2,32
   2e3a8:	1909883a 	add	r4,r3,r4
   2e3ac:	1125c83a 	sub	r18,r2,r4
   2e3b0:	90000526 	beq	r18,zero,2e3c8 <__umoddi3+0x94>
   2e3b4:	8ca2983a 	sll	r17,r17,r18
   2e3b8:	8108d83a 	srl	r4,r16,r4
   2e3bc:	34a6983a 	sll	r19,r6,r18
   2e3c0:	84a8983a 	sll	r20,r16,r18
   2e3c4:	2478b03a 	or	fp,r4,r17
   2e3c8:	982ed43a 	srli	r23,r19,16
   2e3cc:	e009883a 	mov	r4,fp
   2e3d0:	9dbfffcc 	andi	r22,r19,65535
   2e3d4:	b80b883a 	mov	r5,r23
   2e3d8:	00222880 	call	22288 <__umodsi3>
   2e3dc:	e009883a 	mov	r4,fp
   2e3e0:	b80b883a 	mov	r5,r23
   2e3e4:	102b883a 	mov	r21,r2
   2e3e8:	00222240 	call	22224 <__udivsi3>
   2e3ec:	a806943a 	slli	r3,r21,16
   2e3f0:	a008d43a 	srli	r4,r20,16
   2e3f4:	b085383a 	mul	r2,r22,r2
   2e3f8:	20c8b03a 	or	r4,r4,r3
   2e3fc:	2080032e 	bgeu	r4,r2,2e40c <__umoddi3+0xd8>
   2e400:	24c9883a 	add	r4,r4,r19
   2e404:	24c00136 	bltu	r4,r19,2e40c <__umoddi3+0xd8>
   2e408:	20811036 	bltu	r4,r2,2e84c <__umoddi3+0x518>
   2e40c:	20abc83a 	sub	r21,r4,r2
   2e410:	b80b883a 	mov	r5,r23
   2e414:	a809883a 	mov	r4,r21
   2e418:	00222880 	call	22288 <__umodsi3>
   2e41c:	1023883a 	mov	r17,r2
   2e420:	b80b883a 	mov	r5,r23
   2e424:	a809883a 	mov	r4,r21
   2e428:	00222240 	call	22224 <__udivsi3>
   2e42c:	8822943a 	slli	r17,r17,16
   2e430:	b085383a 	mul	r2,r22,r2
   2e434:	a0ffffcc 	andi	r3,r20,65535
   2e438:	1c46b03a 	or	r3,r3,r17
   2e43c:	1880042e 	bgeu	r3,r2,2e450 <__umoddi3+0x11c>
   2e440:	1cc7883a 	add	r3,r3,r19
   2e444:	1cc00236 	bltu	r3,r19,2e450 <__umoddi3+0x11c>
   2e448:	1880012e 	bgeu	r3,r2,2e450 <__umoddi3+0x11c>
   2e44c:	1cc7883a 	add	r3,r3,r19
   2e450:	1885c83a 	sub	r2,r3,r2
   2e454:	1484d83a 	srl	r2,r2,r18
   2e458:	0007883a 	mov	r3,zero
   2e45c:	00004f06 	br	2e59c <__umoddi3+0x268>
   2e460:	29c04c36 	bltu	r5,r7,2e594 <__umoddi3+0x260>
   2e464:	00bfffd4 	movui	r2,65535
   2e468:	11c0582e 	bgeu	r2,r7,2e5cc <__umoddi3+0x298>
   2e46c:	00804034 	movhi	r2,256
   2e470:	10bfffc4 	addi	r2,r2,-1
   2e474:	11c0e736 	bltu	r2,r7,2e814 <__umoddi3+0x4e0>
   2e478:	01000404 	movi	r4,16
   2e47c:	3904d83a 	srl	r2,r7,r4
   2e480:	00c000f4 	movhi	r3,3
   2e484:	18c49c04 	addi	r3,r3,4720
   2e488:	1885883a 	add	r2,r3,r2
   2e48c:	14c00003 	ldbu	r19,0(r2)
   2e490:	00c00804 	movi	r3,32
   2e494:	9927883a 	add	r19,r19,r4
   2e498:	1ce9c83a 	sub	r20,r3,r19
   2e49c:	a000581e 	bne	r20,zero,2e600 <__umoddi3+0x2cc>
   2e4a0:	3c400136 	bltu	r7,r17,2e4a8 <__umoddi3+0x174>
   2e4a4:	8180eb36 	bltu	r16,r6,2e854 <__umoddi3+0x520>
   2e4a8:	8185c83a 	sub	r2,r16,r6
   2e4ac:	89e3c83a 	sub	r17,r17,r7
   2e4b0:	8089803a 	cmpltu	r4,r16,r2
   2e4b4:	8939c83a 	sub	fp,r17,r4
   2e4b8:	e007883a 	mov	r3,fp
   2e4bc:	00003706 	br	2e59c <__umoddi3+0x268>
   2e4c0:	3000041e 	bne	r6,zero,2e4d4 <__umoddi3+0x1a0>
   2e4c4:	000b883a 	mov	r5,zero
   2e4c8:	01000044 	movi	r4,1
   2e4cc:	00222240 	call	22224 <__udivsi3>
   2e4d0:	1027883a 	mov	r19,r2
   2e4d4:	00bfffd4 	movui	r2,65535
   2e4d8:	14c0402e 	bgeu	r2,r19,2e5dc <__umoddi3+0x2a8>
   2e4dc:	00804034 	movhi	r2,256
   2e4e0:	10bfffc4 	addi	r2,r2,-1
   2e4e4:	14c0cd36 	bltu	r2,r19,2e81c <__umoddi3+0x4e8>
   2e4e8:	00800404 	movi	r2,16
   2e4ec:	9886d83a 	srl	r3,r19,r2
   2e4f0:	010000f4 	movhi	r4,3
   2e4f4:	21049c04 	addi	r4,r4,4720
   2e4f8:	20c7883a 	add	r3,r4,r3
   2e4fc:	18c00003 	ldbu	r3,0(r3)
   2e500:	1887883a 	add	r3,r3,r2
   2e504:	00800804 	movi	r2,32
   2e508:	10e5c83a 	sub	r18,r2,r3
   2e50c:	9000901e 	bne	r18,zero,2e750 <__umoddi3+0x41c>
   2e510:	982cd43a 	srli	r22,r19,16
   2e514:	8ce3c83a 	sub	r17,r17,r19
   2e518:	9d7fffcc 	andi	r21,r19,65535
   2e51c:	b00b883a 	mov	r5,r22
   2e520:	8809883a 	mov	r4,r17
   2e524:	00222880 	call	22288 <__umodsi3>
   2e528:	8809883a 	mov	r4,r17
   2e52c:	b00b883a 	mov	r5,r22
   2e530:	1021883a 	mov	r16,r2
   2e534:	00222240 	call	22224 <__udivsi3>
   2e538:	8006943a 	slli	r3,r16,16
   2e53c:	a008d43a 	srli	r4,r20,16
   2e540:	1545383a 	mul	r2,r2,r21
   2e544:	20c8b03a 	or	r4,r4,r3
   2e548:	2080042e 	bgeu	r4,r2,2e55c <__umoddi3+0x228>
   2e54c:	24c9883a 	add	r4,r4,r19
   2e550:	24c00236 	bltu	r4,r19,2e55c <__umoddi3+0x228>
   2e554:	2080012e 	bgeu	r4,r2,2e55c <__umoddi3+0x228>
   2e558:	24c9883a 	add	r4,r4,r19
   2e55c:	20a1c83a 	sub	r16,r4,r2
   2e560:	b00b883a 	mov	r5,r22
   2e564:	8009883a 	mov	r4,r16
   2e568:	00222880 	call	22288 <__umodsi3>
   2e56c:	1023883a 	mov	r17,r2
   2e570:	b00b883a 	mov	r5,r22
   2e574:	8009883a 	mov	r4,r16
   2e578:	00222240 	call	22224 <__udivsi3>
   2e57c:	8822943a 	slli	r17,r17,16
   2e580:	1545383a 	mul	r2,r2,r21
   2e584:	a53fffcc 	andi	r20,r20,65535
   2e588:	a446b03a 	or	r3,r20,r17
   2e58c:	18bfb02e 	bgeu	r3,r2,2e450 <__alt_data_end+0xfffee450>
   2e590:	003fab06 	br	2e440 <__alt_data_end+0xfffee440>
   2e594:	2005883a 	mov	r2,r4
   2e598:	2807883a 	mov	r3,r5
   2e59c:	dfc00b17 	ldw	ra,44(sp)
   2e5a0:	df000a17 	ldw	fp,40(sp)
   2e5a4:	ddc00917 	ldw	r23,36(sp)
   2e5a8:	dd800817 	ldw	r22,32(sp)
   2e5ac:	dd400717 	ldw	r21,28(sp)
   2e5b0:	dd000617 	ldw	r20,24(sp)
   2e5b4:	dcc00517 	ldw	r19,20(sp)
   2e5b8:	dc800417 	ldw	r18,16(sp)
   2e5bc:	dc400317 	ldw	r17,12(sp)
   2e5c0:	dc000217 	ldw	r16,8(sp)
   2e5c4:	dec00c04 	addi	sp,sp,48
   2e5c8:	f800283a 	ret
   2e5cc:	04c03fc4 	movi	r19,255
   2e5d0:	99c9803a 	cmpltu	r4,r19,r7
   2e5d4:	200890fa 	slli	r4,r4,3
   2e5d8:	003fa806 	br	2e47c <__alt_data_end+0xfffee47c>
   2e5dc:	00803fc4 	movi	r2,255
   2e5e0:	14c5803a 	cmpltu	r2,r2,r19
   2e5e4:	100490fa 	slli	r2,r2,3
   2e5e8:	003fc006 	br	2e4ec <__alt_data_end+0xfffee4ec>
   2e5ec:	00804034 	movhi	r2,256
   2e5f0:	10bfffc4 	addi	r2,r2,-1
   2e5f4:	11808b36 	bltu	r2,r6,2e824 <__umoddi3+0x4f0>
   2e5f8:	01000404 	movi	r4,16
   2e5fc:	003f6406 	br	2e390 <__alt_data_end+0xfffee390>
   2e600:	34c4d83a 	srl	r2,r6,r19
   2e604:	3d0e983a 	sll	r7,r7,r20
   2e608:	8cf8d83a 	srl	fp,r17,r19
   2e60c:	8d10983a 	sll	r8,r17,r20
   2e610:	38aab03a 	or	r21,r7,r2
   2e614:	a82cd43a 	srli	r22,r21,16
   2e618:	84e2d83a 	srl	r17,r16,r19
   2e61c:	e009883a 	mov	r4,fp
   2e620:	b00b883a 	mov	r5,r22
   2e624:	8a22b03a 	or	r17,r17,r8
   2e628:	3524983a 	sll	r18,r6,r20
   2e62c:	00222880 	call	22288 <__umodsi3>
   2e630:	e009883a 	mov	r4,fp
   2e634:	b00b883a 	mov	r5,r22
   2e638:	102f883a 	mov	r23,r2
   2e63c:	00222240 	call	22224 <__udivsi3>
   2e640:	100d883a 	mov	r6,r2
   2e644:	b808943a 	slli	r4,r23,16
   2e648:	aa3fffcc 	andi	r8,r21,65535
   2e64c:	8804d43a 	srli	r2,r17,16
   2e650:	41af383a 	mul	r23,r8,r6
   2e654:	8520983a 	sll	r16,r16,r20
   2e658:	1104b03a 	or	r2,r2,r4
   2e65c:	15c0042e 	bgeu	r2,r23,2e670 <__umoddi3+0x33c>
   2e660:	1545883a 	add	r2,r2,r21
   2e664:	30ffffc4 	addi	r3,r6,-1
   2e668:	1540742e 	bgeu	r2,r21,2e83c <__umoddi3+0x508>
   2e66c:	180d883a 	mov	r6,r3
   2e670:	15efc83a 	sub	r23,r2,r23
   2e674:	b00b883a 	mov	r5,r22
   2e678:	b809883a 	mov	r4,r23
   2e67c:	d9800115 	stw	r6,4(sp)
   2e680:	da000015 	stw	r8,0(sp)
   2e684:	00222880 	call	22288 <__umodsi3>
   2e688:	b00b883a 	mov	r5,r22
   2e68c:	b809883a 	mov	r4,r23
   2e690:	1039883a 	mov	fp,r2
   2e694:	00222240 	call	22224 <__udivsi3>
   2e698:	da000017 	ldw	r8,0(sp)
   2e69c:	e038943a 	slli	fp,fp,16
   2e6a0:	100b883a 	mov	r5,r2
   2e6a4:	4089383a 	mul	r4,r8,r2
   2e6a8:	8a3fffcc 	andi	r8,r17,65535
   2e6ac:	4710b03a 	or	r8,r8,fp
   2e6b0:	d9800117 	ldw	r6,4(sp)
   2e6b4:	4100042e 	bgeu	r8,r4,2e6c8 <__umoddi3+0x394>
   2e6b8:	4551883a 	add	r8,r8,r21
   2e6bc:	10bfffc4 	addi	r2,r2,-1
   2e6c0:	45405a2e 	bgeu	r8,r21,2e82c <__umoddi3+0x4f8>
   2e6c4:	100b883a 	mov	r5,r2
   2e6c8:	300c943a 	slli	r6,r6,16
   2e6cc:	91ffffcc 	andi	r7,r18,65535
   2e6d0:	9004d43a 	srli	r2,r18,16
   2e6d4:	314cb03a 	or	r6,r6,r5
   2e6d8:	317fffcc 	andi	r5,r6,65535
   2e6dc:	300cd43a 	srli	r6,r6,16
   2e6e0:	29d3383a 	mul	r9,r5,r7
   2e6e4:	288b383a 	mul	r5,r5,r2
   2e6e8:	31cf383a 	mul	r7,r6,r7
   2e6ec:	4806d43a 	srli	r3,r9,16
   2e6f0:	4111c83a 	sub	r8,r8,r4
   2e6f4:	29cb883a 	add	r5,r5,r7
   2e6f8:	194b883a 	add	r5,r3,r5
   2e6fc:	3085383a 	mul	r2,r6,r2
   2e700:	29c0022e 	bgeu	r5,r7,2e70c <__umoddi3+0x3d8>
   2e704:	00c00074 	movhi	r3,1
   2e708:	10c5883a 	add	r2,r2,r3
   2e70c:	2808d43a 	srli	r4,r5,16
   2e710:	280a943a 	slli	r5,r5,16
   2e714:	4a7fffcc 	andi	r9,r9,65535
   2e718:	2085883a 	add	r2,r4,r2
   2e71c:	2a4b883a 	add	r5,r5,r9
   2e720:	40803636 	bltu	r8,r2,2e7fc <__umoddi3+0x4c8>
   2e724:	40804d26 	beq	r8,r2,2e85c <__umoddi3+0x528>
   2e728:	4089c83a 	sub	r4,r8,r2
   2e72c:	280f883a 	mov	r7,r5
   2e730:	81cfc83a 	sub	r7,r16,r7
   2e734:	81c7803a 	cmpltu	r3,r16,r7
   2e738:	20c7c83a 	sub	r3,r4,r3
   2e73c:	1cc4983a 	sll	r2,r3,r19
   2e740:	3d0ed83a 	srl	r7,r7,r20
   2e744:	1d06d83a 	srl	r3,r3,r20
   2e748:	11c4b03a 	or	r2,r2,r7
   2e74c:	003f9306 	br	2e59c <__alt_data_end+0xfffee59c>
   2e750:	9ca6983a 	sll	r19,r19,r18
   2e754:	88e8d83a 	srl	r20,r17,r3
   2e758:	80c4d83a 	srl	r2,r16,r3
   2e75c:	982cd43a 	srli	r22,r19,16
   2e760:	8ca2983a 	sll	r17,r17,r18
   2e764:	a009883a 	mov	r4,r20
   2e768:	b00b883a 	mov	r5,r22
   2e76c:	1478b03a 	or	fp,r2,r17
   2e770:	00222880 	call	22288 <__umodsi3>
   2e774:	a009883a 	mov	r4,r20
   2e778:	b00b883a 	mov	r5,r22
   2e77c:	1023883a 	mov	r17,r2
   2e780:	00222240 	call	22224 <__udivsi3>
   2e784:	9d7fffcc 	andi	r21,r19,65535
   2e788:	880a943a 	slli	r5,r17,16
   2e78c:	e008d43a 	srli	r4,fp,16
   2e790:	a885383a 	mul	r2,r21,r2
   2e794:	84a8983a 	sll	r20,r16,r18
   2e798:	2148b03a 	or	r4,r4,r5
   2e79c:	2080042e 	bgeu	r4,r2,2e7b0 <__umoddi3+0x47c>
   2e7a0:	24c9883a 	add	r4,r4,r19
   2e7a4:	24c00236 	bltu	r4,r19,2e7b0 <__umoddi3+0x47c>
   2e7a8:	2080012e 	bgeu	r4,r2,2e7b0 <__umoddi3+0x47c>
   2e7ac:	24c9883a 	add	r4,r4,r19
   2e7b0:	20a3c83a 	sub	r17,r4,r2
   2e7b4:	b00b883a 	mov	r5,r22
   2e7b8:	8809883a 	mov	r4,r17
   2e7bc:	00222880 	call	22288 <__umodsi3>
   2e7c0:	102f883a 	mov	r23,r2
   2e7c4:	8809883a 	mov	r4,r17
   2e7c8:	b00b883a 	mov	r5,r22
   2e7cc:	00222240 	call	22224 <__udivsi3>
   2e7d0:	b82e943a 	slli	r23,r23,16
   2e7d4:	a885383a 	mul	r2,r21,r2
   2e7d8:	e13fffcc 	andi	r4,fp,65535
   2e7dc:	25c8b03a 	or	r4,r4,r23
   2e7e0:	2080042e 	bgeu	r4,r2,2e7f4 <__umoddi3+0x4c0>
   2e7e4:	24c9883a 	add	r4,r4,r19
   2e7e8:	24c00236 	bltu	r4,r19,2e7f4 <__umoddi3+0x4c0>
   2e7ec:	2080012e 	bgeu	r4,r2,2e7f4 <__umoddi3+0x4c0>
   2e7f0:	24c9883a 	add	r4,r4,r19
   2e7f4:	20a3c83a 	sub	r17,r4,r2
   2e7f8:	003f4806 	br	2e51c <__alt_data_end+0xfffee51c>
   2e7fc:	2c8fc83a 	sub	r7,r5,r18
   2e800:	1545c83a 	sub	r2,r2,r21
   2e804:	29cb803a 	cmpltu	r5,r5,r7
   2e808:	1145c83a 	sub	r2,r2,r5
   2e80c:	4089c83a 	sub	r4,r8,r2
   2e810:	003fc706 	br	2e730 <__alt_data_end+0xfffee730>
   2e814:	01000604 	movi	r4,24
   2e818:	003f1806 	br	2e47c <__alt_data_end+0xfffee47c>
   2e81c:	00800604 	movi	r2,24
   2e820:	003f3206 	br	2e4ec <__alt_data_end+0xfffee4ec>
   2e824:	01000604 	movi	r4,24
   2e828:	003ed906 	br	2e390 <__alt_data_end+0xfffee390>
   2e82c:	413fa52e 	bgeu	r8,r4,2e6c4 <__alt_data_end+0xfffee6c4>
   2e830:	297fff84 	addi	r5,r5,-2
   2e834:	4551883a 	add	r8,r8,r21
   2e838:	003fa306 	br	2e6c8 <__alt_data_end+0xfffee6c8>
   2e83c:	15ff8b2e 	bgeu	r2,r23,2e66c <__alt_data_end+0xfffee66c>
   2e840:	31bfff84 	addi	r6,r6,-2
   2e844:	1545883a 	add	r2,r2,r21
   2e848:	003f8906 	br	2e670 <__alt_data_end+0xfffee670>
   2e84c:	24c9883a 	add	r4,r4,r19
   2e850:	003eee06 	br	2e40c <__alt_data_end+0xfffee40c>
   2e854:	8005883a 	mov	r2,r16
   2e858:	003f1706 	br	2e4b8 <__alt_data_end+0xfffee4b8>
   2e85c:	817fe736 	bltu	r16,r5,2e7fc <__alt_data_end+0xfffee7fc>
   2e860:	280f883a 	mov	r7,r5
   2e864:	0009883a 	mov	r4,zero
   2e868:	003fb106 	br	2e730 <__alt_data_end+0xfffee730>

0002e86c <__floatunsidf>:
   2e86c:	defffe04 	addi	sp,sp,-8
   2e870:	dc000015 	stw	r16,0(sp)
   2e874:	dfc00115 	stw	ra,4(sp)
   2e878:	2021883a 	mov	r16,r4
   2e87c:	20002226 	beq	r4,zero,2e908 <__floatunsidf+0x9c>
   2e880:	002483c0 	call	2483c <__clzsi2>
   2e884:	01010784 	movi	r4,1054
   2e888:	2089c83a 	sub	r4,r4,r2
   2e88c:	01810cc4 	movi	r6,1075
   2e890:	310dc83a 	sub	r6,r6,r4
   2e894:	00c007c4 	movi	r3,31
   2e898:	1980120e 	bge	r3,r6,2e8e4 <__floatunsidf+0x78>
   2e89c:	00c104c4 	movi	r3,1043
   2e8a0:	1907c83a 	sub	r3,r3,r4
   2e8a4:	80ca983a 	sll	r5,r16,r3
   2e8a8:	00800434 	movhi	r2,16
   2e8ac:	10bfffc4 	addi	r2,r2,-1
   2e8b0:	2101ffcc 	andi	r4,r4,2047
   2e8b4:	0021883a 	mov	r16,zero
   2e8b8:	288a703a 	and	r5,r5,r2
   2e8bc:	2008953a 	slli	r4,r4,20
   2e8c0:	00c00434 	movhi	r3,16
   2e8c4:	18ffffc4 	addi	r3,r3,-1
   2e8c8:	28c6703a 	and	r3,r5,r3
   2e8cc:	8005883a 	mov	r2,r16
   2e8d0:	1906b03a 	or	r3,r3,r4
   2e8d4:	dfc00117 	ldw	ra,4(sp)
   2e8d8:	dc000017 	ldw	r16,0(sp)
   2e8dc:	dec00204 	addi	sp,sp,8
   2e8e0:	f800283a 	ret
   2e8e4:	00c002c4 	movi	r3,11
   2e8e8:	188bc83a 	sub	r5,r3,r2
   2e8ec:	814ad83a 	srl	r5,r16,r5
   2e8f0:	00c00434 	movhi	r3,16
   2e8f4:	18ffffc4 	addi	r3,r3,-1
   2e8f8:	81a0983a 	sll	r16,r16,r6
   2e8fc:	2101ffcc 	andi	r4,r4,2047
   2e900:	28ca703a 	and	r5,r5,r3
   2e904:	003fed06 	br	2e8bc <__alt_data_end+0xfffee8bc>
   2e908:	0009883a 	mov	r4,zero
   2e90c:	000b883a 	mov	r5,zero
   2e910:	003fea06 	br	2e8bc <__alt_data_end+0xfffee8bc>

0002e914 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e914:	defffe04 	addi	sp,sp,-8
   2e918:	dfc00115 	stw	ra,4(sp)
   2e91c:	df000015 	stw	fp,0(sp)
   2e920:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e924:	d0a00c17 	ldw	r2,-32720(gp)
   2e928:	10000326 	beq	r2,zero,2e938 <alt_get_errno+0x24>
   2e92c:	d0a00c17 	ldw	r2,-32720(gp)
   2e930:	103ee83a 	callr	r2
   2e934:	00000106 	br	2e93c <alt_get_errno+0x28>
   2e938:	d0a6d304 	addi	r2,gp,-25780
}
   2e93c:	e037883a 	mov	sp,fp
   2e940:	dfc00117 	ldw	ra,4(sp)
   2e944:	df000017 	ldw	fp,0(sp)
   2e948:	dec00204 	addi	sp,sp,8
   2e94c:	f800283a 	ret

0002e950 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2e950:	defffb04 	addi	sp,sp,-20
   2e954:	dfc00415 	stw	ra,16(sp)
   2e958:	df000315 	stw	fp,12(sp)
   2e95c:	df000304 	addi	fp,sp,12
   2e960:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2e964:	e0bfff17 	ldw	r2,-4(fp)
   2e968:	10000616 	blt	r2,zero,2e984 <close+0x34>
   2e96c:	e0bfff17 	ldw	r2,-4(fp)
   2e970:	10c00324 	muli	r3,r2,12
   2e974:	008000f4 	movhi	r2,3
   2e978:	10878e04 	addi	r2,r2,7736
   2e97c:	1885883a 	add	r2,r3,r2
   2e980:	00000106 	br	2e988 <close+0x38>
   2e984:	0005883a 	mov	r2,zero
   2e988:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2e98c:	e0bffd17 	ldw	r2,-12(fp)
   2e990:	10001926 	beq	r2,zero,2e9f8 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2e994:	e0bffd17 	ldw	r2,-12(fp)
   2e998:	10800017 	ldw	r2,0(r2)
   2e99c:	10800417 	ldw	r2,16(r2)
   2e9a0:	10000626 	beq	r2,zero,2e9bc <close+0x6c>
   2e9a4:	e0bffd17 	ldw	r2,-12(fp)
   2e9a8:	10800017 	ldw	r2,0(r2)
   2e9ac:	10800417 	ldw	r2,16(r2)
   2e9b0:	e13ffd17 	ldw	r4,-12(fp)
   2e9b4:	103ee83a 	callr	r2
   2e9b8:	00000106 	br	2e9c0 <close+0x70>
   2e9bc:	0005883a 	mov	r2,zero
   2e9c0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2e9c4:	e13fff17 	ldw	r4,-4(fp)
   2e9c8:	002f0100 	call	2f010 <alt_release_fd>
    if (rval < 0)
   2e9cc:	e0bffe17 	ldw	r2,-8(fp)
   2e9d0:	1000070e 	bge	r2,zero,2e9f0 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2e9d4:	002e9140 	call	2e914 <alt_get_errno>
   2e9d8:	1007883a 	mov	r3,r2
   2e9dc:	e0bffe17 	ldw	r2,-8(fp)
   2e9e0:	0085c83a 	sub	r2,zero,r2
   2e9e4:	18800015 	stw	r2,0(r3)
      return -1;
   2e9e8:	00bfffc4 	movi	r2,-1
   2e9ec:	00000706 	br	2ea0c <close+0xbc>
    }
    return 0;
   2e9f0:	0005883a 	mov	r2,zero
   2e9f4:	00000506 	br	2ea0c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2e9f8:	002e9140 	call	2e914 <alt_get_errno>
   2e9fc:	1007883a 	mov	r3,r2
   2ea00:	00801444 	movi	r2,81
   2ea04:	18800015 	stw	r2,0(r3)
    return -1;
   2ea08:	00bfffc4 	movi	r2,-1
  }
}
   2ea0c:	e037883a 	mov	sp,fp
   2ea10:	dfc00117 	ldw	ra,4(sp)
   2ea14:	df000017 	ldw	fp,0(sp)
   2ea18:	dec00204 	addi	sp,sp,8
   2ea1c:	f800283a 	ret

0002ea20 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2ea20:	defffc04 	addi	sp,sp,-16
   2ea24:	df000315 	stw	fp,12(sp)
   2ea28:	df000304 	addi	fp,sp,12
   2ea2c:	e13ffd15 	stw	r4,-12(fp)
   2ea30:	e17ffe15 	stw	r5,-8(fp)
   2ea34:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2ea38:	e0bfff17 	ldw	r2,-4(fp)
}
   2ea3c:	e037883a 	mov	sp,fp
   2ea40:	df000017 	ldw	fp,0(sp)
   2ea44:	dec00104 	addi	sp,sp,4
   2ea48:	f800283a 	ret

0002ea4c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ea4c:	defffe04 	addi	sp,sp,-8
   2ea50:	dfc00115 	stw	ra,4(sp)
   2ea54:	df000015 	stw	fp,0(sp)
   2ea58:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ea5c:	d0a00c17 	ldw	r2,-32720(gp)
   2ea60:	10000326 	beq	r2,zero,2ea70 <alt_get_errno+0x24>
   2ea64:	d0a00c17 	ldw	r2,-32720(gp)
   2ea68:	103ee83a 	callr	r2
   2ea6c:	00000106 	br	2ea74 <alt_get_errno+0x28>
   2ea70:	d0a6d304 	addi	r2,gp,-25780
}
   2ea74:	e037883a 	mov	sp,fp
   2ea78:	dfc00117 	ldw	ra,4(sp)
   2ea7c:	df000017 	ldw	fp,0(sp)
   2ea80:	dec00204 	addi	sp,sp,8
   2ea84:	f800283a 	ret

0002ea88 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2ea88:	defffb04 	addi	sp,sp,-20
   2ea8c:	dfc00415 	stw	ra,16(sp)
   2ea90:	df000315 	stw	fp,12(sp)
   2ea94:	df000304 	addi	fp,sp,12
   2ea98:	e13ffe15 	stw	r4,-8(fp)
   2ea9c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2eaa0:	e0bffe17 	ldw	r2,-8(fp)
   2eaa4:	10000616 	blt	r2,zero,2eac0 <fstat+0x38>
   2eaa8:	e0bffe17 	ldw	r2,-8(fp)
   2eaac:	10c00324 	muli	r3,r2,12
   2eab0:	008000f4 	movhi	r2,3
   2eab4:	10878e04 	addi	r2,r2,7736
   2eab8:	1885883a 	add	r2,r3,r2
   2eabc:	00000106 	br	2eac4 <fstat+0x3c>
   2eac0:	0005883a 	mov	r2,zero
   2eac4:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2eac8:	e0bffd17 	ldw	r2,-12(fp)
   2eacc:	10001026 	beq	r2,zero,2eb10 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2ead0:	e0bffd17 	ldw	r2,-12(fp)
   2ead4:	10800017 	ldw	r2,0(r2)
   2ead8:	10800817 	ldw	r2,32(r2)
   2eadc:	10000726 	beq	r2,zero,2eafc <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2eae0:	e0bffd17 	ldw	r2,-12(fp)
   2eae4:	10800017 	ldw	r2,0(r2)
   2eae8:	10800817 	ldw	r2,32(r2)
   2eaec:	e17fff17 	ldw	r5,-4(fp)
   2eaf0:	e13ffd17 	ldw	r4,-12(fp)
   2eaf4:	103ee83a 	callr	r2
   2eaf8:	00000a06 	br	2eb24 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2eafc:	e0bfff17 	ldw	r2,-4(fp)
   2eb00:	00c80004 	movi	r3,8192
   2eb04:	10c00115 	stw	r3,4(r2)
      return 0;
   2eb08:	0005883a 	mov	r2,zero
   2eb0c:	00000506 	br	2eb24 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2eb10:	002ea4c0 	call	2ea4c <alt_get_errno>
   2eb14:	1007883a 	mov	r3,r2
   2eb18:	00801444 	movi	r2,81
   2eb1c:	18800015 	stw	r2,0(r3)
    return -1;
   2eb20:	00bfffc4 	movi	r2,-1
  }
}
   2eb24:	e037883a 	mov	sp,fp
   2eb28:	dfc00117 	ldw	ra,4(sp)
   2eb2c:	df000017 	ldw	fp,0(sp)
   2eb30:	dec00204 	addi	sp,sp,8
   2eb34:	f800283a 	ret

0002eb38 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2eb38:	defffe04 	addi	sp,sp,-8
   2eb3c:	dfc00115 	stw	ra,4(sp)
   2eb40:	df000015 	stw	fp,0(sp)
   2eb44:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2eb48:	d0a00c17 	ldw	r2,-32720(gp)
   2eb4c:	10000326 	beq	r2,zero,2eb5c <alt_get_errno+0x24>
   2eb50:	d0a00c17 	ldw	r2,-32720(gp)
   2eb54:	103ee83a 	callr	r2
   2eb58:	00000106 	br	2eb60 <alt_get_errno+0x28>
   2eb5c:	d0a6d304 	addi	r2,gp,-25780
}
   2eb60:	e037883a 	mov	sp,fp
   2eb64:	dfc00117 	ldw	ra,4(sp)
   2eb68:	df000017 	ldw	fp,0(sp)
   2eb6c:	dec00204 	addi	sp,sp,8
   2eb70:	f800283a 	ret

0002eb74 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2eb74:	deffed04 	addi	sp,sp,-76
   2eb78:	dfc01215 	stw	ra,72(sp)
   2eb7c:	df001115 	stw	fp,68(sp)
   2eb80:	df001104 	addi	fp,sp,68
   2eb84:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2eb88:	e0bfff17 	ldw	r2,-4(fp)
   2eb8c:	10000616 	blt	r2,zero,2eba8 <isatty+0x34>
   2eb90:	e0bfff17 	ldw	r2,-4(fp)
   2eb94:	10c00324 	muli	r3,r2,12
   2eb98:	008000f4 	movhi	r2,3
   2eb9c:	10878e04 	addi	r2,r2,7736
   2eba0:	1885883a 	add	r2,r3,r2
   2eba4:	00000106 	br	2ebac <isatty+0x38>
   2eba8:	0005883a 	mov	r2,zero
   2ebac:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2ebb0:	e0bfef17 	ldw	r2,-68(fp)
   2ebb4:	10000e26 	beq	r2,zero,2ebf0 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2ebb8:	e0bfef17 	ldw	r2,-68(fp)
   2ebbc:	10800017 	ldw	r2,0(r2)
   2ebc0:	10800817 	ldw	r2,32(r2)
   2ebc4:	1000021e 	bne	r2,zero,2ebd0 <isatty+0x5c>
    {
      return 1;
   2ebc8:	00800044 	movi	r2,1
   2ebcc:	00000d06 	br	2ec04 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2ebd0:	e0bff004 	addi	r2,fp,-64
   2ebd4:	100b883a 	mov	r5,r2
   2ebd8:	e13fff17 	ldw	r4,-4(fp)
   2ebdc:	002ea880 	call	2ea88 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2ebe0:	e0bff117 	ldw	r2,-60(fp)
   2ebe4:	10880020 	cmpeqi	r2,r2,8192
   2ebe8:	10803fcc 	andi	r2,r2,255
   2ebec:	00000506 	br	2ec04 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2ebf0:	002eb380 	call	2eb38 <alt_get_errno>
   2ebf4:	1007883a 	mov	r3,r2
   2ebf8:	00801444 	movi	r2,81
   2ebfc:	18800015 	stw	r2,0(r3)
    return 0;
   2ec00:	0005883a 	mov	r2,zero
  }
}
   2ec04:	e037883a 	mov	sp,fp
   2ec08:	dfc00117 	ldw	ra,4(sp)
   2ec0c:	df000017 	ldw	fp,0(sp)
   2ec10:	dec00204 	addi	sp,sp,8
   2ec14:	f800283a 	ret

0002ec18 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2ec18:	defffc04 	addi	sp,sp,-16
   2ec1c:	df000315 	stw	fp,12(sp)
   2ec20:	df000304 	addi	fp,sp,12
   2ec24:	e13ffd15 	stw	r4,-12(fp)
   2ec28:	e17ffe15 	stw	r5,-8(fp)
   2ec2c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2ec30:	e0fffe17 	ldw	r3,-8(fp)
   2ec34:	e0bffd17 	ldw	r2,-12(fp)
   2ec38:	18800c26 	beq	r3,r2,2ec6c <alt_load_section+0x54>
  {
    while( to != end )
   2ec3c:	00000806 	br	2ec60 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2ec40:	e0bffe17 	ldw	r2,-8(fp)
   2ec44:	10c00104 	addi	r3,r2,4
   2ec48:	e0fffe15 	stw	r3,-8(fp)
   2ec4c:	e0fffd17 	ldw	r3,-12(fp)
   2ec50:	19000104 	addi	r4,r3,4
   2ec54:	e13ffd15 	stw	r4,-12(fp)
   2ec58:	18c00017 	ldw	r3,0(r3)
   2ec5c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2ec60:	e0fffe17 	ldw	r3,-8(fp)
   2ec64:	e0bfff17 	ldw	r2,-4(fp)
   2ec68:	18bff51e 	bne	r3,r2,2ec40 <__alt_data_end+0xfffeec40>
    {
      *to++ = *from++;
    }
  }
}
   2ec6c:	0001883a 	nop
   2ec70:	e037883a 	mov	sp,fp
   2ec74:	df000017 	ldw	fp,0(sp)
   2ec78:	dec00104 	addi	sp,sp,4
   2ec7c:	f800283a 	ret

0002ec80 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2ec80:	defffe04 	addi	sp,sp,-8
   2ec84:	dfc00115 	stw	ra,4(sp)
   2ec88:	df000015 	stw	fp,0(sp)
   2ec8c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2ec90:	018000f4 	movhi	r6,3
   2ec94:	318c1704 	addi	r6,r6,12380
   2ec98:	014000f4 	movhi	r5,3
   2ec9c:	29455b04 	addi	r5,r5,5484
   2eca0:	010000f4 	movhi	r4,3
   2eca4:	210c1704 	addi	r4,r4,12380
   2eca8:	002ec180 	call	2ec18 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2ecac:	018000b4 	movhi	r6,2
   2ecb0:	31809104 	addi	r6,r6,580
   2ecb4:	014000b4 	movhi	r5,2
   2ecb8:	29400804 	addi	r5,r5,32
   2ecbc:	010000b4 	movhi	r4,2
   2ecc0:	21000804 	addi	r4,r4,32
   2ecc4:	002ec180 	call	2ec18 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2ecc8:	018000f4 	movhi	r6,3
   2eccc:	31855b04 	addi	r6,r6,5484
   2ecd0:	014000f4 	movhi	r5,3
   2ecd4:	29449304 	addi	r5,r5,4684
   2ecd8:	010000f4 	movhi	r4,3
   2ecdc:	21049304 	addi	r4,r4,4684
   2ece0:	002ec180 	call	2ec18 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2ece4:	00301380 	call	30138 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2ece8:	00303200 	call	30320 <alt_icache_flush_all>
}
   2ecec:	0001883a 	nop
   2ecf0:	e037883a 	mov	sp,fp
   2ecf4:	dfc00117 	ldw	ra,4(sp)
   2ecf8:	df000017 	ldw	fp,0(sp)
   2ecfc:	dec00204 	addi	sp,sp,8
   2ed00:	f800283a 	ret

0002ed04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ed04:	defffe04 	addi	sp,sp,-8
   2ed08:	dfc00115 	stw	ra,4(sp)
   2ed0c:	df000015 	stw	fp,0(sp)
   2ed10:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ed14:	d0a00c17 	ldw	r2,-32720(gp)
   2ed18:	10000326 	beq	r2,zero,2ed28 <alt_get_errno+0x24>
   2ed1c:	d0a00c17 	ldw	r2,-32720(gp)
   2ed20:	103ee83a 	callr	r2
   2ed24:	00000106 	br	2ed2c <alt_get_errno+0x28>
   2ed28:	d0a6d304 	addi	r2,gp,-25780
}
   2ed2c:	e037883a 	mov	sp,fp
   2ed30:	dfc00117 	ldw	ra,4(sp)
   2ed34:	df000017 	ldw	fp,0(sp)
   2ed38:	dec00204 	addi	sp,sp,8
   2ed3c:	f800283a 	ret

0002ed40 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2ed40:	defff904 	addi	sp,sp,-28
   2ed44:	dfc00615 	stw	ra,24(sp)
   2ed48:	df000515 	stw	fp,20(sp)
   2ed4c:	df000504 	addi	fp,sp,20
   2ed50:	e13ffd15 	stw	r4,-12(fp)
   2ed54:	e17ffe15 	stw	r5,-8(fp)
   2ed58:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2ed5c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2ed60:	e0bffd17 	ldw	r2,-12(fp)
   2ed64:	10000616 	blt	r2,zero,2ed80 <lseek+0x40>
   2ed68:	e0bffd17 	ldw	r2,-12(fp)
   2ed6c:	10c00324 	muli	r3,r2,12
   2ed70:	008000f4 	movhi	r2,3
   2ed74:	10878e04 	addi	r2,r2,7736
   2ed78:	1885883a 	add	r2,r3,r2
   2ed7c:	00000106 	br	2ed84 <lseek+0x44>
   2ed80:	0005883a 	mov	r2,zero
   2ed84:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2ed88:	e0bffc17 	ldw	r2,-16(fp)
   2ed8c:	10001026 	beq	r2,zero,2edd0 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2ed90:	e0bffc17 	ldw	r2,-16(fp)
   2ed94:	10800017 	ldw	r2,0(r2)
   2ed98:	10800717 	ldw	r2,28(r2)
   2ed9c:	10000926 	beq	r2,zero,2edc4 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2eda0:	e0bffc17 	ldw	r2,-16(fp)
   2eda4:	10800017 	ldw	r2,0(r2)
   2eda8:	10800717 	ldw	r2,28(r2)
   2edac:	e1bfff17 	ldw	r6,-4(fp)
   2edb0:	e17ffe17 	ldw	r5,-8(fp)
   2edb4:	e13ffc17 	ldw	r4,-16(fp)
   2edb8:	103ee83a 	callr	r2
   2edbc:	e0bffb15 	stw	r2,-20(fp)
   2edc0:	00000506 	br	2edd8 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2edc4:	00bfde84 	movi	r2,-134
   2edc8:	e0bffb15 	stw	r2,-20(fp)
   2edcc:	00000206 	br	2edd8 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2edd0:	00bfebc4 	movi	r2,-81
   2edd4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2edd8:	e0bffb17 	ldw	r2,-20(fp)
   2eddc:	1000070e 	bge	r2,zero,2edfc <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2ede0:	002ed040 	call	2ed04 <alt_get_errno>
   2ede4:	1007883a 	mov	r3,r2
   2ede8:	e0bffb17 	ldw	r2,-20(fp)
   2edec:	0085c83a 	sub	r2,zero,r2
   2edf0:	18800015 	stw	r2,0(r3)
    rc = -1;
   2edf4:	00bfffc4 	movi	r2,-1
   2edf8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2edfc:	e0bffb17 	ldw	r2,-20(fp)
}
   2ee00:	e037883a 	mov	sp,fp
   2ee04:	dfc00117 	ldw	ra,4(sp)
   2ee08:	df000017 	ldw	fp,0(sp)
   2ee0c:	dec00204 	addi	sp,sp,8
   2ee10:	f800283a 	ret

0002ee14 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2ee14:	defffd04 	addi	sp,sp,-12
   2ee18:	dfc00215 	stw	ra,8(sp)
   2ee1c:	df000115 	stw	fp,4(sp)
   2ee20:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2ee24:	0009883a 	mov	r4,zero
   2ee28:	002f2bc0 	call	2f2bc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2ee2c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2ee30:	002f2f40 	call	2f2f4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2ee34:	018000f4 	movhi	r6,3
   2ee38:	31855104 	addi	r6,r6,5444
   2ee3c:	014000f4 	movhi	r5,3
   2ee40:	29455104 	addi	r5,r5,5444
   2ee44:	010000f4 	movhi	r4,3
   2ee48:	21055104 	addi	r4,r4,5444
   2ee4c:	00306b80 	call	306b8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2ee50:	00302600 	call	30260 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2ee54:	010000f4 	movhi	r4,3
   2ee58:	2100b004 	addi	r4,r4,704
   2ee5c:	0030eb80 	call	30eb8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2ee60:	d0a6d417 	ldw	r2,-25776(gp)
   2ee64:	d0e6d517 	ldw	r3,-25772(gp)
   2ee68:	d126d617 	ldw	r4,-25768(gp)
   2ee6c:	200d883a 	mov	r6,r4
   2ee70:	180b883a 	mov	r5,r3
   2ee74:	1009883a 	mov	r4,r2
   2ee78:	00202900 	call	20290 <main>
   2ee7c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2ee80:	01000044 	movi	r4,1
   2ee84:	002e9500 	call	2e950 <close>
  exit (result);
   2ee88:	e13fff17 	ldw	r4,-4(fp)
   2ee8c:	0030ecc0 	call	30ecc <exit>

0002ee90 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2ee90:	defffe04 	addi	sp,sp,-8
   2ee94:	df000115 	stw	fp,4(sp)
   2ee98:	df000104 	addi	fp,sp,4
   2ee9c:	e13fff15 	stw	r4,-4(fp)
}
   2eea0:	0001883a 	nop
   2eea4:	e037883a 	mov	sp,fp
   2eea8:	df000017 	ldw	fp,0(sp)
   2eeac:	dec00104 	addi	sp,sp,4
   2eeb0:	f800283a 	ret

0002eeb4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2eeb4:	defffe04 	addi	sp,sp,-8
   2eeb8:	df000115 	stw	fp,4(sp)
   2eebc:	df000104 	addi	fp,sp,4
   2eec0:	e13fff15 	stw	r4,-4(fp)
}
   2eec4:	0001883a 	nop
   2eec8:	e037883a 	mov	sp,fp
   2eecc:	df000017 	ldw	fp,0(sp)
   2eed0:	dec00104 	addi	sp,sp,4
   2eed4:	f800283a 	ret

0002eed8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2eed8:	defffe04 	addi	sp,sp,-8
   2eedc:	dfc00115 	stw	ra,4(sp)
   2eee0:	df000015 	stw	fp,0(sp)
   2eee4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2eee8:	d0a00c17 	ldw	r2,-32720(gp)
   2eeec:	10000326 	beq	r2,zero,2eefc <alt_get_errno+0x24>
   2eef0:	d0a00c17 	ldw	r2,-32720(gp)
   2eef4:	103ee83a 	callr	r2
   2eef8:	00000106 	br	2ef00 <alt_get_errno+0x28>
   2eefc:	d0a6d304 	addi	r2,gp,-25780
}
   2ef00:	e037883a 	mov	sp,fp
   2ef04:	dfc00117 	ldw	ra,4(sp)
   2ef08:	df000017 	ldw	fp,0(sp)
   2ef0c:	dec00204 	addi	sp,sp,8
   2ef10:	f800283a 	ret

0002ef14 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2ef14:	defff904 	addi	sp,sp,-28
   2ef18:	dfc00615 	stw	ra,24(sp)
   2ef1c:	df000515 	stw	fp,20(sp)
   2ef20:	df000504 	addi	fp,sp,20
   2ef24:	e13ffd15 	stw	r4,-12(fp)
   2ef28:	e17ffe15 	stw	r5,-8(fp)
   2ef2c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2ef30:	e0bffd17 	ldw	r2,-12(fp)
   2ef34:	10000616 	blt	r2,zero,2ef50 <read+0x3c>
   2ef38:	e0bffd17 	ldw	r2,-12(fp)
   2ef3c:	10c00324 	muli	r3,r2,12
   2ef40:	008000f4 	movhi	r2,3
   2ef44:	10878e04 	addi	r2,r2,7736
   2ef48:	1885883a 	add	r2,r3,r2
   2ef4c:	00000106 	br	2ef54 <read+0x40>
   2ef50:	0005883a 	mov	r2,zero
   2ef54:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2ef58:	e0bffb17 	ldw	r2,-20(fp)
   2ef5c:	10002226 	beq	r2,zero,2efe8 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2ef60:	e0bffb17 	ldw	r2,-20(fp)
   2ef64:	10800217 	ldw	r2,8(r2)
   2ef68:	108000cc 	andi	r2,r2,3
   2ef6c:	10800060 	cmpeqi	r2,r2,1
   2ef70:	1000181e 	bne	r2,zero,2efd4 <read+0xc0>
        (fd->dev->read))
   2ef74:	e0bffb17 	ldw	r2,-20(fp)
   2ef78:	10800017 	ldw	r2,0(r2)
   2ef7c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2ef80:	10001426 	beq	r2,zero,2efd4 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2ef84:	e0bffb17 	ldw	r2,-20(fp)
   2ef88:	10800017 	ldw	r2,0(r2)
   2ef8c:	10800517 	ldw	r2,20(r2)
   2ef90:	e0ffff17 	ldw	r3,-4(fp)
   2ef94:	180d883a 	mov	r6,r3
   2ef98:	e17ffe17 	ldw	r5,-8(fp)
   2ef9c:	e13ffb17 	ldw	r4,-20(fp)
   2efa0:	103ee83a 	callr	r2
   2efa4:	e0bffc15 	stw	r2,-16(fp)
   2efa8:	e0bffc17 	ldw	r2,-16(fp)
   2efac:	1000070e 	bge	r2,zero,2efcc <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2efb0:	002eed80 	call	2eed8 <alt_get_errno>
   2efb4:	1007883a 	mov	r3,r2
   2efb8:	e0bffc17 	ldw	r2,-16(fp)
   2efbc:	0085c83a 	sub	r2,zero,r2
   2efc0:	18800015 	stw	r2,0(r3)
          return -1;
   2efc4:	00bfffc4 	movi	r2,-1
   2efc8:	00000c06 	br	2effc <read+0xe8>
        }
        return rval;
   2efcc:	e0bffc17 	ldw	r2,-16(fp)
   2efd0:	00000a06 	br	2effc <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2efd4:	002eed80 	call	2eed8 <alt_get_errno>
   2efd8:	1007883a 	mov	r3,r2
   2efdc:	00800344 	movi	r2,13
   2efe0:	18800015 	stw	r2,0(r3)
   2efe4:	00000406 	br	2eff8 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2efe8:	002eed80 	call	2eed8 <alt_get_errno>
   2efec:	1007883a 	mov	r3,r2
   2eff0:	00801444 	movi	r2,81
   2eff4:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2eff8:	00bfffc4 	movi	r2,-1
}
   2effc:	e037883a 	mov	sp,fp
   2f000:	dfc00117 	ldw	ra,4(sp)
   2f004:	df000017 	ldw	fp,0(sp)
   2f008:	dec00204 	addi	sp,sp,8
   2f00c:	f800283a 	ret

0002f010 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2f010:	defffe04 	addi	sp,sp,-8
   2f014:	df000115 	stw	fp,4(sp)
   2f018:	df000104 	addi	fp,sp,4
   2f01c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2f020:	e0bfff17 	ldw	r2,-4(fp)
   2f024:	108000d0 	cmplti	r2,r2,3
   2f028:	10000d1e 	bne	r2,zero,2f060 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2f02c:	008000f4 	movhi	r2,3
   2f030:	10878e04 	addi	r2,r2,7736
   2f034:	e0ffff17 	ldw	r3,-4(fp)
   2f038:	18c00324 	muli	r3,r3,12
   2f03c:	10c5883a 	add	r2,r2,r3
   2f040:	10800204 	addi	r2,r2,8
   2f044:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2f048:	008000f4 	movhi	r2,3
   2f04c:	10878e04 	addi	r2,r2,7736
   2f050:	e0ffff17 	ldw	r3,-4(fp)
   2f054:	18c00324 	muli	r3,r3,12
   2f058:	10c5883a 	add	r2,r2,r3
   2f05c:	10000015 	stw	zero,0(r2)
  }
}
   2f060:	0001883a 	nop
   2f064:	e037883a 	mov	sp,fp
   2f068:	df000017 	ldw	fp,0(sp)
   2f06c:	dec00104 	addi	sp,sp,4
   2f070:	f800283a 	ret

0002f074 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2f074:	defff904 	addi	sp,sp,-28
   2f078:	df000615 	stw	fp,24(sp)
   2f07c:	df000604 	addi	fp,sp,24
   2f080:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f084:	0005303a 	rdctl	r2,status
   2f088:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f08c:	e0fffe17 	ldw	r3,-8(fp)
   2f090:	00bfff84 	movi	r2,-2
   2f094:	1884703a 	and	r2,r3,r2
   2f098:	1001703a 	wrctl	status,r2
  
  return context;
   2f09c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2f0a0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2f0a4:	d0a00d17 	ldw	r2,-32716(gp)
   2f0a8:	10c000c4 	addi	r3,r2,3
   2f0ac:	00bfff04 	movi	r2,-4
   2f0b0:	1884703a 	and	r2,r3,r2
   2f0b4:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2f0b8:	d0e00d17 	ldw	r3,-32716(gp)
   2f0bc:	e0bfff17 	ldw	r2,-4(fp)
   2f0c0:	1887883a 	add	r3,r3,r2
   2f0c4:	00800134 	movhi	r2,4
   2f0c8:	10800004 	addi	r2,r2,0
   2f0cc:	10c0062e 	bgeu	r2,r3,2f0e8 <sbrk+0x74>
   2f0d0:	e0bffb17 	ldw	r2,-20(fp)
   2f0d4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f0d8:	e0bffa17 	ldw	r2,-24(fp)
   2f0dc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2f0e0:	00bfffc4 	movi	r2,-1
   2f0e4:	00000b06 	br	2f114 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2f0e8:	d0a00d17 	ldw	r2,-32716(gp)
   2f0ec:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2f0f0:	d0e00d17 	ldw	r3,-32716(gp)
   2f0f4:	e0bfff17 	ldw	r2,-4(fp)
   2f0f8:	1885883a 	add	r2,r3,r2
   2f0fc:	d0a00d15 	stw	r2,-32716(gp)
   2f100:	e0bffb17 	ldw	r2,-20(fp)
   2f104:	e0bffc15 	stw	r2,-16(fp)
   2f108:	e0bffc17 	ldw	r2,-16(fp)
   2f10c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2f110:	e0bffd17 	ldw	r2,-12(fp)
} 
   2f114:	e037883a 	mov	sp,fp
   2f118:	df000017 	ldw	fp,0(sp)
   2f11c:	dec00104 	addi	sp,sp,4
   2f120:	f800283a 	ret

0002f124 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   2f124:	defffd04 	addi	sp,sp,-12
   2f128:	dfc00215 	stw	ra,8(sp)
   2f12c:	df000115 	stw	fp,4(sp)
   2f130:	df000104 	addi	fp,sp,4
   2f134:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   2f138:	e13fff17 	ldw	r4,-4(fp)
   2f13c:	002ffe00 	call	2ffe0 <alt_busy_sleep>
}
   2f140:	e037883a 	mov	sp,fp
   2f144:	dfc00117 	ldw	ra,4(sp)
   2f148:	df000017 	ldw	fp,0(sp)
   2f14c:	dec00204 	addi	sp,sp,8
   2f150:	f800283a 	ret

0002f154 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2f154:	defffe04 	addi	sp,sp,-8
   2f158:	dfc00115 	stw	ra,4(sp)
   2f15c:	df000015 	stw	fp,0(sp)
   2f160:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f164:	d0a00c17 	ldw	r2,-32720(gp)
   2f168:	10000326 	beq	r2,zero,2f178 <alt_get_errno+0x24>
   2f16c:	d0a00c17 	ldw	r2,-32720(gp)
   2f170:	103ee83a 	callr	r2
   2f174:	00000106 	br	2f17c <alt_get_errno+0x28>
   2f178:	d0a6d304 	addi	r2,gp,-25780
}
   2f17c:	e037883a 	mov	sp,fp
   2f180:	dfc00117 	ldw	ra,4(sp)
   2f184:	df000017 	ldw	fp,0(sp)
   2f188:	dec00204 	addi	sp,sp,8
   2f18c:	f800283a 	ret

0002f190 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2f190:	defff904 	addi	sp,sp,-28
   2f194:	dfc00615 	stw	ra,24(sp)
   2f198:	df000515 	stw	fp,20(sp)
   2f19c:	df000504 	addi	fp,sp,20
   2f1a0:	e13ffd15 	stw	r4,-12(fp)
   2f1a4:	e17ffe15 	stw	r5,-8(fp)
   2f1a8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2f1ac:	e0bffd17 	ldw	r2,-12(fp)
   2f1b0:	10000616 	blt	r2,zero,2f1cc <write+0x3c>
   2f1b4:	e0bffd17 	ldw	r2,-12(fp)
   2f1b8:	10c00324 	muli	r3,r2,12
   2f1bc:	008000f4 	movhi	r2,3
   2f1c0:	10878e04 	addi	r2,r2,7736
   2f1c4:	1885883a 	add	r2,r3,r2
   2f1c8:	00000106 	br	2f1d0 <write+0x40>
   2f1cc:	0005883a 	mov	r2,zero
   2f1d0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2f1d4:	e0bffb17 	ldw	r2,-20(fp)
   2f1d8:	10002126 	beq	r2,zero,2f260 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2f1dc:	e0bffb17 	ldw	r2,-20(fp)
   2f1e0:	10800217 	ldw	r2,8(r2)
   2f1e4:	108000cc 	andi	r2,r2,3
   2f1e8:	10001826 	beq	r2,zero,2f24c <write+0xbc>
   2f1ec:	e0bffb17 	ldw	r2,-20(fp)
   2f1f0:	10800017 	ldw	r2,0(r2)
   2f1f4:	10800617 	ldw	r2,24(r2)
   2f1f8:	10001426 	beq	r2,zero,2f24c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2f1fc:	e0bffb17 	ldw	r2,-20(fp)
   2f200:	10800017 	ldw	r2,0(r2)
   2f204:	10800617 	ldw	r2,24(r2)
   2f208:	e0ffff17 	ldw	r3,-4(fp)
   2f20c:	180d883a 	mov	r6,r3
   2f210:	e17ffe17 	ldw	r5,-8(fp)
   2f214:	e13ffb17 	ldw	r4,-20(fp)
   2f218:	103ee83a 	callr	r2
   2f21c:	e0bffc15 	stw	r2,-16(fp)
   2f220:	e0bffc17 	ldw	r2,-16(fp)
   2f224:	1000070e 	bge	r2,zero,2f244 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2f228:	002f1540 	call	2f154 <alt_get_errno>
   2f22c:	1007883a 	mov	r3,r2
   2f230:	e0bffc17 	ldw	r2,-16(fp)
   2f234:	0085c83a 	sub	r2,zero,r2
   2f238:	18800015 	stw	r2,0(r3)
        return -1;
   2f23c:	00bfffc4 	movi	r2,-1
   2f240:	00000c06 	br	2f274 <write+0xe4>
      }
      return rval;
   2f244:	e0bffc17 	ldw	r2,-16(fp)
   2f248:	00000a06 	br	2f274 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2f24c:	002f1540 	call	2f154 <alt_get_errno>
   2f250:	1007883a 	mov	r3,r2
   2f254:	00800344 	movi	r2,13
   2f258:	18800015 	stw	r2,0(r3)
   2f25c:	00000406 	br	2f270 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2f260:	002f1540 	call	2f154 <alt_get_errno>
   2f264:	1007883a 	mov	r3,r2
   2f268:	00801444 	movi	r2,81
   2f26c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2f270:	00bfffc4 	movi	r2,-1
}
   2f274:	e037883a 	mov	sp,fp
   2f278:	dfc00117 	ldw	ra,4(sp)
   2f27c:	df000017 	ldw	fp,0(sp)
   2f280:	dec00204 	addi	sp,sp,8
   2f284:	f800283a 	ret

0002f288 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2f288:	defffd04 	addi	sp,sp,-12
   2f28c:	dfc00215 	stw	ra,8(sp)
   2f290:	df000115 	stw	fp,4(sp)
   2f294:	df000104 	addi	fp,sp,4
   2f298:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2f29c:	d1600904 	addi	r5,gp,-32732
   2f2a0:	e13fff17 	ldw	r4,-4(fp)
   2f2a4:	00301bc0 	call	301bc <alt_dev_llist_insert>
}
   2f2a8:	e037883a 	mov	sp,fp
   2f2ac:	dfc00117 	ldw	ra,4(sp)
   2f2b0:	df000017 	ldw	fp,0(sp)
   2f2b4:	dec00204 	addi	sp,sp,8
   2f2b8:	f800283a 	ret

0002f2bc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2f2bc:	defffd04 	addi	sp,sp,-12
   2f2c0:	dfc00215 	stw	ra,8(sp)
   2f2c4:	df000115 	stw	fp,4(sp)
   2f2c8:	df000104 	addi	fp,sp,4
   2f2cc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   2f2d0:	0030b2c0 	call	30b2c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2f2d4:	00800044 	movi	r2,1
   2f2d8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2f2dc:	0001883a 	nop
   2f2e0:	e037883a 	mov	sp,fp
   2f2e4:	dfc00117 	ldw	ra,4(sp)
   2f2e8:	df000017 	ldw	fp,0(sp)
   2f2ec:	dec00204 	addi	sp,sp,8
   2f2f0:	f800283a 	ret

0002f2f4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2f2f4:	defffe04 	addi	sp,sp,-8
   2f2f8:	dfc00115 	stw	ra,4(sp)
   2f2fc:	df000015 	stw	fp,0(sp)
   2f300:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
   2f304:	01c0fa04 	movi	r7,1000
   2f308:	01800044 	movi	r6,1
   2f30c:	000b883a 	mov	r5,zero
   2f310:	01000134 	movhi	r4,4
   2f314:	21040004 	addi	r4,r4,4096
   2f318:	002fe380 	call	2fe38 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2f31c:	01800404 	movi	r6,16
   2f320:	000b883a 	mov	r5,zero
   2f324:	010000f4 	movhi	r4,3
   2f328:	2107f804 	addi	r4,r4,8160
   2f32c:	002f4bc0 	call	2f4bc <altera_avalon_jtag_uart_init>
   2f330:	010000f4 	movhi	r4,3
   2f334:	2107ee04 	addi	r4,r4,8120
   2f338:	002f2880 	call	2f288 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
   2f33c:	0001883a 	nop
}
   2f340:	0001883a 	nop
   2f344:	e037883a 	mov	sp,fp
   2f348:	dfc00117 	ldw	ra,4(sp)
   2f34c:	df000017 	ldw	fp,0(sp)
   2f350:	dec00204 	addi	sp,sp,8
   2f354:	f800283a 	ret

0002f358 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2f358:	defffa04 	addi	sp,sp,-24
   2f35c:	dfc00515 	stw	ra,20(sp)
   2f360:	df000415 	stw	fp,16(sp)
   2f364:	df000404 	addi	fp,sp,16
   2f368:	e13ffd15 	stw	r4,-12(fp)
   2f36c:	e17ffe15 	stw	r5,-8(fp)
   2f370:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2f374:	e0bffd17 	ldw	r2,-12(fp)
   2f378:	10800017 	ldw	r2,0(r2)
   2f37c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2f380:	e0bffc17 	ldw	r2,-16(fp)
   2f384:	10c00a04 	addi	r3,r2,40
   2f388:	e0bffd17 	ldw	r2,-12(fp)
   2f38c:	10800217 	ldw	r2,8(r2)
   2f390:	100f883a 	mov	r7,r2
   2f394:	e1bfff17 	ldw	r6,-4(fp)
   2f398:	e17ffe17 	ldw	r5,-8(fp)
   2f39c:	1809883a 	mov	r4,r3
   2f3a0:	002f9800 	call	2f980 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2f3a4:	e037883a 	mov	sp,fp
   2f3a8:	dfc00117 	ldw	ra,4(sp)
   2f3ac:	df000017 	ldw	fp,0(sp)
   2f3b0:	dec00204 	addi	sp,sp,8
   2f3b4:	f800283a 	ret

0002f3b8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2f3b8:	defffa04 	addi	sp,sp,-24
   2f3bc:	dfc00515 	stw	ra,20(sp)
   2f3c0:	df000415 	stw	fp,16(sp)
   2f3c4:	df000404 	addi	fp,sp,16
   2f3c8:	e13ffd15 	stw	r4,-12(fp)
   2f3cc:	e17ffe15 	stw	r5,-8(fp)
   2f3d0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2f3d4:	e0bffd17 	ldw	r2,-12(fp)
   2f3d8:	10800017 	ldw	r2,0(r2)
   2f3dc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2f3e0:	e0bffc17 	ldw	r2,-16(fp)
   2f3e4:	10c00a04 	addi	r3,r2,40
   2f3e8:	e0bffd17 	ldw	r2,-12(fp)
   2f3ec:	10800217 	ldw	r2,8(r2)
   2f3f0:	100f883a 	mov	r7,r2
   2f3f4:	e1bfff17 	ldw	r6,-4(fp)
   2f3f8:	e17ffe17 	ldw	r5,-8(fp)
   2f3fc:	1809883a 	mov	r4,r3
   2f400:	002fb9c0 	call	2fb9c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2f404:	e037883a 	mov	sp,fp
   2f408:	dfc00117 	ldw	ra,4(sp)
   2f40c:	df000017 	ldw	fp,0(sp)
   2f410:	dec00204 	addi	sp,sp,8
   2f414:	f800283a 	ret

0002f418 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2f418:	defffc04 	addi	sp,sp,-16
   2f41c:	dfc00315 	stw	ra,12(sp)
   2f420:	df000215 	stw	fp,8(sp)
   2f424:	df000204 	addi	fp,sp,8
   2f428:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2f42c:	e0bfff17 	ldw	r2,-4(fp)
   2f430:	10800017 	ldw	r2,0(r2)
   2f434:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2f438:	e0bffe17 	ldw	r2,-8(fp)
   2f43c:	10c00a04 	addi	r3,r2,40
   2f440:	e0bfff17 	ldw	r2,-4(fp)
   2f444:	10800217 	ldw	r2,8(r2)
   2f448:	100b883a 	mov	r5,r2
   2f44c:	1809883a 	mov	r4,r3
   2f450:	002f8280 	call	2f828 <altera_avalon_jtag_uart_close>
}
   2f454:	e037883a 	mov	sp,fp
   2f458:	dfc00117 	ldw	ra,4(sp)
   2f45c:	df000017 	ldw	fp,0(sp)
   2f460:	dec00204 	addi	sp,sp,8
   2f464:	f800283a 	ret

0002f468 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2f468:	defffa04 	addi	sp,sp,-24
   2f46c:	dfc00515 	stw	ra,20(sp)
   2f470:	df000415 	stw	fp,16(sp)
   2f474:	df000404 	addi	fp,sp,16
   2f478:	e13ffd15 	stw	r4,-12(fp)
   2f47c:	e17ffe15 	stw	r5,-8(fp)
   2f480:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2f484:	e0bffd17 	ldw	r2,-12(fp)
   2f488:	10800017 	ldw	r2,0(r2)
   2f48c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2f490:	e0bffc17 	ldw	r2,-16(fp)
   2f494:	10800a04 	addi	r2,r2,40
   2f498:	e1bfff17 	ldw	r6,-4(fp)
   2f49c:	e17ffe17 	ldw	r5,-8(fp)
   2f4a0:	1009883a 	mov	r4,r2
   2f4a4:	002f8900 	call	2f890 <altera_avalon_jtag_uart_ioctl>
}
   2f4a8:	e037883a 	mov	sp,fp
   2f4ac:	dfc00117 	ldw	ra,4(sp)
   2f4b0:	df000017 	ldw	fp,0(sp)
   2f4b4:	dec00204 	addi	sp,sp,8
   2f4b8:	f800283a 	ret

0002f4bc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2f4bc:	defffa04 	addi	sp,sp,-24
   2f4c0:	dfc00515 	stw	ra,20(sp)
   2f4c4:	df000415 	stw	fp,16(sp)
   2f4c8:	df000404 	addi	fp,sp,16
   2f4cc:	e13ffd15 	stw	r4,-12(fp)
   2f4d0:	e17ffe15 	stw	r5,-8(fp)
   2f4d4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2f4d8:	e0bffd17 	ldw	r2,-12(fp)
   2f4dc:	00c00044 	movi	r3,1
   2f4e0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2f4e4:	e0bffd17 	ldw	r2,-12(fp)
   2f4e8:	10800017 	ldw	r2,0(r2)
   2f4ec:	10800104 	addi	r2,r2,4
   2f4f0:	1007883a 	mov	r3,r2
   2f4f4:	e0bffd17 	ldw	r2,-12(fp)
   2f4f8:	10800817 	ldw	r2,32(r2)
   2f4fc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2f500:	e0bffe17 	ldw	r2,-8(fp)
   2f504:	e0ffff17 	ldw	r3,-4(fp)
   2f508:	d8000015 	stw	zero,0(sp)
   2f50c:	e1fffd17 	ldw	r7,-12(fp)
   2f510:	018000f4 	movhi	r6,3
   2f514:	31bd5f04 	addi	r6,r6,-2692
   2f518:	180b883a 	mov	r5,r3
   2f51c:	1009883a 	mov	r4,r2
   2f520:	00303540 	call	30354 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2f524:	e0bffd17 	ldw	r2,-12(fp)
   2f528:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2f52c:	e0bffd17 	ldw	r2,-12(fp)
   2f530:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2f534:	d0e6d817 	ldw	r3,-25760(gp)
   2f538:	e1fffd17 	ldw	r7,-12(fp)
   2f53c:	018000f4 	movhi	r6,3
   2f540:	31bde204 	addi	r6,r6,-2168
   2f544:	180b883a 	mov	r5,r3
   2f548:	1009883a 	mov	r4,r2
   2f54c:	002feb40 	call	2feb4 <alt_alarm_start>
   2f550:	1000040e 	bge	r2,zero,2f564 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2f554:	e0fffd17 	ldw	r3,-12(fp)
   2f558:	00a00034 	movhi	r2,32768
   2f55c:	10bfffc4 	addi	r2,r2,-1
   2f560:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2f564:	0001883a 	nop
   2f568:	e037883a 	mov	sp,fp
   2f56c:	dfc00117 	ldw	ra,4(sp)
   2f570:	df000017 	ldw	fp,0(sp)
   2f574:	dec00204 	addi	sp,sp,8
   2f578:	f800283a 	ret

0002f57c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2f57c:	defff804 	addi	sp,sp,-32
   2f580:	df000715 	stw	fp,28(sp)
   2f584:	df000704 	addi	fp,sp,28
   2f588:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2f58c:	e0bfff17 	ldw	r2,-4(fp)
   2f590:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   2f594:	e0bffb17 	ldw	r2,-20(fp)
   2f598:	10800017 	ldw	r2,0(r2)
   2f59c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2f5a0:	e0bffc17 	ldw	r2,-16(fp)
   2f5a4:	10800104 	addi	r2,r2,4
   2f5a8:	10800037 	ldwio	r2,0(r2)
   2f5ac:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2f5b0:	e0bffd17 	ldw	r2,-12(fp)
   2f5b4:	1080c00c 	andi	r2,r2,768
   2f5b8:	10006d26 	beq	r2,zero,2f770 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2f5bc:	e0bffd17 	ldw	r2,-12(fp)
   2f5c0:	1080400c 	andi	r2,r2,256
   2f5c4:	10003526 	beq	r2,zero,2f69c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2f5c8:	00800074 	movhi	r2,1
   2f5cc:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2f5d0:	e0bffb17 	ldw	r2,-20(fp)
   2f5d4:	10800a17 	ldw	r2,40(r2)
   2f5d8:	10800044 	addi	r2,r2,1
   2f5dc:	1081ffcc 	andi	r2,r2,2047
   2f5e0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   2f5e4:	e0bffb17 	ldw	r2,-20(fp)
   2f5e8:	10c00b17 	ldw	r3,44(r2)
   2f5ec:	e0bffe17 	ldw	r2,-8(fp)
   2f5f0:	18801526 	beq	r3,r2,2f648 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2f5f4:	e0bffc17 	ldw	r2,-16(fp)
   2f5f8:	10800037 	ldwio	r2,0(r2)
   2f5fc:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2f600:	e0bff917 	ldw	r2,-28(fp)
   2f604:	10a0000c 	andi	r2,r2,32768
   2f608:	10001126 	beq	r2,zero,2f650 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2f60c:	e0bffb17 	ldw	r2,-20(fp)
   2f610:	10800a17 	ldw	r2,40(r2)
   2f614:	e0fff917 	ldw	r3,-28(fp)
   2f618:	1809883a 	mov	r4,r3
   2f61c:	e0fffb17 	ldw	r3,-20(fp)
   2f620:	1885883a 	add	r2,r3,r2
   2f624:	10800e04 	addi	r2,r2,56
   2f628:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2f62c:	e0bffb17 	ldw	r2,-20(fp)
   2f630:	10800a17 	ldw	r2,40(r2)
   2f634:	10800044 	addi	r2,r2,1
   2f638:	10c1ffcc 	andi	r3,r2,2047
   2f63c:	e0bffb17 	ldw	r2,-20(fp)
   2f640:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2f644:	003fe206 	br	2f5d0 <__alt_data_end+0xfffef5d0>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2f648:	0001883a 	nop
   2f64c:	00000106 	br	2f654 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2f650:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2f654:	e0bff917 	ldw	r2,-28(fp)
   2f658:	10bfffec 	andhi	r2,r2,65535
   2f65c:	10000f26 	beq	r2,zero,2f69c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2f660:	e0bffb17 	ldw	r2,-20(fp)
   2f664:	10c00817 	ldw	r3,32(r2)
   2f668:	00bfff84 	movi	r2,-2
   2f66c:	1886703a 	and	r3,r3,r2
   2f670:	e0bffb17 	ldw	r2,-20(fp)
   2f674:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2f678:	e0bffc17 	ldw	r2,-16(fp)
   2f67c:	10800104 	addi	r2,r2,4
   2f680:	1007883a 	mov	r3,r2
   2f684:	e0bffb17 	ldw	r2,-20(fp)
   2f688:	10800817 	ldw	r2,32(r2)
   2f68c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2f690:	e0bffc17 	ldw	r2,-16(fp)
   2f694:	10800104 	addi	r2,r2,4
   2f698:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2f69c:	e0bffd17 	ldw	r2,-12(fp)
   2f6a0:	1080800c 	andi	r2,r2,512
   2f6a4:	103fbe26 	beq	r2,zero,2f5a0 <__alt_data_end+0xfffef5a0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2f6a8:	e0bffd17 	ldw	r2,-12(fp)
   2f6ac:	1004d43a 	srli	r2,r2,16
   2f6b0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2f6b4:	00001406 	br	2f708 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2f6b8:	e0bffc17 	ldw	r2,-16(fp)
   2f6bc:	e0fffb17 	ldw	r3,-20(fp)
   2f6c0:	18c00d17 	ldw	r3,52(r3)
   2f6c4:	e13ffb17 	ldw	r4,-20(fp)
   2f6c8:	20c7883a 	add	r3,r4,r3
   2f6cc:	18c20e04 	addi	r3,r3,2104
   2f6d0:	18c00003 	ldbu	r3,0(r3)
   2f6d4:	18c03fcc 	andi	r3,r3,255
   2f6d8:	18c0201c 	xori	r3,r3,128
   2f6dc:	18ffe004 	addi	r3,r3,-128
   2f6e0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2f6e4:	e0bffb17 	ldw	r2,-20(fp)
   2f6e8:	10800d17 	ldw	r2,52(r2)
   2f6ec:	10800044 	addi	r2,r2,1
   2f6f0:	10c1ffcc 	andi	r3,r2,2047
   2f6f4:	e0bffb17 	ldw	r2,-20(fp)
   2f6f8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2f6fc:	e0bffa17 	ldw	r2,-24(fp)
   2f700:	10bfffc4 	addi	r2,r2,-1
   2f704:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2f708:	e0bffa17 	ldw	r2,-24(fp)
   2f70c:	10000526 	beq	r2,zero,2f724 <altera_avalon_jtag_uart_irq+0x1a8>
   2f710:	e0bffb17 	ldw	r2,-20(fp)
   2f714:	10c00d17 	ldw	r3,52(r2)
   2f718:	e0bffb17 	ldw	r2,-20(fp)
   2f71c:	10800c17 	ldw	r2,48(r2)
   2f720:	18bfe51e 	bne	r3,r2,2f6b8 <__alt_data_end+0xfffef6b8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2f724:	e0bffa17 	ldw	r2,-24(fp)
   2f728:	103f9d26 	beq	r2,zero,2f5a0 <__alt_data_end+0xfffef5a0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2f72c:	e0bffb17 	ldw	r2,-20(fp)
   2f730:	10c00817 	ldw	r3,32(r2)
   2f734:	00bfff44 	movi	r2,-3
   2f738:	1886703a 	and	r3,r3,r2
   2f73c:	e0bffb17 	ldw	r2,-20(fp)
   2f740:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2f744:	e0bffb17 	ldw	r2,-20(fp)
   2f748:	10800017 	ldw	r2,0(r2)
   2f74c:	10800104 	addi	r2,r2,4
   2f750:	1007883a 	mov	r3,r2
   2f754:	e0bffb17 	ldw	r2,-20(fp)
   2f758:	10800817 	ldw	r2,32(r2)
   2f75c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2f760:	e0bffc17 	ldw	r2,-16(fp)
   2f764:	10800104 	addi	r2,r2,4
   2f768:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2f76c:	003f8c06 	br	2f5a0 <__alt_data_end+0xfffef5a0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2f770:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2f774:	0001883a 	nop
   2f778:	e037883a 	mov	sp,fp
   2f77c:	df000017 	ldw	fp,0(sp)
   2f780:	dec00104 	addi	sp,sp,4
   2f784:	f800283a 	ret

0002f788 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2f788:	defff804 	addi	sp,sp,-32
   2f78c:	df000715 	stw	fp,28(sp)
   2f790:	df000704 	addi	fp,sp,28
   2f794:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2f798:	e0bffb17 	ldw	r2,-20(fp)
   2f79c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2f7a0:	e0bff917 	ldw	r2,-28(fp)
   2f7a4:	10800017 	ldw	r2,0(r2)
   2f7a8:	10800104 	addi	r2,r2,4
   2f7ac:	10800037 	ldwio	r2,0(r2)
   2f7b0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2f7b4:	e0bffa17 	ldw	r2,-24(fp)
   2f7b8:	1081000c 	andi	r2,r2,1024
   2f7bc:	10000b26 	beq	r2,zero,2f7ec <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2f7c0:	e0bff917 	ldw	r2,-28(fp)
   2f7c4:	10800017 	ldw	r2,0(r2)
   2f7c8:	10800104 	addi	r2,r2,4
   2f7cc:	1007883a 	mov	r3,r2
   2f7d0:	e0bff917 	ldw	r2,-28(fp)
   2f7d4:	10800817 	ldw	r2,32(r2)
   2f7d8:	10810014 	ori	r2,r2,1024
   2f7dc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2f7e0:	e0bff917 	ldw	r2,-28(fp)
   2f7e4:	10000915 	stw	zero,36(r2)
   2f7e8:	00000a06 	br	2f814 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2f7ec:	e0bff917 	ldw	r2,-28(fp)
   2f7f0:	10c00917 	ldw	r3,36(r2)
   2f7f4:	00a00034 	movhi	r2,32768
   2f7f8:	10bfff04 	addi	r2,r2,-4
   2f7fc:	10c00536 	bltu	r2,r3,2f814 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2f800:	e0bff917 	ldw	r2,-28(fp)
   2f804:	10800917 	ldw	r2,36(r2)
   2f808:	10c00044 	addi	r3,r2,1
   2f80c:	e0bff917 	ldw	r2,-28(fp)
   2f810:	10c00915 	stw	r3,36(r2)
   2f814:	d0a6d817 	ldw	r2,-25760(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2f818:	e037883a 	mov	sp,fp
   2f81c:	df000017 	ldw	fp,0(sp)
   2f820:	dec00104 	addi	sp,sp,4
   2f824:	f800283a 	ret

0002f828 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2f828:	defffd04 	addi	sp,sp,-12
   2f82c:	df000215 	stw	fp,8(sp)
   2f830:	df000204 	addi	fp,sp,8
   2f834:	e13ffe15 	stw	r4,-8(fp)
   2f838:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2f83c:	00000506 	br	2f854 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2f840:	e0bfff17 	ldw	r2,-4(fp)
   2f844:	1090000c 	andi	r2,r2,16384
   2f848:	10000226 	beq	r2,zero,2f854 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2f84c:	00bffd44 	movi	r2,-11
   2f850:	00000b06 	br	2f880 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2f854:	e0bffe17 	ldw	r2,-8(fp)
   2f858:	10c00d17 	ldw	r3,52(r2)
   2f85c:	e0bffe17 	ldw	r2,-8(fp)
   2f860:	10800c17 	ldw	r2,48(r2)
   2f864:	18800526 	beq	r3,r2,2f87c <altera_avalon_jtag_uart_close+0x54>
   2f868:	e0bffe17 	ldw	r2,-8(fp)
   2f86c:	10c00917 	ldw	r3,36(r2)
   2f870:	e0bffe17 	ldw	r2,-8(fp)
   2f874:	10800117 	ldw	r2,4(r2)
   2f878:	18bff136 	bltu	r3,r2,2f840 <__alt_data_end+0xfffef840>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2f87c:	0005883a 	mov	r2,zero
}
   2f880:	e037883a 	mov	sp,fp
   2f884:	df000017 	ldw	fp,0(sp)
   2f888:	dec00104 	addi	sp,sp,4
   2f88c:	f800283a 	ret

0002f890 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2f890:	defffa04 	addi	sp,sp,-24
   2f894:	df000515 	stw	fp,20(sp)
   2f898:	df000504 	addi	fp,sp,20
   2f89c:	e13ffd15 	stw	r4,-12(fp)
   2f8a0:	e17ffe15 	stw	r5,-8(fp)
   2f8a4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2f8a8:	00bff9c4 	movi	r2,-25
   2f8ac:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2f8b0:	e0bffe17 	ldw	r2,-8(fp)
   2f8b4:	10da8060 	cmpeqi	r3,r2,27137
   2f8b8:	1800031e 	bne	r3,zero,2f8c8 <altera_avalon_jtag_uart_ioctl+0x38>
   2f8bc:	109a80a0 	cmpeqi	r2,r2,27138
   2f8c0:	1000181e 	bne	r2,zero,2f924 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2f8c4:	00002906 	br	2f96c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2f8c8:	e0bffd17 	ldw	r2,-12(fp)
   2f8cc:	10c00117 	ldw	r3,4(r2)
   2f8d0:	00a00034 	movhi	r2,32768
   2f8d4:	10bfffc4 	addi	r2,r2,-1
   2f8d8:	18802126 	beq	r3,r2,2f960 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2f8dc:	e0bfff17 	ldw	r2,-4(fp)
   2f8e0:	10800017 	ldw	r2,0(r2)
   2f8e4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2f8e8:	e0bffc17 	ldw	r2,-16(fp)
   2f8ec:	10800090 	cmplti	r2,r2,2
   2f8f0:	1000061e 	bne	r2,zero,2f90c <altera_avalon_jtag_uart_ioctl+0x7c>
   2f8f4:	e0fffc17 	ldw	r3,-16(fp)
   2f8f8:	00a00034 	movhi	r2,32768
   2f8fc:	10bfffc4 	addi	r2,r2,-1
   2f900:	18800226 	beq	r3,r2,2f90c <altera_avalon_jtag_uart_ioctl+0x7c>
   2f904:	e0bffc17 	ldw	r2,-16(fp)
   2f908:	00000206 	br	2f914 <altera_avalon_jtag_uart_ioctl+0x84>
   2f90c:	00a00034 	movhi	r2,32768
   2f910:	10bfff84 	addi	r2,r2,-2
   2f914:	e0fffd17 	ldw	r3,-12(fp)
   2f918:	18800115 	stw	r2,4(r3)
      rc = 0;
   2f91c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2f920:	00000f06 	br	2f960 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2f924:	e0bffd17 	ldw	r2,-12(fp)
   2f928:	10c00117 	ldw	r3,4(r2)
   2f92c:	00a00034 	movhi	r2,32768
   2f930:	10bfffc4 	addi	r2,r2,-1
   2f934:	18800c26 	beq	r3,r2,2f968 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2f938:	e0bffd17 	ldw	r2,-12(fp)
   2f93c:	10c00917 	ldw	r3,36(r2)
   2f940:	e0bffd17 	ldw	r2,-12(fp)
   2f944:	10800117 	ldw	r2,4(r2)
   2f948:	1885803a 	cmpltu	r2,r3,r2
   2f94c:	10c03fcc 	andi	r3,r2,255
   2f950:	e0bfff17 	ldw	r2,-4(fp)
   2f954:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2f958:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2f95c:	00000206 	br	2f968 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2f960:	0001883a 	nop
   2f964:	00000106 	br	2f96c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2f968:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2f96c:	e0bffb17 	ldw	r2,-20(fp)
}
   2f970:	e037883a 	mov	sp,fp
   2f974:	df000017 	ldw	fp,0(sp)
   2f978:	dec00104 	addi	sp,sp,4
   2f97c:	f800283a 	ret

0002f980 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2f980:	defff304 	addi	sp,sp,-52
   2f984:	dfc00c15 	stw	ra,48(sp)
   2f988:	df000b15 	stw	fp,44(sp)
   2f98c:	df000b04 	addi	fp,sp,44
   2f990:	e13ffc15 	stw	r4,-16(fp)
   2f994:	e17ffd15 	stw	r5,-12(fp)
   2f998:	e1bffe15 	stw	r6,-8(fp)
   2f99c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2f9a0:	e0bffd17 	ldw	r2,-12(fp)
   2f9a4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2f9a8:	00004706 	br	2fac8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2f9ac:	e0bffc17 	ldw	r2,-16(fp)
   2f9b0:	10800a17 	ldw	r2,40(r2)
   2f9b4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2f9b8:	e0bffc17 	ldw	r2,-16(fp)
   2f9bc:	10800b17 	ldw	r2,44(r2)
   2f9c0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2f9c4:	e0fff717 	ldw	r3,-36(fp)
   2f9c8:	e0bff817 	ldw	r2,-32(fp)
   2f9cc:	18800536 	bltu	r3,r2,2f9e4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2f9d0:	e0fff717 	ldw	r3,-36(fp)
   2f9d4:	e0bff817 	ldw	r2,-32(fp)
   2f9d8:	1885c83a 	sub	r2,r3,r2
   2f9dc:	e0bff615 	stw	r2,-40(fp)
   2f9e0:	00000406 	br	2f9f4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2f9e4:	00c20004 	movi	r3,2048
   2f9e8:	e0bff817 	ldw	r2,-32(fp)
   2f9ec:	1885c83a 	sub	r2,r3,r2
   2f9f0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2f9f4:	e0bff617 	ldw	r2,-40(fp)
   2f9f8:	10001e26 	beq	r2,zero,2fa74 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2f9fc:	e0fffe17 	ldw	r3,-8(fp)
   2fa00:	e0bff617 	ldw	r2,-40(fp)
   2fa04:	1880022e 	bgeu	r3,r2,2fa10 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2fa08:	e0bffe17 	ldw	r2,-8(fp)
   2fa0c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2fa10:	e0bffc17 	ldw	r2,-16(fp)
   2fa14:	10c00e04 	addi	r3,r2,56
   2fa18:	e0bff817 	ldw	r2,-32(fp)
   2fa1c:	1885883a 	add	r2,r3,r2
   2fa20:	e1bff617 	ldw	r6,-40(fp)
   2fa24:	100b883a 	mov	r5,r2
   2fa28:	e13ff517 	ldw	r4,-44(fp)
   2fa2c:	0029d540 	call	29d54 <memcpy>
      ptr   += n;
   2fa30:	e0fff517 	ldw	r3,-44(fp)
   2fa34:	e0bff617 	ldw	r2,-40(fp)
   2fa38:	1885883a 	add	r2,r3,r2
   2fa3c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2fa40:	e0fffe17 	ldw	r3,-8(fp)
   2fa44:	e0bff617 	ldw	r2,-40(fp)
   2fa48:	1885c83a 	sub	r2,r3,r2
   2fa4c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2fa50:	e0fff817 	ldw	r3,-32(fp)
   2fa54:	e0bff617 	ldw	r2,-40(fp)
   2fa58:	1885883a 	add	r2,r3,r2
   2fa5c:	10c1ffcc 	andi	r3,r2,2047
   2fa60:	e0bffc17 	ldw	r2,-16(fp)
   2fa64:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2fa68:	e0bffe17 	ldw	r2,-8(fp)
   2fa6c:	00bfcf16 	blt	zero,r2,2f9ac <__alt_data_end+0xfffef9ac>
   2fa70:	00000106 	br	2fa78 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2fa74:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2fa78:	e0fff517 	ldw	r3,-44(fp)
   2fa7c:	e0bffd17 	ldw	r2,-12(fp)
   2fa80:	1880141e 	bne	r3,r2,2fad4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2fa84:	e0bfff17 	ldw	r2,-4(fp)
   2fa88:	1090000c 	andi	r2,r2,16384
   2fa8c:	1000131e 	bne	r2,zero,2fadc <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2fa90:	0001883a 	nop
   2fa94:	e0bffc17 	ldw	r2,-16(fp)
   2fa98:	10c00a17 	ldw	r3,40(r2)
   2fa9c:	e0bff717 	ldw	r2,-36(fp)
   2faa0:	1880051e 	bne	r3,r2,2fab8 <altera_avalon_jtag_uart_read+0x138>
   2faa4:	e0bffc17 	ldw	r2,-16(fp)
   2faa8:	10c00917 	ldw	r3,36(r2)
   2faac:	e0bffc17 	ldw	r2,-16(fp)
   2fab0:	10800117 	ldw	r2,4(r2)
   2fab4:	18bff736 	bltu	r3,r2,2fa94 <__alt_data_end+0xfffefa94>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2fab8:	e0bffc17 	ldw	r2,-16(fp)
   2fabc:	10c00a17 	ldw	r3,40(r2)
   2fac0:	e0bff717 	ldw	r2,-36(fp)
   2fac4:	18800726 	beq	r3,r2,2fae4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2fac8:	e0bffe17 	ldw	r2,-8(fp)
   2facc:	00bfb716 	blt	zero,r2,2f9ac <__alt_data_end+0xfffef9ac>
   2fad0:	00000506 	br	2fae8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2fad4:	0001883a 	nop
   2fad8:	00000306 	br	2fae8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2fadc:	0001883a 	nop
   2fae0:	00000106 	br	2fae8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2fae4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2fae8:	e0fff517 	ldw	r3,-44(fp)
   2faec:	e0bffd17 	ldw	r2,-12(fp)
   2faf0:	18801826 	beq	r3,r2,2fb54 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2faf4:	0005303a 	rdctl	r2,status
   2faf8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fafc:	e0fffb17 	ldw	r3,-20(fp)
   2fb00:	00bfff84 	movi	r2,-2
   2fb04:	1884703a 	and	r2,r3,r2
   2fb08:	1001703a 	wrctl	status,r2
  
  return context;
   2fb0c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2fb10:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2fb14:	e0bffc17 	ldw	r2,-16(fp)
   2fb18:	10800817 	ldw	r2,32(r2)
   2fb1c:	10c00054 	ori	r3,r2,1
   2fb20:	e0bffc17 	ldw	r2,-16(fp)
   2fb24:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2fb28:	e0bffc17 	ldw	r2,-16(fp)
   2fb2c:	10800017 	ldw	r2,0(r2)
   2fb30:	10800104 	addi	r2,r2,4
   2fb34:	1007883a 	mov	r3,r2
   2fb38:	e0bffc17 	ldw	r2,-16(fp)
   2fb3c:	10800817 	ldw	r2,32(r2)
   2fb40:	18800035 	stwio	r2,0(r3)
   2fb44:	e0bffa17 	ldw	r2,-24(fp)
   2fb48:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2fb4c:	e0bff917 	ldw	r2,-28(fp)
   2fb50:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2fb54:	e0fff517 	ldw	r3,-44(fp)
   2fb58:	e0bffd17 	ldw	r2,-12(fp)
   2fb5c:	18800426 	beq	r3,r2,2fb70 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2fb60:	e0fff517 	ldw	r3,-44(fp)
   2fb64:	e0bffd17 	ldw	r2,-12(fp)
   2fb68:	1885c83a 	sub	r2,r3,r2
   2fb6c:	00000606 	br	2fb88 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2fb70:	e0bfff17 	ldw	r2,-4(fp)
   2fb74:	1090000c 	andi	r2,r2,16384
   2fb78:	10000226 	beq	r2,zero,2fb84 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2fb7c:	00bffd44 	movi	r2,-11
   2fb80:	00000106 	br	2fb88 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2fb84:	00bffec4 	movi	r2,-5
}
   2fb88:	e037883a 	mov	sp,fp
   2fb8c:	dfc00117 	ldw	ra,4(sp)
   2fb90:	df000017 	ldw	fp,0(sp)
   2fb94:	dec00204 	addi	sp,sp,8
   2fb98:	f800283a 	ret

0002fb9c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2fb9c:	defff304 	addi	sp,sp,-52
   2fba0:	dfc00c15 	stw	ra,48(sp)
   2fba4:	df000b15 	stw	fp,44(sp)
   2fba8:	df000b04 	addi	fp,sp,44
   2fbac:	e13ffc15 	stw	r4,-16(fp)
   2fbb0:	e17ffd15 	stw	r5,-12(fp)
   2fbb4:	e1bffe15 	stw	r6,-8(fp)
   2fbb8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2fbbc:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2fbc0:	e0bffd17 	ldw	r2,-12(fp)
   2fbc4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2fbc8:	00003706 	br	2fca8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2fbcc:	e0bffc17 	ldw	r2,-16(fp)
   2fbd0:	10800c17 	ldw	r2,48(r2)
   2fbd4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2fbd8:	e0bffc17 	ldw	r2,-16(fp)
   2fbdc:	10800d17 	ldw	r2,52(r2)
   2fbe0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2fbe4:	e0fff917 	ldw	r3,-28(fp)
   2fbe8:	e0bff517 	ldw	r2,-44(fp)
   2fbec:	1880062e 	bgeu	r3,r2,2fc08 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2fbf0:	e0fff517 	ldw	r3,-44(fp)
   2fbf4:	e0bff917 	ldw	r2,-28(fp)
   2fbf8:	1885c83a 	sub	r2,r3,r2
   2fbfc:	10bfffc4 	addi	r2,r2,-1
   2fc00:	e0bff615 	stw	r2,-40(fp)
   2fc04:	00000b06 	br	2fc34 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2fc08:	e0bff517 	ldw	r2,-44(fp)
   2fc0c:	10000526 	beq	r2,zero,2fc24 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2fc10:	00c20004 	movi	r3,2048
   2fc14:	e0bff917 	ldw	r2,-28(fp)
   2fc18:	1885c83a 	sub	r2,r3,r2
   2fc1c:	e0bff615 	stw	r2,-40(fp)
   2fc20:	00000406 	br	2fc34 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2fc24:	00c1ffc4 	movi	r3,2047
   2fc28:	e0bff917 	ldw	r2,-28(fp)
   2fc2c:	1885c83a 	sub	r2,r3,r2
   2fc30:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2fc34:	e0bff617 	ldw	r2,-40(fp)
   2fc38:	10001e26 	beq	r2,zero,2fcb4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2fc3c:	e0fffe17 	ldw	r3,-8(fp)
   2fc40:	e0bff617 	ldw	r2,-40(fp)
   2fc44:	1880022e 	bgeu	r3,r2,2fc50 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2fc48:	e0bffe17 	ldw	r2,-8(fp)
   2fc4c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2fc50:	e0bffc17 	ldw	r2,-16(fp)
   2fc54:	10c20e04 	addi	r3,r2,2104
   2fc58:	e0bff917 	ldw	r2,-28(fp)
   2fc5c:	1885883a 	add	r2,r3,r2
   2fc60:	e1bff617 	ldw	r6,-40(fp)
   2fc64:	e17ffd17 	ldw	r5,-12(fp)
   2fc68:	1009883a 	mov	r4,r2
   2fc6c:	0029d540 	call	29d54 <memcpy>
      ptr   += n;
   2fc70:	e0fffd17 	ldw	r3,-12(fp)
   2fc74:	e0bff617 	ldw	r2,-40(fp)
   2fc78:	1885883a 	add	r2,r3,r2
   2fc7c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2fc80:	e0fffe17 	ldw	r3,-8(fp)
   2fc84:	e0bff617 	ldw	r2,-40(fp)
   2fc88:	1885c83a 	sub	r2,r3,r2
   2fc8c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2fc90:	e0fff917 	ldw	r3,-28(fp)
   2fc94:	e0bff617 	ldw	r2,-40(fp)
   2fc98:	1885883a 	add	r2,r3,r2
   2fc9c:	10c1ffcc 	andi	r3,r2,2047
   2fca0:	e0bffc17 	ldw	r2,-16(fp)
   2fca4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2fca8:	e0bffe17 	ldw	r2,-8(fp)
   2fcac:	00bfc716 	blt	zero,r2,2fbcc <__alt_data_end+0xfffefbcc>
   2fcb0:	00000106 	br	2fcb8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2fcb4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2fcb8:	0005303a 	rdctl	r2,status
   2fcbc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fcc0:	e0fffb17 	ldw	r3,-20(fp)
   2fcc4:	00bfff84 	movi	r2,-2
   2fcc8:	1884703a 	and	r2,r3,r2
   2fccc:	1001703a 	wrctl	status,r2
  
  return context;
   2fcd0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2fcd4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2fcd8:	e0bffc17 	ldw	r2,-16(fp)
   2fcdc:	10800817 	ldw	r2,32(r2)
   2fce0:	10c00094 	ori	r3,r2,2
   2fce4:	e0bffc17 	ldw	r2,-16(fp)
   2fce8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2fcec:	e0bffc17 	ldw	r2,-16(fp)
   2fcf0:	10800017 	ldw	r2,0(r2)
   2fcf4:	10800104 	addi	r2,r2,4
   2fcf8:	1007883a 	mov	r3,r2
   2fcfc:	e0bffc17 	ldw	r2,-16(fp)
   2fd00:	10800817 	ldw	r2,32(r2)
   2fd04:	18800035 	stwio	r2,0(r3)
   2fd08:	e0bffa17 	ldw	r2,-24(fp)
   2fd0c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2fd10:	e0bff817 	ldw	r2,-32(fp)
   2fd14:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2fd18:	e0bffe17 	ldw	r2,-8(fp)
   2fd1c:	0080100e 	bge	zero,r2,2fd60 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2fd20:	e0bfff17 	ldw	r2,-4(fp)
   2fd24:	1090000c 	andi	r2,r2,16384
   2fd28:	1000101e 	bne	r2,zero,2fd6c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2fd2c:	0001883a 	nop
   2fd30:	e0bffc17 	ldw	r2,-16(fp)
   2fd34:	10c00d17 	ldw	r3,52(r2)
   2fd38:	e0bff517 	ldw	r2,-44(fp)
   2fd3c:	1880051e 	bne	r3,r2,2fd54 <altera_avalon_jtag_uart_write+0x1b8>
   2fd40:	e0bffc17 	ldw	r2,-16(fp)
   2fd44:	10c00917 	ldw	r3,36(r2)
   2fd48:	e0bffc17 	ldw	r2,-16(fp)
   2fd4c:	10800117 	ldw	r2,4(r2)
   2fd50:	18bff736 	bltu	r3,r2,2fd30 <__alt_data_end+0xfffefd30>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2fd54:	e0bffc17 	ldw	r2,-16(fp)
   2fd58:	10800917 	ldw	r2,36(r2)
   2fd5c:	1000051e 	bne	r2,zero,2fd74 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2fd60:	e0bffe17 	ldw	r2,-8(fp)
   2fd64:	00bfd016 	blt	zero,r2,2fca8 <__alt_data_end+0xfffefca8>
   2fd68:	00000306 	br	2fd78 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2fd6c:	0001883a 	nop
   2fd70:	00000106 	br	2fd78 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2fd74:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2fd78:	e0fffd17 	ldw	r3,-12(fp)
   2fd7c:	e0bff717 	ldw	r2,-36(fp)
   2fd80:	18800426 	beq	r3,r2,2fd94 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2fd84:	e0fffd17 	ldw	r3,-12(fp)
   2fd88:	e0bff717 	ldw	r2,-36(fp)
   2fd8c:	1885c83a 	sub	r2,r3,r2
   2fd90:	00000606 	br	2fdac <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2fd94:	e0bfff17 	ldw	r2,-4(fp)
   2fd98:	1090000c 	andi	r2,r2,16384
   2fd9c:	10000226 	beq	r2,zero,2fda8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2fda0:	00bffd44 	movi	r2,-11
   2fda4:	00000106 	br	2fdac <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2fda8:	00bffec4 	movi	r2,-5
}
   2fdac:	e037883a 	mov	sp,fp
   2fdb0:	dfc00117 	ldw	ra,4(sp)
   2fdb4:	df000017 	ldw	fp,0(sp)
   2fdb8:	dec00204 	addi	sp,sp,8
   2fdbc:	f800283a 	ret

0002fdc0 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   2fdc0:	defffa04 	addi	sp,sp,-24
   2fdc4:	dfc00515 	stw	ra,20(sp)
   2fdc8:	df000415 	stw	fp,16(sp)
   2fdcc:	df000404 	addi	fp,sp,16
   2fdd0:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   2fdd4:	0007883a 	mov	r3,zero
   2fdd8:	e0bfff17 	ldw	r2,-4(fp)
   2fddc:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   2fde0:	e0bfff17 	ldw	r2,-4(fp)
   2fde4:	10800104 	addi	r2,r2,4
   2fde8:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2fdec:	0005303a 	rdctl	r2,status
   2fdf0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fdf4:	e0fffd17 	ldw	r3,-12(fp)
   2fdf8:	00bfff84 	movi	r2,-2
   2fdfc:	1884703a 	and	r2,r3,r2
   2fe00:	1001703a 	wrctl	status,r2
  
  return context;
   2fe04:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   2fe08:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   2fe0c:	0030a240 	call	30a24 <alt_tick>
   2fe10:	e0bffc17 	ldw	r2,-16(fp)
   2fe14:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2fe18:	e0bffe17 	ldw	r2,-8(fp)
   2fe1c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   2fe20:	0001883a 	nop
   2fe24:	e037883a 	mov	sp,fp
   2fe28:	dfc00117 	ldw	ra,4(sp)
   2fe2c:	df000017 	ldw	fp,0(sp)
   2fe30:	dec00204 	addi	sp,sp,8
   2fe34:	f800283a 	ret

0002fe38 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   2fe38:	defff804 	addi	sp,sp,-32
   2fe3c:	dfc00715 	stw	ra,28(sp)
   2fe40:	df000615 	stw	fp,24(sp)
   2fe44:	df000604 	addi	fp,sp,24
   2fe48:	e13ffc15 	stw	r4,-16(fp)
   2fe4c:	e17ffd15 	stw	r5,-12(fp)
   2fe50:	e1bffe15 	stw	r6,-8(fp)
   2fe54:	e1ffff15 	stw	r7,-4(fp)
   2fe58:	e0bfff17 	ldw	r2,-4(fp)
   2fe5c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   2fe60:	d0a6d817 	ldw	r2,-25760(gp)
   2fe64:	1000021e 	bne	r2,zero,2fe70 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   2fe68:	e0bffb17 	ldw	r2,-20(fp)
   2fe6c:	d0a6d815 	stw	r2,-25760(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   2fe70:	e0bffc17 	ldw	r2,-16(fp)
   2fe74:	10800104 	addi	r2,r2,4
   2fe78:	00c001c4 	movi	r3,7
   2fe7c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   2fe80:	d8000015 	stw	zero,0(sp)
   2fe84:	e1fffc17 	ldw	r7,-16(fp)
   2fe88:	018000f4 	movhi	r6,3
   2fe8c:	31bf7004 	addi	r6,r6,-576
   2fe90:	e17ffe17 	ldw	r5,-8(fp)
   2fe94:	e13ffd17 	ldw	r4,-12(fp)
   2fe98:	00303540 	call	30354 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   2fe9c:	0001883a 	nop
   2fea0:	e037883a 	mov	sp,fp
   2fea4:	dfc00117 	ldw	ra,4(sp)
   2fea8:	df000017 	ldw	fp,0(sp)
   2feac:	dec00204 	addi	sp,sp,8
   2feb0:	f800283a 	ret

0002feb4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2feb4:	defff504 	addi	sp,sp,-44
   2feb8:	df000a15 	stw	fp,40(sp)
   2febc:	df000a04 	addi	fp,sp,40
   2fec0:	e13ffc15 	stw	r4,-16(fp)
   2fec4:	e17ffd15 	stw	r5,-12(fp)
   2fec8:	e1bffe15 	stw	r6,-8(fp)
   2fecc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2fed0:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2fed4:	d0a6d817 	ldw	r2,-25760(gp)
  
  if (alt_ticks_per_second ())
   2fed8:	10003c26 	beq	r2,zero,2ffcc <alt_alarm_start+0x118>
  {
    if (alarm)
   2fedc:	e0bffc17 	ldw	r2,-16(fp)
   2fee0:	10003826 	beq	r2,zero,2ffc4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   2fee4:	e0bffc17 	ldw	r2,-16(fp)
   2fee8:	e0fffe17 	ldw	r3,-8(fp)
   2feec:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2fef0:	e0bffc17 	ldw	r2,-16(fp)
   2fef4:	e0ffff17 	ldw	r3,-4(fp)
   2fef8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2fefc:	0005303a 	rdctl	r2,status
   2ff00:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ff04:	e0fff917 	ldw	r3,-28(fp)
   2ff08:	00bfff84 	movi	r2,-2
   2ff0c:	1884703a 	and	r2,r3,r2
   2ff10:	1001703a 	wrctl	status,r2
  
  return context;
   2ff14:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2ff18:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2ff1c:	d0a6d917 	ldw	r2,-25756(gp)
      
      current_nticks = alt_nticks();
   2ff20:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2ff24:	e0fffd17 	ldw	r3,-12(fp)
   2ff28:	e0bff617 	ldw	r2,-40(fp)
   2ff2c:	1885883a 	add	r2,r3,r2
   2ff30:	10c00044 	addi	r3,r2,1
   2ff34:	e0bffc17 	ldw	r2,-16(fp)
   2ff38:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2ff3c:	e0bffc17 	ldw	r2,-16(fp)
   2ff40:	10c00217 	ldw	r3,8(r2)
   2ff44:	e0bff617 	ldw	r2,-40(fp)
   2ff48:	1880042e 	bgeu	r3,r2,2ff5c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2ff4c:	e0bffc17 	ldw	r2,-16(fp)
   2ff50:	00c00044 	movi	r3,1
   2ff54:	10c00405 	stb	r3,16(r2)
   2ff58:	00000206 	br	2ff64 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2ff5c:	e0bffc17 	ldw	r2,-16(fp)
   2ff60:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2ff64:	e0bffc17 	ldw	r2,-16(fp)
   2ff68:	d0e00f04 	addi	r3,gp,-32708
   2ff6c:	e0fffa15 	stw	r3,-24(fp)
   2ff70:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2ff74:	e0bffb17 	ldw	r2,-20(fp)
   2ff78:	e0fffa17 	ldw	r3,-24(fp)
   2ff7c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2ff80:	e0bffa17 	ldw	r2,-24(fp)
   2ff84:	10c00017 	ldw	r3,0(r2)
   2ff88:	e0bffb17 	ldw	r2,-20(fp)
   2ff8c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2ff90:	e0bffa17 	ldw	r2,-24(fp)
   2ff94:	10800017 	ldw	r2,0(r2)
   2ff98:	e0fffb17 	ldw	r3,-20(fp)
   2ff9c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2ffa0:	e0bffa17 	ldw	r2,-24(fp)
   2ffa4:	e0fffb17 	ldw	r3,-20(fp)
   2ffa8:	10c00015 	stw	r3,0(r2)
   2ffac:	e0bff817 	ldw	r2,-32(fp)
   2ffb0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ffb4:	e0bff717 	ldw	r2,-36(fp)
   2ffb8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2ffbc:	0005883a 	mov	r2,zero
   2ffc0:	00000306 	br	2ffd0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   2ffc4:	00bffa84 	movi	r2,-22
   2ffc8:	00000106 	br	2ffd0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   2ffcc:	00bfde84 	movi	r2,-134
  }
}
   2ffd0:	e037883a 	mov	sp,fp
   2ffd4:	df000017 	ldw	fp,0(sp)
   2ffd8:	dec00104 	addi	sp,sp,4
   2ffdc:	f800283a 	ret

0002ffe0 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   2ffe0:	defffa04 	addi	sp,sp,-24
   2ffe4:	dfc00515 	stw	ra,20(sp)
   2ffe8:	df000415 	stw	fp,16(sp)
   2ffec:	df000404 	addi	fp,sp,16
   2fff0:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   2fff4:	008000c4 	movi	r2,3
   2fff8:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   2fffc:	e0fffd17 	ldw	r3,-12(fp)
   30000:	008003f4 	movhi	r2,15
   30004:	10909004 	addi	r2,r2,16960
   30008:	1885383a 	mul	r2,r3,r2
   3000c:	100b883a 	mov	r5,r2
   30010:	0100bef4 	movhi	r4,763
   30014:	213c2004 	addi	r4,r4,-3968
   30018:	00222240 	call	22224 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   3001c:	100b883a 	mov	r5,r2
   30020:	01200034 	movhi	r4,32768
   30024:	213fffc4 	addi	r4,r4,-1
   30028:	00222240 	call	22224 <__udivsi3>
   3002c:	100b883a 	mov	r5,r2
   30030:	e13fff17 	ldw	r4,-4(fp)
   30034:	00222240 	call	22224 <__udivsi3>
   30038:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   3003c:	e0bffe17 	ldw	r2,-8(fp)
   30040:	10002a26 	beq	r2,zero,300ec <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   30044:	e03ffc15 	stw	zero,-16(fp)
   30048:	00001706 	br	300a8 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   3004c:	00a00034 	movhi	r2,32768
   30050:	10bfffc4 	addi	r2,r2,-1
   30054:	10bfffc4 	addi	r2,r2,-1
   30058:	103ffe1e 	bne	r2,zero,30054 <__alt_data_end+0xffff0054>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   3005c:	e0fffd17 	ldw	r3,-12(fp)
   30060:	008003f4 	movhi	r2,15
   30064:	10909004 	addi	r2,r2,16960
   30068:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   3006c:	100b883a 	mov	r5,r2
   30070:	0100bef4 	movhi	r4,763
   30074:	213c2004 	addi	r4,r4,-3968
   30078:	00222240 	call	22224 <__udivsi3>
   3007c:	100b883a 	mov	r5,r2
   30080:	01200034 	movhi	r4,32768
   30084:	213fffc4 	addi	r4,r4,-1
   30088:	00222240 	call	22224 <__udivsi3>
   3008c:	1007883a 	mov	r3,r2
   30090:	e0bfff17 	ldw	r2,-4(fp)
   30094:	10c5c83a 	sub	r2,r2,r3
   30098:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   3009c:	e0bffc17 	ldw	r2,-16(fp)
   300a0:	10800044 	addi	r2,r2,1
   300a4:	e0bffc15 	stw	r2,-16(fp)
   300a8:	e0fffc17 	ldw	r3,-16(fp)
   300ac:	e0bffe17 	ldw	r2,-8(fp)
   300b0:	18bfe616 	blt	r3,r2,3004c <__alt_data_end+0xffff004c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   300b4:	e0fffd17 	ldw	r3,-12(fp)
   300b8:	008003f4 	movhi	r2,15
   300bc:	10909004 	addi	r2,r2,16960
   300c0:	1885383a 	mul	r2,r3,r2
   300c4:	100b883a 	mov	r5,r2
   300c8:	0100bef4 	movhi	r4,763
   300cc:	213c2004 	addi	r4,r4,-3968
   300d0:	00222240 	call	22224 <__udivsi3>
   300d4:	1007883a 	mov	r3,r2
   300d8:	e0bfff17 	ldw	r2,-4(fp)
   300dc:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   300e0:	10bfffc4 	addi	r2,r2,-1
   300e4:	103ffe1e 	bne	r2,zero,300e0 <__alt_data_end+0xffff00e0>
   300e8:	00000d06 	br	30120 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   300ec:	e0fffd17 	ldw	r3,-12(fp)
   300f0:	008003f4 	movhi	r2,15
   300f4:	10909004 	addi	r2,r2,16960
   300f8:	1885383a 	mul	r2,r3,r2
   300fc:	100b883a 	mov	r5,r2
   30100:	0100bef4 	movhi	r4,763
   30104:	213c2004 	addi	r4,r4,-3968
   30108:	00222240 	call	22224 <__udivsi3>
   3010c:	1007883a 	mov	r3,r2
   30110:	e0bfff17 	ldw	r2,-4(fp)
   30114:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   30118:	10bfffc4 	addi	r2,r2,-1
   3011c:	00bffe16 	blt	zero,r2,30118 <__alt_data_end+0xffff0118>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   30120:	0005883a 	mov	r2,zero
}
   30124:	e037883a 	mov	sp,fp
   30128:	dfc00117 	ldw	ra,4(sp)
   3012c:	df000017 	ldw	fp,0(sp)
   30130:	dec00204 	addi	sp,sp,8
   30134:	f800283a 	ret

00030138 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   30138:	defffe04 	addi	sp,sp,-8
   3013c:	df000115 	stw	fp,4(sp)
   30140:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   30144:	e03fff15 	stw	zero,-4(fp)
   30148:	00000506 	br	30160 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   3014c:	e0bfff17 	ldw	r2,-4(fp)
   30150:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   30154:	e0bfff17 	ldw	r2,-4(fp)
   30158:	10800804 	addi	r2,r2,32
   3015c:	e0bfff15 	stw	r2,-4(fp)
   30160:	e0bfff17 	ldw	r2,-4(fp)
   30164:	10820030 	cmpltui	r2,r2,2048
   30168:	103ff81e 	bne	r2,zero,3014c <__alt_data_end+0xffff014c>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   3016c:	0001883a 	nop
   30170:	e037883a 	mov	sp,fp
   30174:	df000017 	ldw	fp,0(sp)
   30178:	dec00104 	addi	sp,sp,4
   3017c:	f800283a 	ret

00030180 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30180:	defffe04 	addi	sp,sp,-8
   30184:	dfc00115 	stw	ra,4(sp)
   30188:	df000015 	stw	fp,0(sp)
   3018c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30190:	d0a00c17 	ldw	r2,-32720(gp)
   30194:	10000326 	beq	r2,zero,301a4 <alt_get_errno+0x24>
   30198:	d0a00c17 	ldw	r2,-32720(gp)
   3019c:	103ee83a 	callr	r2
   301a0:	00000106 	br	301a8 <alt_get_errno+0x28>
   301a4:	d0a6d304 	addi	r2,gp,-25780
}
   301a8:	e037883a 	mov	sp,fp
   301ac:	dfc00117 	ldw	ra,4(sp)
   301b0:	df000017 	ldw	fp,0(sp)
   301b4:	dec00204 	addi	sp,sp,8
   301b8:	f800283a 	ret

000301bc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   301bc:	defffa04 	addi	sp,sp,-24
   301c0:	dfc00515 	stw	ra,20(sp)
   301c4:	df000415 	stw	fp,16(sp)
   301c8:	df000404 	addi	fp,sp,16
   301cc:	e13ffe15 	stw	r4,-8(fp)
   301d0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   301d4:	e0bffe17 	ldw	r2,-8(fp)
   301d8:	10000326 	beq	r2,zero,301e8 <alt_dev_llist_insert+0x2c>
   301dc:	e0bffe17 	ldw	r2,-8(fp)
   301e0:	10800217 	ldw	r2,8(r2)
   301e4:	1000061e 	bne	r2,zero,30200 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   301e8:	00301800 	call	30180 <alt_get_errno>
   301ec:	1007883a 	mov	r3,r2
   301f0:	00800584 	movi	r2,22
   301f4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   301f8:	00bffa84 	movi	r2,-22
   301fc:	00001306 	br	3024c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   30200:	e0bffe17 	ldw	r2,-8(fp)
   30204:	e0ffff17 	ldw	r3,-4(fp)
   30208:	e0fffc15 	stw	r3,-16(fp)
   3020c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   30210:	e0bffd17 	ldw	r2,-12(fp)
   30214:	e0fffc17 	ldw	r3,-16(fp)
   30218:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   3021c:	e0bffc17 	ldw	r2,-16(fp)
   30220:	10c00017 	ldw	r3,0(r2)
   30224:	e0bffd17 	ldw	r2,-12(fp)
   30228:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   3022c:	e0bffc17 	ldw	r2,-16(fp)
   30230:	10800017 	ldw	r2,0(r2)
   30234:	e0fffd17 	ldw	r3,-12(fp)
   30238:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   3023c:	e0bffc17 	ldw	r2,-16(fp)
   30240:	e0fffd17 	ldw	r3,-12(fp)
   30244:	10c00015 	stw	r3,0(r2)

  return 0;  
   30248:	0005883a 	mov	r2,zero
}
   3024c:	e037883a 	mov	sp,fp
   30250:	dfc00117 	ldw	ra,4(sp)
   30254:	df000017 	ldw	fp,0(sp)
   30258:	dec00204 	addi	sp,sp,8
   3025c:	f800283a 	ret

00030260 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   30260:	defffd04 	addi	sp,sp,-12
   30264:	dfc00215 	stw	ra,8(sp)
   30268:	df000115 	stw	fp,4(sp)
   3026c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   30270:	008000f4 	movhi	r2,3
   30274:	10849204 	addi	r2,r2,4680
   30278:	e0bfff15 	stw	r2,-4(fp)
   3027c:	00000606 	br	30298 <_do_ctors+0x38>
        (*ctor) (); 
   30280:	e0bfff17 	ldw	r2,-4(fp)
   30284:	10800017 	ldw	r2,0(r2)
   30288:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   3028c:	e0bfff17 	ldw	r2,-4(fp)
   30290:	10bfff04 	addi	r2,r2,-4
   30294:	e0bfff15 	stw	r2,-4(fp)
   30298:	e0ffff17 	ldw	r3,-4(fp)
   3029c:	008000f4 	movhi	r2,3
   302a0:	10849304 	addi	r2,r2,4684
   302a4:	18bff62e 	bgeu	r3,r2,30280 <__alt_data_end+0xffff0280>
        (*ctor) (); 
}
   302a8:	0001883a 	nop
   302ac:	e037883a 	mov	sp,fp
   302b0:	dfc00117 	ldw	ra,4(sp)
   302b4:	df000017 	ldw	fp,0(sp)
   302b8:	dec00204 	addi	sp,sp,8
   302bc:	f800283a 	ret

000302c0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   302c0:	defffd04 	addi	sp,sp,-12
   302c4:	dfc00215 	stw	ra,8(sp)
   302c8:	df000115 	stw	fp,4(sp)
   302cc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   302d0:	008000f4 	movhi	r2,3
   302d4:	10849204 	addi	r2,r2,4680
   302d8:	e0bfff15 	stw	r2,-4(fp)
   302dc:	00000606 	br	302f8 <_do_dtors+0x38>
        (*dtor) (); 
   302e0:	e0bfff17 	ldw	r2,-4(fp)
   302e4:	10800017 	ldw	r2,0(r2)
   302e8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   302ec:	e0bfff17 	ldw	r2,-4(fp)
   302f0:	10bfff04 	addi	r2,r2,-4
   302f4:	e0bfff15 	stw	r2,-4(fp)
   302f8:	e0ffff17 	ldw	r3,-4(fp)
   302fc:	008000f4 	movhi	r2,3
   30300:	10849304 	addi	r2,r2,4684
   30304:	18bff62e 	bgeu	r3,r2,302e0 <__alt_data_end+0xffff02e0>
        (*dtor) (); 
}
   30308:	0001883a 	nop
   3030c:	e037883a 	mov	sp,fp
   30310:	dfc00117 	ldw	ra,4(sp)
   30314:	df000017 	ldw	fp,0(sp)
   30318:	dec00204 	addi	sp,sp,8
   3031c:	f800283a 	ret

00030320 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   30320:	defffe04 	addi	sp,sp,-8
   30324:	dfc00115 	stw	ra,4(sp)
   30328:	df000015 	stw	fp,0(sp)
   3032c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   30330:	01440004 	movi	r5,4096
   30334:	0009883a 	mov	r4,zero
   30338:	0030d8c0 	call	30d8c <alt_icache_flush>
#endif
}
   3033c:	0001883a 	nop
   30340:	e037883a 	mov	sp,fp
   30344:	dfc00117 	ldw	ra,4(sp)
   30348:	df000017 	ldw	fp,0(sp)
   3034c:	dec00204 	addi	sp,sp,8
   30350:	f800283a 	ret

00030354 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   30354:	defff904 	addi	sp,sp,-28
   30358:	dfc00615 	stw	ra,24(sp)
   3035c:	df000515 	stw	fp,20(sp)
   30360:	df000504 	addi	fp,sp,20
   30364:	e13ffc15 	stw	r4,-16(fp)
   30368:	e17ffd15 	stw	r5,-12(fp)
   3036c:	e1bffe15 	stw	r6,-8(fp)
   30370:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   30374:	e0800217 	ldw	r2,8(fp)
   30378:	d8800015 	stw	r2,0(sp)
   3037c:	e1ffff17 	ldw	r7,-4(fp)
   30380:	e1bffe17 	ldw	r6,-8(fp)
   30384:	e17ffd17 	ldw	r5,-12(fp)
   30388:	e13ffc17 	ldw	r4,-16(fp)
   3038c:	00305040 	call	30504 <alt_iic_isr_register>
}  
   30390:	e037883a 	mov	sp,fp
   30394:	dfc00117 	ldw	ra,4(sp)
   30398:	df000017 	ldw	fp,0(sp)
   3039c:	dec00204 	addi	sp,sp,8
   303a0:	f800283a 	ret

000303a4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   303a4:	defff904 	addi	sp,sp,-28
   303a8:	df000615 	stw	fp,24(sp)
   303ac:	df000604 	addi	fp,sp,24
   303b0:	e13ffe15 	stw	r4,-8(fp)
   303b4:	e17fff15 	stw	r5,-4(fp)
   303b8:	e0bfff17 	ldw	r2,-4(fp)
   303bc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   303c0:	0005303a 	rdctl	r2,status
   303c4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   303c8:	e0fffb17 	ldw	r3,-20(fp)
   303cc:	00bfff84 	movi	r2,-2
   303d0:	1884703a 	and	r2,r3,r2
   303d4:	1001703a 	wrctl	status,r2
  
  return context;
   303d8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   303dc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   303e0:	00c00044 	movi	r3,1
   303e4:	e0bffa17 	ldw	r2,-24(fp)
   303e8:	1884983a 	sll	r2,r3,r2
   303ec:	1007883a 	mov	r3,r2
   303f0:	d0a6d717 	ldw	r2,-25764(gp)
   303f4:	1884b03a 	or	r2,r3,r2
   303f8:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   303fc:	d0a6d717 	ldw	r2,-25764(gp)
   30400:	100170fa 	wrctl	ienable,r2
   30404:	e0bffc17 	ldw	r2,-16(fp)
   30408:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   3040c:	e0bffd17 	ldw	r2,-12(fp)
   30410:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   30414:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   30418:	0001883a 	nop
}
   3041c:	e037883a 	mov	sp,fp
   30420:	df000017 	ldw	fp,0(sp)
   30424:	dec00104 	addi	sp,sp,4
   30428:	f800283a 	ret

0003042c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   3042c:	defff904 	addi	sp,sp,-28
   30430:	df000615 	stw	fp,24(sp)
   30434:	df000604 	addi	fp,sp,24
   30438:	e13ffe15 	stw	r4,-8(fp)
   3043c:	e17fff15 	stw	r5,-4(fp)
   30440:	e0bfff17 	ldw	r2,-4(fp)
   30444:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30448:	0005303a 	rdctl	r2,status
   3044c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30450:	e0fffb17 	ldw	r3,-20(fp)
   30454:	00bfff84 	movi	r2,-2
   30458:	1884703a 	and	r2,r3,r2
   3045c:	1001703a 	wrctl	status,r2
  
  return context;
   30460:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   30464:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   30468:	00c00044 	movi	r3,1
   3046c:	e0bffa17 	ldw	r2,-24(fp)
   30470:	1884983a 	sll	r2,r3,r2
   30474:	0084303a 	nor	r2,zero,r2
   30478:	1007883a 	mov	r3,r2
   3047c:	d0a6d717 	ldw	r2,-25764(gp)
   30480:	1884703a 	and	r2,r3,r2
   30484:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   30488:	d0a6d717 	ldw	r2,-25764(gp)
   3048c:	100170fa 	wrctl	ienable,r2
   30490:	e0bffc17 	ldw	r2,-16(fp)
   30494:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   30498:	e0bffd17 	ldw	r2,-12(fp)
   3049c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   304a0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   304a4:	0001883a 	nop
}
   304a8:	e037883a 	mov	sp,fp
   304ac:	df000017 	ldw	fp,0(sp)
   304b0:	dec00104 	addi	sp,sp,4
   304b4:	f800283a 	ret

000304b8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   304b8:	defffc04 	addi	sp,sp,-16
   304bc:	df000315 	stw	fp,12(sp)
   304c0:	df000304 	addi	fp,sp,12
   304c4:	e13ffe15 	stw	r4,-8(fp)
   304c8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   304cc:	000530fa 	rdctl	r2,ienable
   304d0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   304d4:	00c00044 	movi	r3,1
   304d8:	e0bfff17 	ldw	r2,-4(fp)
   304dc:	1884983a 	sll	r2,r3,r2
   304e0:	1007883a 	mov	r3,r2
   304e4:	e0bffd17 	ldw	r2,-12(fp)
   304e8:	1884703a 	and	r2,r3,r2
   304ec:	1004c03a 	cmpne	r2,r2,zero
   304f0:	10803fcc 	andi	r2,r2,255
}
   304f4:	e037883a 	mov	sp,fp
   304f8:	df000017 	ldw	fp,0(sp)
   304fc:	dec00104 	addi	sp,sp,4
   30500:	f800283a 	ret

00030504 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   30504:	defff504 	addi	sp,sp,-44
   30508:	dfc00a15 	stw	ra,40(sp)
   3050c:	df000915 	stw	fp,36(sp)
   30510:	df000904 	addi	fp,sp,36
   30514:	e13ffc15 	stw	r4,-16(fp)
   30518:	e17ffd15 	stw	r5,-12(fp)
   3051c:	e1bffe15 	stw	r6,-8(fp)
   30520:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   30524:	00bffa84 	movi	r2,-22
   30528:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   3052c:	e0bffd17 	ldw	r2,-12(fp)
   30530:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   30534:	e0bff817 	ldw	r2,-32(fp)
   30538:	10800808 	cmpgei	r2,r2,32
   3053c:	1000271e 	bne	r2,zero,305dc <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30540:	0005303a 	rdctl	r2,status
   30544:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30548:	e0fffb17 	ldw	r3,-20(fp)
   3054c:	00bfff84 	movi	r2,-2
   30550:	1884703a 	and	r2,r3,r2
   30554:	1001703a 	wrctl	status,r2
  
  return context;
   30558:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   3055c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   30560:	008000f4 	movhi	r2,3
   30564:	1092eb04 	addi	r2,r2,19372
   30568:	e0fff817 	ldw	r3,-32(fp)
   3056c:	180690fa 	slli	r3,r3,3
   30570:	10c5883a 	add	r2,r2,r3
   30574:	e0fffe17 	ldw	r3,-8(fp)
   30578:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   3057c:	008000f4 	movhi	r2,3
   30580:	1092eb04 	addi	r2,r2,19372
   30584:	e0fff817 	ldw	r3,-32(fp)
   30588:	180690fa 	slli	r3,r3,3
   3058c:	10c5883a 	add	r2,r2,r3
   30590:	10800104 	addi	r2,r2,4
   30594:	e0ffff17 	ldw	r3,-4(fp)
   30598:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   3059c:	e0bffe17 	ldw	r2,-8(fp)
   305a0:	10000526 	beq	r2,zero,305b8 <alt_iic_isr_register+0xb4>
   305a4:	e0bff817 	ldw	r2,-32(fp)
   305a8:	100b883a 	mov	r5,r2
   305ac:	e13ffc17 	ldw	r4,-16(fp)
   305b0:	00303a40 	call	303a4 <alt_ic_irq_enable>
   305b4:	00000406 	br	305c8 <alt_iic_isr_register+0xc4>
   305b8:	e0bff817 	ldw	r2,-32(fp)
   305bc:	100b883a 	mov	r5,r2
   305c0:	e13ffc17 	ldw	r4,-16(fp)
   305c4:	003042c0 	call	3042c <alt_ic_irq_disable>
   305c8:	e0bff715 	stw	r2,-36(fp)
   305cc:	e0bffa17 	ldw	r2,-24(fp)
   305d0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   305d4:	e0bff917 	ldw	r2,-28(fp)
   305d8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   305dc:	e0bff717 	ldw	r2,-36(fp)
}
   305e0:	e037883a 	mov	sp,fp
   305e4:	dfc00117 	ldw	ra,4(sp)
   305e8:	df000017 	ldw	fp,0(sp)
   305ec:	dec00204 	addi	sp,sp,8
   305f0:	f800283a 	ret

000305f4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   305f4:	defff904 	addi	sp,sp,-28
   305f8:	dfc00615 	stw	ra,24(sp)
   305fc:	df000515 	stw	fp,20(sp)
   30600:	df000504 	addi	fp,sp,20
   30604:	e13ffc15 	stw	r4,-16(fp)
   30608:	e17ffd15 	stw	r5,-12(fp)
   3060c:	e1bffe15 	stw	r6,-8(fp)
   30610:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   30614:	e1bfff17 	ldw	r6,-4(fp)
   30618:	e17ffe17 	ldw	r5,-8(fp)
   3061c:	e13ffd17 	ldw	r4,-12(fp)
   30620:	00308340 	call	30834 <open>
   30624:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   30628:	e0bffb17 	ldw	r2,-20(fp)
   3062c:	10001c16 	blt	r2,zero,306a0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   30630:	008000f4 	movhi	r2,3
   30634:	10878e04 	addi	r2,r2,7736
   30638:	e0fffb17 	ldw	r3,-20(fp)
   3063c:	18c00324 	muli	r3,r3,12
   30640:	10c5883a 	add	r2,r2,r3
   30644:	10c00017 	ldw	r3,0(r2)
   30648:	e0bffc17 	ldw	r2,-16(fp)
   3064c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   30650:	008000f4 	movhi	r2,3
   30654:	10878e04 	addi	r2,r2,7736
   30658:	e0fffb17 	ldw	r3,-20(fp)
   3065c:	18c00324 	muli	r3,r3,12
   30660:	10c5883a 	add	r2,r2,r3
   30664:	10800104 	addi	r2,r2,4
   30668:	10c00017 	ldw	r3,0(r2)
   3066c:	e0bffc17 	ldw	r2,-16(fp)
   30670:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   30674:	008000f4 	movhi	r2,3
   30678:	10878e04 	addi	r2,r2,7736
   3067c:	e0fffb17 	ldw	r3,-20(fp)
   30680:	18c00324 	muli	r3,r3,12
   30684:	10c5883a 	add	r2,r2,r3
   30688:	10800204 	addi	r2,r2,8
   3068c:	10c00017 	ldw	r3,0(r2)
   30690:	e0bffc17 	ldw	r2,-16(fp)
   30694:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   30698:	e13ffb17 	ldw	r4,-20(fp)
   3069c:	002f0100 	call	2f010 <alt_release_fd>
  }
} 
   306a0:	0001883a 	nop
   306a4:	e037883a 	mov	sp,fp
   306a8:	dfc00117 	ldw	ra,4(sp)
   306ac:	df000017 	ldw	fp,0(sp)
   306b0:	dec00204 	addi	sp,sp,8
   306b4:	f800283a 	ret

000306b8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   306b8:	defffb04 	addi	sp,sp,-20
   306bc:	dfc00415 	stw	ra,16(sp)
   306c0:	df000315 	stw	fp,12(sp)
   306c4:	df000304 	addi	fp,sp,12
   306c8:	e13ffd15 	stw	r4,-12(fp)
   306cc:	e17ffe15 	stw	r5,-8(fp)
   306d0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   306d4:	01c07fc4 	movi	r7,511
   306d8:	01800044 	movi	r6,1
   306dc:	e17ffd17 	ldw	r5,-12(fp)
   306e0:	010000f4 	movhi	r4,3
   306e4:	21079104 	addi	r4,r4,7748
   306e8:	00305f40 	call	305f4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   306ec:	01c07fc4 	movi	r7,511
   306f0:	000d883a 	mov	r6,zero
   306f4:	e17ffe17 	ldw	r5,-8(fp)
   306f8:	010000f4 	movhi	r4,3
   306fc:	21078e04 	addi	r4,r4,7736
   30700:	00305f40 	call	305f4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   30704:	01c07fc4 	movi	r7,511
   30708:	01800044 	movi	r6,1
   3070c:	e17fff17 	ldw	r5,-4(fp)
   30710:	010000f4 	movhi	r4,3
   30714:	21079404 	addi	r4,r4,7760
   30718:	00305f40 	call	305f4 <alt_open_fd>
}  
   3071c:	0001883a 	nop
   30720:	e037883a 	mov	sp,fp
   30724:	dfc00117 	ldw	ra,4(sp)
   30728:	df000017 	ldw	fp,0(sp)
   3072c:	dec00204 	addi	sp,sp,8
   30730:	f800283a 	ret

00030734 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30734:	defffe04 	addi	sp,sp,-8
   30738:	dfc00115 	stw	ra,4(sp)
   3073c:	df000015 	stw	fp,0(sp)
   30740:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30744:	d0a00c17 	ldw	r2,-32720(gp)
   30748:	10000326 	beq	r2,zero,30758 <alt_get_errno+0x24>
   3074c:	d0a00c17 	ldw	r2,-32720(gp)
   30750:	103ee83a 	callr	r2
   30754:	00000106 	br	3075c <alt_get_errno+0x28>
   30758:	d0a6d304 	addi	r2,gp,-25780
}
   3075c:	e037883a 	mov	sp,fp
   30760:	dfc00117 	ldw	ra,4(sp)
   30764:	df000017 	ldw	fp,0(sp)
   30768:	dec00204 	addi	sp,sp,8
   3076c:	f800283a 	ret

00030770 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   30770:	defffd04 	addi	sp,sp,-12
   30774:	df000215 	stw	fp,8(sp)
   30778:	df000204 	addi	fp,sp,8
   3077c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   30780:	e0bfff17 	ldw	r2,-4(fp)
   30784:	10800217 	ldw	r2,8(r2)
   30788:	10d00034 	orhi	r3,r2,16384
   3078c:	e0bfff17 	ldw	r2,-4(fp)
   30790:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   30794:	e03ffe15 	stw	zero,-8(fp)
   30798:	00001d06 	br	30810 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   3079c:	008000f4 	movhi	r2,3
   307a0:	10878e04 	addi	r2,r2,7736
   307a4:	e0fffe17 	ldw	r3,-8(fp)
   307a8:	18c00324 	muli	r3,r3,12
   307ac:	10c5883a 	add	r2,r2,r3
   307b0:	10c00017 	ldw	r3,0(r2)
   307b4:	e0bfff17 	ldw	r2,-4(fp)
   307b8:	10800017 	ldw	r2,0(r2)
   307bc:	1880111e 	bne	r3,r2,30804 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   307c0:	008000f4 	movhi	r2,3
   307c4:	10878e04 	addi	r2,r2,7736
   307c8:	e0fffe17 	ldw	r3,-8(fp)
   307cc:	18c00324 	muli	r3,r3,12
   307d0:	10c5883a 	add	r2,r2,r3
   307d4:	10800204 	addi	r2,r2,8
   307d8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   307dc:	1000090e 	bge	r2,zero,30804 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   307e0:	e0bffe17 	ldw	r2,-8(fp)
   307e4:	10c00324 	muli	r3,r2,12
   307e8:	008000f4 	movhi	r2,3
   307ec:	10878e04 	addi	r2,r2,7736
   307f0:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   307f4:	e0bfff17 	ldw	r2,-4(fp)
   307f8:	18800226 	beq	r3,r2,30804 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   307fc:	00bffcc4 	movi	r2,-13
   30800:	00000806 	br	30824 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   30804:	e0bffe17 	ldw	r2,-8(fp)
   30808:	10800044 	addi	r2,r2,1
   3080c:	e0bffe15 	stw	r2,-8(fp)
   30810:	d0a00b17 	ldw	r2,-32724(gp)
   30814:	1007883a 	mov	r3,r2
   30818:	e0bffe17 	ldw	r2,-8(fp)
   3081c:	18bfdf2e 	bgeu	r3,r2,3079c <__alt_data_end+0xffff079c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   30820:	0005883a 	mov	r2,zero
}
   30824:	e037883a 	mov	sp,fp
   30828:	df000017 	ldw	fp,0(sp)
   3082c:	dec00104 	addi	sp,sp,4
   30830:	f800283a 	ret

00030834 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   30834:	defff604 	addi	sp,sp,-40
   30838:	dfc00915 	stw	ra,36(sp)
   3083c:	df000815 	stw	fp,32(sp)
   30840:	df000804 	addi	fp,sp,32
   30844:	e13ffd15 	stw	r4,-12(fp)
   30848:	e17ffe15 	stw	r5,-8(fp)
   3084c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   30850:	00bfffc4 	movi	r2,-1
   30854:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   30858:	00bffb44 	movi	r2,-19
   3085c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   30860:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   30864:	d1600904 	addi	r5,gp,-32732
   30868:	e13ffd17 	ldw	r4,-12(fp)
   3086c:	0030b500 	call	30b50 <alt_find_dev>
   30870:	e0bff815 	stw	r2,-32(fp)
   30874:	e0bff817 	ldw	r2,-32(fp)
   30878:	1000051e 	bne	r2,zero,30890 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   3087c:	e13ffd17 	ldw	r4,-12(fp)
   30880:	0030be00 	call	30be0 <alt_find_file>
   30884:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   30888:	00800044 	movi	r2,1
   3088c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   30890:	e0bff817 	ldw	r2,-32(fp)
   30894:	10002926 	beq	r2,zero,3093c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   30898:	e13ff817 	ldw	r4,-32(fp)
   3089c:	0030ce80 	call	30ce8 <alt_get_fd>
   308a0:	e0bff915 	stw	r2,-28(fp)
   308a4:	e0bff917 	ldw	r2,-28(fp)
   308a8:	1000030e 	bge	r2,zero,308b8 <open+0x84>
    {
      status = index;
   308ac:	e0bff917 	ldw	r2,-28(fp)
   308b0:	e0bffa15 	stw	r2,-24(fp)
   308b4:	00002306 	br	30944 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   308b8:	e0bff917 	ldw	r2,-28(fp)
   308bc:	10c00324 	muli	r3,r2,12
   308c0:	008000f4 	movhi	r2,3
   308c4:	10878e04 	addi	r2,r2,7736
   308c8:	1885883a 	add	r2,r3,r2
   308cc:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   308d0:	e0fffe17 	ldw	r3,-8(fp)
   308d4:	00900034 	movhi	r2,16384
   308d8:	10bfffc4 	addi	r2,r2,-1
   308dc:	1886703a 	and	r3,r3,r2
   308e0:	e0bffc17 	ldw	r2,-16(fp)
   308e4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   308e8:	e0bffb17 	ldw	r2,-20(fp)
   308ec:	1000051e 	bne	r2,zero,30904 <open+0xd0>
   308f0:	e13ffc17 	ldw	r4,-16(fp)
   308f4:	00307700 	call	30770 <alt_file_locked>
   308f8:	e0bffa15 	stw	r2,-24(fp)
   308fc:	e0bffa17 	ldw	r2,-24(fp)
   30900:	10001016 	blt	r2,zero,30944 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   30904:	e0bff817 	ldw	r2,-32(fp)
   30908:	10800317 	ldw	r2,12(r2)
   3090c:	10000826 	beq	r2,zero,30930 <open+0xfc>
   30910:	e0bff817 	ldw	r2,-32(fp)
   30914:	10800317 	ldw	r2,12(r2)
   30918:	e1ffff17 	ldw	r7,-4(fp)
   3091c:	e1bffe17 	ldw	r6,-8(fp)
   30920:	e17ffd17 	ldw	r5,-12(fp)
   30924:	e13ffc17 	ldw	r4,-16(fp)
   30928:	103ee83a 	callr	r2
   3092c:	00000106 	br	30934 <open+0x100>
   30930:	0005883a 	mov	r2,zero
   30934:	e0bffa15 	stw	r2,-24(fp)
   30938:	00000206 	br	30944 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   3093c:	00bffb44 	movi	r2,-19
   30940:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   30944:	e0bffa17 	ldw	r2,-24(fp)
   30948:	1000090e 	bge	r2,zero,30970 <open+0x13c>
  {
    alt_release_fd (index);  
   3094c:	e13ff917 	ldw	r4,-28(fp)
   30950:	002f0100 	call	2f010 <alt_release_fd>
    ALT_ERRNO = -status;
   30954:	00307340 	call	30734 <alt_get_errno>
   30958:	1007883a 	mov	r3,r2
   3095c:	e0bffa17 	ldw	r2,-24(fp)
   30960:	0085c83a 	sub	r2,zero,r2
   30964:	18800015 	stw	r2,0(r3)
    return -1;
   30968:	00bfffc4 	movi	r2,-1
   3096c:	00000106 	br	30974 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   30970:	e0bff917 	ldw	r2,-28(fp)
}
   30974:	e037883a 	mov	sp,fp
   30978:	dfc00117 	ldw	ra,4(sp)
   3097c:	df000017 	ldw	fp,0(sp)
   30980:	dec00204 	addi	sp,sp,8
   30984:	f800283a 	ret

00030988 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   30988:	defffa04 	addi	sp,sp,-24
   3098c:	df000515 	stw	fp,20(sp)
   30990:	df000504 	addi	fp,sp,20
   30994:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30998:	0005303a 	rdctl	r2,status
   3099c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   309a0:	e0fffc17 	ldw	r3,-16(fp)
   309a4:	00bfff84 	movi	r2,-2
   309a8:	1884703a 	and	r2,r3,r2
   309ac:	1001703a 	wrctl	status,r2
  
  return context;
   309b0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   309b4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   309b8:	e0bfff17 	ldw	r2,-4(fp)
   309bc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   309c0:	e0bffd17 	ldw	r2,-12(fp)
   309c4:	10800017 	ldw	r2,0(r2)
   309c8:	e0fffd17 	ldw	r3,-12(fp)
   309cc:	18c00117 	ldw	r3,4(r3)
   309d0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   309d4:	e0bffd17 	ldw	r2,-12(fp)
   309d8:	10800117 	ldw	r2,4(r2)
   309dc:	e0fffd17 	ldw	r3,-12(fp)
   309e0:	18c00017 	ldw	r3,0(r3)
   309e4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   309e8:	e0bffd17 	ldw	r2,-12(fp)
   309ec:	e0fffd17 	ldw	r3,-12(fp)
   309f0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   309f4:	e0bffd17 	ldw	r2,-12(fp)
   309f8:	e0fffd17 	ldw	r3,-12(fp)
   309fc:	10c00015 	stw	r3,0(r2)
   30a00:	e0bffb17 	ldw	r2,-20(fp)
   30a04:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   30a08:	e0bffe17 	ldw	r2,-8(fp)
   30a0c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   30a10:	0001883a 	nop
   30a14:	e037883a 	mov	sp,fp
   30a18:	df000017 	ldw	fp,0(sp)
   30a1c:	dec00104 	addi	sp,sp,4
   30a20:	f800283a 	ret

00030a24 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   30a24:	defffb04 	addi	sp,sp,-20
   30a28:	dfc00415 	stw	ra,16(sp)
   30a2c:	df000315 	stw	fp,12(sp)
   30a30:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   30a34:	d0a00f17 	ldw	r2,-32708(gp)
   30a38:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   30a3c:	d0a6d917 	ldw	r2,-25756(gp)
   30a40:	10800044 	addi	r2,r2,1
   30a44:	d0a6d915 	stw	r2,-25756(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   30a48:	00002e06 	br	30b04 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   30a4c:	e0bffd17 	ldw	r2,-12(fp)
   30a50:	10800017 	ldw	r2,0(r2)
   30a54:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   30a58:	e0bffd17 	ldw	r2,-12(fp)
   30a5c:	10800403 	ldbu	r2,16(r2)
   30a60:	10803fcc 	andi	r2,r2,255
   30a64:	10000426 	beq	r2,zero,30a78 <alt_tick+0x54>
   30a68:	d0a6d917 	ldw	r2,-25756(gp)
   30a6c:	1000021e 	bne	r2,zero,30a78 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   30a70:	e0bffd17 	ldw	r2,-12(fp)
   30a74:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   30a78:	e0bffd17 	ldw	r2,-12(fp)
   30a7c:	10800217 	ldw	r2,8(r2)
   30a80:	d0e6d917 	ldw	r3,-25756(gp)
   30a84:	18801d36 	bltu	r3,r2,30afc <alt_tick+0xd8>
   30a88:	e0bffd17 	ldw	r2,-12(fp)
   30a8c:	10800403 	ldbu	r2,16(r2)
   30a90:	10803fcc 	andi	r2,r2,255
   30a94:	1000191e 	bne	r2,zero,30afc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   30a98:	e0bffd17 	ldw	r2,-12(fp)
   30a9c:	10800317 	ldw	r2,12(r2)
   30aa0:	e0fffd17 	ldw	r3,-12(fp)
   30aa4:	18c00517 	ldw	r3,20(r3)
   30aa8:	1809883a 	mov	r4,r3
   30aac:	103ee83a 	callr	r2
   30ab0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   30ab4:	e0bfff17 	ldw	r2,-4(fp)
   30ab8:	1000031e 	bne	r2,zero,30ac8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   30abc:	e13ffd17 	ldw	r4,-12(fp)
   30ac0:	00309880 	call	30988 <alt_alarm_stop>
   30ac4:	00000d06 	br	30afc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   30ac8:	e0bffd17 	ldw	r2,-12(fp)
   30acc:	10c00217 	ldw	r3,8(r2)
   30ad0:	e0bfff17 	ldw	r2,-4(fp)
   30ad4:	1887883a 	add	r3,r3,r2
   30ad8:	e0bffd17 	ldw	r2,-12(fp)
   30adc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   30ae0:	e0bffd17 	ldw	r2,-12(fp)
   30ae4:	10c00217 	ldw	r3,8(r2)
   30ae8:	d0a6d917 	ldw	r2,-25756(gp)
   30aec:	1880032e 	bgeu	r3,r2,30afc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   30af0:	e0bffd17 	ldw	r2,-12(fp)
   30af4:	00c00044 	movi	r3,1
   30af8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   30afc:	e0bffe17 	ldw	r2,-8(fp)
   30b00:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   30b04:	e0fffd17 	ldw	r3,-12(fp)
   30b08:	d0a00f04 	addi	r2,gp,-32708
   30b0c:	18bfcf1e 	bne	r3,r2,30a4c <__alt_data_end+0xffff0a4c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   30b10:	0001883a 	nop
}
   30b14:	0001883a 	nop
   30b18:	e037883a 	mov	sp,fp
   30b1c:	dfc00117 	ldw	ra,4(sp)
   30b20:	df000017 	ldw	fp,0(sp)
   30b24:	dec00204 	addi	sp,sp,8
   30b28:	f800283a 	ret

00030b2c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   30b2c:	deffff04 	addi	sp,sp,-4
   30b30:	df000015 	stw	fp,0(sp)
   30b34:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   30b38:	000170fa 	wrctl	ienable,zero
}
   30b3c:	0001883a 	nop
   30b40:	e037883a 	mov	sp,fp
   30b44:	df000017 	ldw	fp,0(sp)
   30b48:	dec00104 	addi	sp,sp,4
   30b4c:	f800283a 	ret

00030b50 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   30b50:	defffa04 	addi	sp,sp,-24
   30b54:	dfc00515 	stw	ra,20(sp)
   30b58:	df000415 	stw	fp,16(sp)
   30b5c:	df000404 	addi	fp,sp,16
   30b60:	e13ffe15 	stw	r4,-8(fp)
   30b64:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   30b68:	e0bfff17 	ldw	r2,-4(fp)
   30b6c:	10800017 	ldw	r2,0(r2)
   30b70:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   30b74:	e13ffe17 	ldw	r4,-8(fp)
   30b78:	002b22c0 	call	2b22c <strlen>
   30b7c:	10800044 	addi	r2,r2,1
   30b80:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   30b84:	00000d06 	br	30bbc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   30b88:	e0bffc17 	ldw	r2,-16(fp)
   30b8c:	10800217 	ldw	r2,8(r2)
   30b90:	e0fffd17 	ldw	r3,-12(fp)
   30b94:	180d883a 	mov	r6,r3
   30b98:	e17ffe17 	ldw	r5,-8(fp)
   30b9c:	1009883a 	mov	r4,r2
   30ba0:	0030f040 	call	30f04 <memcmp>
   30ba4:	1000021e 	bne	r2,zero,30bb0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   30ba8:	e0bffc17 	ldw	r2,-16(fp)
   30bac:	00000706 	br	30bcc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   30bb0:	e0bffc17 	ldw	r2,-16(fp)
   30bb4:	10800017 	ldw	r2,0(r2)
   30bb8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   30bbc:	e0fffc17 	ldw	r3,-16(fp)
   30bc0:	e0bfff17 	ldw	r2,-4(fp)
   30bc4:	18bff01e 	bne	r3,r2,30b88 <__alt_data_end+0xffff0b88>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   30bc8:	0005883a 	mov	r2,zero
}
   30bcc:	e037883a 	mov	sp,fp
   30bd0:	dfc00117 	ldw	ra,4(sp)
   30bd4:	df000017 	ldw	fp,0(sp)
   30bd8:	dec00204 	addi	sp,sp,8
   30bdc:	f800283a 	ret

00030be0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   30be0:	defffb04 	addi	sp,sp,-20
   30be4:	dfc00415 	stw	ra,16(sp)
   30be8:	df000315 	stw	fp,12(sp)
   30bec:	df000304 	addi	fp,sp,12
   30bf0:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   30bf4:	d0a00717 	ldw	r2,-32740(gp)
   30bf8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   30bfc:	00003106 	br	30cc4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   30c00:	e0bffd17 	ldw	r2,-12(fp)
   30c04:	10800217 	ldw	r2,8(r2)
   30c08:	1009883a 	mov	r4,r2
   30c0c:	002b22c0 	call	2b22c <strlen>
   30c10:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   30c14:	e0bffd17 	ldw	r2,-12(fp)
   30c18:	10c00217 	ldw	r3,8(r2)
   30c1c:	e0bffe17 	ldw	r2,-8(fp)
   30c20:	10bfffc4 	addi	r2,r2,-1
   30c24:	1885883a 	add	r2,r3,r2
   30c28:	10800003 	ldbu	r2,0(r2)
   30c2c:	10803fcc 	andi	r2,r2,255
   30c30:	1080201c 	xori	r2,r2,128
   30c34:	10bfe004 	addi	r2,r2,-128
   30c38:	10800bd8 	cmpnei	r2,r2,47
   30c3c:	1000031e 	bne	r2,zero,30c4c <alt_find_file+0x6c>
    {
      len -= 1;
   30c40:	e0bffe17 	ldw	r2,-8(fp)
   30c44:	10bfffc4 	addi	r2,r2,-1
   30c48:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   30c4c:	e0bffe17 	ldw	r2,-8(fp)
   30c50:	e0ffff17 	ldw	r3,-4(fp)
   30c54:	1885883a 	add	r2,r3,r2
   30c58:	10800003 	ldbu	r2,0(r2)
   30c5c:	10803fcc 	andi	r2,r2,255
   30c60:	1080201c 	xori	r2,r2,128
   30c64:	10bfe004 	addi	r2,r2,-128
   30c68:	10800be0 	cmpeqi	r2,r2,47
   30c6c:	1000081e 	bne	r2,zero,30c90 <alt_find_file+0xb0>
   30c70:	e0bffe17 	ldw	r2,-8(fp)
   30c74:	e0ffff17 	ldw	r3,-4(fp)
   30c78:	1885883a 	add	r2,r3,r2
   30c7c:	10800003 	ldbu	r2,0(r2)
   30c80:	10803fcc 	andi	r2,r2,255
   30c84:	1080201c 	xori	r2,r2,128
   30c88:	10bfe004 	addi	r2,r2,-128
   30c8c:	10000a1e 	bne	r2,zero,30cb8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   30c90:	e0bffd17 	ldw	r2,-12(fp)
   30c94:	10800217 	ldw	r2,8(r2)
   30c98:	e0fffe17 	ldw	r3,-8(fp)
   30c9c:	180d883a 	mov	r6,r3
   30ca0:	e17fff17 	ldw	r5,-4(fp)
   30ca4:	1009883a 	mov	r4,r2
   30ca8:	0030f040 	call	30f04 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   30cac:	1000021e 	bne	r2,zero,30cb8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   30cb0:	e0bffd17 	ldw	r2,-12(fp)
   30cb4:	00000706 	br	30cd4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   30cb8:	e0bffd17 	ldw	r2,-12(fp)
   30cbc:	10800017 	ldw	r2,0(r2)
   30cc0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   30cc4:	e0fffd17 	ldw	r3,-12(fp)
   30cc8:	d0a00704 	addi	r2,gp,-32740
   30ccc:	18bfcc1e 	bne	r3,r2,30c00 <__alt_data_end+0xffff0c00>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   30cd0:	0005883a 	mov	r2,zero
}
   30cd4:	e037883a 	mov	sp,fp
   30cd8:	dfc00117 	ldw	ra,4(sp)
   30cdc:	df000017 	ldw	fp,0(sp)
   30ce0:	dec00204 	addi	sp,sp,8
   30ce4:	f800283a 	ret

00030ce8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   30ce8:	defffc04 	addi	sp,sp,-16
   30cec:	df000315 	stw	fp,12(sp)
   30cf0:	df000304 	addi	fp,sp,12
   30cf4:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   30cf8:	00bffa04 	movi	r2,-24
   30cfc:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   30d00:	e03ffd15 	stw	zero,-12(fp)
   30d04:	00001906 	br	30d6c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   30d08:	008000f4 	movhi	r2,3
   30d0c:	10878e04 	addi	r2,r2,7736
   30d10:	e0fffd17 	ldw	r3,-12(fp)
   30d14:	18c00324 	muli	r3,r3,12
   30d18:	10c5883a 	add	r2,r2,r3
   30d1c:	10800017 	ldw	r2,0(r2)
   30d20:	10000f1e 	bne	r2,zero,30d60 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   30d24:	008000f4 	movhi	r2,3
   30d28:	10878e04 	addi	r2,r2,7736
   30d2c:	e0fffd17 	ldw	r3,-12(fp)
   30d30:	18c00324 	muli	r3,r3,12
   30d34:	10c5883a 	add	r2,r2,r3
   30d38:	e0ffff17 	ldw	r3,-4(fp)
   30d3c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   30d40:	d0e00b17 	ldw	r3,-32724(gp)
   30d44:	e0bffd17 	ldw	r2,-12(fp)
   30d48:	1880020e 	bge	r3,r2,30d54 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   30d4c:	e0bffd17 	ldw	r2,-12(fp)
   30d50:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
   30d54:	e0bffd17 	ldw	r2,-12(fp)
   30d58:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   30d5c:	00000606 	br	30d78 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   30d60:	e0bffd17 	ldw	r2,-12(fp)
   30d64:	10800044 	addi	r2,r2,1
   30d68:	e0bffd15 	stw	r2,-12(fp)
   30d6c:	e0bffd17 	ldw	r2,-12(fp)
   30d70:	10800810 	cmplti	r2,r2,32
   30d74:	103fe41e 	bne	r2,zero,30d08 <__alt_data_end+0xffff0d08>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   30d78:	e0bffe17 	ldw	r2,-8(fp)
}
   30d7c:	e037883a 	mov	sp,fp
   30d80:	df000017 	ldw	fp,0(sp)
   30d84:	dec00104 	addi	sp,sp,4
   30d88:	f800283a 	ret

00030d8c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   30d8c:	defffb04 	addi	sp,sp,-20
   30d90:	df000415 	stw	fp,16(sp)
   30d94:	df000404 	addi	fp,sp,16
   30d98:	e13ffe15 	stw	r4,-8(fp)
   30d9c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   30da0:	e0bfff17 	ldw	r2,-4(fp)
   30da4:	10840070 	cmpltui	r2,r2,4097
   30da8:	1000021e 	bne	r2,zero,30db4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   30dac:	00840004 	movi	r2,4096
   30db0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   30db4:	e0fffe17 	ldw	r3,-8(fp)
   30db8:	e0bfff17 	ldw	r2,-4(fp)
   30dbc:	1885883a 	add	r2,r3,r2
   30dc0:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   30dc4:	e0bffe17 	ldw	r2,-8(fp)
   30dc8:	e0bffc15 	stw	r2,-16(fp)
   30dcc:	00000506 	br	30de4 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   30dd0:	e0bffc17 	ldw	r2,-16(fp)
   30dd4:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   30dd8:	e0bffc17 	ldw	r2,-16(fp)
   30ddc:	10800804 	addi	r2,r2,32
   30de0:	e0bffc15 	stw	r2,-16(fp)
   30de4:	e0fffc17 	ldw	r3,-16(fp)
   30de8:	e0bffd17 	ldw	r2,-12(fp)
   30dec:	18bff836 	bltu	r3,r2,30dd0 <__alt_data_end+0xffff0dd0>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   30df0:	e0bffe17 	ldw	r2,-8(fp)
   30df4:	108007cc 	andi	r2,r2,31
   30df8:	10000226 	beq	r2,zero,30e04 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   30dfc:	e0bffc17 	ldw	r2,-16(fp)
   30e00:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   30e04:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   30e08:	0001883a 	nop
   30e0c:	e037883a 	mov	sp,fp
   30e10:	df000017 	ldw	fp,0(sp)
   30e14:	dec00104 	addi	sp,sp,4
   30e18:	f800283a 	ret

00030e1c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   30e1c:	defffe04 	addi	sp,sp,-8
   30e20:	df000115 	stw	fp,4(sp)
   30e24:	df000104 	addi	fp,sp,4
   30e28:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   30e2c:	e0bfff17 	ldw	r2,-4(fp)
   30e30:	10bffe84 	addi	r2,r2,-6
   30e34:	10c00428 	cmpgeui	r3,r2,16
   30e38:	18001a1e 	bne	r3,zero,30ea4 <alt_exception_cause_generated_bad_addr+0x88>
   30e3c:	100690ba 	slli	r3,r2,2
   30e40:	008000f4 	movhi	r2,3
   30e44:	10839504 	addi	r2,r2,3668
   30e48:	1885883a 	add	r2,r3,r2
   30e4c:	10800017 	ldw	r2,0(r2)
   30e50:	1000683a 	jmp	r2
   30e54:	00030e94 	movui	zero,3130
   30e58:	00030e94 	movui	zero,3130
   30e5c:	00030ea4 	muli	zero,zero,3130
   30e60:	00030ea4 	muli	zero,zero,3130
   30e64:	00030ea4 	muli	zero,zero,3130
   30e68:	00030e94 	movui	zero,3130
   30e6c:	00030e9c 	xori	zero,zero,3130
   30e70:	00030ea4 	muli	zero,zero,3130
   30e74:	00030e94 	movui	zero,3130
   30e78:	00030e94 	movui	zero,3130
   30e7c:	00030ea4 	muli	zero,zero,3130
   30e80:	00030e94 	movui	zero,3130
   30e84:	00030e9c 	xori	zero,zero,3130
   30e88:	00030ea4 	muli	zero,zero,3130
   30e8c:	00030ea4 	muli	zero,zero,3130
   30e90:	00030e94 	movui	zero,3130
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   30e94:	00800044 	movi	r2,1
   30e98:	00000306 	br	30ea8 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   30e9c:	0005883a 	mov	r2,zero
   30ea0:	00000106 	br	30ea8 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   30ea4:	0005883a 	mov	r2,zero
  }
}
   30ea8:	e037883a 	mov	sp,fp
   30eac:	df000017 	ldw	fp,0(sp)
   30eb0:	dec00104 	addi	sp,sp,4
   30eb4:	f800283a 	ret

00030eb8 <atexit>:
   30eb8:	200b883a 	mov	r5,r4
   30ebc:	000f883a 	mov	r7,zero
   30ec0:	000d883a 	mov	r6,zero
   30ec4:	0009883a 	mov	r4,zero
   30ec8:	0030f801 	jmpi	30f80 <__register_exitproc>

00030ecc <exit>:
   30ecc:	defffe04 	addi	sp,sp,-8
   30ed0:	000b883a 	mov	r5,zero
   30ed4:	dc000015 	stw	r16,0(sp)
   30ed8:	dfc00115 	stw	ra,4(sp)
   30edc:	2021883a 	mov	r16,r4
   30ee0:	00310980 	call	31098 <__call_exitprocs>
   30ee4:	008000f4 	movhi	r2,3
   30ee8:	108c0704 	addi	r2,r2,12316
   30eec:	11000017 	ldw	r4,0(r2)
   30ef0:	20800f17 	ldw	r2,60(r4)
   30ef4:	10000126 	beq	r2,zero,30efc <exit+0x30>
   30ef8:	103ee83a 	callr	r2
   30efc:	8009883a 	mov	r4,r16
   30f00:	00312180 	call	31218 <_exit>

00030f04 <memcmp>:
   30f04:	01c000c4 	movi	r7,3
   30f08:	3980192e 	bgeu	r7,r6,30f70 <memcmp+0x6c>
   30f0c:	2144b03a 	or	r2,r4,r5
   30f10:	11c4703a 	and	r2,r2,r7
   30f14:	10000f26 	beq	r2,zero,30f54 <memcmp+0x50>
   30f18:	20800003 	ldbu	r2,0(r4)
   30f1c:	28c00003 	ldbu	r3,0(r5)
   30f20:	10c0151e 	bne	r2,r3,30f78 <memcmp+0x74>
   30f24:	31bfff84 	addi	r6,r6,-2
   30f28:	01ffffc4 	movi	r7,-1
   30f2c:	00000406 	br	30f40 <memcmp+0x3c>
   30f30:	20800003 	ldbu	r2,0(r4)
   30f34:	28c00003 	ldbu	r3,0(r5)
   30f38:	31bfffc4 	addi	r6,r6,-1
   30f3c:	10c00e1e 	bne	r2,r3,30f78 <memcmp+0x74>
   30f40:	21000044 	addi	r4,r4,1
   30f44:	29400044 	addi	r5,r5,1
   30f48:	31fff91e 	bne	r6,r7,30f30 <__alt_data_end+0xffff0f30>
   30f4c:	0005883a 	mov	r2,zero
   30f50:	f800283a 	ret
   30f54:	20c00017 	ldw	r3,0(r4)
   30f58:	28800017 	ldw	r2,0(r5)
   30f5c:	18bfee1e 	bne	r3,r2,30f18 <__alt_data_end+0xffff0f18>
   30f60:	31bfff04 	addi	r6,r6,-4
   30f64:	21000104 	addi	r4,r4,4
   30f68:	29400104 	addi	r5,r5,4
   30f6c:	39bff936 	bltu	r7,r6,30f54 <__alt_data_end+0xffff0f54>
   30f70:	303fe91e 	bne	r6,zero,30f18 <__alt_data_end+0xffff0f18>
   30f74:	003ff506 	br	30f4c <__alt_data_end+0xffff0f4c>
   30f78:	10c5c83a 	sub	r2,r2,r3
   30f7c:	f800283a 	ret

00030f80 <__register_exitproc>:
   30f80:	defffa04 	addi	sp,sp,-24
   30f84:	dc000315 	stw	r16,12(sp)
   30f88:	040000f4 	movhi	r16,3
   30f8c:	840c0704 	addi	r16,r16,12316
   30f90:	80c00017 	ldw	r3,0(r16)
   30f94:	dc400415 	stw	r17,16(sp)
   30f98:	dfc00515 	stw	ra,20(sp)
   30f9c:	18805217 	ldw	r2,328(r3)
   30fa0:	2023883a 	mov	r17,r4
   30fa4:	10003726 	beq	r2,zero,31084 <__register_exitproc+0x104>
   30fa8:	10c00117 	ldw	r3,4(r2)
   30fac:	010007c4 	movi	r4,31
   30fb0:	20c00e16 	blt	r4,r3,30fec <__register_exitproc+0x6c>
   30fb4:	1a000044 	addi	r8,r3,1
   30fb8:	8800221e 	bne	r17,zero,31044 <__register_exitproc+0xc4>
   30fbc:	18c00084 	addi	r3,r3,2
   30fc0:	18c7883a 	add	r3,r3,r3
   30fc4:	18c7883a 	add	r3,r3,r3
   30fc8:	12000115 	stw	r8,4(r2)
   30fcc:	10c7883a 	add	r3,r2,r3
   30fd0:	19400015 	stw	r5,0(r3)
   30fd4:	0005883a 	mov	r2,zero
   30fd8:	dfc00517 	ldw	ra,20(sp)
   30fdc:	dc400417 	ldw	r17,16(sp)
   30fe0:	dc000317 	ldw	r16,12(sp)
   30fe4:	dec00604 	addi	sp,sp,24
   30fe8:	f800283a 	ret
   30fec:	00800034 	movhi	r2,0
   30ff0:	10800004 	addi	r2,r2,0
   30ff4:	10002626 	beq	r2,zero,31090 <__register_exitproc+0x110>
   30ff8:	01006404 	movi	r4,400
   30ffc:	d9400015 	stw	r5,0(sp)
   31000:	d9800115 	stw	r6,4(sp)
   31004:	d9c00215 	stw	r7,8(sp)
   31008:	00000000 	call	0 <__reset-0x20000>
   3100c:	d9400017 	ldw	r5,0(sp)
   31010:	d9800117 	ldw	r6,4(sp)
   31014:	d9c00217 	ldw	r7,8(sp)
   31018:	10001d26 	beq	r2,zero,31090 <__register_exitproc+0x110>
   3101c:	81000017 	ldw	r4,0(r16)
   31020:	10000115 	stw	zero,4(r2)
   31024:	02000044 	movi	r8,1
   31028:	22405217 	ldw	r9,328(r4)
   3102c:	0007883a 	mov	r3,zero
   31030:	12400015 	stw	r9,0(r2)
   31034:	20805215 	stw	r2,328(r4)
   31038:	10006215 	stw	zero,392(r2)
   3103c:	10006315 	stw	zero,396(r2)
   31040:	883fde26 	beq	r17,zero,30fbc <__alt_data_end+0xffff0fbc>
   31044:	18c9883a 	add	r4,r3,r3
   31048:	2109883a 	add	r4,r4,r4
   3104c:	1109883a 	add	r4,r2,r4
   31050:	21802215 	stw	r6,136(r4)
   31054:	01800044 	movi	r6,1
   31058:	12406217 	ldw	r9,392(r2)
   3105c:	30cc983a 	sll	r6,r6,r3
   31060:	4992b03a 	or	r9,r9,r6
   31064:	12406215 	stw	r9,392(r2)
   31068:	21c04215 	stw	r7,264(r4)
   3106c:	01000084 	movi	r4,2
   31070:	893fd21e 	bne	r17,r4,30fbc <__alt_data_end+0xffff0fbc>
   31074:	11006317 	ldw	r4,396(r2)
   31078:	218cb03a 	or	r6,r4,r6
   3107c:	11806315 	stw	r6,396(r2)
   31080:	003fce06 	br	30fbc <__alt_data_end+0xffff0fbc>
   31084:	18805304 	addi	r2,r3,332
   31088:	18805215 	stw	r2,328(r3)
   3108c:	003fc606 	br	30fa8 <__alt_data_end+0xffff0fa8>
   31090:	00bfffc4 	movi	r2,-1
   31094:	003fd006 	br	30fd8 <__alt_data_end+0xffff0fd8>

00031098 <__call_exitprocs>:
   31098:	defff504 	addi	sp,sp,-44
   3109c:	df000915 	stw	fp,36(sp)
   310a0:	dd400615 	stw	r21,24(sp)
   310a4:	dc800315 	stw	r18,12(sp)
   310a8:	dfc00a15 	stw	ra,40(sp)
   310ac:	ddc00815 	stw	r23,32(sp)
   310b0:	dd800715 	stw	r22,28(sp)
   310b4:	dd000515 	stw	r20,20(sp)
   310b8:	dcc00415 	stw	r19,16(sp)
   310bc:	dc400215 	stw	r17,8(sp)
   310c0:	dc000115 	stw	r16,4(sp)
   310c4:	d9000015 	stw	r4,0(sp)
   310c8:	2839883a 	mov	fp,r5
   310cc:	04800044 	movi	r18,1
   310d0:	057fffc4 	movi	r21,-1
   310d4:	008000f4 	movhi	r2,3
   310d8:	108c0704 	addi	r2,r2,12316
   310dc:	12000017 	ldw	r8,0(r2)
   310e0:	45005217 	ldw	r20,328(r8)
   310e4:	44c05204 	addi	r19,r8,328
   310e8:	a0001c26 	beq	r20,zero,3115c <__call_exitprocs+0xc4>
   310ec:	a0800117 	ldw	r2,4(r20)
   310f0:	15ffffc4 	addi	r23,r2,-1
   310f4:	b8000d16 	blt	r23,zero,3112c <__call_exitprocs+0x94>
   310f8:	14000044 	addi	r16,r2,1
   310fc:	8421883a 	add	r16,r16,r16
   31100:	8421883a 	add	r16,r16,r16
   31104:	84402004 	addi	r17,r16,128
   31108:	a463883a 	add	r17,r20,r17
   3110c:	a421883a 	add	r16,r20,r16
   31110:	e0001e26 	beq	fp,zero,3118c <__call_exitprocs+0xf4>
   31114:	80804017 	ldw	r2,256(r16)
   31118:	e0801c26 	beq	fp,r2,3118c <__call_exitprocs+0xf4>
   3111c:	bdffffc4 	addi	r23,r23,-1
   31120:	843fff04 	addi	r16,r16,-4
   31124:	8c7fff04 	addi	r17,r17,-4
   31128:	bd7ff91e 	bne	r23,r21,31110 <__alt_data_end+0xffff1110>
   3112c:	00800034 	movhi	r2,0
   31130:	10800004 	addi	r2,r2,0
   31134:	10000926 	beq	r2,zero,3115c <__call_exitprocs+0xc4>
   31138:	a0800117 	ldw	r2,4(r20)
   3113c:	1000301e 	bne	r2,zero,31200 <__call_exitprocs+0x168>
   31140:	a0800017 	ldw	r2,0(r20)
   31144:	10003226 	beq	r2,zero,31210 <__call_exitprocs+0x178>
   31148:	a009883a 	mov	r4,r20
   3114c:	98800015 	stw	r2,0(r19)
   31150:	00000000 	call	0 <__reset-0x20000>
   31154:	9d000017 	ldw	r20,0(r19)
   31158:	a03fe41e 	bne	r20,zero,310ec <__alt_data_end+0xffff10ec>
   3115c:	dfc00a17 	ldw	ra,40(sp)
   31160:	df000917 	ldw	fp,36(sp)
   31164:	ddc00817 	ldw	r23,32(sp)
   31168:	dd800717 	ldw	r22,28(sp)
   3116c:	dd400617 	ldw	r21,24(sp)
   31170:	dd000517 	ldw	r20,20(sp)
   31174:	dcc00417 	ldw	r19,16(sp)
   31178:	dc800317 	ldw	r18,12(sp)
   3117c:	dc400217 	ldw	r17,8(sp)
   31180:	dc000117 	ldw	r16,4(sp)
   31184:	dec00b04 	addi	sp,sp,44
   31188:	f800283a 	ret
   3118c:	a0800117 	ldw	r2,4(r20)
   31190:	80c00017 	ldw	r3,0(r16)
   31194:	10bfffc4 	addi	r2,r2,-1
   31198:	15c01426 	beq	r2,r23,311ec <__call_exitprocs+0x154>
   3119c:	80000015 	stw	zero,0(r16)
   311a0:	183fde26 	beq	r3,zero,3111c <__alt_data_end+0xffff111c>
   311a4:	95c8983a 	sll	r4,r18,r23
   311a8:	a0806217 	ldw	r2,392(r20)
   311ac:	a5800117 	ldw	r22,4(r20)
   311b0:	2084703a 	and	r2,r4,r2
   311b4:	10000b26 	beq	r2,zero,311e4 <__call_exitprocs+0x14c>
   311b8:	a0806317 	ldw	r2,396(r20)
   311bc:	2088703a 	and	r4,r4,r2
   311c0:	20000c1e 	bne	r4,zero,311f4 <__call_exitprocs+0x15c>
   311c4:	89400017 	ldw	r5,0(r17)
   311c8:	d9000017 	ldw	r4,0(sp)
   311cc:	183ee83a 	callr	r3
   311d0:	a0800117 	ldw	r2,4(r20)
   311d4:	15bfbf1e 	bne	r2,r22,310d4 <__alt_data_end+0xffff10d4>
   311d8:	98800017 	ldw	r2,0(r19)
   311dc:	153fcf26 	beq	r2,r20,3111c <__alt_data_end+0xffff111c>
   311e0:	003fbc06 	br	310d4 <__alt_data_end+0xffff10d4>
   311e4:	183ee83a 	callr	r3
   311e8:	003ff906 	br	311d0 <__alt_data_end+0xffff11d0>
   311ec:	a5c00115 	stw	r23,4(r20)
   311f0:	003feb06 	br	311a0 <__alt_data_end+0xffff11a0>
   311f4:	89000017 	ldw	r4,0(r17)
   311f8:	183ee83a 	callr	r3
   311fc:	003ff406 	br	311d0 <__alt_data_end+0xffff11d0>
   31200:	a0800017 	ldw	r2,0(r20)
   31204:	a027883a 	mov	r19,r20
   31208:	1029883a 	mov	r20,r2
   3120c:	003fb606 	br	310e8 <__alt_data_end+0xffff10e8>
   31210:	0005883a 	mov	r2,zero
   31214:	003ffb06 	br	31204 <__alt_data_end+0xffff1204>

00031218 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   31218:	defffd04 	addi	sp,sp,-12
   3121c:	df000215 	stw	fp,8(sp)
   31220:	df000204 	addi	fp,sp,8
   31224:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   31228:	0001883a 	nop
   3122c:	e0bfff17 	ldw	r2,-4(fp)
   31230:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   31234:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   31238:	10000226 	beq	r2,zero,31244 <_exit+0x2c>
    ALT_SIM_FAIL();
   3123c:	002af070 	cmpltui	zero,zero,43969
   31240:	00000106 	br	31248 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   31244:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   31248:	003fff06 	br	31248 <__alt_data_end+0xffff1248>
