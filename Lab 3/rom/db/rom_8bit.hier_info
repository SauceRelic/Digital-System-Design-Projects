|rom_8bit_de10
CLOCK_50 => counter_1sec:COUNTER.clk
CLOCK_50 => rom_8bit:ROM.clock
KEY[0] => counter_1sec:COUNTER.pause
LEDR[0] << counter_1sec:COUNTER.count_out[0]
LEDR[1] << counter_1sec:COUNTER.count_out[1]
LEDR[2] << counter_1sec:COUNTER.count_out[2]
LEDR[3] << counter_1sec:COUNTER.count_out[3]
LEDR[4] << counter_1sec:COUNTER.count_out[4]
LEDR[5] << counter_1sec:COUNTER.count_out[5]
LEDR[6] << counter_1sec:COUNTER.count_out[6]
LEDR[7] << counter_1sec:COUNTER.count_out[7]
HEX0[0] << sevenseg_hex1:SEG0.seg[0]
HEX0[1] << sevenseg_hex1:SEG0.seg[1]
HEX0[2] << sevenseg_hex1:SEG0.seg[2]
HEX0[3] << sevenseg_hex1:SEG0.seg[3]
HEX0[4] << sevenseg_hex1:SEG0.seg[4]
HEX0[5] << sevenseg_hex1:SEG0.seg[5]
HEX0[6] << sevenseg_hex1:SEG0.seg[6]
HEX0[7] << sevenseg_hex1:SEG0.seg[7]
HEX1[0] << sevenseg_hex1:SEG1.seg[0]
HEX1[1] << sevenseg_hex1:SEG1.seg[1]
HEX1[2] << sevenseg_hex1:SEG1.seg[2]
HEX1[3] << sevenseg_hex1:SEG1.seg[3]
HEX1[4] << sevenseg_hex1:SEG1.seg[4]
HEX1[5] << sevenseg_hex1:SEG1.seg[5]
HEX1[6] << sevenseg_hex1:SEG1.seg[6]
HEX1[7] << sevenseg_hex1:SEG1.seg[7]


|rom_8bit_de10|counter_1sec:COUNTER
clk => clk_1Hz:CLOCK.clk_50MHz
rstb => clk_1Hz:CLOCK.rstb
rstb => counter:G_COUNTER.rstb
pause => counter:G_COUNTER.pause
count_out[0] <= counter:G_COUNTER.count_out[0]
count_out[1] <= counter:G_COUNTER.count_out[1]
count_out[2] <= counter:G_COUNTER.count_out[2]
count_out[3] <= counter:G_COUNTER.count_out[3]
count_out[4] <= counter:G_COUNTER.count_out[4]
count_out[5] <= counter:G_COUNTER.count_out[5]
count_out[6] <= counter:G_COUNTER.count_out[6]
count_out[7] <= counter:G_COUNTER.count_out[7]


|rom_8bit_de10|counter_1sec:COUNTER|clk_1Hz:CLOCK
clk_50MHz => clk_out.CLK
clk_50MHz => cnt[0].CLK
clk_50MHz => cnt[1].CLK
clk_50MHz => cnt[2].CLK
clk_50MHz => cnt[3].CLK
clk_50MHz => cnt[4].CLK
clk_50MHz => cnt[5].CLK
clk_50MHz => cnt[6].CLK
clk_50MHz => cnt[7].CLK
clk_50MHz => cnt[8].CLK
clk_50MHz => cnt[9].CLK
clk_50MHz => cnt[10].CLK
clk_50MHz => cnt[11].CLK
clk_50MHz => cnt[12].CLK
clk_50MHz => cnt[13].CLK
clk_50MHz => cnt[14].CLK
clk_50MHz => cnt[15].CLK
clk_50MHz => cnt[16].CLK
clk_50MHz => cnt[17].CLK
clk_50MHz => cnt[18].CLK
clk_50MHz => cnt[19].CLK
clk_50MHz => cnt[20].CLK
clk_50MHz => cnt[21].CLK
clk_50MHz => cnt[22].CLK
clk_50MHz => cnt[23].CLK
clk_50MHz => cnt[24].CLK
clk_50MHz => cnt[25].CLK
rstb => clk_out.ACLR
rstb => cnt[0].PRESET
rstb => cnt[1].PRESET
rstb => cnt[2].PRESET
rstb => cnt[3].PRESET
rstb => cnt[4].PRESET
rstb => cnt[5].PRESET
rstb => cnt[6].ACLR
rstb => cnt[7].ACLR
rstb => cnt[8].ACLR
rstb => cnt[9].ACLR
rstb => cnt[10].ACLR
rstb => cnt[11].PRESET
rstb => cnt[12].PRESET
rstb => cnt[13].PRESET
rstb => cnt[14].PRESET
rstb => cnt[15].ACLR
rstb => cnt[16].PRESET
rstb => cnt[17].ACLR
rstb => cnt[18].PRESET
rstb => cnt[19].PRESET
rstb => cnt[20].PRESET
rstb => cnt[21].PRESET
rstb => cnt[22].PRESET
rstb => cnt[23].ACLR
rstb => cnt[24].PRESET
rstb => cnt[25].ACLR
clk_1Hz <= clk_out.DB_MAX_OUTPUT_PORT_TYPE


|rom_8bit_de10|counter_1sec:COUNTER|counter:G_COUNTER
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
rstb => count[0].ACLR
rstb => count[1].ACLR
rstb => count[2].ACLR
rstb => count[3].ACLR
rstb => count[4].ACLR
rstb => count[5].ACLR
rstb => count[6].ACLR
rstb => count[7].ACLR
pause => count_next.OUTPUTSELECT
pause => count_next.OUTPUTSELECT
pause => count_next.OUTPUTSELECT
pause => count_next.OUTPUTSELECT
pause => count_next.OUTPUTSELECT
pause => count_next.OUTPUTSELECT
pause => count_next.OUTPUTSELECT
pause => count_next.OUTPUTSELECT
count_out[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
count_out[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
count_out[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
count_out[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
count_out[4] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
count_out[5] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
count_out[6] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
count_out[7] <= count[7].DB_MAX_OUTPUT_PORT_TYPE


|rom_8bit_de10|rom_8bit:ROM
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
clock => altsyncram:altsyncram_component.clock0
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]


|rom_8bit_de10|rom_8bit:ROM|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_0fq3:auto_generated.address_a[0]
address_a[1] => altsyncram_0fq3:auto_generated.address_a[1]
address_a[2] => altsyncram_0fq3:auto_generated.address_a[2]
address_a[3] => altsyncram_0fq3:auto_generated.address_a[3]
address_a[4] => altsyncram_0fq3:auto_generated.address_a[4]
address_a[5] => altsyncram_0fq3:auto_generated.address_a[5]
address_a[6] => altsyncram_0fq3:auto_generated.address_a[6]
address_a[7] => altsyncram_0fq3:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_0fq3:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_0fq3:auto_generated.q_a[0]
q_a[1] <= altsyncram_0fq3:auto_generated.q_a[1]
q_a[2] <= altsyncram_0fq3:auto_generated.q_a[2]
q_a[3] <= altsyncram_0fq3:auto_generated.q_a[3]
q_a[4] <= altsyncram_0fq3:auto_generated.q_a[4]
q_a[5] <= altsyncram_0fq3:auto_generated.q_a[5]
q_a[6] <= altsyncram_0fq3:auto_generated.q_a[6]
q_a[7] <= altsyncram_0fq3:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|rom_8bit_de10|rom_8bit:ROM|altsyncram:altsyncram_component|altsyncram_0fq3:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|rom_8bit_de10|sevenseg_hex1:SEG0
binary[0] => Mux0.IN19
binary[0] => Mux1.IN19
binary[0] => Mux2.IN19
binary[0] => Mux3.IN19
binary[0] => Mux4.IN19
binary[0] => Mux5.IN19
binary[0] => Mux6.IN19
binary[1] => Mux0.IN18
binary[1] => Mux1.IN18
binary[1] => Mux2.IN18
binary[1] => Mux3.IN18
binary[1] => Mux4.IN18
binary[1] => Mux5.IN18
binary[1] => Mux6.IN18
binary[2] => Mux0.IN17
binary[2] => Mux1.IN17
binary[2] => Mux2.IN17
binary[2] => Mux3.IN17
binary[2] => Mux4.IN17
binary[2] => Mux5.IN17
binary[2] => Mux6.IN17
binary[3] => Mux0.IN16
binary[3] => Mux1.IN16
binary[3] => Mux2.IN16
binary[3] => Mux3.IN16
binary[3] => Mux4.IN16
binary[3] => Mux5.IN16
binary[3] => Mux6.IN16
seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>


|rom_8bit_de10|sevenseg_hex1:SEG1
binary[0] => Mux0.IN19
binary[0] => Mux1.IN19
binary[0] => Mux2.IN19
binary[0] => Mux3.IN19
binary[0] => Mux4.IN19
binary[0] => Mux5.IN19
binary[0] => Mux6.IN19
binary[1] => Mux0.IN18
binary[1] => Mux1.IN18
binary[1] => Mux2.IN18
binary[1] => Mux3.IN18
binary[1] => Mux4.IN18
binary[1] => Mux5.IN18
binary[1] => Mux6.IN18
binary[2] => Mux0.IN17
binary[2] => Mux1.IN17
binary[2] => Mux2.IN17
binary[2] => Mux3.IN17
binary[2] => Mux4.IN17
binary[2] => Mux5.IN17
binary[2] => Mux6.IN17
binary[3] => Mux0.IN16
binary[3] => Mux1.IN16
binary[3] => Mux2.IN16
binary[3] => Mux3.IN16
binary[3] => Mux4.IN16
binary[3] => Mux5.IN16
binary[3] => Mux6.IN16
seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>


